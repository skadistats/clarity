// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai_activity.proto

package skadistats.clarity.wire.proto;

public final class AiActivity {
  private AiActivity() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code Activity}
   */
  public enum Activity
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACT_INVALID = -1;</code>
     */
    ACT_INVALID(0, -1),
    /**
     * <code>ACT_RESET = 0;</code>
     */
    ACT_RESET(1, 0),
    /**
     * <code>ACT_IDLE = 1;</code>
     */
    ACT_IDLE(2, 1),
    /**
     * <code>ACT_TRANSITION = 2;</code>
     */
    ACT_TRANSITION(3, 2),
    /**
     * <code>ACT_COVER = 3;</code>
     */
    ACT_COVER(4, 3),
    /**
     * <code>ACT_COVER_MED = 4;</code>
     */
    ACT_COVER_MED(5, 4),
    /**
     * <code>ACT_COVER_LOW = 5;</code>
     */
    ACT_COVER_LOW(6, 5),
    /**
     * <code>ACT_WALK = 6;</code>
     */
    ACT_WALK(7, 6),
    /**
     * <code>ACT_WALK_AIM = 7;</code>
     */
    ACT_WALK_AIM(8, 7),
    /**
     * <code>ACT_WALK_CROUCH = 8;</code>
     */
    ACT_WALK_CROUCH(9, 8),
    /**
     * <code>ACT_WALK_CROUCH_AIM = 9;</code>
     */
    ACT_WALK_CROUCH_AIM(10, 9),
    /**
     * <code>ACT_RUN = 10;</code>
     */
    ACT_RUN(11, 10),
    /**
     * <code>ACT_RUN_AIM = 11;</code>
     */
    ACT_RUN_AIM(12, 11),
    /**
     * <code>ACT_RUN_CROUCH = 12;</code>
     */
    ACT_RUN_CROUCH(13, 12),
    /**
     * <code>ACT_RUN_CROUCH_AIM = 13;</code>
     */
    ACT_RUN_CROUCH_AIM(14, 13),
    /**
     * <code>ACT_RUN_PROTECTED = 14;</code>
     */
    ACT_RUN_PROTECTED(15, 14),
    /**
     * <code>ACT_SCRIPT_CUSTOM_MOVE = 15;</code>
     */
    ACT_SCRIPT_CUSTOM_MOVE(16, 15),
    /**
     * <code>ACT_RANGE_ATTACK1 = 16;</code>
     */
    ACT_RANGE_ATTACK1(17, 16),
    /**
     * <code>ACT_RANGE_ATTACK2 = 17;</code>
     */
    ACT_RANGE_ATTACK2(18, 17),
    /**
     * <code>ACT_RANGE_ATTACK1_LOW = 18;</code>
     */
    ACT_RANGE_ATTACK1_LOW(19, 18),
    /**
     * <code>ACT_RANGE_ATTACK2_LOW = 19;</code>
     */
    ACT_RANGE_ATTACK2_LOW(20, 19),
    /**
     * <code>ACT_DIESIMPLE = 20;</code>
     */
    ACT_DIESIMPLE(21, 20),
    /**
     * <code>ACT_DIEBACKWARD = 21;</code>
     */
    ACT_DIEBACKWARD(22, 21),
    /**
     * <code>ACT_DIEFORWARD = 22;</code>
     */
    ACT_DIEFORWARD(23, 22),
    /**
     * <code>ACT_DIEVIOLENT = 23;</code>
     */
    ACT_DIEVIOLENT(24, 23),
    /**
     * <code>ACT_DIERAGDOLL = 24;</code>
     */
    ACT_DIERAGDOLL(25, 24),
    /**
     * <code>ACT_FLY = 25;</code>
     */
    ACT_FLY(26, 25),
    /**
     * <code>ACT_HOVER = 26;</code>
     */
    ACT_HOVER(27, 26),
    /**
     * <code>ACT_GLIDE = 27;</code>
     */
    ACT_GLIDE(28, 27),
    /**
     * <code>ACT_SWIM = 28;</code>
     */
    ACT_SWIM(29, 28),
    /**
     * <code>ACT_JUMP = 29;</code>
     */
    ACT_JUMP(30, 29),
    /**
     * <code>ACT_HOP = 30;</code>
     */
    ACT_HOP(31, 30),
    /**
     * <code>ACT_LEAP = 31;</code>
     */
    ACT_LEAP(32, 31),
    /**
     * <code>ACT_LAND = 32;</code>
     */
    ACT_LAND(33, 32),
    /**
     * <code>ACT_CLIMB_UP = 33;</code>
     */
    ACT_CLIMB_UP(34, 33),
    /**
     * <code>ACT_CLIMB_DOWN = 34;</code>
     */
    ACT_CLIMB_DOWN(35, 34),
    /**
     * <code>ACT_CLIMB_DISMOUNT = 35;</code>
     */
    ACT_CLIMB_DISMOUNT(36, 35),
    /**
     * <code>ACT_SHIPLADDER_UP = 36;</code>
     */
    ACT_SHIPLADDER_UP(37, 36),
    /**
     * <code>ACT_SHIPLADDER_DOWN = 37;</code>
     */
    ACT_SHIPLADDER_DOWN(38, 37),
    /**
     * <code>ACT_STRAFE_LEFT = 38;</code>
     */
    ACT_STRAFE_LEFT(39, 38),
    /**
     * <code>ACT_STRAFE_RIGHT = 39;</code>
     */
    ACT_STRAFE_RIGHT(40, 39),
    /**
     * <code>ACT_ROLL_LEFT = 40;</code>
     */
    ACT_ROLL_LEFT(41, 40),
    /**
     * <code>ACT_ROLL_RIGHT = 41;</code>
     */
    ACT_ROLL_RIGHT(42, 41),
    /**
     * <code>ACT_TURN_LEFT = 42;</code>
     */
    ACT_TURN_LEFT(43, 42),
    /**
     * <code>ACT_TURN_RIGHT = 43;</code>
     */
    ACT_TURN_RIGHT(44, 43),
    /**
     * <code>ACT_CROUCH = 44;</code>
     */
    ACT_CROUCH(45, 44),
    /**
     * <code>ACT_CROUCHIDLE = 45;</code>
     */
    ACT_CROUCHIDLE(46, 45),
    /**
     * <code>ACT_STAND = 46;</code>
     */
    ACT_STAND(47, 46),
    /**
     * <code>ACT_USE = 47;</code>
     */
    ACT_USE(48, 47),
    /**
     * <code>ACT_ALIEN_BURROW_IDLE = 48;</code>
     */
    ACT_ALIEN_BURROW_IDLE(49, 48),
    /**
     * <code>ACT_ALIEN_BURROW_OUT = 49;</code>
     */
    ACT_ALIEN_BURROW_OUT(50, 49),
    /**
     * <code>ACT_SIGNAL1 = 50;</code>
     */
    ACT_SIGNAL1(51, 50),
    /**
     * <code>ACT_SIGNAL2 = 51;</code>
     */
    ACT_SIGNAL2(52, 51),
    /**
     * <code>ACT_SIGNAL3 = 52;</code>
     */
    ACT_SIGNAL3(53, 52),
    /**
     * <code>ACT_SIGNAL_ADVANCE = 53;</code>
     */
    ACT_SIGNAL_ADVANCE(54, 53),
    /**
     * <code>ACT_SIGNAL_FORWARD = 54;</code>
     */
    ACT_SIGNAL_FORWARD(55, 54),
    /**
     * <code>ACT_SIGNAL_GROUP = 55;</code>
     */
    ACT_SIGNAL_GROUP(56, 55),
    /**
     * <code>ACT_SIGNAL_HALT = 56;</code>
     */
    ACT_SIGNAL_HALT(57, 56),
    /**
     * <code>ACT_SIGNAL_LEFT = 57;</code>
     */
    ACT_SIGNAL_LEFT(58, 57),
    /**
     * <code>ACT_SIGNAL_RIGHT = 58;</code>
     */
    ACT_SIGNAL_RIGHT(59, 58),
    /**
     * <code>ACT_SIGNAL_TAKECOVER = 59;</code>
     */
    ACT_SIGNAL_TAKECOVER(60, 59),
    /**
     * <code>ACT_LOOKBACK_RIGHT = 60;</code>
     */
    ACT_LOOKBACK_RIGHT(61, 60),
    /**
     * <code>ACT_LOOKBACK_LEFT = 61;</code>
     */
    ACT_LOOKBACK_LEFT(62, 61),
    /**
     * <code>ACT_COWER = 62;</code>
     */
    ACT_COWER(63, 62),
    /**
     * <code>ACT_SMALL_FLINCH = 63;</code>
     */
    ACT_SMALL_FLINCH(64, 63),
    /**
     * <code>ACT_BIG_FLINCH = 64;</code>
     */
    ACT_BIG_FLINCH(65, 64),
    /**
     * <code>ACT_MELEE_ATTACK1 = 65;</code>
     */
    ACT_MELEE_ATTACK1(66, 65),
    /**
     * <code>ACT_MELEE_ATTACK2 = 66;</code>
     */
    ACT_MELEE_ATTACK2(67, 66),
    /**
     * <code>ACT_RELOAD = 67;</code>
     */
    ACT_RELOAD(68, 67),
    /**
     * <code>ACT_RELOAD_START = 68;</code>
     */
    ACT_RELOAD_START(69, 68),
    /**
     * <code>ACT_RELOAD_FINISH = 69;</code>
     */
    ACT_RELOAD_FINISH(70, 69),
    /**
     * <code>ACT_RELOAD_LOW = 70;</code>
     */
    ACT_RELOAD_LOW(71, 70),
    /**
     * <code>ACT_ARM = 71;</code>
     */
    ACT_ARM(72, 71),
    /**
     * <code>ACT_DISARM = 72;</code>
     */
    ACT_DISARM(73, 72),
    /**
     * <code>ACT_DROP_WEAPON = 73;</code>
     */
    ACT_DROP_WEAPON(74, 73),
    /**
     * <code>ACT_DROP_WEAPON_SHOTGUN = 74;</code>
     */
    ACT_DROP_WEAPON_SHOTGUN(75, 74),
    /**
     * <code>ACT_PICKUP_GROUND = 75;</code>
     */
    ACT_PICKUP_GROUND(76, 75),
    /**
     * <code>ACT_PICKUP_RACK = 76;</code>
     */
    ACT_PICKUP_RACK(77, 76),
    /**
     * <code>ACT_IDLE_ANGRY = 77;</code>
     */
    ACT_IDLE_ANGRY(78, 77),
    /**
     * <code>ACT_IDLE_RELAXED = 78;</code>
     */
    ACT_IDLE_RELAXED(79, 78),
    /**
     * <code>ACT_IDLE_STIMULATED = 79;</code>
     */
    ACT_IDLE_STIMULATED(80, 79),
    /**
     * <code>ACT_IDLE_AGITATED = 80;</code>
     */
    ACT_IDLE_AGITATED(81, 80),
    /**
     * <code>ACT_IDLE_STEALTH = 81;</code>
     */
    ACT_IDLE_STEALTH(82, 81),
    /**
     * <code>ACT_IDLE_HURT = 82;</code>
     */
    ACT_IDLE_HURT(83, 82),
    /**
     * <code>ACT_WALK_RELAXED = 83;</code>
     */
    ACT_WALK_RELAXED(84, 83),
    /**
     * <code>ACT_WALK_STIMULATED = 84;</code>
     */
    ACT_WALK_STIMULATED(85, 84),
    /**
     * <code>ACT_WALK_AGITATED = 85;</code>
     */
    ACT_WALK_AGITATED(86, 85),
    /**
     * <code>ACT_WALK_STEALTH = 86;</code>
     */
    ACT_WALK_STEALTH(87, 86),
    /**
     * <code>ACT_RUN_RELAXED = 87;</code>
     */
    ACT_RUN_RELAXED(88, 87),
    /**
     * <code>ACT_RUN_STIMULATED = 88;</code>
     */
    ACT_RUN_STIMULATED(89, 88),
    /**
     * <code>ACT_RUN_AGITATED = 89;</code>
     */
    ACT_RUN_AGITATED(90, 89),
    /**
     * <code>ACT_RUN_STEALTH = 90;</code>
     */
    ACT_RUN_STEALTH(91, 90),
    /**
     * <code>ACT_IDLE_AIM_RELAXED = 91;</code>
     */
    ACT_IDLE_AIM_RELAXED(92, 91),
    /**
     * <code>ACT_IDLE_AIM_STIMULATED = 92;</code>
     */
    ACT_IDLE_AIM_STIMULATED(93, 92),
    /**
     * <code>ACT_IDLE_AIM_AGITATED = 93;</code>
     */
    ACT_IDLE_AIM_AGITATED(94, 93),
    /**
     * <code>ACT_IDLE_AIM_STEALTH = 94;</code>
     */
    ACT_IDLE_AIM_STEALTH(95, 94),
    /**
     * <code>ACT_WALK_AIM_RELAXED = 95;</code>
     */
    ACT_WALK_AIM_RELAXED(96, 95),
    /**
     * <code>ACT_WALK_AIM_STIMULATED = 96;</code>
     */
    ACT_WALK_AIM_STIMULATED(97, 96),
    /**
     * <code>ACT_WALK_AIM_AGITATED = 97;</code>
     */
    ACT_WALK_AIM_AGITATED(98, 97),
    /**
     * <code>ACT_WALK_AIM_STEALTH = 98;</code>
     */
    ACT_WALK_AIM_STEALTH(99, 98),
    /**
     * <code>ACT_RUN_AIM_RELAXED = 99;</code>
     */
    ACT_RUN_AIM_RELAXED(100, 99),
    /**
     * <code>ACT_RUN_AIM_STIMULATED = 100;</code>
     */
    ACT_RUN_AIM_STIMULATED(101, 100),
    /**
     * <code>ACT_RUN_AIM_AGITATED = 101;</code>
     */
    ACT_RUN_AIM_AGITATED(102, 101),
    /**
     * <code>ACT_RUN_AIM_STEALTH = 102;</code>
     */
    ACT_RUN_AIM_STEALTH(103, 102),
    /**
     * <code>ACT_CROUCHIDLE_STIMULATED = 103;</code>
     */
    ACT_CROUCHIDLE_STIMULATED(104, 103),
    /**
     * <code>ACT_CROUCHIDLE_AIM_STIMULATED = 104;</code>
     */
    ACT_CROUCHIDLE_AIM_STIMULATED(105, 104),
    /**
     * <code>ACT_CROUCHIDLE_AGITATED = 105;</code>
     */
    ACT_CROUCHIDLE_AGITATED(106, 105),
    /**
     * <code>ACT_WALK_HURT = 106;</code>
     */
    ACT_WALK_HURT(107, 106),
    /**
     * <code>ACT_RUN_HURT = 107;</code>
     */
    ACT_RUN_HURT(108, 107),
    /**
     * <code>ACT_SPECIAL_ATTACK1 = 108;</code>
     */
    ACT_SPECIAL_ATTACK1(109, 108),
    /**
     * <code>ACT_SPECIAL_ATTACK2 = 109;</code>
     */
    ACT_SPECIAL_ATTACK2(110, 109),
    /**
     * <code>ACT_COMBAT_IDLE = 110;</code>
     */
    ACT_COMBAT_IDLE(111, 110),
    /**
     * <code>ACT_WALK_SCARED = 111;</code>
     */
    ACT_WALK_SCARED(112, 111),
    /**
     * <code>ACT_RUN_SCARED = 112;</code>
     */
    ACT_RUN_SCARED(113, 112),
    /**
     * <code>ACT_VICTORY_DANCE = 113;</code>
     */
    ACT_VICTORY_DANCE(114, 113),
    /**
     * <code>ACT_DIE_HEADSHOT = 114;</code>
     */
    ACT_DIE_HEADSHOT(115, 114),
    /**
     * <code>ACT_DIE_CHESTSHOT = 115;</code>
     */
    ACT_DIE_CHESTSHOT(116, 115),
    /**
     * <code>ACT_DIE_GUTSHOT = 116;</code>
     */
    ACT_DIE_GUTSHOT(117, 116),
    /**
     * <code>ACT_DIE_BACKSHOT = 117;</code>
     */
    ACT_DIE_BACKSHOT(118, 117),
    /**
     * <code>ACT_FLINCH_HEAD = 118;</code>
     */
    ACT_FLINCH_HEAD(119, 118),
    /**
     * <code>ACT_FLINCH_CHEST = 119;</code>
     */
    ACT_FLINCH_CHEST(120, 119),
    /**
     * <code>ACT_FLINCH_STOMACH = 120;</code>
     */
    ACT_FLINCH_STOMACH(121, 120),
    /**
     * <code>ACT_FLINCH_LEFTARM = 121;</code>
     */
    ACT_FLINCH_LEFTARM(122, 121),
    /**
     * <code>ACT_FLINCH_RIGHTARM = 122;</code>
     */
    ACT_FLINCH_RIGHTARM(123, 122),
    /**
     * <code>ACT_FLINCH_LEFTLEG = 123;</code>
     */
    ACT_FLINCH_LEFTLEG(124, 123),
    /**
     * <code>ACT_FLINCH_RIGHTLEG = 124;</code>
     */
    ACT_FLINCH_RIGHTLEG(125, 124),
    /**
     * <code>ACT_FLINCH_PHYSICS = 125;</code>
     */
    ACT_FLINCH_PHYSICS(126, 125),
    /**
     * <code>ACT_FLINCH_HEAD_BACK = 126;</code>
     */
    ACT_FLINCH_HEAD_BACK(127, 126),
    /**
     * <code>ACT_FLINCH_CHEST_BACK = 127;</code>
     */
    ACT_FLINCH_CHEST_BACK(128, 127),
    /**
     * <code>ACT_FLINCH_STOMACH_BACK = 128;</code>
     */
    ACT_FLINCH_STOMACH_BACK(129, 128),
    /**
     * <code>ACT_FLINCH_CROUCH_FRONT = 129;</code>
     */
    ACT_FLINCH_CROUCH_FRONT(130, 129),
    /**
     * <code>ACT_FLINCH_CROUCH_BACK = 130;</code>
     */
    ACT_FLINCH_CROUCH_BACK(131, 130),
    /**
     * <code>ACT_FLINCH_CROUCH_LEFT = 131;</code>
     */
    ACT_FLINCH_CROUCH_LEFT(132, 131),
    /**
     * <code>ACT_FLINCH_CROUCH_RIGHT = 132;</code>
     */
    ACT_FLINCH_CROUCH_RIGHT(133, 132),
    /**
     * <code>ACT_IDLE_ON_FIRE = 133;</code>
     */
    ACT_IDLE_ON_FIRE(134, 133),
    /**
     * <code>ACT_WALK_ON_FIRE = 134;</code>
     */
    ACT_WALK_ON_FIRE(135, 134),
    /**
     * <code>ACT_RUN_ON_FIRE = 135;</code>
     */
    ACT_RUN_ON_FIRE(136, 135),
    /**
     * <code>ACT_RAPPEL_LOOP = 136;</code>
     */
    ACT_RAPPEL_LOOP(137, 136),
    /**
     * <code>ACT_180_LEFT = 137;</code>
     */
    ACT_180_LEFT(138, 137),
    /**
     * <code>ACT_180_RIGHT = 138;</code>
     */
    ACT_180_RIGHT(139, 138),
    /**
     * <code>ACT_90_LEFT = 139;</code>
     */
    ACT_90_LEFT(140, 139),
    /**
     * <code>ACT_90_RIGHT = 140;</code>
     */
    ACT_90_RIGHT(141, 140),
    /**
     * <code>ACT_STEP_LEFT = 141;</code>
     */
    ACT_STEP_LEFT(142, 141),
    /**
     * <code>ACT_STEP_RIGHT = 142;</code>
     */
    ACT_STEP_RIGHT(143, 142),
    /**
     * <code>ACT_STEP_BACK = 143;</code>
     */
    ACT_STEP_BACK(144, 143),
    /**
     * <code>ACT_STEP_FORE = 144;</code>
     */
    ACT_STEP_FORE(145, 144),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK1 = 145;</code>
     */
    ACT_GESTURE_RANGE_ATTACK1(146, 145),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK2 = 146;</code>
     */
    ACT_GESTURE_RANGE_ATTACK2(147, 146),
    /**
     * <code>ACT_GESTURE_MELEE_ATTACK1 = 147;</code>
     */
    ACT_GESTURE_MELEE_ATTACK1(148, 147),
    /**
     * <code>ACT_GESTURE_MELEE_ATTACK2 = 148;</code>
     */
    ACT_GESTURE_MELEE_ATTACK2(149, 148),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK1_LOW = 149;</code>
     */
    ACT_GESTURE_RANGE_ATTACK1_LOW(150, 149),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK2_LOW = 150;</code>
     */
    ACT_GESTURE_RANGE_ATTACK2_LOW(151, 150),
    /**
     * <code>ACT_MELEE_ATTACK_SWING_GESTURE = 151;</code>
     */
    ACT_MELEE_ATTACK_SWING_GESTURE(152, 151),
    /**
     * <code>ACT_GESTURE_SMALL_FLINCH = 152;</code>
     */
    ACT_GESTURE_SMALL_FLINCH(153, 152),
    /**
     * <code>ACT_GESTURE_BIG_FLINCH = 153;</code>
     */
    ACT_GESTURE_BIG_FLINCH(154, 153),
    /**
     * <code>ACT_GESTURE_FLINCH_BLAST = 154;</code>
     */
    ACT_GESTURE_FLINCH_BLAST(155, 154),
    /**
     * <code>ACT_GESTURE_FLINCH_BLAST_SHOTGUN = 155;</code>
     */
    ACT_GESTURE_FLINCH_BLAST_SHOTGUN(156, 155),
    /**
     * <code>ACT_GESTURE_FLINCH_BLAST_DAMAGED = 156;</code>
     */
    ACT_GESTURE_FLINCH_BLAST_DAMAGED(157, 156),
    /**
     * <code>ACT_GESTURE_FLINCH_BLAST_DAMAGED_SHOTGUN = 157;</code>
     */
    ACT_GESTURE_FLINCH_BLAST_DAMAGED_SHOTGUN(158, 157),
    /**
     * <code>ACT_GESTURE_FLINCH_HEAD = 158;</code>
     */
    ACT_GESTURE_FLINCH_HEAD(159, 158),
    /**
     * <code>ACT_GESTURE_FLINCH_CHEST = 159;</code>
     */
    ACT_GESTURE_FLINCH_CHEST(160, 159),
    /**
     * <code>ACT_GESTURE_FLINCH_STOMACH = 160;</code>
     */
    ACT_GESTURE_FLINCH_STOMACH(161, 160),
    /**
     * <code>ACT_GESTURE_FLINCH_LEFTARM = 161;</code>
     */
    ACT_GESTURE_FLINCH_LEFTARM(162, 161),
    /**
     * <code>ACT_GESTURE_FLINCH_RIGHTARM = 162;</code>
     */
    ACT_GESTURE_FLINCH_RIGHTARM(163, 162),
    /**
     * <code>ACT_GESTURE_FLINCH_LEFTLEG = 163;</code>
     */
    ACT_GESTURE_FLINCH_LEFTLEG(164, 163),
    /**
     * <code>ACT_GESTURE_FLINCH_RIGHTLEG = 164;</code>
     */
    ACT_GESTURE_FLINCH_RIGHTLEG(165, 164),
    /**
     * <code>ACT_GESTURE_TURN_LEFT = 165;</code>
     */
    ACT_GESTURE_TURN_LEFT(166, 165),
    /**
     * <code>ACT_GESTURE_TURN_RIGHT = 166;</code>
     */
    ACT_GESTURE_TURN_RIGHT(167, 166),
    /**
     * <code>ACT_GESTURE_TURN_LEFT45 = 167;</code>
     */
    ACT_GESTURE_TURN_LEFT45(168, 167),
    /**
     * <code>ACT_GESTURE_TURN_RIGHT45 = 168;</code>
     */
    ACT_GESTURE_TURN_RIGHT45(169, 168),
    /**
     * <code>ACT_GESTURE_TURN_LEFT90 = 169;</code>
     */
    ACT_GESTURE_TURN_LEFT90(170, 169),
    /**
     * <code>ACT_GESTURE_TURN_RIGHT90 = 170;</code>
     */
    ACT_GESTURE_TURN_RIGHT90(171, 170),
    /**
     * <code>ACT_GESTURE_TURN_LEFT45_FLAT = 171;</code>
     */
    ACT_GESTURE_TURN_LEFT45_FLAT(172, 171),
    /**
     * <code>ACT_GESTURE_TURN_RIGHT45_FLAT = 172;</code>
     */
    ACT_GESTURE_TURN_RIGHT45_FLAT(173, 172),
    /**
     * <code>ACT_GESTURE_TURN_LEFT90_FLAT = 173;</code>
     */
    ACT_GESTURE_TURN_LEFT90_FLAT(174, 173),
    /**
     * <code>ACT_GESTURE_TURN_RIGHT90_FLAT = 174;</code>
     */
    ACT_GESTURE_TURN_RIGHT90_FLAT(175, 174),
    /**
     * <code>ACT_BARNACLE_HIT = 175;</code>
     */
    ACT_BARNACLE_HIT(176, 175),
    /**
     * <code>ACT_BARNACLE_PULL = 176;</code>
     */
    ACT_BARNACLE_PULL(177, 176),
    /**
     * <code>ACT_BARNACLE_CHOMP = 177;</code>
     */
    ACT_BARNACLE_CHOMP(178, 177),
    /**
     * <code>ACT_BARNACLE_CHEW = 178;</code>
     */
    ACT_BARNACLE_CHEW(179, 178),
    /**
     * <code>ACT_DO_NOT_DISTURB = 179;</code>
     */
    ACT_DO_NOT_DISTURB(180, 179),
    /**
     * <code>ACT_SPECIFIC_SEQUENCE = 180;</code>
     */
    ACT_SPECIFIC_SEQUENCE(181, 180),
    /**
     * <code>ACT_VM_DRAW = 181;</code>
     */
    ACT_VM_DRAW(182, 181),
    /**
     * <code>ACT_VM_HOLSTER = 182;</code>
     */
    ACT_VM_HOLSTER(183, 182),
    /**
     * <code>ACT_VM_IDLE = 183;</code>
     */
    ACT_VM_IDLE(184, 183),
    /**
     * <code>ACT_VM_FIDGET = 184;</code>
     */
    ACT_VM_FIDGET(185, 184),
    /**
     * <code>ACT_VM_PULLBACK = 185;</code>
     */
    ACT_VM_PULLBACK(186, 185),
    /**
     * <code>ACT_VM_PULLBACK_HIGH = 186;</code>
     */
    ACT_VM_PULLBACK_HIGH(187, 186),
    /**
     * <code>ACT_VM_PULLBACK_LOW = 187;</code>
     */
    ACT_VM_PULLBACK_LOW(188, 187),
    /**
     * <code>ACT_VM_THROW = 188;</code>
     */
    ACT_VM_THROW(189, 188),
    /**
     * <code>ACT_VM_PULLPIN = 189;</code>
     */
    ACT_VM_PULLPIN(190, 189),
    /**
     * <code>ACT_VM_PRIMARYATTACK = 190;</code>
     */
    ACT_VM_PRIMARYATTACK(191, 190),
    /**
     * <code>ACT_VM_SECONDARYATTACK = 191;</code>
     */
    ACT_VM_SECONDARYATTACK(192, 191),
    /**
     * <code>ACT_VM_RELOAD = 192;</code>
     */
    ACT_VM_RELOAD(193, 192),
    /**
     * <code>ACT_VM_DRYFIRE = 193;</code>
     */
    ACT_VM_DRYFIRE(194, 193),
    /**
     * <code>ACT_VM_HITLEFT = 194;</code>
     */
    ACT_VM_HITLEFT(195, 194),
    /**
     * <code>ACT_VM_HITLEFT2 = 195;</code>
     */
    ACT_VM_HITLEFT2(196, 195),
    /**
     * <code>ACT_VM_HITRIGHT = 196;</code>
     */
    ACT_VM_HITRIGHT(197, 196),
    /**
     * <code>ACT_VM_HITRIGHT2 = 197;</code>
     */
    ACT_VM_HITRIGHT2(198, 197),
    /**
     * <code>ACT_VM_HITCENTER = 198;</code>
     */
    ACT_VM_HITCENTER(199, 198),
    /**
     * <code>ACT_VM_HITCENTER2 = 199;</code>
     */
    ACT_VM_HITCENTER2(200, 199),
    /**
     * <code>ACT_VM_MISSLEFT = 200;</code>
     */
    ACT_VM_MISSLEFT(201, 200),
    /**
     * <code>ACT_VM_MISSLEFT2 = 201;</code>
     */
    ACT_VM_MISSLEFT2(202, 201),
    /**
     * <code>ACT_VM_MISSRIGHT = 202;</code>
     */
    ACT_VM_MISSRIGHT(203, 202),
    /**
     * <code>ACT_VM_MISSRIGHT2 = 203;</code>
     */
    ACT_VM_MISSRIGHT2(204, 203),
    /**
     * <code>ACT_VM_MISSCENTER = 204;</code>
     */
    ACT_VM_MISSCENTER(205, 204),
    /**
     * <code>ACT_VM_MISSCENTER2 = 205;</code>
     */
    ACT_VM_MISSCENTER2(206, 205),
    /**
     * <code>ACT_VM_HAULBACK = 206;</code>
     */
    ACT_VM_HAULBACK(207, 206),
    /**
     * <code>ACT_VM_SWINGHARD = 207;</code>
     */
    ACT_VM_SWINGHARD(208, 207),
    /**
     * <code>ACT_VM_SWINGMISS = 208;</code>
     */
    ACT_VM_SWINGMISS(209, 208),
    /**
     * <code>ACT_VM_SWINGHIT = 209;</code>
     */
    ACT_VM_SWINGHIT(210, 209),
    /**
     * <code>ACT_VM_IDLE_TO_LOWERED = 210;</code>
     */
    ACT_VM_IDLE_TO_LOWERED(211, 210),
    /**
     * <code>ACT_VM_IDLE_LOWERED = 211;</code>
     */
    ACT_VM_IDLE_LOWERED(212, 211),
    /**
     * <code>ACT_VM_LOWERED_TO_IDLE = 212;</code>
     */
    ACT_VM_LOWERED_TO_IDLE(213, 212),
    /**
     * <code>ACT_VM_RECOIL1 = 213;</code>
     */
    ACT_VM_RECOIL1(214, 213),
    /**
     * <code>ACT_VM_RECOIL2 = 214;</code>
     */
    ACT_VM_RECOIL2(215, 214),
    /**
     * <code>ACT_VM_RECOIL3 = 215;</code>
     */
    ACT_VM_RECOIL3(216, 215),
    /**
     * <code>ACT_VM_PICKUP = 216;</code>
     */
    ACT_VM_PICKUP(217, 216),
    /**
     * <code>ACT_VM_RELEASE = 217;</code>
     */
    ACT_VM_RELEASE(218, 217),
    /**
     * <code>ACT_VM_ATTACH_SILENCER = 218;</code>
     */
    ACT_VM_ATTACH_SILENCER(219, 218),
    /**
     * <code>ACT_VM_DETACH_SILENCER = 219;</code>
     */
    ACT_VM_DETACH_SILENCER(220, 219),
    /**
     * <code>ACT_SLAM_STICKWALL_IDLE = 220;</code>
     */
    ACT_SLAM_STICKWALL_IDLE(221, 220),
    /**
     * <code>ACT_SLAM_STICKWALL_ND_IDLE = 221;</code>
     */
    ACT_SLAM_STICKWALL_ND_IDLE(222, 221),
    /**
     * <code>ACT_SLAM_STICKWALL_ATTACH = 222;</code>
     */
    ACT_SLAM_STICKWALL_ATTACH(223, 222),
    /**
     * <code>ACT_SLAM_STICKWALL_ATTACH2 = 223;</code>
     */
    ACT_SLAM_STICKWALL_ATTACH2(224, 223),
    /**
     * <code>ACT_SLAM_STICKWALL_ND_ATTACH = 224;</code>
     */
    ACT_SLAM_STICKWALL_ND_ATTACH(225, 224),
    /**
     * <code>ACT_SLAM_STICKWALL_ND_ATTACH2 = 225;</code>
     */
    ACT_SLAM_STICKWALL_ND_ATTACH2(226, 225),
    /**
     * <code>ACT_SLAM_STICKWALL_DETONATE = 226;</code>
     */
    ACT_SLAM_STICKWALL_DETONATE(227, 226),
    /**
     * <code>ACT_SLAM_STICKWALL_DETONATOR_HOLSTER = 227;</code>
     */
    ACT_SLAM_STICKWALL_DETONATOR_HOLSTER(228, 227),
    /**
     * <code>ACT_SLAM_STICKWALL_DRAW = 228;</code>
     */
    ACT_SLAM_STICKWALL_DRAW(229, 228),
    /**
     * <code>ACT_SLAM_STICKWALL_ND_DRAW = 229;</code>
     */
    ACT_SLAM_STICKWALL_ND_DRAW(230, 229),
    /**
     * <code>ACT_SLAM_STICKWALL_TO_THROW = 230;</code>
     */
    ACT_SLAM_STICKWALL_TO_THROW(231, 230),
    /**
     * <code>ACT_SLAM_STICKWALL_TO_THROW_ND = 231;</code>
     */
    ACT_SLAM_STICKWALL_TO_THROW_ND(232, 231),
    /**
     * <code>ACT_SLAM_STICKWALL_TO_TRIPMINE_ND = 232;</code>
     */
    ACT_SLAM_STICKWALL_TO_TRIPMINE_ND(233, 232),
    /**
     * <code>ACT_SLAM_THROW_IDLE = 233;</code>
     */
    ACT_SLAM_THROW_IDLE(234, 233),
    /**
     * <code>ACT_SLAM_THROW_ND_IDLE = 234;</code>
     */
    ACT_SLAM_THROW_ND_IDLE(235, 234),
    /**
     * <code>ACT_SLAM_THROW_THROW = 235;</code>
     */
    ACT_SLAM_THROW_THROW(236, 235),
    /**
     * <code>ACT_SLAM_THROW_THROW2 = 236;</code>
     */
    ACT_SLAM_THROW_THROW2(237, 236),
    /**
     * <code>ACT_SLAM_THROW_THROW_ND = 237;</code>
     */
    ACT_SLAM_THROW_THROW_ND(238, 237),
    /**
     * <code>ACT_SLAM_THROW_THROW_ND2 = 238;</code>
     */
    ACT_SLAM_THROW_THROW_ND2(239, 238),
    /**
     * <code>ACT_SLAM_THROW_DRAW = 239;</code>
     */
    ACT_SLAM_THROW_DRAW(240, 239),
    /**
     * <code>ACT_SLAM_THROW_ND_DRAW = 240;</code>
     */
    ACT_SLAM_THROW_ND_DRAW(241, 240),
    /**
     * <code>ACT_SLAM_THROW_TO_STICKWALL = 241;</code>
     */
    ACT_SLAM_THROW_TO_STICKWALL(242, 241),
    /**
     * <code>ACT_SLAM_THROW_TO_STICKWALL_ND = 242;</code>
     */
    ACT_SLAM_THROW_TO_STICKWALL_ND(243, 242),
    /**
     * <code>ACT_SLAM_THROW_DETONATE = 243;</code>
     */
    ACT_SLAM_THROW_DETONATE(244, 243),
    /**
     * <code>ACT_SLAM_THROW_DETONATOR_HOLSTER = 244;</code>
     */
    ACT_SLAM_THROW_DETONATOR_HOLSTER(245, 244),
    /**
     * <code>ACT_SLAM_THROW_TO_TRIPMINE_ND = 245;</code>
     */
    ACT_SLAM_THROW_TO_TRIPMINE_ND(246, 245),
    /**
     * <code>ACT_SLAM_TRIPMINE_IDLE = 246;</code>
     */
    ACT_SLAM_TRIPMINE_IDLE(247, 246),
    /**
     * <code>ACT_SLAM_TRIPMINE_DRAW = 247;</code>
     */
    ACT_SLAM_TRIPMINE_DRAW(248, 247),
    /**
     * <code>ACT_SLAM_TRIPMINE_ATTACH = 248;</code>
     */
    ACT_SLAM_TRIPMINE_ATTACH(249, 248),
    /**
     * <code>ACT_SLAM_TRIPMINE_ATTACH2 = 249;</code>
     */
    ACT_SLAM_TRIPMINE_ATTACH2(250, 249),
    /**
     * <code>ACT_SLAM_TRIPMINE_TO_STICKWALL_ND = 250;</code>
     */
    ACT_SLAM_TRIPMINE_TO_STICKWALL_ND(251, 250),
    /**
     * <code>ACT_SLAM_TRIPMINE_TO_THROW_ND = 251;</code>
     */
    ACT_SLAM_TRIPMINE_TO_THROW_ND(252, 251),
    /**
     * <code>ACT_SLAM_DETONATOR_IDLE = 252;</code>
     */
    ACT_SLAM_DETONATOR_IDLE(253, 252),
    /**
     * <code>ACT_SLAM_DETONATOR_DRAW = 253;</code>
     */
    ACT_SLAM_DETONATOR_DRAW(254, 253),
    /**
     * <code>ACT_SLAM_DETONATOR_DETONATE = 254;</code>
     */
    ACT_SLAM_DETONATOR_DETONATE(255, 254),
    /**
     * <code>ACT_SLAM_DETONATOR_HOLSTER = 255;</code>
     */
    ACT_SLAM_DETONATOR_HOLSTER(256, 255),
    /**
     * <code>ACT_SLAM_DETONATOR_STICKWALL_DRAW = 256;</code>
     */
    ACT_SLAM_DETONATOR_STICKWALL_DRAW(257, 256),
    /**
     * <code>ACT_SLAM_DETONATOR_THROW_DRAW = 257;</code>
     */
    ACT_SLAM_DETONATOR_THROW_DRAW(258, 257),
    /**
     * <code>ACT_SHOTGUN_RELOAD_START = 258;</code>
     */
    ACT_SHOTGUN_RELOAD_START(259, 258),
    /**
     * <code>ACT_SHOTGUN_RELOAD_FINISH = 259;</code>
     */
    ACT_SHOTGUN_RELOAD_FINISH(260, 259),
    /**
     * <code>ACT_SHOTGUN_PUMP = 260;</code>
     */
    ACT_SHOTGUN_PUMP(261, 260),
    /**
     * <code>ACT_SMG2_IDLE2 = 261;</code>
     */
    ACT_SMG2_IDLE2(262, 261),
    /**
     * <code>ACT_SMG2_FIRE2 = 262;</code>
     */
    ACT_SMG2_FIRE2(263, 262),
    /**
     * <code>ACT_SMG2_DRAW2 = 263;</code>
     */
    ACT_SMG2_DRAW2(264, 263),
    /**
     * <code>ACT_SMG2_RELOAD2 = 264;</code>
     */
    ACT_SMG2_RELOAD2(265, 264),
    /**
     * <code>ACT_SMG2_DRYFIRE2 = 265;</code>
     */
    ACT_SMG2_DRYFIRE2(266, 265),
    /**
     * <code>ACT_SMG2_TOAUTO = 266;</code>
     */
    ACT_SMG2_TOAUTO(267, 266),
    /**
     * <code>ACT_SMG2_TOBURST = 267;</code>
     */
    ACT_SMG2_TOBURST(268, 267),
    /**
     * <code>ACT_PHYSCANNON_UPGRADE = 268;</code>
     */
    ACT_PHYSCANNON_UPGRADE(269, 268),
    /**
     * <code>ACT_RANGE_ATTACK_AR1 = 269;</code>
     */
    ACT_RANGE_ATTACK_AR1(270, 269),
    /**
     * <code>ACT_RANGE_ATTACK_AR2 = 270;</code>
     */
    ACT_RANGE_ATTACK_AR2(271, 270),
    /**
     * <code>ACT_RANGE_ATTACK_AR2_LOW = 271;</code>
     */
    ACT_RANGE_ATTACK_AR2_LOW(272, 271),
    /**
     * <code>ACT_RANGE_ATTACK_AR2_GRENADE = 272;</code>
     */
    ACT_RANGE_ATTACK_AR2_GRENADE(273, 272),
    /**
     * <code>ACT_RANGE_ATTACK_HMG1 = 273;</code>
     */
    ACT_RANGE_ATTACK_HMG1(274, 273),
    /**
     * <code>ACT_RANGE_ATTACK_ML = 274;</code>
     */
    ACT_RANGE_ATTACK_ML(275, 274),
    /**
     * <code>ACT_RANGE_ATTACK_SMG1 = 275;</code>
     */
    ACT_RANGE_ATTACK_SMG1(276, 275),
    /**
     * <code>ACT_RANGE_ATTACK_SMG1_LOW = 276;</code>
     */
    ACT_RANGE_ATTACK_SMG1_LOW(277, 276),
    /**
     * <code>ACT_RANGE_ATTACK_SMG2 = 277;</code>
     */
    ACT_RANGE_ATTACK_SMG2(278, 277),
    /**
     * <code>ACT_RANGE_ATTACK_SHOTGUN = 278;</code>
     */
    ACT_RANGE_ATTACK_SHOTGUN(279, 278),
    /**
     * <code>ACT_RANGE_ATTACK_SHOTGUN_LOW = 279;</code>
     */
    ACT_RANGE_ATTACK_SHOTGUN_LOW(280, 279),
    /**
     * <code>ACT_RANGE_ATTACK_PISTOL = 280;</code>
     */
    ACT_RANGE_ATTACK_PISTOL(281, 280),
    /**
     * <code>ACT_RANGE_ATTACK_PISTOL_LOW = 281;</code>
     */
    ACT_RANGE_ATTACK_PISTOL_LOW(282, 281),
    /**
     * <code>ACT_RANGE_ATTACK_SLAM = 282;</code>
     */
    ACT_RANGE_ATTACK_SLAM(283, 282),
    /**
     * <code>ACT_RANGE_ATTACK_TRIPWIRE = 283;</code>
     */
    ACT_RANGE_ATTACK_TRIPWIRE(284, 283),
    /**
     * <code>ACT_RANGE_ATTACK_THROW = 284;</code>
     */
    ACT_RANGE_ATTACK_THROW(285, 284),
    /**
     * <code>ACT_RANGE_ATTACK_SNIPER_RIFLE = 285;</code>
     */
    ACT_RANGE_ATTACK_SNIPER_RIFLE(286, 285),
    /**
     * <code>ACT_RANGE_ATTACK_RPG = 286;</code>
     */
    ACT_RANGE_ATTACK_RPG(287, 286),
    /**
     * <code>ACT_MELEE_ATTACK_SWING = 287;</code>
     */
    ACT_MELEE_ATTACK_SWING(288, 287),
    /**
     * <code>ACT_RANGE_AIM_LOW = 288;</code>
     */
    ACT_RANGE_AIM_LOW(289, 288),
    /**
     * <code>ACT_RANGE_AIM_SMG1_LOW = 289;</code>
     */
    ACT_RANGE_AIM_SMG1_LOW(290, 289),
    /**
     * <code>ACT_RANGE_AIM_PISTOL_LOW = 290;</code>
     */
    ACT_RANGE_AIM_PISTOL_LOW(291, 290),
    /**
     * <code>ACT_RANGE_AIM_AR2_LOW = 291;</code>
     */
    ACT_RANGE_AIM_AR2_LOW(292, 291),
    /**
     * <code>ACT_COVER_PISTOL_LOW = 292;</code>
     */
    ACT_COVER_PISTOL_LOW(293, 292),
    /**
     * <code>ACT_COVER_SMG1_LOW = 293;</code>
     */
    ACT_COVER_SMG1_LOW(294, 293),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_AR1 = 294;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_AR1(295, 294),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_AR2 = 295;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_AR2(296, 295),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_AR2_GRENADE = 296;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_AR2_GRENADE(297, 296),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_HMG1 = 297;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_HMG1(298, 297),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_ML = 298;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_ML(299, 298),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SMG1 = 299;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_SMG1(300, 299),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SMG1_LOW = 300;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_SMG1_LOW(301, 300),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SMG2 = 301;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_SMG2(302, 301),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SHOTGUN = 302;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_SHOTGUN(303, 302),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_PISTOL = 303;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_PISTOL(304, 303),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_PISTOL_LOW = 304;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_PISTOL_LOW(305, 304),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SLAM = 305;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_SLAM(306, 305),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_TRIPWIRE = 306;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_TRIPWIRE(307, 306),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_THROW = 307;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_THROW(308, 307),
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SNIPER_RIFLE = 308;</code>
     */
    ACT_GESTURE_RANGE_ATTACK_SNIPER_RIFLE(309, 308),
    /**
     * <code>ACT_GESTURE_MELEE_ATTACK_SWING = 309;</code>
     */
    ACT_GESTURE_MELEE_ATTACK_SWING(310, 309),
    /**
     * <code>ACT_IDLE_RIFLE = 310;</code>
     */
    ACT_IDLE_RIFLE(311, 310),
    /**
     * <code>ACT_IDLE_SMG1 = 311;</code>
     */
    ACT_IDLE_SMG1(312, 311),
    /**
     * <code>ACT_IDLE_ANGRY_SMG1 = 312;</code>
     */
    ACT_IDLE_ANGRY_SMG1(313, 312),
    /**
     * <code>ACT_IDLE_PISTOL = 313;</code>
     */
    ACT_IDLE_PISTOL(314, 313),
    /**
     * <code>ACT_IDLE_ANGRY_PISTOL = 314;</code>
     */
    ACT_IDLE_ANGRY_PISTOL(315, 314),
    /**
     * <code>ACT_IDLE_ANGRY_SHOTGUN = 315;</code>
     */
    ACT_IDLE_ANGRY_SHOTGUN(316, 315),
    /**
     * <code>ACT_IDLE_STEALTH_PISTOL = 316;</code>
     */
    ACT_IDLE_STEALTH_PISTOL(317, 316),
    /**
     * <code>ACT_IDLE_PACKAGE = 317;</code>
     */
    ACT_IDLE_PACKAGE(318, 317),
    /**
     * <code>ACT_WALK_PACKAGE = 318;</code>
     */
    ACT_WALK_PACKAGE(319, 318),
    /**
     * <code>ACT_IDLE_SUITCASE = 319;</code>
     */
    ACT_IDLE_SUITCASE(320, 319),
    /**
     * <code>ACT_WALK_SUITCASE = 320;</code>
     */
    ACT_WALK_SUITCASE(321, 320),
    /**
     * <code>ACT_IDLE_SMG1_RELAXED = 321;</code>
     */
    ACT_IDLE_SMG1_RELAXED(322, 321),
    /**
     * <code>ACT_IDLE_SMG1_STIMULATED = 322;</code>
     */
    ACT_IDLE_SMG1_STIMULATED(323, 322),
    /**
     * <code>ACT_WALK_RIFLE_RELAXED = 323;</code>
     */
    ACT_WALK_RIFLE_RELAXED(324, 323),
    /**
     * <code>ACT_RUN_RIFLE_RELAXED = 324;</code>
     */
    ACT_RUN_RIFLE_RELAXED(325, 324),
    /**
     * <code>ACT_WALK_RIFLE_STIMULATED = 325;</code>
     */
    ACT_WALK_RIFLE_STIMULATED(326, 325),
    /**
     * <code>ACT_RUN_RIFLE_STIMULATED = 326;</code>
     */
    ACT_RUN_RIFLE_STIMULATED(327, 326),
    /**
     * <code>ACT_IDLE_AIM_RIFLE_STIMULATED = 327;</code>
     */
    ACT_IDLE_AIM_RIFLE_STIMULATED(328, 327),
    /**
     * <code>ACT_WALK_AIM_RIFLE_STIMULATED = 328;</code>
     */
    ACT_WALK_AIM_RIFLE_STIMULATED(329, 328),
    /**
     * <code>ACT_RUN_AIM_RIFLE_STIMULATED = 329;</code>
     */
    ACT_RUN_AIM_RIFLE_STIMULATED(330, 329),
    /**
     * <code>ACT_IDLE_SHOTGUN_RELAXED = 330;</code>
     */
    ACT_IDLE_SHOTGUN_RELAXED(331, 330),
    /**
     * <code>ACT_IDLE_SHOTGUN_STIMULATED = 331;</code>
     */
    ACT_IDLE_SHOTGUN_STIMULATED(332, 331),
    /**
     * <code>ACT_IDLE_SHOTGUN_AGITATED = 332;</code>
     */
    ACT_IDLE_SHOTGUN_AGITATED(333, 332),
    /**
     * <code>ACT_WALK_ANGRY = 333;</code>
     */
    ACT_WALK_ANGRY(334, 333),
    /**
     * <code>ACT_POLICE_HARASS1 = 334;</code>
     */
    ACT_POLICE_HARASS1(335, 334),
    /**
     * <code>ACT_POLICE_HARASS2 = 335;</code>
     */
    ACT_POLICE_HARASS2(336, 335),
    /**
     * <code>ACT_IDLE_MANNEDGUN = 336;</code>
     */
    ACT_IDLE_MANNEDGUN(337, 336),
    /**
     * <code>ACT_IDLE_MELEE = 337;</code>
     */
    ACT_IDLE_MELEE(338, 337),
    /**
     * <code>ACT_IDLE_ANGRY_MELEE = 338;</code>
     */
    ACT_IDLE_ANGRY_MELEE(339, 338),
    /**
     * <code>ACT_IDLE_RPG_RELAXED = 339;</code>
     */
    ACT_IDLE_RPG_RELAXED(340, 339),
    /**
     * <code>ACT_IDLE_RPG = 340;</code>
     */
    ACT_IDLE_RPG(341, 340),
    /**
     * <code>ACT_IDLE_ANGRY_RPG = 341;</code>
     */
    ACT_IDLE_ANGRY_RPG(342, 341),
    /**
     * <code>ACT_COVER_LOW_RPG = 342;</code>
     */
    ACT_COVER_LOW_RPG(343, 342),
    /**
     * <code>ACT_WALK_RPG = 343;</code>
     */
    ACT_WALK_RPG(344, 343),
    /**
     * <code>ACT_RUN_RPG = 344;</code>
     */
    ACT_RUN_RPG(345, 344),
    /**
     * <code>ACT_WALK_CROUCH_RPG = 345;</code>
     */
    ACT_WALK_CROUCH_RPG(346, 345),
    /**
     * <code>ACT_RUN_CROUCH_RPG = 346;</code>
     */
    ACT_RUN_CROUCH_RPG(347, 346),
    /**
     * <code>ACT_WALK_RPG_RELAXED = 347;</code>
     */
    ACT_WALK_RPG_RELAXED(348, 347),
    /**
     * <code>ACT_RUN_RPG_RELAXED = 348;</code>
     */
    ACT_RUN_RPG_RELAXED(349, 348),
    /**
     * <code>ACT_WALK_RIFLE = 349;</code>
     */
    ACT_WALK_RIFLE(350, 349),
    /**
     * <code>ACT_WALK_AIM_RIFLE = 350;</code>
     */
    ACT_WALK_AIM_RIFLE(351, 350),
    /**
     * <code>ACT_WALK_CROUCH_RIFLE = 351;</code>
     */
    ACT_WALK_CROUCH_RIFLE(352, 351),
    /**
     * <code>ACT_WALK_CROUCH_AIM_RIFLE = 352;</code>
     */
    ACT_WALK_CROUCH_AIM_RIFLE(353, 352),
    /**
     * <code>ACT_RUN_RIFLE = 353;</code>
     */
    ACT_RUN_RIFLE(354, 353),
    /**
     * <code>ACT_RUN_AIM_RIFLE = 354;</code>
     */
    ACT_RUN_AIM_RIFLE(355, 354),
    /**
     * <code>ACT_RUN_CROUCH_RIFLE = 355;</code>
     */
    ACT_RUN_CROUCH_RIFLE(356, 355),
    /**
     * <code>ACT_RUN_CROUCH_AIM_RIFLE = 356;</code>
     */
    ACT_RUN_CROUCH_AIM_RIFLE(357, 356),
    /**
     * <code>ACT_RUN_STEALTH_PISTOL = 357;</code>
     */
    ACT_RUN_STEALTH_PISTOL(358, 357),
    /**
     * <code>ACT_WALK_AIM_SHOTGUN = 358;</code>
     */
    ACT_WALK_AIM_SHOTGUN(359, 358),
    /**
     * <code>ACT_RUN_AIM_SHOTGUN = 359;</code>
     */
    ACT_RUN_AIM_SHOTGUN(360, 359),
    /**
     * <code>ACT_WALK_PISTOL = 360;</code>
     */
    ACT_WALK_PISTOL(361, 360),
    /**
     * <code>ACT_RUN_PISTOL = 361;</code>
     */
    ACT_RUN_PISTOL(362, 361),
    /**
     * <code>ACT_WALK_AIM_PISTOL = 362;</code>
     */
    ACT_WALK_AIM_PISTOL(363, 362),
    /**
     * <code>ACT_RUN_AIM_PISTOL = 363;</code>
     */
    ACT_RUN_AIM_PISTOL(364, 363),
    /**
     * <code>ACT_WALK_STEALTH_PISTOL = 364;</code>
     */
    ACT_WALK_STEALTH_PISTOL(365, 364),
    /**
     * <code>ACT_WALK_AIM_STEALTH_PISTOL = 365;</code>
     */
    ACT_WALK_AIM_STEALTH_PISTOL(366, 365),
    /**
     * <code>ACT_RUN_AIM_STEALTH_PISTOL = 366;</code>
     */
    ACT_RUN_AIM_STEALTH_PISTOL(367, 366),
    /**
     * <code>ACT_RELOAD_PISTOL = 367;</code>
     */
    ACT_RELOAD_PISTOL(368, 367),
    /**
     * <code>ACT_RELOAD_PISTOL_LOW = 368;</code>
     */
    ACT_RELOAD_PISTOL_LOW(369, 368),
    /**
     * <code>ACT_RELOAD_SMG1 = 369;</code>
     */
    ACT_RELOAD_SMG1(370, 369),
    /**
     * <code>ACT_RELOAD_SMG1_LOW = 370;</code>
     */
    ACT_RELOAD_SMG1_LOW(371, 370),
    /**
     * <code>ACT_RELOAD_SHOTGUN = 371;</code>
     */
    ACT_RELOAD_SHOTGUN(372, 371),
    /**
     * <code>ACT_RELOAD_SHOTGUN_LOW = 372;</code>
     */
    ACT_RELOAD_SHOTGUN_LOW(373, 372),
    /**
     * <code>ACT_GESTURE_RELOAD = 373;</code>
     */
    ACT_GESTURE_RELOAD(374, 373),
    /**
     * <code>ACT_GESTURE_RELOAD_PISTOL = 374;</code>
     */
    ACT_GESTURE_RELOAD_PISTOL(375, 374),
    /**
     * <code>ACT_GESTURE_RELOAD_SMG1 = 375;</code>
     */
    ACT_GESTURE_RELOAD_SMG1(376, 375),
    /**
     * <code>ACT_GESTURE_RELOAD_SHOTGUN = 376;</code>
     */
    ACT_GESTURE_RELOAD_SHOTGUN(377, 376),
    /**
     * <code>ACT_BUSY_LEAN_LEFT = 377;</code>
     */
    ACT_BUSY_LEAN_LEFT(378, 377),
    /**
     * <code>ACT_BUSY_LEAN_LEFT_ENTRY = 378;</code>
     */
    ACT_BUSY_LEAN_LEFT_ENTRY(379, 378),
    /**
     * <code>ACT_BUSY_LEAN_LEFT_EXIT = 379;</code>
     */
    ACT_BUSY_LEAN_LEFT_EXIT(380, 379),
    /**
     * <code>ACT_BUSY_LEAN_BACK = 380;</code>
     */
    ACT_BUSY_LEAN_BACK(381, 380),
    /**
     * <code>ACT_BUSY_LEAN_BACK_ENTRY = 381;</code>
     */
    ACT_BUSY_LEAN_BACK_ENTRY(382, 381),
    /**
     * <code>ACT_BUSY_LEAN_BACK_EXIT = 382;</code>
     */
    ACT_BUSY_LEAN_BACK_EXIT(383, 382),
    /**
     * <code>ACT_BUSY_SIT_GROUND = 383;</code>
     */
    ACT_BUSY_SIT_GROUND(384, 383),
    /**
     * <code>ACT_BUSY_SIT_GROUND_ENTRY = 384;</code>
     */
    ACT_BUSY_SIT_GROUND_ENTRY(385, 384),
    /**
     * <code>ACT_BUSY_SIT_GROUND_EXIT = 385;</code>
     */
    ACT_BUSY_SIT_GROUND_EXIT(386, 385),
    /**
     * <code>ACT_BUSY_SIT_CHAIR = 386;</code>
     */
    ACT_BUSY_SIT_CHAIR(387, 386),
    /**
     * <code>ACT_BUSY_SIT_CHAIR_ENTRY = 387;</code>
     */
    ACT_BUSY_SIT_CHAIR_ENTRY(388, 387),
    /**
     * <code>ACT_BUSY_SIT_CHAIR_EXIT = 388;</code>
     */
    ACT_BUSY_SIT_CHAIR_EXIT(389, 388),
    /**
     * <code>ACT_BUSY_STAND = 389;</code>
     */
    ACT_BUSY_STAND(390, 389),
    /**
     * <code>ACT_BUSY_QUEUE = 390;</code>
     */
    ACT_BUSY_QUEUE(391, 390),
    /**
     * <code>ACT_DUCK_DODGE = 391;</code>
     */
    ACT_DUCK_DODGE(392, 391),
    /**
     * <code>ACT_DIE_BARNACLE_SWALLOW = 392;</code>
     */
    ACT_DIE_BARNACLE_SWALLOW(393, 392),
    /**
     * <code>ACT_GESTURE_BARNACLE_STRANGLE = 393;</code>
     */
    ACT_GESTURE_BARNACLE_STRANGLE(394, 393),
    /**
     * <code>ACT_PHYSCANNON_DETACH = 394;</code>
     */
    ACT_PHYSCANNON_DETACH(395, 394),
    /**
     * <code>ACT_PHYSCANNON_ANIMATE = 395;</code>
     */
    ACT_PHYSCANNON_ANIMATE(396, 395),
    /**
     * <code>ACT_PHYSCANNON_ANIMATE_PRE = 396;</code>
     */
    ACT_PHYSCANNON_ANIMATE_PRE(397, 396),
    /**
     * <code>ACT_PHYSCANNON_ANIMATE_POST = 397;</code>
     */
    ACT_PHYSCANNON_ANIMATE_POST(398, 397),
    /**
     * <code>ACT_DIE_FRONTSIDE = 398;</code>
     */
    ACT_DIE_FRONTSIDE(399, 398),
    /**
     * <code>ACT_DIE_RIGHTSIDE = 399;</code>
     */
    ACT_DIE_RIGHTSIDE(400, 399),
    /**
     * <code>ACT_DIE_BACKSIDE = 400;</code>
     */
    ACT_DIE_BACKSIDE(401, 400),
    /**
     * <code>ACT_DIE_LEFTSIDE = 401;</code>
     */
    ACT_DIE_LEFTSIDE(402, 401),
    /**
     * <code>ACT_OPEN_DOOR = 402;</code>
     */
    ACT_OPEN_DOOR(403, 402),
    /**
     * <code>ACT_DI_ALYX_ZOMBIE_MELEE = 403;</code>
     */
    ACT_DI_ALYX_ZOMBIE_MELEE(404, 403),
    /**
     * <code>ACT_DI_ALYX_ZOMBIE_TORSO_MELEE = 404;</code>
     */
    ACT_DI_ALYX_ZOMBIE_TORSO_MELEE(405, 404),
    /**
     * <code>ACT_DI_ALYX_HEADCRAB_MELEE = 405;</code>
     */
    ACT_DI_ALYX_HEADCRAB_MELEE(406, 405),
    /**
     * <code>ACT_DI_ALYX_ANTLION = 406;</code>
     */
    ACT_DI_ALYX_ANTLION(407, 406),
    /**
     * <code>ACT_DI_ALYX_ZOMBIE_SHOTGUN64 = 407;</code>
     */
    ACT_DI_ALYX_ZOMBIE_SHOTGUN64(408, 407),
    /**
     * <code>ACT_DI_ALYX_ZOMBIE_SHOTGUN26 = 408;</code>
     */
    ACT_DI_ALYX_ZOMBIE_SHOTGUN26(409, 408),
    /**
     * <code>ACT_READINESS_RELAXED_TO_STIMULATED = 409;</code>
     */
    ACT_READINESS_RELAXED_TO_STIMULATED(410, 409),
    /**
     * <code>ACT_READINESS_RELAXED_TO_STIMULATED_WALK = 410;</code>
     */
    ACT_READINESS_RELAXED_TO_STIMULATED_WALK(411, 410),
    /**
     * <code>ACT_READINESS_AGITATED_TO_STIMULATED = 411;</code>
     */
    ACT_READINESS_AGITATED_TO_STIMULATED(412, 411),
    /**
     * <code>ACT_READINESS_STIMULATED_TO_RELAXED = 412;</code>
     */
    ACT_READINESS_STIMULATED_TO_RELAXED(413, 412),
    /**
     * <code>ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED = 413;</code>
     */
    ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED(414, 413),
    /**
     * <code>ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED_WALK = 414;</code>
     */
    ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED_WALK(415, 414),
    /**
     * <code>ACT_READINESS_PISTOL_AGITATED_TO_STIMULATED = 415;</code>
     */
    ACT_READINESS_PISTOL_AGITATED_TO_STIMULATED(416, 415),
    /**
     * <code>ACT_READINESS_PISTOL_STIMULATED_TO_RELAXED = 416;</code>
     */
    ACT_READINESS_PISTOL_STIMULATED_TO_RELAXED(417, 416),
    /**
     * <code>ACT_IDLE_CARRY = 417;</code>
     */
    ACT_IDLE_CARRY(418, 417),
    /**
     * <code>ACT_WALK_CARRY = 418;</code>
     */
    ACT_WALK_CARRY(419, 418),
    /**
     * <code>ACT_DOTA_IDLE = 419;</code>
     */
    ACT_DOTA_IDLE(420, 419),
    /**
     * <code>ACT_DOTA_IDLE_RARE = 421;</code>
     */
    ACT_DOTA_IDLE_RARE(421, 421),
    /**
     * <code>ACT_DOTA_RUN = 422;</code>
     */
    ACT_DOTA_RUN(422, 422),
    /**
     * <code>ACT_DOTA_ATTACK = 424;</code>
     */
    ACT_DOTA_ATTACK(423, 424),
    /**
     * <code>ACT_DOTA_ATTACK2 = 425;</code>
     */
    ACT_DOTA_ATTACK2(424, 425),
    /**
     * <code>ACT_DOTA_ATTACK_EVENT = 426;</code>
     */
    ACT_DOTA_ATTACK_EVENT(425, 426),
    /**
     * <code>ACT_DOTA_DIE = 427;</code>
     */
    ACT_DOTA_DIE(426, 427),
    /**
     * <code>ACT_DOTA_FLINCH = 428;</code>
     */
    ACT_DOTA_FLINCH(427, 428),
    /**
     * <code>ACT_DOTA_FLAIL = 429;</code>
     */
    ACT_DOTA_FLAIL(428, 429),
    /**
     * <code>ACT_DOTA_DISABLED = 430;</code>
     */
    ACT_DOTA_DISABLED(429, 430),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_1 = 431;</code>
     */
    ACT_DOTA_CAST_ABILITY_1(430, 431),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_2 = 432;</code>
     */
    ACT_DOTA_CAST_ABILITY_2(431, 432),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_3 = 433;</code>
     */
    ACT_DOTA_CAST_ABILITY_3(432, 433),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_4 = 434;</code>
     */
    ACT_DOTA_CAST_ABILITY_4(433, 434),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_5 = 435;</code>
     */
    ACT_DOTA_CAST_ABILITY_5(434, 435),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_6 = 436;</code>
     */
    ACT_DOTA_CAST_ABILITY_6(435, 436),
    /**
     * <code>ACT_DOTA_OVERRIDE_ABILITY_1 = 437;</code>
     */
    ACT_DOTA_OVERRIDE_ABILITY_1(436, 437),
    /**
     * <code>ACT_DOTA_OVERRIDE_ABILITY_2 = 438;</code>
     */
    ACT_DOTA_OVERRIDE_ABILITY_2(437, 438),
    /**
     * <code>ACT_DOTA_OVERRIDE_ABILITY_3 = 439;</code>
     */
    ACT_DOTA_OVERRIDE_ABILITY_3(438, 439),
    /**
     * <code>ACT_DOTA_OVERRIDE_ABILITY_4 = 440;</code>
     */
    ACT_DOTA_OVERRIDE_ABILITY_4(439, 440),
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_1 = 441;</code>
     */
    ACT_DOTA_CHANNEL_ABILITY_1(440, 441),
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_2 = 442;</code>
     */
    ACT_DOTA_CHANNEL_ABILITY_2(441, 442),
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_3 = 443;</code>
     */
    ACT_DOTA_CHANNEL_ABILITY_3(442, 443),
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_4 = 444;</code>
     */
    ACT_DOTA_CHANNEL_ABILITY_4(443, 444),
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_5 = 445;</code>
     */
    ACT_DOTA_CHANNEL_ABILITY_5(444, 445),
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_6 = 446;</code>
     */
    ACT_DOTA_CHANNEL_ABILITY_6(445, 446),
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_1 = 447;</code>
     */
    ACT_DOTA_CHANNEL_END_ABILITY_1(446, 447),
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_2 = 448;</code>
     */
    ACT_DOTA_CHANNEL_END_ABILITY_2(447, 448),
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_3 = 449;</code>
     */
    ACT_DOTA_CHANNEL_END_ABILITY_3(448, 449),
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_4 = 450;</code>
     */
    ACT_DOTA_CHANNEL_END_ABILITY_4(449, 450),
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_5 = 451;</code>
     */
    ACT_DOTA_CHANNEL_END_ABILITY_5(450, 451),
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_6 = 452;</code>
     */
    ACT_DOTA_CHANNEL_END_ABILITY_6(451, 452),
    /**
     * <code>ACT_DOTA_CONSTANT_LAYER = 453;</code>
     */
    ACT_DOTA_CONSTANT_LAYER(452, 453),
    /**
     * <code>ACT_DOTA_CAPTURE = 454;</code>
     */
    ACT_DOTA_CAPTURE(453, 454),
    /**
     * <code>ACT_DOTA_SPAWN = 455;</code>
     */
    ACT_DOTA_SPAWN(454, 455),
    /**
     * <code>ACT_DOTA_KILLTAUNT = 456;</code>
     */
    ACT_DOTA_KILLTAUNT(455, 456),
    /**
     * <code>ACT_DOTA_TAUNT = 457;</code>
     */
    ACT_DOTA_TAUNT(456, 457),
    /**
     * <code>ACT_DOTA_THIRST = 458;</code>
     */
    ACT_DOTA_THIRST(457, 458),
    /**
     * <code>ACT_DOTA_CAST_DRAGONBREATH = 459;</code>
     */
    ACT_DOTA_CAST_DRAGONBREATH(458, 459),
    /**
     * <code>ACT_DOTA_ECHO_SLAM = 460;</code>
     */
    ACT_DOTA_ECHO_SLAM(459, 460),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_1_END = 461;</code>
     */
    ACT_DOTA_CAST_ABILITY_1_END(460, 461),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_2_END = 462;</code>
     */
    ACT_DOTA_CAST_ABILITY_2_END(461, 462),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_3_END = 463;</code>
     */
    ACT_DOTA_CAST_ABILITY_3_END(462, 463),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_4_END = 464;</code>
     */
    ACT_DOTA_CAST_ABILITY_4_END(463, 464),
    /**
     * <code>ACT_MIRANA_LEAP_END = 465;</code>
     */
    ACT_MIRANA_LEAP_END(464, 465),
    /**
     * <code>ACT_WAVEFORM_START = 466;</code>
     */
    ACT_WAVEFORM_START(465, 466),
    /**
     * <code>ACT_WAVEFORM_END = 467;</code>
     */
    ACT_WAVEFORM_END(466, 467),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_ROT = 468;</code>
     */
    ACT_DOTA_CAST_ABILITY_ROT(467, 468),
    /**
     * <code>ACT_DOTA_DIE_SPECIAL = 469;</code>
     */
    ACT_DOTA_DIE_SPECIAL(468, 469),
    /**
     * <code>ACT_DOTA_RATTLETRAP_BATTERYASSAULT = 470;</code>
     */
    ACT_DOTA_RATTLETRAP_BATTERYASSAULT(469, 470),
    /**
     * <code>ACT_DOTA_RATTLETRAP_POWERCOGS = 471;</code>
     */
    ACT_DOTA_RATTLETRAP_POWERCOGS(470, 471),
    /**
     * <code>ACT_DOTA_RATTLETRAP_HOOKSHOT_START = 472;</code>
     */
    ACT_DOTA_RATTLETRAP_HOOKSHOT_START(471, 472),
    /**
     * <code>ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP = 473;</code>
     */
    ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP(472, 473),
    /**
     * <code>ACT_DOTA_RATTLETRAP_HOOKSHOT_END = 474;</code>
     */
    ACT_DOTA_RATTLETRAP_HOOKSHOT_END(473, 474),
    /**
     * <code>ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE = 475;</code>
     */
    ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE(474, 475),
    /**
     * <code>ACT_DOTA_TINKER_REARM1 = 476;</code>
     */
    ACT_DOTA_TINKER_REARM1(475, 476),
    /**
     * <code>ACT_DOTA_TINKER_REARM2 = 477;</code>
     */
    ACT_DOTA_TINKER_REARM2(476, 477),
    /**
     * <code>ACT_DOTA_TINKER_REARM3 = 478;</code>
     */
    ACT_DOTA_TINKER_REARM3(477, 478),
    /**
     * <code>ACT_TINY_AVALANCHE = 479;</code>
     */
    ACT_TINY_AVALANCHE(478, 479),
    /**
     * <code>ACT_TINY_TOSS = 480;</code>
     */
    ACT_TINY_TOSS(479, 480),
    /**
     * <code>ACT_TINY_GROWL = 481;</code>
     */
    ACT_TINY_GROWL(480, 481),
    /**
     * <code>ACT_DOTA_WEAVERBUG_ATTACH = 482;</code>
     */
    ACT_DOTA_WEAVERBUG_ATTACH(481, 482),
    /**
     * <code>ACT_DOTA_CAST_WILD_AXES_END = 483;</code>
     */
    ACT_DOTA_CAST_WILD_AXES_END(482, 483),
    /**
     * <code>ACT_DOTA_CAST_LIFE_BREAK_START = 484;</code>
     */
    ACT_DOTA_CAST_LIFE_BREAK_START(483, 484),
    /**
     * <code>ACT_DOTA_CAST_LIFE_BREAK_END = 485;</code>
     */
    ACT_DOTA_CAST_LIFE_BREAK_END(484, 485),
    /**
     * <code>ACT_DOTA_NIGHTSTALKER_TRANSITION = 486;</code>
     */
    ACT_DOTA_NIGHTSTALKER_TRANSITION(485, 486),
    /**
     * <code>ACT_DOTA_LIFESTEALER_RAGE = 487;</code>
     */
    ACT_DOTA_LIFESTEALER_RAGE(486, 487),
    /**
     * <code>ACT_DOTA_LIFESTEALER_OPEN_WOUNDS = 488;</code>
     */
    ACT_DOTA_LIFESTEALER_OPEN_WOUNDS(487, 488),
    /**
     * <code>ACT_DOTA_SAND_KING_BURROW_IN = 489;</code>
     */
    ACT_DOTA_SAND_KING_BURROW_IN(488, 489),
    /**
     * <code>ACT_DOTA_SAND_KING_BURROW_OUT = 490;</code>
     */
    ACT_DOTA_SAND_KING_BURROW_OUT(489, 490),
    /**
     * <code>ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK = 491;</code>
     */
    ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK(490, 491),
    /**
     * <code>ACT_DOTA_WHEEL_LAYER = 492;</code>
     */
    ACT_DOTA_WHEEL_LAYER(491, 492),
    /**
     * <code>ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START = 493;</code>
     */
    ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START(492, 493),
    /**
     * <code>ACT_DOTA_ALCHEMIST_CONCOCTION = 494;</code>
     */
    ACT_DOTA_ALCHEMIST_CONCOCTION(493, 494),
    /**
     * <code>ACT_DOTA_JAKIRO_LIQUIDFIRE_START = 495;</code>
     */
    ACT_DOTA_JAKIRO_LIQUIDFIRE_START(494, 495),
    /**
     * <code>ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP = 496;</code>
     */
    ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP(495, 496),
    /**
     * <code>ACT_DOTA_LIFESTEALER_INFEST = 497;</code>
     */
    ACT_DOTA_LIFESTEALER_INFEST(496, 497),
    /**
     * <code>ACT_DOTA_LIFESTEALER_INFEST_END = 498;</code>
     */
    ACT_DOTA_LIFESTEALER_INFEST_END(497, 498),
    /**
     * <code>ACT_DOTA_LASSO_LOOP = 499;</code>
     */
    ACT_DOTA_LASSO_LOOP(498, 499),
    /**
     * <code>ACT_DOTA_ALCHEMIST_CONCOCTION_THROW = 500;</code>
     */
    ACT_DOTA_ALCHEMIST_CONCOCTION_THROW(499, 500),
    /**
     * <code>ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END = 501;</code>
     */
    ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END(500, 501),
    /**
     * <code>ACT_DOTA_CAST_COLD_SNAP = 502;</code>
     */
    ACT_DOTA_CAST_COLD_SNAP(501, 502),
    /**
     * <code>ACT_DOTA_CAST_GHOST_WALK = 503;</code>
     */
    ACT_DOTA_CAST_GHOST_WALK(502, 503),
    /**
     * <code>ACT_DOTA_CAST_TORNADO = 504;</code>
     */
    ACT_DOTA_CAST_TORNADO(503, 504),
    /**
     * <code>ACT_DOTA_CAST_EMP = 505;</code>
     */
    ACT_DOTA_CAST_EMP(504, 505),
    /**
     * <code>ACT_DOTA_CAST_ALACRITY = 506;</code>
     */
    ACT_DOTA_CAST_ALACRITY(505, 506),
    /**
     * <code>ACT_DOTA_CAST_CHAOS_METEOR = 507;</code>
     */
    ACT_DOTA_CAST_CHAOS_METEOR(506, 507),
    /**
     * <code>ACT_DOTA_CAST_SUN_STRIKE = 508;</code>
     */
    ACT_DOTA_CAST_SUN_STRIKE(507, 508),
    /**
     * <code>ACT_DOTA_CAST_FORGE_SPIRIT = 509;</code>
     */
    ACT_DOTA_CAST_FORGE_SPIRIT(508, 509),
    /**
     * <code>ACT_DOTA_CAST_ICE_WALL = 510;</code>
     */
    ACT_DOTA_CAST_ICE_WALL(509, 510),
    /**
     * <code>ACT_DOTA_CAST_DEAFENING_BLAST = 511;</code>
     */
    ACT_DOTA_CAST_DEAFENING_BLAST(510, 511),
    /**
     * <code>ACT_DOTA_VICTORY = 512;</code>
     */
    ACT_DOTA_VICTORY(511, 512),
    /**
     * <code>ACT_DOTA_DEFEAT = 513;</code>
     */
    ACT_DOTA_DEFEAT(512, 513),
    /**
     * <code>ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE = 514;</code>
     */
    ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE(513, 514),
    /**
     * <code>ACT_DOTA_SPIRIT_BREAKER_CHARGE_END = 515;</code>
     */
    ACT_DOTA_SPIRIT_BREAKER_CHARGE_END(514, 515),
    /**
     * <code>ACT_DOTA_TELEPORT = 516;</code>
     */
    ACT_DOTA_TELEPORT(515, 516),
    /**
     * <code>ACT_DOTA_TELEPORT_END = 517;</code>
     */
    ACT_DOTA_TELEPORT_END(516, 517),
    /**
     * <code>ACT_DOTA_CAST_REFRACTION = 518;</code>
     */
    ACT_DOTA_CAST_REFRACTION(517, 518),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_7 = 519;</code>
     */
    ACT_DOTA_CAST_ABILITY_7(518, 519),
    /**
     * <code>ACT_DOTA_CANCEL_SIREN_SONG = 520;</code>
     */
    ACT_DOTA_CANCEL_SIREN_SONG(519, 520),
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_7 = 521;</code>
     */
    ACT_DOTA_CHANNEL_ABILITY_7(520, 521),
    /**
     * <code>ACT_DOTA_LOADOUT = 522;</code>
     */
    ACT_DOTA_LOADOUT(521, 522),
    /**
     * <code>ACT_DOTA_FORCESTAFF_END = 523;</code>
     */
    ACT_DOTA_FORCESTAFF_END(522, 523),
    /**
     * <code>ACT_DOTA_POOF_END = 524;</code>
     */
    ACT_DOTA_POOF_END(523, 524),
    /**
     * <code>ACT_DOTA_SLARK_POUNCE = 525;</code>
     */
    ACT_DOTA_SLARK_POUNCE(524, 525),
    /**
     * <code>ACT_DOTA_MAGNUS_SKEWER_START = 526;</code>
     */
    ACT_DOTA_MAGNUS_SKEWER_START(525, 526),
    /**
     * <code>ACT_DOTA_MAGNUS_SKEWER_END = 527;</code>
     */
    ACT_DOTA_MAGNUS_SKEWER_END(526, 527),
    /**
     * <code>ACT_DOTA_MEDUSA_STONE_GAZE = 528;</code>
     */
    ACT_DOTA_MEDUSA_STONE_GAZE(527, 528),
    /**
     * <code>ACT_DOTA_RELAX_START = 529;</code>
     */
    ACT_DOTA_RELAX_START(528, 529),
    /**
     * <code>ACT_DOTA_RELAX_LOOP = 530;</code>
     */
    ACT_DOTA_RELAX_LOOP(529, 530),
    /**
     * <code>ACT_DOTA_RELAX_END = 531;</code>
     */
    ACT_DOTA_RELAX_END(530, 531),
    /**
     * <code>ACT_DOTA_CENTAUR_STAMPEDE = 532;</code>
     */
    ACT_DOTA_CENTAUR_STAMPEDE(531, 532),
    /**
     * <code>ACT_DOTA_BELLYACHE_START = 533;</code>
     */
    ACT_DOTA_BELLYACHE_START(532, 533),
    /**
     * <code>ACT_DOTA_BELLYACHE_LOOP = 534;</code>
     */
    ACT_DOTA_BELLYACHE_LOOP(533, 534),
    /**
     * <code>ACT_DOTA_BELLYACHE_END = 535;</code>
     */
    ACT_DOTA_BELLYACHE_END(534, 535),
    /**
     * <code>ACT_DOTA_ROQUELAIRE_LAND = 536;</code>
     */
    ACT_DOTA_ROQUELAIRE_LAND(535, 536),
    /**
     * <code>ACT_DOTA_ROQUELAIRE_LAND_IDLE = 537;</code>
     */
    ACT_DOTA_ROQUELAIRE_LAND_IDLE(536, 537),
    /**
     * <code>ACT_DOTA_GREEVIL_CAST = 538;</code>
     */
    ACT_DOTA_GREEVIL_CAST(537, 538),
    /**
     * <code>ACT_DOTA_GREEVIL_OVERRIDE_ABILITY = 539;</code>
     */
    ACT_DOTA_GREEVIL_OVERRIDE_ABILITY(538, 539),
    /**
     * <code>ACT_DOTA_GREEVIL_HOOK_START = 540;</code>
     */
    ACT_DOTA_GREEVIL_HOOK_START(539, 540),
    /**
     * <code>ACT_DOTA_GREEVIL_HOOK_END = 541;</code>
     */
    ACT_DOTA_GREEVIL_HOOK_END(540, 541),
    /**
     * <code>ACT_DOTA_GREEVIL_BLINK_BONE = 542;</code>
     */
    ACT_DOTA_GREEVIL_BLINK_BONE(541, 542),
    /**
     * <code>ACT_DOTA_IDLE_SLEEPING = 543;</code>
     */
    ACT_DOTA_IDLE_SLEEPING(542, 543),
    /**
     * <code>ACT_DOTA_INTRO = 544;</code>
     */
    ACT_DOTA_INTRO(543, 544),
    /**
     * <code>ACT_DOTA_GESTURE_POINT = 545;</code>
     */
    ACT_DOTA_GESTURE_POINT(544, 545),
    /**
     * <code>ACT_DOTA_GESTURE_ACCENT = 546;</code>
     */
    ACT_DOTA_GESTURE_ACCENT(545, 546),
    /**
     * <code>ACT_DOTA_SLEEPING_END = 547;</code>
     */
    ACT_DOTA_SLEEPING_END(546, 547),
    /**
     * <code>ACT_DOTA_AMBUSH = 548;</code>
     */
    ACT_DOTA_AMBUSH(547, 548),
    /**
     * <code>ACT_DOTA_ITEM_LOOK = 549;</code>
     */
    ACT_DOTA_ITEM_LOOK(548, 549),
    /**
     * <code>ACT_DOTA_STARTLE = 550;</code>
     */
    ACT_DOTA_STARTLE(549, 550),
    /**
     * <code>ACT_DOTA_FRUSTRATION = 551;</code>
     */
    ACT_DOTA_FRUSTRATION(550, 551),
    /**
     * <code>ACT_DOTA_TELEPORT_REACT = 552;</code>
     */
    ACT_DOTA_TELEPORT_REACT(551, 552),
    /**
     * <code>ACT_DOTA_TELEPORT_END_REACT = 553;</code>
     */
    ACT_DOTA_TELEPORT_END_REACT(552, 553),
    /**
     * <code>ACT_DOTA_SHRUG = 554;</code>
     */
    ACT_DOTA_SHRUG(553, 554),
    /**
     * <code>ACT_DOTA_RELAX_LOOP_END = 555;</code>
     */
    ACT_DOTA_RELAX_LOOP_END(554, 555),
    /**
     * <code>ACT_DOTA_PRESENT_ITEM = 556;</code>
     */
    ACT_DOTA_PRESENT_ITEM(555, 556),
    /**
     * <code>ACT_DOTA_IDLE_IMPATIENT = 557;</code>
     */
    ACT_DOTA_IDLE_IMPATIENT(556, 557),
    /**
     * <code>ACT_DOTA_SHARPEN_WEAPON = 558;</code>
     */
    ACT_DOTA_SHARPEN_WEAPON(557, 558),
    /**
     * <code>ACT_DOTA_SHARPEN_WEAPON_OUT = 559;</code>
     */
    ACT_DOTA_SHARPEN_WEAPON_OUT(558, 559),
    /**
     * <code>ACT_DOTA_IDLE_SLEEPING_END = 560;</code>
     */
    ACT_DOTA_IDLE_SLEEPING_END(559, 560),
    /**
     * <code>ACT_DOTA_BRIDGE_DESTROY = 561;</code>
     */
    ACT_DOTA_BRIDGE_DESTROY(560, 561),
    /**
     * <code>ACT_DOTA_TAUNT_SNIPER = 562;</code>
     */
    ACT_DOTA_TAUNT_SNIPER(561, 562),
    /**
     * <code>ACT_DOTA_DEATH_BY_SNIPER = 563;</code>
     */
    ACT_DOTA_DEATH_BY_SNIPER(562, 563),
    /**
     * <code>ACT_DOTA_LOOK_AROUND = 564;</code>
     */
    ACT_DOTA_LOOK_AROUND(563, 564),
    /**
     * <code>ACT_DOTA_CAGED_CREEP_RAGE = 565;</code>
     */
    ACT_DOTA_CAGED_CREEP_RAGE(564, 565),
    /**
     * <code>ACT_DOTA_CAGED_CREEP_RAGE_OUT = 566;</code>
     */
    ACT_DOTA_CAGED_CREEP_RAGE_OUT(565, 566),
    /**
     * <code>ACT_DOTA_CAGED_CREEP_SMASH = 567;</code>
     */
    ACT_DOTA_CAGED_CREEP_SMASH(566, 567),
    /**
     * <code>ACT_DOTA_CAGED_CREEP_SMASH_OUT = 568;</code>
     */
    ACT_DOTA_CAGED_CREEP_SMASH_OUT(567, 568),
    /**
     * <code>ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP = 569;</code>
     */
    ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP(568, 569),
    /**
     * <code>ACT_DOTA_INTRO_LOOP = 570;</code>
     */
    ACT_DOTA_INTRO_LOOP(569, 570),
    /**
     * <code>ACT_DOTA_BRIDGE_THREAT = 571;</code>
     */
    ACT_DOTA_BRIDGE_THREAT(570, 571),
    /**
     * <code>ACT_DOTA_DAGON = 572;</code>
     */
    ACT_DOTA_DAGON(571, 572),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START = 573;</code>
     */
    ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START(572, 573),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_2_ES_ROLL = 574;</code>
     */
    ACT_DOTA_CAST_ABILITY_2_ES_ROLL(573, 574),
    /**
     * <code>ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END = 575;</code>
     */
    ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END(574, 575),
    /**
     * <code>ACT_DOTA_NIAN_PIN_START = 576;</code>
     */
    ACT_DOTA_NIAN_PIN_START(575, 576),
    /**
     * <code>ACT_DOTA_NIAN_PIN_LOOP = 577;</code>
     */
    ACT_DOTA_NIAN_PIN_LOOP(576, 577),
    /**
     * <code>ACT_DOTA_NIAN_PIN_END = 578;</code>
     */
    ACT_DOTA_NIAN_PIN_END(577, 578),
    /**
     * <code>ACT_DOTA_LEAP_STUN = 579;</code>
     */
    ACT_DOTA_LEAP_STUN(578, 579),
    /**
     * <code>ACT_DOTA_LEAP_SWIPE = 580;</code>
     */
    ACT_DOTA_LEAP_SWIPE(579, 580),
    /**
     * <code>ACT_DOTA_NIAN_INTRO_LEAP = 581;</code>
     */
    ACT_DOTA_NIAN_INTRO_LEAP(580, 581),
    /**
     * <code>ACT_DOTA_AREA_DENY = 582;</code>
     */
    ACT_DOTA_AREA_DENY(581, 582),
    /**
     * <code>ACT_DOTA_NIAN_PIN_TO_STUN = 583;</code>
     */
    ACT_DOTA_NIAN_PIN_TO_STUN(582, 583),
    /**
     * <code>ACT_DOTA_RAZE_1 = 584;</code>
     */
    ACT_DOTA_RAZE_1(583, 584),
    /**
     * <code>ACT_DOTA_RAZE_2 = 585;</code>
     */
    ACT_DOTA_RAZE_2(584, 585),
    /**
     * <code>ACT_DOTA_RAZE_3 = 586;</code>
     */
    ACT_DOTA_RAZE_3(585, 586),
    /**
     * <code>ACT_DOTA_UNDYING_DECAY = 587;</code>
     */
    ACT_DOTA_UNDYING_DECAY(586, 587),
    /**
     * <code>ACT_DOTA_UNDYING_SOUL_RIP = 588;</code>
     */
    ACT_DOTA_UNDYING_SOUL_RIP(587, 588),
    /**
     * <code>ACT_DOTA_UNDYING_TOMBSTONE = 589;</code>
     */
    ACT_DOTA_UNDYING_TOMBSTONE(588, 589),
    /**
     * <code>ACT_DOTA_WHIRLING_AXES_RANGED = 590;</code>
     */
    ACT_DOTA_WHIRLING_AXES_RANGED(589, 590),
    /**
     * <code>ACT_DOTA_SHALLOW_GRAVE = 591;</code>
     */
    ACT_DOTA_SHALLOW_GRAVE(590, 591),
    /**
     * <code>ACT_DOTA_COLD_FEET = 592;</code>
     */
    ACT_DOTA_COLD_FEET(591, 592),
    /**
     * <code>ACT_DOTA_ICE_VORTEX = 593;</code>
     */
    ACT_DOTA_ICE_VORTEX(592, 593),
    /**
     * <code>ACT_DOTA_CHILLING_TOUCH = 594;</code>
     */
    ACT_DOTA_CHILLING_TOUCH(593, 594),
    /**
     * <code>ACT_DOTA_ENFEEBLE = 595;</code>
     */
    ACT_DOTA_ENFEEBLE(594, 595),
    /**
     * <code>ACT_DOTA_FATAL_BONDS = 596;</code>
     */
    ACT_DOTA_FATAL_BONDS(595, 596),
    /**
     * <code>ACT_DOTA_MIDNIGHT_PULSE = 597;</code>
     */
    ACT_DOTA_MIDNIGHT_PULSE(596, 597),
    /**
     * <code>ACT_DOTA_ANCESTRAL_SPIRIT = 598;</code>
     */
    ACT_DOTA_ANCESTRAL_SPIRIT(597, 598),
    /**
     * <code>ACT_DOTA_THUNDER_STRIKE = 599;</code>
     */
    ACT_DOTA_THUNDER_STRIKE(598, 599),
    /**
     * <code>ACT_DOTA_KINETIC_FIELD = 600;</code>
     */
    ACT_DOTA_KINETIC_FIELD(599, 600),
    /**
     * <code>ACT_DOTA_STATIC_STORM = 601;</code>
     */
    ACT_DOTA_STATIC_STORM(600, 601),
    /**
     * <code>ACT_DOTA_MINI_TAUNT = 602;</code>
     */
    ACT_DOTA_MINI_TAUNT(601, 602),
    ;

    /**
     * <code>ACT_INVALID = -1;</code>
     */
    public static final int ACT_INVALID_VALUE = -1;
    /**
     * <code>ACT_RESET = 0;</code>
     */
    public static final int ACT_RESET_VALUE = 0;
    /**
     * <code>ACT_IDLE = 1;</code>
     */
    public static final int ACT_IDLE_VALUE = 1;
    /**
     * <code>ACT_TRANSITION = 2;</code>
     */
    public static final int ACT_TRANSITION_VALUE = 2;
    /**
     * <code>ACT_COVER = 3;</code>
     */
    public static final int ACT_COVER_VALUE = 3;
    /**
     * <code>ACT_COVER_MED = 4;</code>
     */
    public static final int ACT_COVER_MED_VALUE = 4;
    /**
     * <code>ACT_COVER_LOW = 5;</code>
     */
    public static final int ACT_COVER_LOW_VALUE = 5;
    /**
     * <code>ACT_WALK = 6;</code>
     */
    public static final int ACT_WALK_VALUE = 6;
    /**
     * <code>ACT_WALK_AIM = 7;</code>
     */
    public static final int ACT_WALK_AIM_VALUE = 7;
    /**
     * <code>ACT_WALK_CROUCH = 8;</code>
     */
    public static final int ACT_WALK_CROUCH_VALUE = 8;
    /**
     * <code>ACT_WALK_CROUCH_AIM = 9;</code>
     */
    public static final int ACT_WALK_CROUCH_AIM_VALUE = 9;
    /**
     * <code>ACT_RUN = 10;</code>
     */
    public static final int ACT_RUN_VALUE = 10;
    /**
     * <code>ACT_RUN_AIM = 11;</code>
     */
    public static final int ACT_RUN_AIM_VALUE = 11;
    /**
     * <code>ACT_RUN_CROUCH = 12;</code>
     */
    public static final int ACT_RUN_CROUCH_VALUE = 12;
    /**
     * <code>ACT_RUN_CROUCH_AIM = 13;</code>
     */
    public static final int ACT_RUN_CROUCH_AIM_VALUE = 13;
    /**
     * <code>ACT_RUN_PROTECTED = 14;</code>
     */
    public static final int ACT_RUN_PROTECTED_VALUE = 14;
    /**
     * <code>ACT_SCRIPT_CUSTOM_MOVE = 15;</code>
     */
    public static final int ACT_SCRIPT_CUSTOM_MOVE_VALUE = 15;
    /**
     * <code>ACT_RANGE_ATTACK1 = 16;</code>
     */
    public static final int ACT_RANGE_ATTACK1_VALUE = 16;
    /**
     * <code>ACT_RANGE_ATTACK2 = 17;</code>
     */
    public static final int ACT_RANGE_ATTACK2_VALUE = 17;
    /**
     * <code>ACT_RANGE_ATTACK1_LOW = 18;</code>
     */
    public static final int ACT_RANGE_ATTACK1_LOW_VALUE = 18;
    /**
     * <code>ACT_RANGE_ATTACK2_LOW = 19;</code>
     */
    public static final int ACT_RANGE_ATTACK2_LOW_VALUE = 19;
    /**
     * <code>ACT_DIESIMPLE = 20;</code>
     */
    public static final int ACT_DIESIMPLE_VALUE = 20;
    /**
     * <code>ACT_DIEBACKWARD = 21;</code>
     */
    public static final int ACT_DIEBACKWARD_VALUE = 21;
    /**
     * <code>ACT_DIEFORWARD = 22;</code>
     */
    public static final int ACT_DIEFORWARD_VALUE = 22;
    /**
     * <code>ACT_DIEVIOLENT = 23;</code>
     */
    public static final int ACT_DIEVIOLENT_VALUE = 23;
    /**
     * <code>ACT_DIERAGDOLL = 24;</code>
     */
    public static final int ACT_DIERAGDOLL_VALUE = 24;
    /**
     * <code>ACT_FLY = 25;</code>
     */
    public static final int ACT_FLY_VALUE = 25;
    /**
     * <code>ACT_HOVER = 26;</code>
     */
    public static final int ACT_HOVER_VALUE = 26;
    /**
     * <code>ACT_GLIDE = 27;</code>
     */
    public static final int ACT_GLIDE_VALUE = 27;
    /**
     * <code>ACT_SWIM = 28;</code>
     */
    public static final int ACT_SWIM_VALUE = 28;
    /**
     * <code>ACT_JUMP = 29;</code>
     */
    public static final int ACT_JUMP_VALUE = 29;
    /**
     * <code>ACT_HOP = 30;</code>
     */
    public static final int ACT_HOP_VALUE = 30;
    /**
     * <code>ACT_LEAP = 31;</code>
     */
    public static final int ACT_LEAP_VALUE = 31;
    /**
     * <code>ACT_LAND = 32;</code>
     */
    public static final int ACT_LAND_VALUE = 32;
    /**
     * <code>ACT_CLIMB_UP = 33;</code>
     */
    public static final int ACT_CLIMB_UP_VALUE = 33;
    /**
     * <code>ACT_CLIMB_DOWN = 34;</code>
     */
    public static final int ACT_CLIMB_DOWN_VALUE = 34;
    /**
     * <code>ACT_CLIMB_DISMOUNT = 35;</code>
     */
    public static final int ACT_CLIMB_DISMOUNT_VALUE = 35;
    /**
     * <code>ACT_SHIPLADDER_UP = 36;</code>
     */
    public static final int ACT_SHIPLADDER_UP_VALUE = 36;
    /**
     * <code>ACT_SHIPLADDER_DOWN = 37;</code>
     */
    public static final int ACT_SHIPLADDER_DOWN_VALUE = 37;
    /**
     * <code>ACT_STRAFE_LEFT = 38;</code>
     */
    public static final int ACT_STRAFE_LEFT_VALUE = 38;
    /**
     * <code>ACT_STRAFE_RIGHT = 39;</code>
     */
    public static final int ACT_STRAFE_RIGHT_VALUE = 39;
    /**
     * <code>ACT_ROLL_LEFT = 40;</code>
     */
    public static final int ACT_ROLL_LEFT_VALUE = 40;
    /**
     * <code>ACT_ROLL_RIGHT = 41;</code>
     */
    public static final int ACT_ROLL_RIGHT_VALUE = 41;
    /**
     * <code>ACT_TURN_LEFT = 42;</code>
     */
    public static final int ACT_TURN_LEFT_VALUE = 42;
    /**
     * <code>ACT_TURN_RIGHT = 43;</code>
     */
    public static final int ACT_TURN_RIGHT_VALUE = 43;
    /**
     * <code>ACT_CROUCH = 44;</code>
     */
    public static final int ACT_CROUCH_VALUE = 44;
    /**
     * <code>ACT_CROUCHIDLE = 45;</code>
     */
    public static final int ACT_CROUCHIDLE_VALUE = 45;
    /**
     * <code>ACT_STAND = 46;</code>
     */
    public static final int ACT_STAND_VALUE = 46;
    /**
     * <code>ACT_USE = 47;</code>
     */
    public static final int ACT_USE_VALUE = 47;
    /**
     * <code>ACT_ALIEN_BURROW_IDLE = 48;</code>
     */
    public static final int ACT_ALIEN_BURROW_IDLE_VALUE = 48;
    /**
     * <code>ACT_ALIEN_BURROW_OUT = 49;</code>
     */
    public static final int ACT_ALIEN_BURROW_OUT_VALUE = 49;
    /**
     * <code>ACT_SIGNAL1 = 50;</code>
     */
    public static final int ACT_SIGNAL1_VALUE = 50;
    /**
     * <code>ACT_SIGNAL2 = 51;</code>
     */
    public static final int ACT_SIGNAL2_VALUE = 51;
    /**
     * <code>ACT_SIGNAL3 = 52;</code>
     */
    public static final int ACT_SIGNAL3_VALUE = 52;
    /**
     * <code>ACT_SIGNAL_ADVANCE = 53;</code>
     */
    public static final int ACT_SIGNAL_ADVANCE_VALUE = 53;
    /**
     * <code>ACT_SIGNAL_FORWARD = 54;</code>
     */
    public static final int ACT_SIGNAL_FORWARD_VALUE = 54;
    /**
     * <code>ACT_SIGNAL_GROUP = 55;</code>
     */
    public static final int ACT_SIGNAL_GROUP_VALUE = 55;
    /**
     * <code>ACT_SIGNAL_HALT = 56;</code>
     */
    public static final int ACT_SIGNAL_HALT_VALUE = 56;
    /**
     * <code>ACT_SIGNAL_LEFT = 57;</code>
     */
    public static final int ACT_SIGNAL_LEFT_VALUE = 57;
    /**
     * <code>ACT_SIGNAL_RIGHT = 58;</code>
     */
    public static final int ACT_SIGNAL_RIGHT_VALUE = 58;
    /**
     * <code>ACT_SIGNAL_TAKECOVER = 59;</code>
     */
    public static final int ACT_SIGNAL_TAKECOVER_VALUE = 59;
    /**
     * <code>ACT_LOOKBACK_RIGHT = 60;</code>
     */
    public static final int ACT_LOOKBACK_RIGHT_VALUE = 60;
    /**
     * <code>ACT_LOOKBACK_LEFT = 61;</code>
     */
    public static final int ACT_LOOKBACK_LEFT_VALUE = 61;
    /**
     * <code>ACT_COWER = 62;</code>
     */
    public static final int ACT_COWER_VALUE = 62;
    /**
     * <code>ACT_SMALL_FLINCH = 63;</code>
     */
    public static final int ACT_SMALL_FLINCH_VALUE = 63;
    /**
     * <code>ACT_BIG_FLINCH = 64;</code>
     */
    public static final int ACT_BIG_FLINCH_VALUE = 64;
    /**
     * <code>ACT_MELEE_ATTACK1 = 65;</code>
     */
    public static final int ACT_MELEE_ATTACK1_VALUE = 65;
    /**
     * <code>ACT_MELEE_ATTACK2 = 66;</code>
     */
    public static final int ACT_MELEE_ATTACK2_VALUE = 66;
    /**
     * <code>ACT_RELOAD = 67;</code>
     */
    public static final int ACT_RELOAD_VALUE = 67;
    /**
     * <code>ACT_RELOAD_START = 68;</code>
     */
    public static final int ACT_RELOAD_START_VALUE = 68;
    /**
     * <code>ACT_RELOAD_FINISH = 69;</code>
     */
    public static final int ACT_RELOAD_FINISH_VALUE = 69;
    /**
     * <code>ACT_RELOAD_LOW = 70;</code>
     */
    public static final int ACT_RELOAD_LOW_VALUE = 70;
    /**
     * <code>ACT_ARM = 71;</code>
     */
    public static final int ACT_ARM_VALUE = 71;
    /**
     * <code>ACT_DISARM = 72;</code>
     */
    public static final int ACT_DISARM_VALUE = 72;
    /**
     * <code>ACT_DROP_WEAPON = 73;</code>
     */
    public static final int ACT_DROP_WEAPON_VALUE = 73;
    /**
     * <code>ACT_DROP_WEAPON_SHOTGUN = 74;</code>
     */
    public static final int ACT_DROP_WEAPON_SHOTGUN_VALUE = 74;
    /**
     * <code>ACT_PICKUP_GROUND = 75;</code>
     */
    public static final int ACT_PICKUP_GROUND_VALUE = 75;
    /**
     * <code>ACT_PICKUP_RACK = 76;</code>
     */
    public static final int ACT_PICKUP_RACK_VALUE = 76;
    /**
     * <code>ACT_IDLE_ANGRY = 77;</code>
     */
    public static final int ACT_IDLE_ANGRY_VALUE = 77;
    /**
     * <code>ACT_IDLE_RELAXED = 78;</code>
     */
    public static final int ACT_IDLE_RELAXED_VALUE = 78;
    /**
     * <code>ACT_IDLE_STIMULATED = 79;</code>
     */
    public static final int ACT_IDLE_STIMULATED_VALUE = 79;
    /**
     * <code>ACT_IDLE_AGITATED = 80;</code>
     */
    public static final int ACT_IDLE_AGITATED_VALUE = 80;
    /**
     * <code>ACT_IDLE_STEALTH = 81;</code>
     */
    public static final int ACT_IDLE_STEALTH_VALUE = 81;
    /**
     * <code>ACT_IDLE_HURT = 82;</code>
     */
    public static final int ACT_IDLE_HURT_VALUE = 82;
    /**
     * <code>ACT_WALK_RELAXED = 83;</code>
     */
    public static final int ACT_WALK_RELAXED_VALUE = 83;
    /**
     * <code>ACT_WALK_STIMULATED = 84;</code>
     */
    public static final int ACT_WALK_STIMULATED_VALUE = 84;
    /**
     * <code>ACT_WALK_AGITATED = 85;</code>
     */
    public static final int ACT_WALK_AGITATED_VALUE = 85;
    /**
     * <code>ACT_WALK_STEALTH = 86;</code>
     */
    public static final int ACT_WALK_STEALTH_VALUE = 86;
    /**
     * <code>ACT_RUN_RELAXED = 87;</code>
     */
    public static final int ACT_RUN_RELAXED_VALUE = 87;
    /**
     * <code>ACT_RUN_STIMULATED = 88;</code>
     */
    public static final int ACT_RUN_STIMULATED_VALUE = 88;
    /**
     * <code>ACT_RUN_AGITATED = 89;</code>
     */
    public static final int ACT_RUN_AGITATED_VALUE = 89;
    /**
     * <code>ACT_RUN_STEALTH = 90;</code>
     */
    public static final int ACT_RUN_STEALTH_VALUE = 90;
    /**
     * <code>ACT_IDLE_AIM_RELAXED = 91;</code>
     */
    public static final int ACT_IDLE_AIM_RELAXED_VALUE = 91;
    /**
     * <code>ACT_IDLE_AIM_STIMULATED = 92;</code>
     */
    public static final int ACT_IDLE_AIM_STIMULATED_VALUE = 92;
    /**
     * <code>ACT_IDLE_AIM_AGITATED = 93;</code>
     */
    public static final int ACT_IDLE_AIM_AGITATED_VALUE = 93;
    /**
     * <code>ACT_IDLE_AIM_STEALTH = 94;</code>
     */
    public static final int ACT_IDLE_AIM_STEALTH_VALUE = 94;
    /**
     * <code>ACT_WALK_AIM_RELAXED = 95;</code>
     */
    public static final int ACT_WALK_AIM_RELAXED_VALUE = 95;
    /**
     * <code>ACT_WALK_AIM_STIMULATED = 96;</code>
     */
    public static final int ACT_WALK_AIM_STIMULATED_VALUE = 96;
    /**
     * <code>ACT_WALK_AIM_AGITATED = 97;</code>
     */
    public static final int ACT_WALK_AIM_AGITATED_VALUE = 97;
    /**
     * <code>ACT_WALK_AIM_STEALTH = 98;</code>
     */
    public static final int ACT_WALK_AIM_STEALTH_VALUE = 98;
    /**
     * <code>ACT_RUN_AIM_RELAXED = 99;</code>
     */
    public static final int ACT_RUN_AIM_RELAXED_VALUE = 99;
    /**
     * <code>ACT_RUN_AIM_STIMULATED = 100;</code>
     */
    public static final int ACT_RUN_AIM_STIMULATED_VALUE = 100;
    /**
     * <code>ACT_RUN_AIM_AGITATED = 101;</code>
     */
    public static final int ACT_RUN_AIM_AGITATED_VALUE = 101;
    /**
     * <code>ACT_RUN_AIM_STEALTH = 102;</code>
     */
    public static final int ACT_RUN_AIM_STEALTH_VALUE = 102;
    /**
     * <code>ACT_CROUCHIDLE_STIMULATED = 103;</code>
     */
    public static final int ACT_CROUCHIDLE_STIMULATED_VALUE = 103;
    /**
     * <code>ACT_CROUCHIDLE_AIM_STIMULATED = 104;</code>
     */
    public static final int ACT_CROUCHIDLE_AIM_STIMULATED_VALUE = 104;
    /**
     * <code>ACT_CROUCHIDLE_AGITATED = 105;</code>
     */
    public static final int ACT_CROUCHIDLE_AGITATED_VALUE = 105;
    /**
     * <code>ACT_WALK_HURT = 106;</code>
     */
    public static final int ACT_WALK_HURT_VALUE = 106;
    /**
     * <code>ACT_RUN_HURT = 107;</code>
     */
    public static final int ACT_RUN_HURT_VALUE = 107;
    /**
     * <code>ACT_SPECIAL_ATTACK1 = 108;</code>
     */
    public static final int ACT_SPECIAL_ATTACK1_VALUE = 108;
    /**
     * <code>ACT_SPECIAL_ATTACK2 = 109;</code>
     */
    public static final int ACT_SPECIAL_ATTACK2_VALUE = 109;
    /**
     * <code>ACT_COMBAT_IDLE = 110;</code>
     */
    public static final int ACT_COMBAT_IDLE_VALUE = 110;
    /**
     * <code>ACT_WALK_SCARED = 111;</code>
     */
    public static final int ACT_WALK_SCARED_VALUE = 111;
    /**
     * <code>ACT_RUN_SCARED = 112;</code>
     */
    public static final int ACT_RUN_SCARED_VALUE = 112;
    /**
     * <code>ACT_VICTORY_DANCE = 113;</code>
     */
    public static final int ACT_VICTORY_DANCE_VALUE = 113;
    /**
     * <code>ACT_DIE_HEADSHOT = 114;</code>
     */
    public static final int ACT_DIE_HEADSHOT_VALUE = 114;
    /**
     * <code>ACT_DIE_CHESTSHOT = 115;</code>
     */
    public static final int ACT_DIE_CHESTSHOT_VALUE = 115;
    /**
     * <code>ACT_DIE_GUTSHOT = 116;</code>
     */
    public static final int ACT_DIE_GUTSHOT_VALUE = 116;
    /**
     * <code>ACT_DIE_BACKSHOT = 117;</code>
     */
    public static final int ACT_DIE_BACKSHOT_VALUE = 117;
    /**
     * <code>ACT_FLINCH_HEAD = 118;</code>
     */
    public static final int ACT_FLINCH_HEAD_VALUE = 118;
    /**
     * <code>ACT_FLINCH_CHEST = 119;</code>
     */
    public static final int ACT_FLINCH_CHEST_VALUE = 119;
    /**
     * <code>ACT_FLINCH_STOMACH = 120;</code>
     */
    public static final int ACT_FLINCH_STOMACH_VALUE = 120;
    /**
     * <code>ACT_FLINCH_LEFTARM = 121;</code>
     */
    public static final int ACT_FLINCH_LEFTARM_VALUE = 121;
    /**
     * <code>ACT_FLINCH_RIGHTARM = 122;</code>
     */
    public static final int ACT_FLINCH_RIGHTARM_VALUE = 122;
    /**
     * <code>ACT_FLINCH_LEFTLEG = 123;</code>
     */
    public static final int ACT_FLINCH_LEFTLEG_VALUE = 123;
    /**
     * <code>ACT_FLINCH_RIGHTLEG = 124;</code>
     */
    public static final int ACT_FLINCH_RIGHTLEG_VALUE = 124;
    /**
     * <code>ACT_FLINCH_PHYSICS = 125;</code>
     */
    public static final int ACT_FLINCH_PHYSICS_VALUE = 125;
    /**
     * <code>ACT_FLINCH_HEAD_BACK = 126;</code>
     */
    public static final int ACT_FLINCH_HEAD_BACK_VALUE = 126;
    /**
     * <code>ACT_FLINCH_CHEST_BACK = 127;</code>
     */
    public static final int ACT_FLINCH_CHEST_BACK_VALUE = 127;
    /**
     * <code>ACT_FLINCH_STOMACH_BACK = 128;</code>
     */
    public static final int ACT_FLINCH_STOMACH_BACK_VALUE = 128;
    /**
     * <code>ACT_FLINCH_CROUCH_FRONT = 129;</code>
     */
    public static final int ACT_FLINCH_CROUCH_FRONT_VALUE = 129;
    /**
     * <code>ACT_FLINCH_CROUCH_BACK = 130;</code>
     */
    public static final int ACT_FLINCH_CROUCH_BACK_VALUE = 130;
    /**
     * <code>ACT_FLINCH_CROUCH_LEFT = 131;</code>
     */
    public static final int ACT_FLINCH_CROUCH_LEFT_VALUE = 131;
    /**
     * <code>ACT_FLINCH_CROUCH_RIGHT = 132;</code>
     */
    public static final int ACT_FLINCH_CROUCH_RIGHT_VALUE = 132;
    /**
     * <code>ACT_IDLE_ON_FIRE = 133;</code>
     */
    public static final int ACT_IDLE_ON_FIRE_VALUE = 133;
    /**
     * <code>ACT_WALK_ON_FIRE = 134;</code>
     */
    public static final int ACT_WALK_ON_FIRE_VALUE = 134;
    /**
     * <code>ACT_RUN_ON_FIRE = 135;</code>
     */
    public static final int ACT_RUN_ON_FIRE_VALUE = 135;
    /**
     * <code>ACT_RAPPEL_LOOP = 136;</code>
     */
    public static final int ACT_RAPPEL_LOOP_VALUE = 136;
    /**
     * <code>ACT_180_LEFT = 137;</code>
     */
    public static final int ACT_180_LEFT_VALUE = 137;
    /**
     * <code>ACT_180_RIGHT = 138;</code>
     */
    public static final int ACT_180_RIGHT_VALUE = 138;
    /**
     * <code>ACT_90_LEFT = 139;</code>
     */
    public static final int ACT_90_LEFT_VALUE = 139;
    /**
     * <code>ACT_90_RIGHT = 140;</code>
     */
    public static final int ACT_90_RIGHT_VALUE = 140;
    /**
     * <code>ACT_STEP_LEFT = 141;</code>
     */
    public static final int ACT_STEP_LEFT_VALUE = 141;
    /**
     * <code>ACT_STEP_RIGHT = 142;</code>
     */
    public static final int ACT_STEP_RIGHT_VALUE = 142;
    /**
     * <code>ACT_STEP_BACK = 143;</code>
     */
    public static final int ACT_STEP_BACK_VALUE = 143;
    /**
     * <code>ACT_STEP_FORE = 144;</code>
     */
    public static final int ACT_STEP_FORE_VALUE = 144;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK1 = 145;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK1_VALUE = 145;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK2 = 146;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK2_VALUE = 146;
    /**
     * <code>ACT_GESTURE_MELEE_ATTACK1 = 147;</code>
     */
    public static final int ACT_GESTURE_MELEE_ATTACK1_VALUE = 147;
    /**
     * <code>ACT_GESTURE_MELEE_ATTACK2 = 148;</code>
     */
    public static final int ACT_GESTURE_MELEE_ATTACK2_VALUE = 148;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK1_LOW = 149;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK1_LOW_VALUE = 149;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK2_LOW = 150;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK2_LOW_VALUE = 150;
    /**
     * <code>ACT_MELEE_ATTACK_SWING_GESTURE = 151;</code>
     */
    public static final int ACT_MELEE_ATTACK_SWING_GESTURE_VALUE = 151;
    /**
     * <code>ACT_GESTURE_SMALL_FLINCH = 152;</code>
     */
    public static final int ACT_GESTURE_SMALL_FLINCH_VALUE = 152;
    /**
     * <code>ACT_GESTURE_BIG_FLINCH = 153;</code>
     */
    public static final int ACT_GESTURE_BIG_FLINCH_VALUE = 153;
    /**
     * <code>ACT_GESTURE_FLINCH_BLAST = 154;</code>
     */
    public static final int ACT_GESTURE_FLINCH_BLAST_VALUE = 154;
    /**
     * <code>ACT_GESTURE_FLINCH_BLAST_SHOTGUN = 155;</code>
     */
    public static final int ACT_GESTURE_FLINCH_BLAST_SHOTGUN_VALUE = 155;
    /**
     * <code>ACT_GESTURE_FLINCH_BLAST_DAMAGED = 156;</code>
     */
    public static final int ACT_GESTURE_FLINCH_BLAST_DAMAGED_VALUE = 156;
    /**
     * <code>ACT_GESTURE_FLINCH_BLAST_DAMAGED_SHOTGUN = 157;</code>
     */
    public static final int ACT_GESTURE_FLINCH_BLAST_DAMAGED_SHOTGUN_VALUE = 157;
    /**
     * <code>ACT_GESTURE_FLINCH_HEAD = 158;</code>
     */
    public static final int ACT_GESTURE_FLINCH_HEAD_VALUE = 158;
    /**
     * <code>ACT_GESTURE_FLINCH_CHEST = 159;</code>
     */
    public static final int ACT_GESTURE_FLINCH_CHEST_VALUE = 159;
    /**
     * <code>ACT_GESTURE_FLINCH_STOMACH = 160;</code>
     */
    public static final int ACT_GESTURE_FLINCH_STOMACH_VALUE = 160;
    /**
     * <code>ACT_GESTURE_FLINCH_LEFTARM = 161;</code>
     */
    public static final int ACT_GESTURE_FLINCH_LEFTARM_VALUE = 161;
    /**
     * <code>ACT_GESTURE_FLINCH_RIGHTARM = 162;</code>
     */
    public static final int ACT_GESTURE_FLINCH_RIGHTARM_VALUE = 162;
    /**
     * <code>ACT_GESTURE_FLINCH_LEFTLEG = 163;</code>
     */
    public static final int ACT_GESTURE_FLINCH_LEFTLEG_VALUE = 163;
    /**
     * <code>ACT_GESTURE_FLINCH_RIGHTLEG = 164;</code>
     */
    public static final int ACT_GESTURE_FLINCH_RIGHTLEG_VALUE = 164;
    /**
     * <code>ACT_GESTURE_TURN_LEFT = 165;</code>
     */
    public static final int ACT_GESTURE_TURN_LEFT_VALUE = 165;
    /**
     * <code>ACT_GESTURE_TURN_RIGHT = 166;</code>
     */
    public static final int ACT_GESTURE_TURN_RIGHT_VALUE = 166;
    /**
     * <code>ACT_GESTURE_TURN_LEFT45 = 167;</code>
     */
    public static final int ACT_GESTURE_TURN_LEFT45_VALUE = 167;
    /**
     * <code>ACT_GESTURE_TURN_RIGHT45 = 168;</code>
     */
    public static final int ACT_GESTURE_TURN_RIGHT45_VALUE = 168;
    /**
     * <code>ACT_GESTURE_TURN_LEFT90 = 169;</code>
     */
    public static final int ACT_GESTURE_TURN_LEFT90_VALUE = 169;
    /**
     * <code>ACT_GESTURE_TURN_RIGHT90 = 170;</code>
     */
    public static final int ACT_GESTURE_TURN_RIGHT90_VALUE = 170;
    /**
     * <code>ACT_GESTURE_TURN_LEFT45_FLAT = 171;</code>
     */
    public static final int ACT_GESTURE_TURN_LEFT45_FLAT_VALUE = 171;
    /**
     * <code>ACT_GESTURE_TURN_RIGHT45_FLAT = 172;</code>
     */
    public static final int ACT_GESTURE_TURN_RIGHT45_FLAT_VALUE = 172;
    /**
     * <code>ACT_GESTURE_TURN_LEFT90_FLAT = 173;</code>
     */
    public static final int ACT_GESTURE_TURN_LEFT90_FLAT_VALUE = 173;
    /**
     * <code>ACT_GESTURE_TURN_RIGHT90_FLAT = 174;</code>
     */
    public static final int ACT_GESTURE_TURN_RIGHT90_FLAT_VALUE = 174;
    /**
     * <code>ACT_BARNACLE_HIT = 175;</code>
     */
    public static final int ACT_BARNACLE_HIT_VALUE = 175;
    /**
     * <code>ACT_BARNACLE_PULL = 176;</code>
     */
    public static final int ACT_BARNACLE_PULL_VALUE = 176;
    /**
     * <code>ACT_BARNACLE_CHOMP = 177;</code>
     */
    public static final int ACT_BARNACLE_CHOMP_VALUE = 177;
    /**
     * <code>ACT_BARNACLE_CHEW = 178;</code>
     */
    public static final int ACT_BARNACLE_CHEW_VALUE = 178;
    /**
     * <code>ACT_DO_NOT_DISTURB = 179;</code>
     */
    public static final int ACT_DO_NOT_DISTURB_VALUE = 179;
    /**
     * <code>ACT_SPECIFIC_SEQUENCE = 180;</code>
     */
    public static final int ACT_SPECIFIC_SEQUENCE_VALUE = 180;
    /**
     * <code>ACT_VM_DRAW = 181;</code>
     */
    public static final int ACT_VM_DRAW_VALUE = 181;
    /**
     * <code>ACT_VM_HOLSTER = 182;</code>
     */
    public static final int ACT_VM_HOLSTER_VALUE = 182;
    /**
     * <code>ACT_VM_IDLE = 183;</code>
     */
    public static final int ACT_VM_IDLE_VALUE = 183;
    /**
     * <code>ACT_VM_FIDGET = 184;</code>
     */
    public static final int ACT_VM_FIDGET_VALUE = 184;
    /**
     * <code>ACT_VM_PULLBACK = 185;</code>
     */
    public static final int ACT_VM_PULLBACK_VALUE = 185;
    /**
     * <code>ACT_VM_PULLBACK_HIGH = 186;</code>
     */
    public static final int ACT_VM_PULLBACK_HIGH_VALUE = 186;
    /**
     * <code>ACT_VM_PULLBACK_LOW = 187;</code>
     */
    public static final int ACT_VM_PULLBACK_LOW_VALUE = 187;
    /**
     * <code>ACT_VM_THROW = 188;</code>
     */
    public static final int ACT_VM_THROW_VALUE = 188;
    /**
     * <code>ACT_VM_PULLPIN = 189;</code>
     */
    public static final int ACT_VM_PULLPIN_VALUE = 189;
    /**
     * <code>ACT_VM_PRIMARYATTACK = 190;</code>
     */
    public static final int ACT_VM_PRIMARYATTACK_VALUE = 190;
    /**
     * <code>ACT_VM_SECONDARYATTACK = 191;</code>
     */
    public static final int ACT_VM_SECONDARYATTACK_VALUE = 191;
    /**
     * <code>ACT_VM_RELOAD = 192;</code>
     */
    public static final int ACT_VM_RELOAD_VALUE = 192;
    /**
     * <code>ACT_VM_DRYFIRE = 193;</code>
     */
    public static final int ACT_VM_DRYFIRE_VALUE = 193;
    /**
     * <code>ACT_VM_HITLEFT = 194;</code>
     */
    public static final int ACT_VM_HITLEFT_VALUE = 194;
    /**
     * <code>ACT_VM_HITLEFT2 = 195;</code>
     */
    public static final int ACT_VM_HITLEFT2_VALUE = 195;
    /**
     * <code>ACT_VM_HITRIGHT = 196;</code>
     */
    public static final int ACT_VM_HITRIGHT_VALUE = 196;
    /**
     * <code>ACT_VM_HITRIGHT2 = 197;</code>
     */
    public static final int ACT_VM_HITRIGHT2_VALUE = 197;
    /**
     * <code>ACT_VM_HITCENTER = 198;</code>
     */
    public static final int ACT_VM_HITCENTER_VALUE = 198;
    /**
     * <code>ACT_VM_HITCENTER2 = 199;</code>
     */
    public static final int ACT_VM_HITCENTER2_VALUE = 199;
    /**
     * <code>ACT_VM_MISSLEFT = 200;</code>
     */
    public static final int ACT_VM_MISSLEFT_VALUE = 200;
    /**
     * <code>ACT_VM_MISSLEFT2 = 201;</code>
     */
    public static final int ACT_VM_MISSLEFT2_VALUE = 201;
    /**
     * <code>ACT_VM_MISSRIGHT = 202;</code>
     */
    public static final int ACT_VM_MISSRIGHT_VALUE = 202;
    /**
     * <code>ACT_VM_MISSRIGHT2 = 203;</code>
     */
    public static final int ACT_VM_MISSRIGHT2_VALUE = 203;
    /**
     * <code>ACT_VM_MISSCENTER = 204;</code>
     */
    public static final int ACT_VM_MISSCENTER_VALUE = 204;
    /**
     * <code>ACT_VM_MISSCENTER2 = 205;</code>
     */
    public static final int ACT_VM_MISSCENTER2_VALUE = 205;
    /**
     * <code>ACT_VM_HAULBACK = 206;</code>
     */
    public static final int ACT_VM_HAULBACK_VALUE = 206;
    /**
     * <code>ACT_VM_SWINGHARD = 207;</code>
     */
    public static final int ACT_VM_SWINGHARD_VALUE = 207;
    /**
     * <code>ACT_VM_SWINGMISS = 208;</code>
     */
    public static final int ACT_VM_SWINGMISS_VALUE = 208;
    /**
     * <code>ACT_VM_SWINGHIT = 209;</code>
     */
    public static final int ACT_VM_SWINGHIT_VALUE = 209;
    /**
     * <code>ACT_VM_IDLE_TO_LOWERED = 210;</code>
     */
    public static final int ACT_VM_IDLE_TO_LOWERED_VALUE = 210;
    /**
     * <code>ACT_VM_IDLE_LOWERED = 211;</code>
     */
    public static final int ACT_VM_IDLE_LOWERED_VALUE = 211;
    /**
     * <code>ACT_VM_LOWERED_TO_IDLE = 212;</code>
     */
    public static final int ACT_VM_LOWERED_TO_IDLE_VALUE = 212;
    /**
     * <code>ACT_VM_RECOIL1 = 213;</code>
     */
    public static final int ACT_VM_RECOIL1_VALUE = 213;
    /**
     * <code>ACT_VM_RECOIL2 = 214;</code>
     */
    public static final int ACT_VM_RECOIL2_VALUE = 214;
    /**
     * <code>ACT_VM_RECOIL3 = 215;</code>
     */
    public static final int ACT_VM_RECOIL3_VALUE = 215;
    /**
     * <code>ACT_VM_PICKUP = 216;</code>
     */
    public static final int ACT_VM_PICKUP_VALUE = 216;
    /**
     * <code>ACT_VM_RELEASE = 217;</code>
     */
    public static final int ACT_VM_RELEASE_VALUE = 217;
    /**
     * <code>ACT_VM_ATTACH_SILENCER = 218;</code>
     */
    public static final int ACT_VM_ATTACH_SILENCER_VALUE = 218;
    /**
     * <code>ACT_VM_DETACH_SILENCER = 219;</code>
     */
    public static final int ACT_VM_DETACH_SILENCER_VALUE = 219;
    /**
     * <code>ACT_SLAM_STICKWALL_IDLE = 220;</code>
     */
    public static final int ACT_SLAM_STICKWALL_IDLE_VALUE = 220;
    /**
     * <code>ACT_SLAM_STICKWALL_ND_IDLE = 221;</code>
     */
    public static final int ACT_SLAM_STICKWALL_ND_IDLE_VALUE = 221;
    /**
     * <code>ACT_SLAM_STICKWALL_ATTACH = 222;</code>
     */
    public static final int ACT_SLAM_STICKWALL_ATTACH_VALUE = 222;
    /**
     * <code>ACT_SLAM_STICKWALL_ATTACH2 = 223;</code>
     */
    public static final int ACT_SLAM_STICKWALL_ATTACH2_VALUE = 223;
    /**
     * <code>ACT_SLAM_STICKWALL_ND_ATTACH = 224;</code>
     */
    public static final int ACT_SLAM_STICKWALL_ND_ATTACH_VALUE = 224;
    /**
     * <code>ACT_SLAM_STICKWALL_ND_ATTACH2 = 225;</code>
     */
    public static final int ACT_SLAM_STICKWALL_ND_ATTACH2_VALUE = 225;
    /**
     * <code>ACT_SLAM_STICKWALL_DETONATE = 226;</code>
     */
    public static final int ACT_SLAM_STICKWALL_DETONATE_VALUE = 226;
    /**
     * <code>ACT_SLAM_STICKWALL_DETONATOR_HOLSTER = 227;</code>
     */
    public static final int ACT_SLAM_STICKWALL_DETONATOR_HOLSTER_VALUE = 227;
    /**
     * <code>ACT_SLAM_STICKWALL_DRAW = 228;</code>
     */
    public static final int ACT_SLAM_STICKWALL_DRAW_VALUE = 228;
    /**
     * <code>ACT_SLAM_STICKWALL_ND_DRAW = 229;</code>
     */
    public static final int ACT_SLAM_STICKWALL_ND_DRAW_VALUE = 229;
    /**
     * <code>ACT_SLAM_STICKWALL_TO_THROW = 230;</code>
     */
    public static final int ACT_SLAM_STICKWALL_TO_THROW_VALUE = 230;
    /**
     * <code>ACT_SLAM_STICKWALL_TO_THROW_ND = 231;</code>
     */
    public static final int ACT_SLAM_STICKWALL_TO_THROW_ND_VALUE = 231;
    /**
     * <code>ACT_SLAM_STICKWALL_TO_TRIPMINE_ND = 232;</code>
     */
    public static final int ACT_SLAM_STICKWALL_TO_TRIPMINE_ND_VALUE = 232;
    /**
     * <code>ACT_SLAM_THROW_IDLE = 233;</code>
     */
    public static final int ACT_SLAM_THROW_IDLE_VALUE = 233;
    /**
     * <code>ACT_SLAM_THROW_ND_IDLE = 234;</code>
     */
    public static final int ACT_SLAM_THROW_ND_IDLE_VALUE = 234;
    /**
     * <code>ACT_SLAM_THROW_THROW = 235;</code>
     */
    public static final int ACT_SLAM_THROW_THROW_VALUE = 235;
    /**
     * <code>ACT_SLAM_THROW_THROW2 = 236;</code>
     */
    public static final int ACT_SLAM_THROW_THROW2_VALUE = 236;
    /**
     * <code>ACT_SLAM_THROW_THROW_ND = 237;</code>
     */
    public static final int ACT_SLAM_THROW_THROW_ND_VALUE = 237;
    /**
     * <code>ACT_SLAM_THROW_THROW_ND2 = 238;</code>
     */
    public static final int ACT_SLAM_THROW_THROW_ND2_VALUE = 238;
    /**
     * <code>ACT_SLAM_THROW_DRAW = 239;</code>
     */
    public static final int ACT_SLAM_THROW_DRAW_VALUE = 239;
    /**
     * <code>ACT_SLAM_THROW_ND_DRAW = 240;</code>
     */
    public static final int ACT_SLAM_THROW_ND_DRAW_VALUE = 240;
    /**
     * <code>ACT_SLAM_THROW_TO_STICKWALL = 241;</code>
     */
    public static final int ACT_SLAM_THROW_TO_STICKWALL_VALUE = 241;
    /**
     * <code>ACT_SLAM_THROW_TO_STICKWALL_ND = 242;</code>
     */
    public static final int ACT_SLAM_THROW_TO_STICKWALL_ND_VALUE = 242;
    /**
     * <code>ACT_SLAM_THROW_DETONATE = 243;</code>
     */
    public static final int ACT_SLAM_THROW_DETONATE_VALUE = 243;
    /**
     * <code>ACT_SLAM_THROW_DETONATOR_HOLSTER = 244;</code>
     */
    public static final int ACT_SLAM_THROW_DETONATOR_HOLSTER_VALUE = 244;
    /**
     * <code>ACT_SLAM_THROW_TO_TRIPMINE_ND = 245;</code>
     */
    public static final int ACT_SLAM_THROW_TO_TRIPMINE_ND_VALUE = 245;
    /**
     * <code>ACT_SLAM_TRIPMINE_IDLE = 246;</code>
     */
    public static final int ACT_SLAM_TRIPMINE_IDLE_VALUE = 246;
    /**
     * <code>ACT_SLAM_TRIPMINE_DRAW = 247;</code>
     */
    public static final int ACT_SLAM_TRIPMINE_DRAW_VALUE = 247;
    /**
     * <code>ACT_SLAM_TRIPMINE_ATTACH = 248;</code>
     */
    public static final int ACT_SLAM_TRIPMINE_ATTACH_VALUE = 248;
    /**
     * <code>ACT_SLAM_TRIPMINE_ATTACH2 = 249;</code>
     */
    public static final int ACT_SLAM_TRIPMINE_ATTACH2_VALUE = 249;
    /**
     * <code>ACT_SLAM_TRIPMINE_TO_STICKWALL_ND = 250;</code>
     */
    public static final int ACT_SLAM_TRIPMINE_TO_STICKWALL_ND_VALUE = 250;
    /**
     * <code>ACT_SLAM_TRIPMINE_TO_THROW_ND = 251;</code>
     */
    public static final int ACT_SLAM_TRIPMINE_TO_THROW_ND_VALUE = 251;
    /**
     * <code>ACT_SLAM_DETONATOR_IDLE = 252;</code>
     */
    public static final int ACT_SLAM_DETONATOR_IDLE_VALUE = 252;
    /**
     * <code>ACT_SLAM_DETONATOR_DRAW = 253;</code>
     */
    public static final int ACT_SLAM_DETONATOR_DRAW_VALUE = 253;
    /**
     * <code>ACT_SLAM_DETONATOR_DETONATE = 254;</code>
     */
    public static final int ACT_SLAM_DETONATOR_DETONATE_VALUE = 254;
    /**
     * <code>ACT_SLAM_DETONATOR_HOLSTER = 255;</code>
     */
    public static final int ACT_SLAM_DETONATOR_HOLSTER_VALUE = 255;
    /**
     * <code>ACT_SLAM_DETONATOR_STICKWALL_DRAW = 256;</code>
     */
    public static final int ACT_SLAM_DETONATOR_STICKWALL_DRAW_VALUE = 256;
    /**
     * <code>ACT_SLAM_DETONATOR_THROW_DRAW = 257;</code>
     */
    public static final int ACT_SLAM_DETONATOR_THROW_DRAW_VALUE = 257;
    /**
     * <code>ACT_SHOTGUN_RELOAD_START = 258;</code>
     */
    public static final int ACT_SHOTGUN_RELOAD_START_VALUE = 258;
    /**
     * <code>ACT_SHOTGUN_RELOAD_FINISH = 259;</code>
     */
    public static final int ACT_SHOTGUN_RELOAD_FINISH_VALUE = 259;
    /**
     * <code>ACT_SHOTGUN_PUMP = 260;</code>
     */
    public static final int ACT_SHOTGUN_PUMP_VALUE = 260;
    /**
     * <code>ACT_SMG2_IDLE2 = 261;</code>
     */
    public static final int ACT_SMG2_IDLE2_VALUE = 261;
    /**
     * <code>ACT_SMG2_FIRE2 = 262;</code>
     */
    public static final int ACT_SMG2_FIRE2_VALUE = 262;
    /**
     * <code>ACT_SMG2_DRAW2 = 263;</code>
     */
    public static final int ACT_SMG2_DRAW2_VALUE = 263;
    /**
     * <code>ACT_SMG2_RELOAD2 = 264;</code>
     */
    public static final int ACT_SMG2_RELOAD2_VALUE = 264;
    /**
     * <code>ACT_SMG2_DRYFIRE2 = 265;</code>
     */
    public static final int ACT_SMG2_DRYFIRE2_VALUE = 265;
    /**
     * <code>ACT_SMG2_TOAUTO = 266;</code>
     */
    public static final int ACT_SMG2_TOAUTO_VALUE = 266;
    /**
     * <code>ACT_SMG2_TOBURST = 267;</code>
     */
    public static final int ACT_SMG2_TOBURST_VALUE = 267;
    /**
     * <code>ACT_PHYSCANNON_UPGRADE = 268;</code>
     */
    public static final int ACT_PHYSCANNON_UPGRADE_VALUE = 268;
    /**
     * <code>ACT_RANGE_ATTACK_AR1 = 269;</code>
     */
    public static final int ACT_RANGE_ATTACK_AR1_VALUE = 269;
    /**
     * <code>ACT_RANGE_ATTACK_AR2 = 270;</code>
     */
    public static final int ACT_RANGE_ATTACK_AR2_VALUE = 270;
    /**
     * <code>ACT_RANGE_ATTACK_AR2_LOW = 271;</code>
     */
    public static final int ACT_RANGE_ATTACK_AR2_LOW_VALUE = 271;
    /**
     * <code>ACT_RANGE_ATTACK_AR2_GRENADE = 272;</code>
     */
    public static final int ACT_RANGE_ATTACK_AR2_GRENADE_VALUE = 272;
    /**
     * <code>ACT_RANGE_ATTACK_HMG1 = 273;</code>
     */
    public static final int ACT_RANGE_ATTACK_HMG1_VALUE = 273;
    /**
     * <code>ACT_RANGE_ATTACK_ML = 274;</code>
     */
    public static final int ACT_RANGE_ATTACK_ML_VALUE = 274;
    /**
     * <code>ACT_RANGE_ATTACK_SMG1 = 275;</code>
     */
    public static final int ACT_RANGE_ATTACK_SMG1_VALUE = 275;
    /**
     * <code>ACT_RANGE_ATTACK_SMG1_LOW = 276;</code>
     */
    public static final int ACT_RANGE_ATTACK_SMG1_LOW_VALUE = 276;
    /**
     * <code>ACT_RANGE_ATTACK_SMG2 = 277;</code>
     */
    public static final int ACT_RANGE_ATTACK_SMG2_VALUE = 277;
    /**
     * <code>ACT_RANGE_ATTACK_SHOTGUN = 278;</code>
     */
    public static final int ACT_RANGE_ATTACK_SHOTGUN_VALUE = 278;
    /**
     * <code>ACT_RANGE_ATTACK_SHOTGUN_LOW = 279;</code>
     */
    public static final int ACT_RANGE_ATTACK_SHOTGUN_LOW_VALUE = 279;
    /**
     * <code>ACT_RANGE_ATTACK_PISTOL = 280;</code>
     */
    public static final int ACT_RANGE_ATTACK_PISTOL_VALUE = 280;
    /**
     * <code>ACT_RANGE_ATTACK_PISTOL_LOW = 281;</code>
     */
    public static final int ACT_RANGE_ATTACK_PISTOL_LOW_VALUE = 281;
    /**
     * <code>ACT_RANGE_ATTACK_SLAM = 282;</code>
     */
    public static final int ACT_RANGE_ATTACK_SLAM_VALUE = 282;
    /**
     * <code>ACT_RANGE_ATTACK_TRIPWIRE = 283;</code>
     */
    public static final int ACT_RANGE_ATTACK_TRIPWIRE_VALUE = 283;
    /**
     * <code>ACT_RANGE_ATTACK_THROW = 284;</code>
     */
    public static final int ACT_RANGE_ATTACK_THROW_VALUE = 284;
    /**
     * <code>ACT_RANGE_ATTACK_SNIPER_RIFLE = 285;</code>
     */
    public static final int ACT_RANGE_ATTACK_SNIPER_RIFLE_VALUE = 285;
    /**
     * <code>ACT_RANGE_ATTACK_RPG = 286;</code>
     */
    public static final int ACT_RANGE_ATTACK_RPG_VALUE = 286;
    /**
     * <code>ACT_MELEE_ATTACK_SWING = 287;</code>
     */
    public static final int ACT_MELEE_ATTACK_SWING_VALUE = 287;
    /**
     * <code>ACT_RANGE_AIM_LOW = 288;</code>
     */
    public static final int ACT_RANGE_AIM_LOW_VALUE = 288;
    /**
     * <code>ACT_RANGE_AIM_SMG1_LOW = 289;</code>
     */
    public static final int ACT_RANGE_AIM_SMG1_LOW_VALUE = 289;
    /**
     * <code>ACT_RANGE_AIM_PISTOL_LOW = 290;</code>
     */
    public static final int ACT_RANGE_AIM_PISTOL_LOW_VALUE = 290;
    /**
     * <code>ACT_RANGE_AIM_AR2_LOW = 291;</code>
     */
    public static final int ACT_RANGE_AIM_AR2_LOW_VALUE = 291;
    /**
     * <code>ACT_COVER_PISTOL_LOW = 292;</code>
     */
    public static final int ACT_COVER_PISTOL_LOW_VALUE = 292;
    /**
     * <code>ACT_COVER_SMG1_LOW = 293;</code>
     */
    public static final int ACT_COVER_SMG1_LOW_VALUE = 293;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_AR1 = 294;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_AR1_VALUE = 294;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_AR2 = 295;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_AR2_VALUE = 295;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_AR2_GRENADE = 296;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_AR2_GRENADE_VALUE = 296;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_HMG1 = 297;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_HMG1_VALUE = 297;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_ML = 298;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_ML_VALUE = 298;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SMG1 = 299;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_SMG1_VALUE = 299;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SMG1_LOW = 300;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_SMG1_LOW_VALUE = 300;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SMG2 = 301;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_SMG2_VALUE = 301;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SHOTGUN = 302;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_SHOTGUN_VALUE = 302;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_PISTOL = 303;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_PISTOL_VALUE = 303;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_PISTOL_LOW = 304;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_PISTOL_LOW_VALUE = 304;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SLAM = 305;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_SLAM_VALUE = 305;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_TRIPWIRE = 306;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_TRIPWIRE_VALUE = 306;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_THROW = 307;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_THROW_VALUE = 307;
    /**
     * <code>ACT_GESTURE_RANGE_ATTACK_SNIPER_RIFLE = 308;</code>
     */
    public static final int ACT_GESTURE_RANGE_ATTACK_SNIPER_RIFLE_VALUE = 308;
    /**
     * <code>ACT_GESTURE_MELEE_ATTACK_SWING = 309;</code>
     */
    public static final int ACT_GESTURE_MELEE_ATTACK_SWING_VALUE = 309;
    /**
     * <code>ACT_IDLE_RIFLE = 310;</code>
     */
    public static final int ACT_IDLE_RIFLE_VALUE = 310;
    /**
     * <code>ACT_IDLE_SMG1 = 311;</code>
     */
    public static final int ACT_IDLE_SMG1_VALUE = 311;
    /**
     * <code>ACT_IDLE_ANGRY_SMG1 = 312;</code>
     */
    public static final int ACT_IDLE_ANGRY_SMG1_VALUE = 312;
    /**
     * <code>ACT_IDLE_PISTOL = 313;</code>
     */
    public static final int ACT_IDLE_PISTOL_VALUE = 313;
    /**
     * <code>ACT_IDLE_ANGRY_PISTOL = 314;</code>
     */
    public static final int ACT_IDLE_ANGRY_PISTOL_VALUE = 314;
    /**
     * <code>ACT_IDLE_ANGRY_SHOTGUN = 315;</code>
     */
    public static final int ACT_IDLE_ANGRY_SHOTGUN_VALUE = 315;
    /**
     * <code>ACT_IDLE_STEALTH_PISTOL = 316;</code>
     */
    public static final int ACT_IDLE_STEALTH_PISTOL_VALUE = 316;
    /**
     * <code>ACT_IDLE_PACKAGE = 317;</code>
     */
    public static final int ACT_IDLE_PACKAGE_VALUE = 317;
    /**
     * <code>ACT_WALK_PACKAGE = 318;</code>
     */
    public static final int ACT_WALK_PACKAGE_VALUE = 318;
    /**
     * <code>ACT_IDLE_SUITCASE = 319;</code>
     */
    public static final int ACT_IDLE_SUITCASE_VALUE = 319;
    /**
     * <code>ACT_WALK_SUITCASE = 320;</code>
     */
    public static final int ACT_WALK_SUITCASE_VALUE = 320;
    /**
     * <code>ACT_IDLE_SMG1_RELAXED = 321;</code>
     */
    public static final int ACT_IDLE_SMG1_RELAXED_VALUE = 321;
    /**
     * <code>ACT_IDLE_SMG1_STIMULATED = 322;</code>
     */
    public static final int ACT_IDLE_SMG1_STIMULATED_VALUE = 322;
    /**
     * <code>ACT_WALK_RIFLE_RELAXED = 323;</code>
     */
    public static final int ACT_WALK_RIFLE_RELAXED_VALUE = 323;
    /**
     * <code>ACT_RUN_RIFLE_RELAXED = 324;</code>
     */
    public static final int ACT_RUN_RIFLE_RELAXED_VALUE = 324;
    /**
     * <code>ACT_WALK_RIFLE_STIMULATED = 325;</code>
     */
    public static final int ACT_WALK_RIFLE_STIMULATED_VALUE = 325;
    /**
     * <code>ACT_RUN_RIFLE_STIMULATED = 326;</code>
     */
    public static final int ACT_RUN_RIFLE_STIMULATED_VALUE = 326;
    /**
     * <code>ACT_IDLE_AIM_RIFLE_STIMULATED = 327;</code>
     */
    public static final int ACT_IDLE_AIM_RIFLE_STIMULATED_VALUE = 327;
    /**
     * <code>ACT_WALK_AIM_RIFLE_STIMULATED = 328;</code>
     */
    public static final int ACT_WALK_AIM_RIFLE_STIMULATED_VALUE = 328;
    /**
     * <code>ACT_RUN_AIM_RIFLE_STIMULATED = 329;</code>
     */
    public static final int ACT_RUN_AIM_RIFLE_STIMULATED_VALUE = 329;
    /**
     * <code>ACT_IDLE_SHOTGUN_RELAXED = 330;</code>
     */
    public static final int ACT_IDLE_SHOTGUN_RELAXED_VALUE = 330;
    /**
     * <code>ACT_IDLE_SHOTGUN_STIMULATED = 331;</code>
     */
    public static final int ACT_IDLE_SHOTGUN_STIMULATED_VALUE = 331;
    /**
     * <code>ACT_IDLE_SHOTGUN_AGITATED = 332;</code>
     */
    public static final int ACT_IDLE_SHOTGUN_AGITATED_VALUE = 332;
    /**
     * <code>ACT_WALK_ANGRY = 333;</code>
     */
    public static final int ACT_WALK_ANGRY_VALUE = 333;
    /**
     * <code>ACT_POLICE_HARASS1 = 334;</code>
     */
    public static final int ACT_POLICE_HARASS1_VALUE = 334;
    /**
     * <code>ACT_POLICE_HARASS2 = 335;</code>
     */
    public static final int ACT_POLICE_HARASS2_VALUE = 335;
    /**
     * <code>ACT_IDLE_MANNEDGUN = 336;</code>
     */
    public static final int ACT_IDLE_MANNEDGUN_VALUE = 336;
    /**
     * <code>ACT_IDLE_MELEE = 337;</code>
     */
    public static final int ACT_IDLE_MELEE_VALUE = 337;
    /**
     * <code>ACT_IDLE_ANGRY_MELEE = 338;</code>
     */
    public static final int ACT_IDLE_ANGRY_MELEE_VALUE = 338;
    /**
     * <code>ACT_IDLE_RPG_RELAXED = 339;</code>
     */
    public static final int ACT_IDLE_RPG_RELAXED_VALUE = 339;
    /**
     * <code>ACT_IDLE_RPG = 340;</code>
     */
    public static final int ACT_IDLE_RPG_VALUE = 340;
    /**
     * <code>ACT_IDLE_ANGRY_RPG = 341;</code>
     */
    public static final int ACT_IDLE_ANGRY_RPG_VALUE = 341;
    /**
     * <code>ACT_COVER_LOW_RPG = 342;</code>
     */
    public static final int ACT_COVER_LOW_RPG_VALUE = 342;
    /**
     * <code>ACT_WALK_RPG = 343;</code>
     */
    public static final int ACT_WALK_RPG_VALUE = 343;
    /**
     * <code>ACT_RUN_RPG = 344;</code>
     */
    public static final int ACT_RUN_RPG_VALUE = 344;
    /**
     * <code>ACT_WALK_CROUCH_RPG = 345;</code>
     */
    public static final int ACT_WALK_CROUCH_RPG_VALUE = 345;
    /**
     * <code>ACT_RUN_CROUCH_RPG = 346;</code>
     */
    public static final int ACT_RUN_CROUCH_RPG_VALUE = 346;
    /**
     * <code>ACT_WALK_RPG_RELAXED = 347;</code>
     */
    public static final int ACT_WALK_RPG_RELAXED_VALUE = 347;
    /**
     * <code>ACT_RUN_RPG_RELAXED = 348;</code>
     */
    public static final int ACT_RUN_RPG_RELAXED_VALUE = 348;
    /**
     * <code>ACT_WALK_RIFLE = 349;</code>
     */
    public static final int ACT_WALK_RIFLE_VALUE = 349;
    /**
     * <code>ACT_WALK_AIM_RIFLE = 350;</code>
     */
    public static final int ACT_WALK_AIM_RIFLE_VALUE = 350;
    /**
     * <code>ACT_WALK_CROUCH_RIFLE = 351;</code>
     */
    public static final int ACT_WALK_CROUCH_RIFLE_VALUE = 351;
    /**
     * <code>ACT_WALK_CROUCH_AIM_RIFLE = 352;</code>
     */
    public static final int ACT_WALK_CROUCH_AIM_RIFLE_VALUE = 352;
    /**
     * <code>ACT_RUN_RIFLE = 353;</code>
     */
    public static final int ACT_RUN_RIFLE_VALUE = 353;
    /**
     * <code>ACT_RUN_AIM_RIFLE = 354;</code>
     */
    public static final int ACT_RUN_AIM_RIFLE_VALUE = 354;
    /**
     * <code>ACT_RUN_CROUCH_RIFLE = 355;</code>
     */
    public static final int ACT_RUN_CROUCH_RIFLE_VALUE = 355;
    /**
     * <code>ACT_RUN_CROUCH_AIM_RIFLE = 356;</code>
     */
    public static final int ACT_RUN_CROUCH_AIM_RIFLE_VALUE = 356;
    /**
     * <code>ACT_RUN_STEALTH_PISTOL = 357;</code>
     */
    public static final int ACT_RUN_STEALTH_PISTOL_VALUE = 357;
    /**
     * <code>ACT_WALK_AIM_SHOTGUN = 358;</code>
     */
    public static final int ACT_WALK_AIM_SHOTGUN_VALUE = 358;
    /**
     * <code>ACT_RUN_AIM_SHOTGUN = 359;</code>
     */
    public static final int ACT_RUN_AIM_SHOTGUN_VALUE = 359;
    /**
     * <code>ACT_WALK_PISTOL = 360;</code>
     */
    public static final int ACT_WALK_PISTOL_VALUE = 360;
    /**
     * <code>ACT_RUN_PISTOL = 361;</code>
     */
    public static final int ACT_RUN_PISTOL_VALUE = 361;
    /**
     * <code>ACT_WALK_AIM_PISTOL = 362;</code>
     */
    public static final int ACT_WALK_AIM_PISTOL_VALUE = 362;
    /**
     * <code>ACT_RUN_AIM_PISTOL = 363;</code>
     */
    public static final int ACT_RUN_AIM_PISTOL_VALUE = 363;
    /**
     * <code>ACT_WALK_STEALTH_PISTOL = 364;</code>
     */
    public static final int ACT_WALK_STEALTH_PISTOL_VALUE = 364;
    /**
     * <code>ACT_WALK_AIM_STEALTH_PISTOL = 365;</code>
     */
    public static final int ACT_WALK_AIM_STEALTH_PISTOL_VALUE = 365;
    /**
     * <code>ACT_RUN_AIM_STEALTH_PISTOL = 366;</code>
     */
    public static final int ACT_RUN_AIM_STEALTH_PISTOL_VALUE = 366;
    /**
     * <code>ACT_RELOAD_PISTOL = 367;</code>
     */
    public static final int ACT_RELOAD_PISTOL_VALUE = 367;
    /**
     * <code>ACT_RELOAD_PISTOL_LOW = 368;</code>
     */
    public static final int ACT_RELOAD_PISTOL_LOW_VALUE = 368;
    /**
     * <code>ACT_RELOAD_SMG1 = 369;</code>
     */
    public static final int ACT_RELOAD_SMG1_VALUE = 369;
    /**
     * <code>ACT_RELOAD_SMG1_LOW = 370;</code>
     */
    public static final int ACT_RELOAD_SMG1_LOW_VALUE = 370;
    /**
     * <code>ACT_RELOAD_SHOTGUN = 371;</code>
     */
    public static final int ACT_RELOAD_SHOTGUN_VALUE = 371;
    /**
     * <code>ACT_RELOAD_SHOTGUN_LOW = 372;</code>
     */
    public static final int ACT_RELOAD_SHOTGUN_LOW_VALUE = 372;
    /**
     * <code>ACT_GESTURE_RELOAD = 373;</code>
     */
    public static final int ACT_GESTURE_RELOAD_VALUE = 373;
    /**
     * <code>ACT_GESTURE_RELOAD_PISTOL = 374;</code>
     */
    public static final int ACT_GESTURE_RELOAD_PISTOL_VALUE = 374;
    /**
     * <code>ACT_GESTURE_RELOAD_SMG1 = 375;</code>
     */
    public static final int ACT_GESTURE_RELOAD_SMG1_VALUE = 375;
    /**
     * <code>ACT_GESTURE_RELOAD_SHOTGUN = 376;</code>
     */
    public static final int ACT_GESTURE_RELOAD_SHOTGUN_VALUE = 376;
    /**
     * <code>ACT_BUSY_LEAN_LEFT = 377;</code>
     */
    public static final int ACT_BUSY_LEAN_LEFT_VALUE = 377;
    /**
     * <code>ACT_BUSY_LEAN_LEFT_ENTRY = 378;</code>
     */
    public static final int ACT_BUSY_LEAN_LEFT_ENTRY_VALUE = 378;
    /**
     * <code>ACT_BUSY_LEAN_LEFT_EXIT = 379;</code>
     */
    public static final int ACT_BUSY_LEAN_LEFT_EXIT_VALUE = 379;
    /**
     * <code>ACT_BUSY_LEAN_BACK = 380;</code>
     */
    public static final int ACT_BUSY_LEAN_BACK_VALUE = 380;
    /**
     * <code>ACT_BUSY_LEAN_BACK_ENTRY = 381;</code>
     */
    public static final int ACT_BUSY_LEAN_BACK_ENTRY_VALUE = 381;
    /**
     * <code>ACT_BUSY_LEAN_BACK_EXIT = 382;</code>
     */
    public static final int ACT_BUSY_LEAN_BACK_EXIT_VALUE = 382;
    /**
     * <code>ACT_BUSY_SIT_GROUND = 383;</code>
     */
    public static final int ACT_BUSY_SIT_GROUND_VALUE = 383;
    /**
     * <code>ACT_BUSY_SIT_GROUND_ENTRY = 384;</code>
     */
    public static final int ACT_BUSY_SIT_GROUND_ENTRY_VALUE = 384;
    /**
     * <code>ACT_BUSY_SIT_GROUND_EXIT = 385;</code>
     */
    public static final int ACT_BUSY_SIT_GROUND_EXIT_VALUE = 385;
    /**
     * <code>ACT_BUSY_SIT_CHAIR = 386;</code>
     */
    public static final int ACT_BUSY_SIT_CHAIR_VALUE = 386;
    /**
     * <code>ACT_BUSY_SIT_CHAIR_ENTRY = 387;</code>
     */
    public static final int ACT_BUSY_SIT_CHAIR_ENTRY_VALUE = 387;
    /**
     * <code>ACT_BUSY_SIT_CHAIR_EXIT = 388;</code>
     */
    public static final int ACT_BUSY_SIT_CHAIR_EXIT_VALUE = 388;
    /**
     * <code>ACT_BUSY_STAND = 389;</code>
     */
    public static final int ACT_BUSY_STAND_VALUE = 389;
    /**
     * <code>ACT_BUSY_QUEUE = 390;</code>
     */
    public static final int ACT_BUSY_QUEUE_VALUE = 390;
    /**
     * <code>ACT_DUCK_DODGE = 391;</code>
     */
    public static final int ACT_DUCK_DODGE_VALUE = 391;
    /**
     * <code>ACT_DIE_BARNACLE_SWALLOW = 392;</code>
     */
    public static final int ACT_DIE_BARNACLE_SWALLOW_VALUE = 392;
    /**
     * <code>ACT_GESTURE_BARNACLE_STRANGLE = 393;</code>
     */
    public static final int ACT_GESTURE_BARNACLE_STRANGLE_VALUE = 393;
    /**
     * <code>ACT_PHYSCANNON_DETACH = 394;</code>
     */
    public static final int ACT_PHYSCANNON_DETACH_VALUE = 394;
    /**
     * <code>ACT_PHYSCANNON_ANIMATE = 395;</code>
     */
    public static final int ACT_PHYSCANNON_ANIMATE_VALUE = 395;
    /**
     * <code>ACT_PHYSCANNON_ANIMATE_PRE = 396;</code>
     */
    public static final int ACT_PHYSCANNON_ANIMATE_PRE_VALUE = 396;
    /**
     * <code>ACT_PHYSCANNON_ANIMATE_POST = 397;</code>
     */
    public static final int ACT_PHYSCANNON_ANIMATE_POST_VALUE = 397;
    /**
     * <code>ACT_DIE_FRONTSIDE = 398;</code>
     */
    public static final int ACT_DIE_FRONTSIDE_VALUE = 398;
    /**
     * <code>ACT_DIE_RIGHTSIDE = 399;</code>
     */
    public static final int ACT_DIE_RIGHTSIDE_VALUE = 399;
    /**
     * <code>ACT_DIE_BACKSIDE = 400;</code>
     */
    public static final int ACT_DIE_BACKSIDE_VALUE = 400;
    /**
     * <code>ACT_DIE_LEFTSIDE = 401;</code>
     */
    public static final int ACT_DIE_LEFTSIDE_VALUE = 401;
    /**
     * <code>ACT_OPEN_DOOR = 402;</code>
     */
    public static final int ACT_OPEN_DOOR_VALUE = 402;
    /**
     * <code>ACT_DI_ALYX_ZOMBIE_MELEE = 403;</code>
     */
    public static final int ACT_DI_ALYX_ZOMBIE_MELEE_VALUE = 403;
    /**
     * <code>ACT_DI_ALYX_ZOMBIE_TORSO_MELEE = 404;</code>
     */
    public static final int ACT_DI_ALYX_ZOMBIE_TORSO_MELEE_VALUE = 404;
    /**
     * <code>ACT_DI_ALYX_HEADCRAB_MELEE = 405;</code>
     */
    public static final int ACT_DI_ALYX_HEADCRAB_MELEE_VALUE = 405;
    /**
     * <code>ACT_DI_ALYX_ANTLION = 406;</code>
     */
    public static final int ACT_DI_ALYX_ANTLION_VALUE = 406;
    /**
     * <code>ACT_DI_ALYX_ZOMBIE_SHOTGUN64 = 407;</code>
     */
    public static final int ACT_DI_ALYX_ZOMBIE_SHOTGUN64_VALUE = 407;
    /**
     * <code>ACT_DI_ALYX_ZOMBIE_SHOTGUN26 = 408;</code>
     */
    public static final int ACT_DI_ALYX_ZOMBIE_SHOTGUN26_VALUE = 408;
    /**
     * <code>ACT_READINESS_RELAXED_TO_STIMULATED = 409;</code>
     */
    public static final int ACT_READINESS_RELAXED_TO_STIMULATED_VALUE = 409;
    /**
     * <code>ACT_READINESS_RELAXED_TO_STIMULATED_WALK = 410;</code>
     */
    public static final int ACT_READINESS_RELAXED_TO_STIMULATED_WALK_VALUE = 410;
    /**
     * <code>ACT_READINESS_AGITATED_TO_STIMULATED = 411;</code>
     */
    public static final int ACT_READINESS_AGITATED_TO_STIMULATED_VALUE = 411;
    /**
     * <code>ACT_READINESS_STIMULATED_TO_RELAXED = 412;</code>
     */
    public static final int ACT_READINESS_STIMULATED_TO_RELAXED_VALUE = 412;
    /**
     * <code>ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED = 413;</code>
     */
    public static final int ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED_VALUE = 413;
    /**
     * <code>ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED_WALK = 414;</code>
     */
    public static final int ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED_WALK_VALUE = 414;
    /**
     * <code>ACT_READINESS_PISTOL_AGITATED_TO_STIMULATED = 415;</code>
     */
    public static final int ACT_READINESS_PISTOL_AGITATED_TO_STIMULATED_VALUE = 415;
    /**
     * <code>ACT_READINESS_PISTOL_STIMULATED_TO_RELAXED = 416;</code>
     */
    public static final int ACT_READINESS_PISTOL_STIMULATED_TO_RELAXED_VALUE = 416;
    /**
     * <code>ACT_IDLE_CARRY = 417;</code>
     */
    public static final int ACT_IDLE_CARRY_VALUE = 417;
    /**
     * <code>ACT_WALK_CARRY = 418;</code>
     */
    public static final int ACT_WALK_CARRY_VALUE = 418;
    /**
     * <code>ACT_DOTA_IDLE = 419;</code>
     */
    public static final int ACT_DOTA_IDLE_VALUE = 419;
    /**
     * <code>ACT_DOTA_IDLE_RARE = 421;</code>
     */
    public static final int ACT_DOTA_IDLE_RARE_VALUE = 421;
    /**
     * <code>ACT_DOTA_RUN = 422;</code>
     */
    public static final int ACT_DOTA_RUN_VALUE = 422;
    /**
     * <code>ACT_DOTA_ATTACK = 424;</code>
     */
    public static final int ACT_DOTA_ATTACK_VALUE = 424;
    /**
     * <code>ACT_DOTA_ATTACK2 = 425;</code>
     */
    public static final int ACT_DOTA_ATTACK2_VALUE = 425;
    /**
     * <code>ACT_DOTA_ATTACK_EVENT = 426;</code>
     */
    public static final int ACT_DOTA_ATTACK_EVENT_VALUE = 426;
    /**
     * <code>ACT_DOTA_DIE = 427;</code>
     */
    public static final int ACT_DOTA_DIE_VALUE = 427;
    /**
     * <code>ACT_DOTA_FLINCH = 428;</code>
     */
    public static final int ACT_DOTA_FLINCH_VALUE = 428;
    /**
     * <code>ACT_DOTA_FLAIL = 429;</code>
     */
    public static final int ACT_DOTA_FLAIL_VALUE = 429;
    /**
     * <code>ACT_DOTA_DISABLED = 430;</code>
     */
    public static final int ACT_DOTA_DISABLED_VALUE = 430;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_1 = 431;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_1_VALUE = 431;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_2 = 432;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_2_VALUE = 432;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_3 = 433;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_3_VALUE = 433;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_4 = 434;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_4_VALUE = 434;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_5 = 435;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_5_VALUE = 435;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_6 = 436;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_6_VALUE = 436;
    /**
     * <code>ACT_DOTA_OVERRIDE_ABILITY_1 = 437;</code>
     */
    public static final int ACT_DOTA_OVERRIDE_ABILITY_1_VALUE = 437;
    /**
     * <code>ACT_DOTA_OVERRIDE_ABILITY_2 = 438;</code>
     */
    public static final int ACT_DOTA_OVERRIDE_ABILITY_2_VALUE = 438;
    /**
     * <code>ACT_DOTA_OVERRIDE_ABILITY_3 = 439;</code>
     */
    public static final int ACT_DOTA_OVERRIDE_ABILITY_3_VALUE = 439;
    /**
     * <code>ACT_DOTA_OVERRIDE_ABILITY_4 = 440;</code>
     */
    public static final int ACT_DOTA_OVERRIDE_ABILITY_4_VALUE = 440;
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_1 = 441;</code>
     */
    public static final int ACT_DOTA_CHANNEL_ABILITY_1_VALUE = 441;
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_2 = 442;</code>
     */
    public static final int ACT_DOTA_CHANNEL_ABILITY_2_VALUE = 442;
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_3 = 443;</code>
     */
    public static final int ACT_DOTA_CHANNEL_ABILITY_3_VALUE = 443;
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_4 = 444;</code>
     */
    public static final int ACT_DOTA_CHANNEL_ABILITY_4_VALUE = 444;
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_5 = 445;</code>
     */
    public static final int ACT_DOTA_CHANNEL_ABILITY_5_VALUE = 445;
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_6 = 446;</code>
     */
    public static final int ACT_DOTA_CHANNEL_ABILITY_6_VALUE = 446;
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_1 = 447;</code>
     */
    public static final int ACT_DOTA_CHANNEL_END_ABILITY_1_VALUE = 447;
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_2 = 448;</code>
     */
    public static final int ACT_DOTA_CHANNEL_END_ABILITY_2_VALUE = 448;
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_3 = 449;</code>
     */
    public static final int ACT_DOTA_CHANNEL_END_ABILITY_3_VALUE = 449;
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_4 = 450;</code>
     */
    public static final int ACT_DOTA_CHANNEL_END_ABILITY_4_VALUE = 450;
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_5 = 451;</code>
     */
    public static final int ACT_DOTA_CHANNEL_END_ABILITY_5_VALUE = 451;
    /**
     * <code>ACT_DOTA_CHANNEL_END_ABILITY_6 = 452;</code>
     */
    public static final int ACT_DOTA_CHANNEL_END_ABILITY_6_VALUE = 452;
    /**
     * <code>ACT_DOTA_CONSTANT_LAYER = 453;</code>
     */
    public static final int ACT_DOTA_CONSTANT_LAYER_VALUE = 453;
    /**
     * <code>ACT_DOTA_CAPTURE = 454;</code>
     */
    public static final int ACT_DOTA_CAPTURE_VALUE = 454;
    /**
     * <code>ACT_DOTA_SPAWN = 455;</code>
     */
    public static final int ACT_DOTA_SPAWN_VALUE = 455;
    /**
     * <code>ACT_DOTA_KILLTAUNT = 456;</code>
     */
    public static final int ACT_DOTA_KILLTAUNT_VALUE = 456;
    /**
     * <code>ACT_DOTA_TAUNT = 457;</code>
     */
    public static final int ACT_DOTA_TAUNT_VALUE = 457;
    /**
     * <code>ACT_DOTA_THIRST = 458;</code>
     */
    public static final int ACT_DOTA_THIRST_VALUE = 458;
    /**
     * <code>ACT_DOTA_CAST_DRAGONBREATH = 459;</code>
     */
    public static final int ACT_DOTA_CAST_DRAGONBREATH_VALUE = 459;
    /**
     * <code>ACT_DOTA_ECHO_SLAM = 460;</code>
     */
    public static final int ACT_DOTA_ECHO_SLAM_VALUE = 460;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_1_END = 461;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_1_END_VALUE = 461;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_2_END = 462;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_2_END_VALUE = 462;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_3_END = 463;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_3_END_VALUE = 463;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_4_END = 464;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_4_END_VALUE = 464;
    /**
     * <code>ACT_MIRANA_LEAP_END = 465;</code>
     */
    public static final int ACT_MIRANA_LEAP_END_VALUE = 465;
    /**
     * <code>ACT_WAVEFORM_START = 466;</code>
     */
    public static final int ACT_WAVEFORM_START_VALUE = 466;
    /**
     * <code>ACT_WAVEFORM_END = 467;</code>
     */
    public static final int ACT_WAVEFORM_END_VALUE = 467;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_ROT = 468;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_ROT_VALUE = 468;
    /**
     * <code>ACT_DOTA_DIE_SPECIAL = 469;</code>
     */
    public static final int ACT_DOTA_DIE_SPECIAL_VALUE = 469;
    /**
     * <code>ACT_DOTA_RATTLETRAP_BATTERYASSAULT = 470;</code>
     */
    public static final int ACT_DOTA_RATTLETRAP_BATTERYASSAULT_VALUE = 470;
    /**
     * <code>ACT_DOTA_RATTLETRAP_POWERCOGS = 471;</code>
     */
    public static final int ACT_DOTA_RATTLETRAP_POWERCOGS_VALUE = 471;
    /**
     * <code>ACT_DOTA_RATTLETRAP_HOOKSHOT_START = 472;</code>
     */
    public static final int ACT_DOTA_RATTLETRAP_HOOKSHOT_START_VALUE = 472;
    /**
     * <code>ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP = 473;</code>
     */
    public static final int ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP_VALUE = 473;
    /**
     * <code>ACT_DOTA_RATTLETRAP_HOOKSHOT_END = 474;</code>
     */
    public static final int ACT_DOTA_RATTLETRAP_HOOKSHOT_END_VALUE = 474;
    /**
     * <code>ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE = 475;</code>
     */
    public static final int ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE_VALUE = 475;
    /**
     * <code>ACT_DOTA_TINKER_REARM1 = 476;</code>
     */
    public static final int ACT_DOTA_TINKER_REARM1_VALUE = 476;
    /**
     * <code>ACT_DOTA_TINKER_REARM2 = 477;</code>
     */
    public static final int ACT_DOTA_TINKER_REARM2_VALUE = 477;
    /**
     * <code>ACT_DOTA_TINKER_REARM3 = 478;</code>
     */
    public static final int ACT_DOTA_TINKER_REARM3_VALUE = 478;
    /**
     * <code>ACT_TINY_AVALANCHE = 479;</code>
     */
    public static final int ACT_TINY_AVALANCHE_VALUE = 479;
    /**
     * <code>ACT_TINY_TOSS = 480;</code>
     */
    public static final int ACT_TINY_TOSS_VALUE = 480;
    /**
     * <code>ACT_TINY_GROWL = 481;</code>
     */
    public static final int ACT_TINY_GROWL_VALUE = 481;
    /**
     * <code>ACT_DOTA_WEAVERBUG_ATTACH = 482;</code>
     */
    public static final int ACT_DOTA_WEAVERBUG_ATTACH_VALUE = 482;
    /**
     * <code>ACT_DOTA_CAST_WILD_AXES_END = 483;</code>
     */
    public static final int ACT_DOTA_CAST_WILD_AXES_END_VALUE = 483;
    /**
     * <code>ACT_DOTA_CAST_LIFE_BREAK_START = 484;</code>
     */
    public static final int ACT_DOTA_CAST_LIFE_BREAK_START_VALUE = 484;
    /**
     * <code>ACT_DOTA_CAST_LIFE_BREAK_END = 485;</code>
     */
    public static final int ACT_DOTA_CAST_LIFE_BREAK_END_VALUE = 485;
    /**
     * <code>ACT_DOTA_NIGHTSTALKER_TRANSITION = 486;</code>
     */
    public static final int ACT_DOTA_NIGHTSTALKER_TRANSITION_VALUE = 486;
    /**
     * <code>ACT_DOTA_LIFESTEALER_RAGE = 487;</code>
     */
    public static final int ACT_DOTA_LIFESTEALER_RAGE_VALUE = 487;
    /**
     * <code>ACT_DOTA_LIFESTEALER_OPEN_WOUNDS = 488;</code>
     */
    public static final int ACT_DOTA_LIFESTEALER_OPEN_WOUNDS_VALUE = 488;
    /**
     * <code>ACT_DOTA_SAND_KING_BURROW_IN = 489;</code>
     */
    public static final int ACT_DOTA_SAND_KING_BURROW_IN_VALUE = 489;
    /**
     * <code>ACT_DOTA_SAND_KING_BURROW_OUT = 490;</code>
     */
    public static final int ACT_DOTA_SAND_KING_BURROW_OUT_VALUE = 490;
    /**
     * <code>ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK = 491;</code>
     */
    public static final int ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK_VALUE = 491;
    /**
     * <code>ACT_DOTA_WHEEL_LAYER = 492;</code>
     */
    public static final int ACT_DOTA_WHEEL_LAYER_VALUE = 492;
    /**
     * <code>ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START = 493;</code>
     */
    public static final int ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START_VALUE = 493;
    /**
     * <code>ACT_DOTA_ALCHEMIST_CONCOCTION = 494;</code>
     */
    public static final int ACT_DOTA_ALCHEMIST_CONCOCTION_VALUE = 494;
    /**
     * <code>ACT_DOTA_JAKIRO_LIQUIDFIRE_START = 495;</code>
     */
    public static final int ACT_DOTA_JAKIRO_LIQUIDFIRE_START_VALUE = 495;
    /**
     * <code>ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP = 496;</code>
     */
    public static final int ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP_VALUE = 496;
    /**
     * <code>ACT_DOTA_LIFESTEALER_INFEST = 497;</code>
     */
    public static final int ACT_DOTA_LIFESTEALER_INFEST_VALUE = 497;
    /**
     * <code>ACT_DOTA_LIFESTEALER_INFEST_END = 498;</code>
     */
    public static final int ACT_DOTA_LIFESTEALER_INFEST_END_VALUE = 498;
    /**
     * <code>ACT_DOTA_LASSO_LOOP = 499;</code>
     */
    public static final int ACT_DOTA_LASSO_LOOP_VALUE = 499;
    /**
     * <code>ACT_DOTA_ALCHEMIST_CONCOCTION_THROW = 500;</code>
     */
    public static final int ACT_DOTA_ALCHEMIST_CONCOCTION_THROW_VALUE = 500;
    /**
     * <code>ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END = 501;</code>
     */
    public static final int ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END_VALUE = 501;
    /**
     * <code>ACT_DOTA_CAST_COLD_SNAP = 502;</code>
     */
    public static final int ACT_DOTA_CAST_COLD_SNAP_VALUE = 502;
    /**
     * <code>ACT_DOTA_CAST_GHOST_WALK = 503;</code>
     */
    public static final int ACT_DOTA_CAST_GHOST_WALK_VALUE = 503;
    /**
     * <code>ACT_DOTA_CAST_TORNADO = 504;</code>
     */
    public static final int ACT_DOTA_CAST_TORNADO_VALUE = 504;
    /**
     * <code>ACT_DOTA_CAST_EMP = 505;</code>
     */
    public static final int ACT_DOTA_CAST_EMP_VALUE = 505;
    /**
     * <code>ACT_DOTA_CAST_ALACRITY = 506;</code>
     */
    public static final int ACT_DOTA_CAST_ALACRITY_VALUE = 506;
    /**
     * <code>ACT_DOTA_CAST_CHAOS_METEOR = 507;</code>
     */
    public static final int ACT_DOTA_CAST_CHAOS_METEOR_VALUE = 507;
    /**
     * <code>ACT_DOTA_CAST_SUN_STRIKE = 508;</code>
     */
    public static final int ACT_DOTA_CAST_SUN_STRIKE_VALUE = 508;
    /**
     * <code>ACT_DOTA_CAST_FORGE_SPIRIT = 509;</code>
     */
    public static final int ACT_DOTA_CAST_FORGE_SPIRIT_VALUE = 509;
    /**
     * <code>ACT_DOTA_CAST_ICE_WALL = 510;</code>
     */
    public static final int ACT_DOTA_CAST_ICE_WALL_VALUE = 510;
    /**
     * <code>ACT_DOTA_CAST_DEAFENING_BLAST = 511;</code>
     */
    public static final int ACT_DOTA_CAST_DEAFENING_BLAST_VALUE = 511;
    /**
     * <code>ACT_DOTA_VICTORY = 512;</code>
     */
    public static final int ACT_DOTA_VICTORY_VALUE = 512;
    /**
     * <code>ACT_DOTA_DEFEAT = 513;</code>
     */
    public static final int ACT_DOTA_DEFEAT_VALUE = 513;
    /**
     * <code>ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE = 514;</code>
     */
    public static final int ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE_VALUE = 514;
    /**
     * <code>ACT_DOTA_SPIRIT_BREAKER_CHARGE_END = 515;</code>
     */
    public static final int ACT_DOTA_SPIRIT_BREAKER_CHARGE_END_VALUE = 515;
    /**
     * <code>ACT_DOTA_TELEPORT = 516;</code>
     */
    public static final int ACT_DOTA_TELEPORT_VALUE = 516;
    /**
     * <code>ACT_DOTA_TELEPORT_END = 517;</code>
     */
    public static final int ACT_DOTA_TELEPORT_END_VALUE = 517;
    /**
     * <code>ACT_DOTA_CAST_REFRACTION = 518;</code>
     */
    public static final int ACT_DOTA_CAST_REFRACTION_VALUE = 518;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_7 = 519;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_7_VALUE = 519;
    /**
     * <code>ACT_DOTA_CANCEL_SIREN_SONG = 520;</code>
     */
    public static final int ACT_DOTA_CANCEL_SIREN_SONG_VALUE = 520;
    /**
     * <code>ACT_DOTA_CHANNEL_ABILITY_7 = 521;</code>
     */
    public static final int ACT_DOTA_CHANNEL_ABILITY_7_VALUE = 521;
    /**
     * <code>ACT_DOTA_LOADOUT = 522;</code>
     */
    public static final int ACT_DOTA_LOADOUT_VALUE = 522;
    /**
     * <code>ACT_DOTA_FORCESTAFF_END = 523;</code>
     */
    public static final int ACT_DOTA_FORCESTAFF_END_VALUE = 523;
    /**
     * <code>ACT_DOTA_POOF_END = 524;</code>
     */
    public static final int ACT_DOTA_POOF_END_VALUE = 524;
    /**
     * <code>ACT_DOTA_SLARK_POUNCE = 525;</code>
     */
    public static final int ACT_DOTA_SLARK_POUNCE_VALUE = 525;
    /**
     * <code>ACT_DOTA_MAGNUS_SKEWER_START = 526;</code>
     */
    public static final int ACT_DOTA_MAGNUS_SKEWER_START_VALUE = 526;
    /**
     * <code>ACT_DOTA_MAGNUS_SKEWER_END = 527;</code>
     */
    public static final int ACT_DOTA_MAGNUS_SKEWER_END_VALUE = 527;
    /**
     * <code>ACT_DOTA_MEDUSA_STONE_GAZE = 528;</code>
     */
    public static final int ACT_DOTA_MEDUSA_STONE_GAZE_VALUE = 528;
    /**
     * <code>ACT_DOTA_RELAX_START = 529;</code>
     */
    public static final int ACT_DOTA_RELAX_START_VALUE = 529;
    /**
     * <code>ACT_DOTA_RELAX_LOOP = 530;</code>
     */
    public static final int ACT_DOTA_RELAX_LOOP_VALUE = 530;
    /**
     * <code>ACT_DOTA_RELAX_END = 531;</code>
     */
    public static final int ACT_DOTA_RELAX_END_VALUE = 531;
    /**
     * <code>ACT_DOTA_CENTAUR_STAMPEDE = 532;</code>
     */
    public static final int ACT_DOTA_CENTAUR_STAMPEDE_VALUE = 532;
    /**
     * <code>ACT_DOTA_BELLYACHE_START = 533;</code>
     */
    public static final int ACT_DOTA_BELLYACHE_START_VALUE = 533;
    /**
     * <code>ACT_DOTA_BELLYACHE_LOOP = 534;</code>
     */
    public static final int ACT_DOTA_BELLYACHE_LOOP_VALUE = 534;
    /**
     * <code>ACT_DOTA_BELLYACHE_END = 535;</code>
     */
    public static final int ACT_DOTA_BELLYACHE_END_VALUE = 535;
    /**
     * <code>ACT_DOTA_ROQUELAIRE_LAND = 536;</code>
     */
    public static final int ACT_DOTA_ROQUELAIRE_LAND_VALUE = 536;
    /**
     * <code>ACT_DOTA_ROQUELAIRE_LAND_IDLE = 537;</code>
     */
    public static final int ACT_DOTA_ROQUELAIRE_LAND_IDLE_VALUE = 537;
    /**
     * <code>ACT_DOTA_GREEVIL_CAST = 538;</code>
     */
    public static final int ACT_DOTA_GREEVIL_CAST_VALUE = 538;
    /**
     * <code>ACT_DOTA_GREEVIL_OVERRIDE_ABILITY = 539;</code>
     */
    public static final int ACT_DOTA_GREEVIL_OVERRIDE_ABILITY_VALUE = 539;
    /**
     * <code>ACT_DOTA_GREEVIL_HOOK_START = 540;</code>
     */
    public static final int ACT_DOTA_GREEVIL_HOOK_START_VALUE = 540;
    /**
     * <code>ACT_DOTA_GREEVIL_HOOK_END = 541;</code>
     */
    public static final int ACT_DOTA_GREEVIL_HOOK_END_VALUE = 541;
    /**
     * <code>ACT_DOTA_GREEVIL_BLINK_BONE = 542;</code>
     */
    public static final int ACT_DOTA_GREEVIL_BLINK_BONE_VALUE = 542;
    /**
     * <code>ACT_DOTA_IDLE_SLEEPING = 543;</code>
     */
    public static final int ACT_DOTA_IDLE_SLEEPING_VALUE = 543;
    /**
     * <code>ACT_DOTA_INTRO = 544;</code>
     */
    public static final int ACT_DOTA_INTRO_VALUE = 544;
    /**
     * <code>ACT_DOTA_GESTURE_POINT = 545;</code>
     */
    public static final int ACT_DOTA_GESTURE_POINT_VALUE = 545;
    /**
     * <code>ACT_DOTA_GESTURE_ACCENT = 546;</code>
     */
    public static final int ACT_DOTA_GESTURE_ACCENT_VALUE = 546;
    /**
     * <code>ACT_DOTA_SLEEPING_END = 547;</code>
     */
    public static final int ACT_DOTA_SLEEPING_END_VALUE = 547;
    /**
     * <code>ACT_DOTA_AMBUSH = 548;</code>
     */
    public static final int ACT_DOTA_AMBUSH_VALUE = 548;
    /**
     * <code>ACT_DOTA_ITEM_LOOK = 549;</code>
     */
    public static final int ACT_DOTA_ITEM_LOOK_VALUE = 549;
    /**
     * <code>ACT_DOTA_STARTLE = 550;</code>
     */
    public static final int ACT_DOTA_STARTLE_VALUE = 550;
    /**
     * <code>ACT_DOTA_FRUSTRATION = 551;</code>
     */
    public static final int ACT_DOTA_FRUSTRATION_VALUE = 551;
    /**
     * <code>ACT_DOTA_TELEPORT_REACT = 552;</code>
     */
    public static final int ACT_DOTA_TELEPORT_REACT_VALUE = 552;
    /**
     * <code>ACT_DOTA_TELEPORT_END_REACT = 553;</code>
     */
    public static final int ACT_DOTA_TELEPORT_END_REACT_VALUE = 553;
    /**
     * <code>ACT_DOTA_SHRUG = 554;</code>
     */
    public static final int ACT_DOTA_SHRUG_VALUE = 554;
    /**
     * <code>ACT_DOTA_RELAX_LOOP_END = 555;</code>
     */
    public static final int ACT_DOTA_RELAX_LOOP_END_VALUE = 555;
    /**
     * <code>ACT_DOTA_PRESENT_ITEM = 556;</code>
     */
    public static final int ACT_DOTA_PRESENT_ITEM_VALUE = 556;
    /**
     * <code>ACT_DOTA_IDLE_IMPATIENT = 557;</code>
     */
    public static final int ACT_DOTA_IDLE_IMPATIENT_VALUE = 557;
    /**
     * <code>ACT_DOTA_SHARPEN_WEAPON = 558;</code>
     */
    public static final int ACT_DOTA_SHARPEN_WEAPON_VALUE = 558;
    /**
     * <code>ACT_DOTA_SHARPEN_WEAPON_OUT = 559;</code>
     */
    public static final int ACT_DOTA_SHARPEN_WEAPON_OUT_VALUE = 559;
    /**
     * <code>ACT_DOTA_IDLE_SLEEPING_END = 560;</code>
     */
    public static final int ACT_DOTA_IDLE_SLEEPING_END_VALUE = 560;
    /**
     * <code>ACT_DOTA_BRIDGE_DESTROY = 561;</code>
     */
    public static final int ACT_DOTA_BRIDGE_DESTROY_VALUE = 561;
    /**
     * <code>ACT_DOTA_TAUNT_SNIPER = 562;</code>
     */
    public static final int ACT_DOTA_TAUNT_SNIPER_VALUE = 562;
    /**
     * <code>ACT_DOTA_DEATH_BY_SNIPER = 563;</code>
     */
    public static final int ACT_DOTA_DEATH_BY_SNIPER_VALUE = 563;
    /**
     * <code>ACT_DOTA_LOOK_AROUND = 564;</code>
     */
    public static final int ACT_DOTA_LOOK_AROUND_VALUE = 564;
    /**
     * <code>ACT_DOTA_CAGED_CREEP_RAGE = 565;</code>
     */
    public static final int ACT_DOTA_CAGED_CREEP_RAGE_VALUE = 565;
    /**
     * <code>ACT_DOTA_CAGED_CREEP_RAGE_OUT = 566;</code>
     */
    public static final int ACT_DOTA_CAGED_CREEP_RAGE_OUT_VALUE = 566;
    /**
     * <code>ACT_DOTA_CAGED_CREEP_SMASH = 567;</code>
     */
    public static final int ACT_DOTA_CAGED_CREEP_SMASH_VALUE = 567;
    /**
     * <code>ACT_DOTA_CAGED_CREEP_SMASH_OUT = 568;</code>
     */
    public static final int ACT_DOTA_CAGED_CREEP_SMASH_OUT_VALUE = 568;
    /**
     * <code>ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP = 569;</code>
     */
    public static final int ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP_VALUE = 569;
    /**
     * <code>ACT_DOTA_INTRO_LOOP = 570;</code>
     */
    public static final int ACT_DOTA_INTRO_LOOP_VALUE = 570;
    /**
     * <code>ACT_DOTA_BRIDGE_THREAT = 571;</code>
     */
    public static final int ACT_DOTA_BRIDGE_THREAT_VALUE = 571;
    /**
     * <code>ACT_DOTA_DAGON = 572;</code>
     */
    public static final int ACT_DOTA_DAGON_VALUE = 572;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START = 573;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START_VALUE = 573;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_2_ES_ROLL = 574;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_2_ES_ROLL_VALUE = 574;
    /**
     * <code>ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END = 575;</code>
     */
    public static final int ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END_VALUE = 575;
    /**
     * <code>ACT_DOTA_NIAN_PIN_START = 576;</code>
     */
    public static final int ACT_DOTA_NIAN_PIN_START_VALUE = 576;
    /**
     * <code>ACT_DOTA_NIAN_PIN_LOOP = 577;</code>
     */
    public static final int ACT_DOTA_NIAN_PIN_LOOP_VALUE = 577;
    /**
     * <code>ACT_DOTA_NIAN_PIN_END = 578;</code>
     */
    public static final int ACT_DOTA_NIAN_PIN_END_VALUE = 578;
    /**
     * <code>ACT_DOTA_LEAP_STUN = 579;</code>
     */
    public static final int ACT_DOTA_LEAP_STUN_VALUE = 579;
    /**
     * <code>ACT_DOTA_LEAP_SWIPE = 580;</code>
     */
    public static final int ACT_DOTA_LEAP_SWIPE_VALUE = 580;
    /**
     * <code>ACT_DOTA_NIAN_INTRO_LEAP = 581;</code>
     */
    public static final int ACT_DOTA_NIAN_INTRO_LEAP_VALUE = 581;
    /**
     * <code>ACT_DOTA_AREA_DENY = 582;</code>
     */
    public static final int ACT_DOTA_AREA_DENY_VALUE = 582;
    /**
     * <code>ACT_DOTA_NIAN_PIN_TO_STUN = 583;</code>
     */
    public static final int ACT_DOTA_NIAN_PIN_TO_STUN_VALUE = 583;
    /**
     * <code>ACT_DOTA_RAZE_1 = 584;</code>
     */
    public static final int ACT_DOTA_RAZE_1_VALUE = 584;
    /**
     * <code>ACT_DOTA_RAZE_2 = 585;</code>
     */
    public static final int ACT_DOTA_RAZE_2_VALUE = 585;
    /**
     * <code>ACT_DOTA_RAZE_3 = 586;</code>
     */
    public static final int ACT_DOTA_RAZE_3_VALUE = 586;
    /**
     * <code>ACT_DOTA_UNDYING_DECAY = 587;</code>
     */
    public static final int ACT_DOTA_UNDYING_DECAY_VALUE = 587;
    /**
     * <code>ACT_DOTA_UNDYING_SOUL_RIP = 588;</code>
     */
    public static final int ACT_DOTA_UNDYING_SOUL_RIP_VALUE = 588;
    /**
     * <code>ACT_DOTA_UNDYING_TOMBSTONE = 589;</code>
     */
    public static final int ACT_DOTA_UNDYING_TOMBSTONE_VALUE = 589;
    /**
     * <code>ACT_DOTA_WHIRLING_AXES_RANGED = 590;</code>
     */
    public static final int ACT_DOTA_WHIRLING_AXES_RANGED_VALUE = 590;
    /**
     * <code>ACT_DOTA_SHALLOW_GRAVE = 591;</code>
     */
    public static final int ACT_DOTA_SHALLOW_GRAVE_VALUE = 591;
    /**
     * <code>ACT_DOTA_COLD_FEET = 592;</code>
     */
    public static final int ACT_DOTA_COLD_FEET_VALUE = 592;
    /**
     * <code>ACT_DOTA_ICE_VORTEX = 593;</code>
     */
    public static final int ACT_DOTA_ICE_VORTEX_VALUE = 593;
    /**
     * <code>ACT_DOTA_CHILLING_TOUCH = 594;</code>
     */
    public static final int ACT_DOTA_CHILLING_TOUCH_VALUE = 594;
    /**
     * <code>ACT_DOTA_ENFEEBLE = 595;</code>
     */
    public static final int ACT_DOTA_ENFEEBLE_VALUE = 595;
    /**
     * <code>ACT_DOTA_FATAL_BONDS = 596;</code>
     */
    public static final int ACT_DOTA_FATAL_BONDS_VALUE = 596;
    /**
     * <code>ACT_DOTA_MIDNIGHT_PULSE = 597;</code>
     */
    public static final int ACT_DOTA_MIDNIGHT_PULSE_VALUE = 597;
    /**
     * <code>ACT_DOTA_ANCESTRAL_SPIRIT = 598;</code>
     */
    public static final int ACT_DOTA_ANCESTRAL_SPIRIT_VALUE = 598;
    /**
     * <code>ACT_DOTA_THUNDER_STRIKE = 599;</code>
     */
    public static final int ACT_DOTA_THUNDER_STRIKE_VALUE = 599;
    /**
     * <code>ACT_DOTA_KINETIC_FIELD = 600;</code>
     */
    public static final int ACT_DOTA_KINETIC_FIELD_VALUE = 600;
    /**
     * <code>ACT_DOTA_STATIC_STORM = 601;</code>
     */
    public static final int ACT_DOTA_STATIC_STORM_VALUE = 601;
    /**
     * <code>ACT_DOTA_MINI_TAUNT = 602;</code>
     */
    public static final int ACT_DOTA_MINI_TAUNT_VALUE = 602;


    public final int getNumber() { return value; }

    public static Activity valueOf(int value) {
      switch (value) {
        case -1: return ACT_INVALID;
        case 0: return ACT_RESET;
        case 1: return ACT_IDLE;
        case 2: return ACT_TRANSITION;
        case 3: return ACT_COVER;
        case 4: return ACT_COVER_MED;
        case 5: return ACT_COVER_LOW;
        case 6: return ACT_WALK;
        case 7: return ACT_WALK_AIM;
        case 8: return ACT_WALK_CROUCH;
        case 9: return ACT_WALK_CROUCH_AIM;
        case 10: return ACT_RUN;
        case 11: return ACT_RUN_AIM;
        case 12: return ACT_RUN_CROUCH;
        case 13: return ACT_RUN_CROUCH_AIM;
        case 14: return ACT_RUN_PROTECTED;
        case 15: return ACT_SCRIPT_CUSTOM_MOVE;
        case 16: return ACT_RANGE_ATTACK1;
        case 17: return ACT_RANGE_ATTACK2;
        case 18: return ACT_RANGE_ATTACK1_LOW;
        case 19: return ACT_RANGE_ATTACK2_LOW;
        case 20: return ACT_DIESIMPLE;
        case 21: return ACT_DIEBACKWARD;
        case 22: return ACT_DIEFORWARD;
        case 23: return ACT_DIEVIOLENT;
        case 24: return ACT_DIERAGDOLL;
        case 25: return ACT_FLY;
        case 26: return ACT_HOVER;
        case 27: return ACT_GLIDE;
        case 28: return ACT_SWIM;
        case 29: return ACT_JUMP;
        case 30: return ACT_HOP;
        case 31: return ACT_LEAP;
        case 32: return ACT_LAND;
        case 33: return ACT_CLIMB_UP;
        case 34: return ACT_CLIMB_DOWN;
        case 35: return ACT_CLIMB_DISMOUNT;
        case 36: return ACT_SHIPLADDER_UP;
        case 37: return ACT_SHIPLADDER_DOWN;
        case 38: return ACT_STRAFE_LEFT;
        case 39: return ACT_STRAFE_RIGHT;
        case 40: return ACT_ROLL_LEFT;
        case 41: return ACT_ROLL_RIGHT;
        case 42: return ACT_TURN_LEFT;
        case 43: return ACT_TURN_RIGHT;
        case 44: return ACT_CROUCH;
        case 45: return ACT_CROUCHIDLE;
        case 46: return ACT_STAND;
        case 47: return ACT_USE;
        case 48: return ACT_ALIEN_BURROW_IDLE;
        case 49: return ACT_ALIEN_BURROW_OUT;
        case 50: return ACT_SIGNAL1;
        case 51: return ACT_SIGNAL2;
        case 52: return ACT_SIGNAL3;
        case 53: return ACT_SIGNAL_ADVANCE;
        case 54: return ACT_SIGNAL_FORWARD;
        case 55: return ACT_SIGNAL_GROUP;
        case 56: return ACT_SIGNAL_HALT;
        case 57: return ACT_SIGNAL_LEFT;
        case 58: return ACT_SIGNAL_RIGHT;
        case 59: return ACT_SIGNAL_TAKECOVER;
        case 60: return ACT_LOOKBACK_RIGHT;
        case 61: return ACT_LOOKBACK_LEFT;
        case 62: return ACT_COWER;
        case 63: return ACT_SMALL_FLINCH;
        case 64: return ACT_BIG_FLINCH;
        case 65: return ACT_MELEE_ATTACK1;
        case 66: return ACT_MELEE_ATTACK2;
        case 67: return ACT_RELOAD;
        case 68: return ACT_RELOAD_START;
        case 69: return ACT_RELOAD_FINISH;
        case 70: return ACT_RELOAD_LOW;
        case 71: return ACT_ARM;
        case 72: return ACT_DISARM;
        case 73: return ACT_DROP_WEAPON;
        case 74: return ACT_DROP_WEAPON_SHOTGUN;
        case 75: return ACT_PICKUP_GROUND;
        case 76: return ACT_PICKUP_RACK;
        case 77: return ACT_IDLE_ANGRY;
        case 78: return ACT_IDLE_RELAXED;
        case 79: return ACT_IDLE_STIMULATED;
        case 80: return ACT_IDLE_AGITATED;
        case 81: return ACT_IDLE_STEALTH;
        case 82: return ACT_IDLE_HURT;
        case 83: return ACT_WALK_RELAXED;
        case 84: return ACT_WALK_STIMULATED;
        case 85: return ACT_WALK_AGITATED;
        case 86: return ACT_WALK_STEALTH;
        case 87: return ACT_RUN_RELAXED;
        case 88: return ACT_RUN_STIMULATED;
        case 89: return ACT_RUN_AGITATED;
        case 90: return ACT_RUN_STEALTH;
        case 91: return ACT_IDLE_AIM_RELAXED;
        case 92: return ACT_IDLE_AIM_STIMULATED;
        case 93: return ACT_IDLE_AIM_AGITATED;
        case 94: return ACT_IDLE_AIM_STEALTH;
        case 95: return ACT_WALK_AIM_RELAXED;
        case 96: return ACT_WALK_AIM_STIMULATED;
        case 97: return ACT_WALK_AIM_AGITATED;
        case 98: return ACT_WALK_AIM_STEALTH;
        case 99: return ACT_RUN_AIM_RELAXED;
        case 100: return ACT_RUN_AIM_STIMULATED;
        case 101: return ACT_RUN_AIM_AGITATED;
        case 102: return ACT_RUN_AIM_STEALTH;
        case 103: return ACT_CROUCHIDLE_STIMULATED;
        case 104: return ACT_CROUCHIDLE_AIM_STIMULATED;
        case 105: return ACT_CROUCHIDLE_AGITATED;
        case 106: return ACT_WALK_HURT;
        case 107: return ACT_RUN_HURT;
        case 108: return ACT_SPECIAL_ATTACK1;
        case 109: return ACT_SPECIAL_ATTACK2;
        case 110: return ACT_COMBAT_IDLE;
        case 111: return ACT_WALK_SCARED;
        case 112: return ACT_RUN_SCARED;
        case 113: return ACT_VICTORY_DANCE;
        case 114: return ACT_DIE_HEADSHOT;
        case 115: return ACT_DIE_CHESTSHOT;
        case 116: return ACT_DIE_GUTSHOT;
        case 117: return ACT_DIE_BACKSHOT;
        case 118: return ACT_FLINCH_HEAD;
        case 119: return ACT_FLINCH_CHEST;
        case 120: return ACT_FLINCH_STOMACH;
        case 121: return ACT_FLINCH_LEFTARM;
        case 122: return ACT_FLINCH_RIGHTARM;
        case 123: return ACT_FLINCH_LEFTLEG;
        case 124: return ACT_FLINCH_RIGHTLEG;
        case 125: return ACT_FLINCH_PHYSICS;
        case 126: return ACT_FLINCH_HEAD_BACK;
        case 127: return ACT_FLINCH_CHEST_BACK;
        case 128: return ACT_FLINCH_STOMACH_BACK;
        case 129: return ACT_FLINCH_CROUCH_FRONT;
        case 130: return ACT_FLINCH_CROUCH_BACK;
        case 131: return ACT_FLINCH_CROUCH_LEFT;
        case 132: return ACT_FLINCH_CROUCH_RIGHT;
        case 133: return ACT_IDLE_ON_FIRE;
        case 134: return ACT_WALK_ON_FIRE;
        case 135: return ACT_RUN_ON_FIRE;
        case 136: return ACT_RAPPEL_LOOP;
        case 137: return ACT_180_LEFT;
        case 138: return ACT_180_RIGHT;
        case 139: return ACT_90_LEFT;
        case 140: return ACT_90_RIGHT;
        case 141: return ACT_STEP_LEFT;
        case 142: return ACT_STEP_RIGHT;
        case 143: return ACT_STEP_BACK;
        case 144: return ACT_STEP_FORE;
        case 145: return ACT_GESTURE_RANGE_ATTACK1;
        case 146: return ACT_GESTURE_RANGE_ATTACK2;
        case 147: return ACT_GESTURE_MELEE_ATTACK1;
        case 148: return ACT_GESTURE_MELEE_ATTACK2;
        case 149: return ACT_GESTURE_RANGE_ATTACK1_LOW;
        case 150: return ACT_GESTURE_RANGE_ATTACK2_LOW;
        case 151: return ACT_MELEE_ATTACK_SWING_GESTURE;
        case 152: return ACT_GESTURE_SMALL_FLINCH;
        case 153: return ACT_GESTURE_BIG_FLINCH;
        case 154: return ACT_GESTURE_FLINCH_BLAST;
        case 155: return ACT_GESTURE_FLINCH_BLAST_SHOTGUN;
        case 156: return ACT_GESTURE_FLINCH_BLAST_DAMAGED;
        case 157: return ACT_GESTURE_FLINCH_BLAST_DAMAGED_SHOTGUN;
        case 158: return ACT_GESTURE_FLINCH_HEAD;
        case 159: return ACT_GESTURE_FLINCH_CHEST;
        case 160: return ACT_GESTURE_FLINCH_STOMACH;
        case 161: return ACT_GESTURE_FLINCH_LEFTARM;
        case 162: return ACT_GESTURE_FLINCH_RIGHTARM;
        case 163: return ACT_GESTURE_FLINCH_LEFTLEG;
        case 164: return ACT_GESTURE_FLINCH_RIGHTLEG;
        case 165: return ACT_GESTURE_TURN_LEFT;
        case 166: return ACT_GESTURE_TURN_RIGHT;
        case 167: return ACT_GESTURE_TURN_LEFT45;
        case 168: return ACT_GESTURE_TURN_RIGHT45;
        case 169: return ACT_GESTURE_TURN_LEFT90;
        case 170: return ACT_GESTURE_TURN_RIGHT90;
        case 171: return ACT_GESTURE_TURN_LEFT45_FLAT;
        case 172: return ACT_GESTURE_TURN_RIGHT45_FLAT;
        case 173: return ACT_GESTURE_TURN_LEFT90_FLAT;
        case 174: return ACT_GESTURE_TURN_RIGHT90_FLAT;
        case 175: return ACT_BARNACLE_HIT;
        case 176: return ACT_BARNACLE_PULL;
        case 177: return ACT_BARNACLE_CHOMP;
        case 178: return ACT_BARNACLE_CHEW;
        case 179: return ACT_DO_NOT_DISTURB;
        case 180: return ACT_SPECIFIC_SEQUENCE;
        case 181: return ACT_VM_DRAW;
        case 182: return ACT_VM_HOLSTER;
        case 183: return ACT_VM_IDLE;
        case 184: return ACT_VM_FIDGET;
        case 185: return ACT_VM_PULLBACK;
        case 186: return ACT_VM_PULLBACK_HIGH;
        case 187: return ACT_VM_PULLBACK_LOW;
        case 188: return ACT_VM_THROW;
        case 189: return ACT_VM_PULLPIN;
        case 190: return ACT_VM_PRIMARYATTACK;
        case 191: return ACT_VM_SECONDARYATTACK;
        case 192: return ACT_VM_RELOAD;
        case 193: return ACT_VM_DRYFIRE;
        case 194: return ACT_VM_HITLEFT;
        case 195: return ACT_VM_HITLEFT2;
        case 196: return ACT_VM_HITRIGHT;
        case 197: return ACT_VM_HITRIGHT2;
        case 198: return ACT_VM_HITCENTER;
        case 199: return ACT_VM_HITCENTER2;
        case 200: return ACT_VM_MISSLEFT;
        case 201: return ACT_VM_MISSLEFT2;
        case 202: return ACT_VM_MISSRIGHT;
        case 203: return ACT_VM_MISSRIGHT2;
        case 204: return ACT_VM_MISSCENTER;
        case 205: return ACT_VM_MISSCENTER2;
        case 206: return ACT_VM_HAULBACK;
        case 207: return ACT_VM_SWINGHARD;
        case 208: return ACT_VM_SWINGMISS;
        case 209: return ACT_VM_SWINGHIT;
        case 210: return ACT_VM_IDLE_TO_LOWERED;
        case 211: return ACT_VM_IDLE_LOWERED;
        case 212: return ACT_VM_LOWERED_TO_IDLE;
        case 213: return ACT_VM_RECOIL1;
        case 214: return ACT_VM_RECOIL2;
        case 215: return ACT_VM_RECOIL3;
        case 216: return ACT_VM_PICKUP;
        case 217: return ACT_VM_RELEASE;
        case 218: return ACT_VM_ATTACH_SILENCER;
        case 219: return ACT_VM_DETACH_SILENCER;
        case 220: return ACT_SLAM_STICKWALL_IDLE;
        case 221: return ACT_SLAM_STICKWALL_ND_IDLE;
        case 222: return ACT_SLAM_STICKWALL_ATTACH;
        case 223: return ACT_SLAM_STICKWALL_ATTACH2;
        case 224: return ACT_SLAM_STICKWALL_ND_ATTACH;
        case 225: return ACT_SLAM_STICKWALL_ND_ATTACH2;
        case 226: return ACT_SLAM_STICKWALL_DETONATE;
        case 227: return ACT_SLAM_STICKWALL_DETONATOR_HOLSTER;
        case 228: return ACT_SLAM_STICKWALL_DRAW;
        case 229: return ACT_SLAM_STICKWALL_ND_DRAW;
        case 230: return ACT_SLAM_STICKWALL_TO_THROW;
        case 231: return ACT_SLAM_STICKWALL_TO_THROW_ND;
        case 232: return ACT_SLAM_STICKWALL_TO_TRIPMINE_ND;
        case 233: return ACT_SLAM_THROW_IDLE;
        case 234: return ACT_SLAM_THROW_ND_IDLE;
        case 235: return ACT_SLAM_THROW_THROW;
        case 236: return ACT_SLAM_THROW_THROW2;
        case 237: return ACT_SLAM_THROW_THROW_ND;
        case 238: return ACT_SLAM_THROW_THROW_ND2;
        case 239: return ACT_SLAM_THROW_DRAW;
        case 240: return ACT_SLAM_THROW_ND_DRAW;
        case 241: return ACT_SLAM_THROW_TO_STICKWALL;
        case 242: return ACT_SLAM_THROW_TO_STICKWALL_ND;
        case 243: return ACT_SLAM_THROW_DETONATE;
        case 244: return ACT_SLAM_THROW_DETONATOR_HOLSTER;
        case 245: return ACT_SLAM_THROW_TO_TRIPMINE_ND;
        case 246: return ACT_SLAM_TRIPMINE_IDLE;
        case 247: return ACT_SLAM_TRIPMINE_DRAW;
        case 248: return ACT_SLAM_TRIPMINE_ATTACH;
        case 249: return ACT_SLAM_TRIPMINE_ATTACH2;
        case 250: return ACT_SLAM_TRIPMINE_TO_STICKWALL_ND;
        case 251: return ACT_SLAM_TRIPMINE_TO_THROW_ND;
        case 252: return ACT_SLAM_DETONATOR_IDLE;
        case 253: return ACT_SLAM_DETONATOR_DRAW;
        case 254: return ACT_SLAM_DETONATOR_DETONATE;
        case 255: return ACT_SLAM_DETONATOR_HOLSTER;
        case 256: return ACT_SLAM_DETONATOR_STICKWALL_DRAW;
        case 257: return ACT_SLAM_DETONATOR_THROW_DRAW;
        case 258: return ACT_SHOTGUN_RELOAD_START;
        case 259: return ACT_SHOTGUN_RELOAD_FINISH;
        case 260: return ACT_SHOTGUN_PUMP;
        case 261: return ACT_SMG2_IDLE2;
        case 262: return ACT_SMG2_FIRE2;
        case 263: return ACT_SMG2_DRAW2;
        case 264: return ACT_SMG2_RELOAD2;
        case 265: return ACT_SMG2_DRYFIRE2;
        case 266: return ACT_SMG2_TOAUTO;
        case 267: return ACT_SMG2_TOBURST;
        case 268: return ACT_PHYSCANNON_UPGRADE;
        case 269: return ACT_RANGE_ATTACK_AR1;
        case 270: return ACT_RANGE_ATTACK_AR2;
        case 271: return ACT_RANGE_ATTACK_AR2_LOW;
        case 272: return ACT_RANGE_ATTACK_AR2_GRENADE;
        case 273: return ACT_RANGE_ATTACK_HMG1;
        case 274: return ACT_RANGE_ATTACK_ML;
        case 275: return ACT_RANGE_ATTACK_SMG1;
        case 276: return ACT_RANGE_ATTACK_SMG1_LOW;
        case 277: return ACT_RANGE_ATTACK_SMG2;
        case 278: return ACT_RANGE_ATTACK_SHOTGUN;
        case 279: return ACT_RANGE_ATTACK_SHOTGUN_LOW;
        case 280: return ACT_RANGE_ATTACK_PISTOL;
        case 281: return ACT_RANGE_ATTACK_PISTOL_LOW;
        case 282: return ACT_RANGE_ATTACK_SLAM;
        case 283: return ACT_RANGE_ATTACK_TRIPWIRE;
        case 284: return ACT_RANGE_ATTACK_THROW;
        case 285: return ACT_RANGE_ATTACK_SNIPER_RIFLE;
        case 286: return ACT_RANGE_ATTACK_RPG;
        case 287: return ACT_MELEE_ATTACK_SWING;
        case 288: return ACT_RANGE_AIM_LOW;
        case 289: return ACT_RANGE_AIM_SMG1_LOW;
        case 290: return ACT_RANGE_AIM_PISTOL_LOW;
        case 291: return ACT_RANGE_AIM_AR2_LOW;
        case 292: return ACT_COVER_PISTOL_LOW;
        case 293: return ACT_COVER_SMG1_LOW;
        case 294: return ACT_GESTURE_RANGE_ATTACK_AR1;
        case 295: return ACT_GESTURE_RANGE_ATTACK_AR2;
        case 296: return ACT_GESTURE_RANGE_ATTACK_AR2_GRENADE;
        case 297: return ACT_GESTURE_RANGE_ATTACK_HMG1;
        case 298: return ACT_GESTURE_RANGE_ATTACK_ML;
        case 299: return ACT_GESTURE_RANGE_ATTACK_SMG1;
        case 300: return ACT_GESTURE_RANGE_ATTACK_SMG1_LOW;
        case 301: return ACT_GESTURE_RANGE_ATTACK_SMG2;
        case 302: return ACT_GESTURE_RANGE_ATTACK_SHOTGUN;
        case 303: return ACT_GESTURE_RANGE_ATTACK_PISTOL;
        case 304: return ACT_GESTURE_RANGE_ATTACK_PISTOL_LOW;
        case 305: return ACT_GESTURE_RANGE_ATTACK_SLAM;
        case 306: return ACT_GESTURE_RANGE_ATTACK_TRIPWIRE;
        case 307: return ACT_GESTURE_RANGE_ATTACK_THROW;
        case 308: return ACT_GESTURE_RANGE_ATTACK_SNIPER_RIFLE;
        case 309: return ACT_GESTURE_MELEE_ATTACK_SWING;
        case 310: return ACT_IDLE_RIFLE;
        case 311: return ACT_IDLE_SMG1;
        case 312: return ACT_IDLE_ANGRY_SMG1;
        case 313: return ACT_IDLE_PISTOL;
        case 314: return ACT_IDLE_ANGRY_PISTOL;
        case 315: return ACT_IDLE_ANGRY_SHOTGUN;
        case 316: return ACT_IDLE_STEALTH_PISTOL;
        case 317: return ACT_IDLE_PACKAGE;
        case 318: return ACT_WALK_PACKAGE;
        case 319: return ACT_IDLE_SUITCASE;
        case 320: return ACT_WALK_SUITCASE;
        case 321: return ACT_IDLE_SMG1_RELAXED;
        case 322: return ACT_IDLE_SMG1_STIMULATED;
        case 323: return ACT_WALK_RIFLE_RELAXED;
        case 324: return ACT_RUN_RIFLE_RELAXED;
        case 325: return ACT_WALK_RIFLE_STIMULATED;
        case 326: return ACT_RUN_RIFLE_STIMULATED;
        case 327: return ACT_IDLE_AIM_RIFLE_STIMULATED;
        case 328: return ACT_WALK_AIM_RIFLE_STIMULATED;
        case 329: return ACT_RUN_AIM_RIFLE_STIMULATED;
        case 330: return ACT_IDLE_SHOTGUN_RELAXED;
        case 331: return ACT_IDLE_SHOTGUN_STIMULATED;
        case 332: return ACT_IDLE_SHOTGUN_AGITATED;
        case 333: return ACT_WALK_ANGRY;
        case 334: return ACT_POLICE_HARASS1;
        case 335: return ACT_POLICE_HARASS2;
        case 336: return ACT_IDLE_MANNEDGUN;
        case 337: return ACT_IDLE_MELEE;
        case 338: return ACT_IDLE_ANGRY_MELEE;
        case 339: return ACT_IDLE_RPG_RELAXED;
        case 340: return ACT_IDLE_RPG;
        case 341: return ACT_IDLE_ANGRY_RPG;
        case 342: return ACT_COVER_LOW_RPG;
        case 343: return ACT_WALK_RPG;
        case 344: return ACT_RUN_RPG;
        case 345: return ACT_WALK_CROUCH_RPG;
        case 346: return ACT_RUN_CROUCH_RPG;
        case 347: return ACT_WALK_RPG_RELAXED;
        case 348: return ACT_RUN_RPG_RELAXED;
        case 349: return ACT_WALK_RIFLE;
        case 350: return ACT_WALK_AIM_RIFLE;
        case 351: return ACT_WALK_CROUCH_RIFLE;
        case 352: return ACT_WALK_CROUCH_AIM_RIFLE;
        case 353: return ACT_RUN_RIFLE;
        case 354: return ACT_RUN_AIM_RIFLE;
        case 355: return ACT_RUN_CROUCH_RIFLE;
        case 356: return ACT_RUN_CROUCH_AIM_RIFLE;
        case 357: return ACT_RUN_STEALTH_PISTOL;
        case 358: return ACT_WALK_AIM_SHOTGUN;
        case 359: return ACT_RUN_AIM_SHOTGUN;
        case 360: return ACT_WALK_PISTOL;
        case 361: return ACT_RUN_PISTOL;
        case 362: return ACT_WALK_AIM_PISTOL;
        case 363: return ACT_RUN_AIM_PISTOL;
        case 364: return ACT_WALK_STEALTH_PISTOL;
        case 365: return ACT_WALK_AIM_STEALTH_PISTOL;
        case 366: return ACT_RUN_AIM_STEALTH_PISTOL;
        case 367: return ACT_RELOAD_PISTOL;
        case 368: return ACT_RELOAD_PISTOL_LOW;
        case 369: return ACT_RELOAD_SMG1;
        case 370: return ACT_RELOAD_SMG1_LOW;
        case 371: return ACT_RELOAD_SHOTGUN;
        case 372: return ACT_RELOAD_SHOTGUN_LOW;
        case 373: return ACT_GESTURE_RELOAD;
        case 374: return ACT_GESTURE_RELOAD_PISTOL;
        case 375: return ACT_GESTURE_RELOAD_SMG1;
        case 376: return ACT_GESTURE_RELOAD_SHOTGUN;
        case 377: return ACT_BUSY_LEAN_LEFT;
        case 378: return ACT_BUSY_LEAN_LEFT_ENTRY;
        case 379: return ACT_BUSY_LEAN_LEFT_EXIT;
        case 380: return ACT_BUSY_LEAN_BACK;
        case 381: return ACT_BUSY_LEAN_BACK_ENTRY;
        case 382: return ACT_BUSY_LEAN_BACK_EXIT;
        case 383: return ACT_BUSY_SIT_GROUND;
        case 384: return ACT_BUSY_SIT_GROUND_ENTRY;
        case 385: return ACT_BUSY_SIT_GROUND_EXIT;
        case 386: return ACT_BUSY_SIT_CHAIR;
        case 387: return ACT_BUSY_SIT_CHAIR_ENTRY;
        case 388: return ACT_BUSY_SIT_CHAIR_EXIT;
        case 389: return ACT_BUSY_STAND;
        case 390: return ACT_BUSY_QUEUE;
        case 391: return ACT_DUCK_DODGE;
        case 392: return ACT_DIE_BARNACLE_SWALLOW;
        case 393: return ACT_GESTURE_BARNACLE_STRANGLE;
        case 394: return ACT_PHYSCANNON_DETACH;
        case 395: return ACT_PHYSCANNON_ANIMATE;
        case 396: return ACT_PHYSCANNON_ANIMATE_PRE;
        case 397: return ACT_PHYSCANNON_ANIMATE_POST;
        case 398: return ACT_DIE_FRONTSIDE;
        case 399: return ACT_DIE_RIGHTSIDE;
        case 400: return ACT_DIE_BACKSIDE;
        case 401: return ACT_DIE_LEFTSIDE;
        case 402: return ACT_OPEN_DOOR;
        case 403: return ACT_DI_ALYX_ZOMBIE_MELEE;
        case 404: return ACT_DI_ALYX_ZOMBIE_TORSO_MELEE;
        case 405: return ACT_DI_ALYX_HEADCRAB_MELEE;
        case 406: return ACT_DI_ALYX_ANTLION;
        case 407: return ACT_DI_ALYX_ZOMBIE_SHOTGUN64;
        case 408: return ACT_DI_ALYX_ZOMBIE_SHOTGUN26;
        case 409: return ACT_READINESS_RELAXED_TO_STIMULATED;
        case 410: return ACT_READINESS_RELAXED_TO_STIMULATED_WALK;
        case 411: return ACT_READINESS_AGITATED_TO_STIMULATED;
        case 412: return ACT_READINESS_STIMULATED_TO_RELAXED;
        case 413: return ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED;
        case 414: return ACT_READINESS_PISTOL_RELAXED_TO_STIMULATED_WALK;
        case 415: return ACT_READINESS_PISTOL_AGITATED_TO_STIMULATED;
        case 416: return ACT_READINESS_PISTOL_STIMULATED_TO_RELAXED;
        case 417: return ACT_IDLE_CARRY;
        case 418: return ACT_WALK_CARRY;
        case 419: return ACT_DOTA_IDLE;
        case 421: return ACT_DOTA_IDLE_RARE;
        case 422: return ACT_DOTA_RUN;
        case 424: return ACT_DOTA_ATTACK;
        case 425: return ACT_DOTA_ATTACK2;
        case 426: return ACT_DOTA_ATTACK_EVENT;
        case 427: return ACT_DOTA_DIE;
        case 428: return ACT_DOTA_FLINCH;
        case 429: return ACT_DOTA_FLAIL;
        case 430: return ACT_DOTA_DISABLED;
        case 431: return ACT_DOTA_CAST_ABILITY_1;
        case 432: return ACT_DOTA_CAST_ABILITY_2;
        case 433: return ACT_DOTA_CAST_ABILITY_3;
        case 434: return ACT_DOTA_CAST_ABILITY_4;
        case 435: return ACT_DOTA_CAST_ABILITY_5;
        case 436: return ACT_DOTA_CAST_ABILITY_6;
        case 437: return ACT_DOTA_OVERRIDE_ABILITY_1;
        case 438: return ACT_DOTA_OVERRIDE_ABILITY_2;
        case 439: return ACT_DOTA_OVERRIDE_ABILITY_3;
        case 440: return ACT_DOTA_OVERRIDE_ABILITY_4;
        case 441: return ACT_DOTA_CHANNEL_ABILITY_1;
        case 442: return ACT_DOTA_CHANNEL_ABILITY_2;
        case 443: return ACT_DOTA_CHANNEL_ABILITY_3;
        case 444: return ACT_DOTA_CHANNEL_ABILITY_4;
        case 445: return ACT_DOTA_CHANNEL_ABILITY_5;
        case 446: return ACT_DOTA_CHANNEL_ABILITY_6;
        case 447: return ACT_DOTA_CHANNEL_END_ABILITY_1;
        case 448: return ACT_DOTA_CHANNEL_END_ABILITY_2;
        case 449: return ACT_DOTA_CHANNEL_END_ABILITY_3;
        case 450: return ACT_DOTA_CHANNEL_END_ABILITY_4;
        case 451: return ACT_DOTA_CHANNEL_END_ABILITY_5;
        case 452: return ACT_DOTA_CHANNEL_END_ABILITY_6;
        case 453: return ACT_DOTA_CONSTANT_LAYER;
        case 454: return ACT_DOTA_CAPTURE;
        case 455: return ACT_DOTA_SPAWN;
        case 456: return ACT_DOTA_KILLTAUNT;
        case 457: return ACT_DOTA_TAUNT;
        case 458: return ACT_DOTA_THIRST;
        case 459: return ACT_DOTA_CAST_DRAGONBREATH;
        case 460: return ACT_DOTA_ECHO_SLAM;
        case 461: return ACT_DOTA_CAST_ABILITY_1_END;
        case 462: return ACT_DOTA_CAST_ABILITY_2_END;
        case 463: return ACT_DOTA_CAST_ABILITY_3_END;
        case 464: return ACT_DOTA_CAST_ABILITY_4_END;
        case 465: return ACT_MIRANA_LEAP_END;
        case 466: return ACT_WAVEFORM_START;
        case 467: return ACT_WAVEFORM_END;
        case 468: return ACT_DOTA_CAST_ABILITY_ROT;
        case 469: return ACT_DOTA_DIE_SPECIAL;
        case 470: return ACT_DOTA_RATTLETRAP_BATTERYASSAULT;
        case 471: return ACT_DOTA_RATTLETRAP_POWERCOGS;
        case 472: return ACT_DOTA_RATTLETRAP_HOOKSHOT_START;
        case 473: return ACT_DOTA_RATTLETRAP_HOOKSHOT_LOOP;
        case 474: return ACT_DOTA_RATTLETRAP_HOOKSHOT_END;
        case 475: return ACT_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE;
        case 476: return ACT_DOTA_TINKER_REARM1;
        case 477: return ACT_DOTA_TINKER_REARM2;
        case 478: return ACT_DOTA_TINKER_REARM3;
        case 479: return ACT_TINY_AVALANCHE;
        case 480: return ACT_TINY_TOSS;
        case 481: return ACT_TINY_GROWL;
        case 482: return ACT_DOTA_WEAVERBUG_ATTACH;
        case 483: return ACT_DOTA_CAST_WILD_AXES_END;
        case 484: return ACT_DOTA_CAST_LIFE_BREAK_START;
        case 485: return ACT_DOTA_CAST_LIFE_BREAK_END;
        case 486: return ACT_DOTA_NIGHTSTALKER_TRANSITION;
        case 487: return ACT_DOTA_LIFESTEALER_RAGE;
        case 488: return ACT_DOTA_LIFESTEALER_OPEN_WOUNDS;
        case 489: return ACT_DOTA_SAND_KING_BURROW_IN;
        case 490: return ACT_DOTA_SAND_KING_BURROW_OUT;
        case 491: return ACT_DOTA_EARTHSHAKER_TOTEM_ATTACK;
        case 492: return ACT_DOTA_WHEEL_LAYER;
        case 493: return ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_START;
        case 494: return ACT_DOTA_ALCHEMIST_CONCOCTION;
        case 495: return ACT_DOTA_JAKIRO_LIQUIDFIRE_START;
        case 496: return ACT_DOTA_JAKIRO_LIQUIDFIRE_LOOP;
        case 497: return ACT_DOTA_LIFESTEALER_INFEST;
        case 498: return ACT_DOTA_LIFESTEALER_INFEST_END;
        case 499: return ACT_DOTA_LASSO_LOOP;
        case 500: return ACT_DOTA_ALCHEMIST_CONCOCTION_THROW;
        case 501: return ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END;
        case 502: return ACT_DOTA_CAST_COLD_SNAP;
        case 503: return ACT_DOTA_CAST_GHOST_WALK;
        case 504: return ACT_DOTA_CAST_TORNADO;
        case 505: return ACT_DOTA_CAST_EMP;
        case 506: return ACT_DOTA_CAST_ALACRITY;
        case 507: return ACT_DOTA_CAST_CHAOS_METEOR;
        case 508: return ACT_DOTA_CAST_SUN_STRIKE;
        case 509: return ACT_DOTA_CAST_FORGE_SPIRIT;
        case 510: return ACT_DOTA_CAST_ICE_WALL;
        case 511: return ACT_DOTA_CAST_DEAFENING_BLAST;
        case 512: return ACT_DOTA_VICTORY;
        case 513: return ACT_DOTA_DEFEAT;
        case 514: return ACT_DOTA_SPIRIT_BREAKER_CHARGE_POSE;
        case 515: return ACT_DOTA_SPIRIT_BREAKER_CHARGE_END;
        case 516: return ACT_DOTA_TELEPORT;
        case 517: return ACT_DOTA_TELEPORT_END;
        case 518: return ACT_DOTA_CAST_REFRACTION;
        case 519: return ACT_DOTA_CAST_ABILITY_7;
        case 520: return ACT_DOTA_CANCEL_SIREN_SONG;
        case 521: return ACT_DOTA_CHANNEL_ABILITY_7;
        case 522: return ACT_DOTA_LOADOUT;
        case 523: return ACT_DOTA_FORCESTAFF_END;
        case 524: return ACT_DOTA_POOF_END;
        case 525: return ACT_DOTA_SLARK_POUNCE;
        case 526: return ACT_DOTA_MAGNUS_SKEWER_START;
        case 527: return ACT_DOTA_MAGNUS_SKEWER_END;
        case 528: return ACT_DOTA_MEDUSA_STONE_GAZE;
        case 529: return ACT_DOTA_RELAX_START;
        case 530: return ACT_DOTA_RELAX_LOOP;
        case 531: return ACT_DOTA_RELAX_END;
        case 532: return ACT_DOTA_CENTAUR_STAMPEDE;
        case 533: return ACT_DOTA_BELLYACHE_START;
        case 534: return ACT_DOTA_BELLYACHE_LOOP;
        case 535: return ACT_DOTA_BELLYACHE_END;
        case 536: return ACT_DOTA_ROQUELAIRE_LAND;
        case 537: return ACT_DOTA_ROQUELAIRE_LAND_IDLE;
        case 538: return ACT_DOTA_GREEVIL_CAST;
        case 539: return ACT_DOTA_GREEVIL_OVERRIDE_ABILITY;
        case 540: return ACT_DOTA_GREEVIL_HOOK_START;
        case 541: return ACT_DOTA_GREEVIL_HOOK_END;
        case 542: return ACT_DOTA_GREEVIL_BLINK_BONE;
        case 543: return ACT_DOTA_IDLE_SLEEPING;
        case 544: return ACT_DOTA_INTRO;
        case 545: return ACT_DOTA_GESTURE_POINT;
        case 546: return ACT_DOTA_GESTURE_ACCENT;
        case 547: return ACT_DOTA_SLEEPING_END;
        case 548: return ACT_DOTA_AMBUSH;
        case 549: return ACT_DOTA_ITEM_LOOK;
        case 550: return ACT_DOTA_STARTLE;
        case 551: return ACT_DOTA_FRUSTRATION;
        case 552: return ACT_DOTA_TELEPORT_REACT;
        case 553: return ACT_DOTA_TELEPORT_END_REACT;
        case 554: return ACT_DOTA_SHRUG;
        case 555: return ACT_DOTA_RELAX_LOOP_END;
        case 556: return ACT_DOTA_PRESENT_ITEM;
        case 557: return ACT_DOTA_IDLE_IMPATIENT;
        case 558: return ACT_DOTA_SHARPEN_WEAPON;
        case 559: return ACT_DOTA_SHARPEN_WEAPON_OUT;
        case 560: return ACT_DOTA_IDLE_SLEEPING_END;
        case 561: return ACT_DOTA_BRIDGE_DESTROY;
        case 562: return ACT_DOTA_TAUNT_SNIPER;
        case 563: return ACT_DOTA_DEATH_BY_SNIPER;
        case 564: return ACT_DOTA_LOOK_AROUND;
        case 565: return ACT_DOTA_CAGED_CREEP_RAGE;
        case 566: return ACT_DOTA_CAGED_CREEP_RAGE_OUT;
        case 567: return ACT_DOTA_CAGED_CREEP_SMASH;
        case 568: return ACT_DOTA_CAGED_CREEP_SMASH_OUT;
        case 569: return ACT_DOTA_IDLE_IMPATIENT_SWORD_TAP;
        case 570: return ACT_DOTA_INTRO_LOOP;
        case 571: return ACT_DOTA_BRIDGE_THREAT;
        case 572: return ACT_DOTA_DAGON;
        case 573: return ACT_DOTA_CAST_ABILITY_2_ES_ROLL_START;
        case 574: return ACT_DOTA_CAST_ABILITY_2_ES_ROLL;
        case 575: return ACT_DOTA_CAST_ABILITY_2_ES_ROLL_END;
        case 576: return ACT_DOTA_NIAN_PIN_START;
        case 577: return ACT_DOTA_NIAN_PIN_LOOP;
        case 578: return ACT_DOTA_NIAN_PIN_END;
        case 579: return ACT_DOTA_LEAP_STUN;
        case 580: return ACT_DOTA_LEAP_SWIPE;
        case 581: return ACT_DOTA_NIAN_INTRO_LEAP;
        case 582: return ACT_DOTA_AREA_DENY;
        case 583: return ACT_DOTA_NIAN_PIN_TO_STUN;
        case 584: return ACT_DOTA_RAZE_1;
        case 585: return ACT_DOTA_RAZE_2;
        case 586: return ACT_DOTA_RAZE_3;
        case 587: return ACT_DOTA_UNDYING_DECAY;
        case 588: return ACT_DOTA_UNDYING_SOUL_RIP;
        case 589: return ACT_DOTA_UNDYING_TOMBSTONE;
        case 590: return ACT_DOTA_WHIRLING_AXES_RANGED;
        case 591: return ACT_DOTA_SHALLOW_GRAVE;
        case 592: return ACT_DOTA_COLD_FEET;
        case 593: return ACT_DOTA_ICE_VORTEX;
        case 594: return ACT_DOTA_CHILLING_TOUCH;
        case 595: return ACT_DOTA_ENFEEBLE;
        case 596: return ACT_DOTA_FATAL_BONDS;
        case 597: return ACT_DOTA_MIDNIGHT_PULSE;
        case 598: return ACT_DOTA_ANCESTRAL_SPIRIT;
        case 599: return ACT_DOTA_THUNDER_STRIKE;
        case 600: return ACT_DOTA_KINETIC_FIELD;
        case 601: return ACT_DOTA_STATIC_STORM;
        case 602: return ACT_DOTA_MINI_TAUNT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Activity>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Activity>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Activity>() {
            public Activity findValueByNumber(int number) {
              return Activity.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.AiActivity.getDescriptor().getEnumTypes().get(0);
    }

    private static final Activity[] VALUES = values();

    public static Activity valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Activity(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Activity)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021ai_activity.proto*\220\203\001\n\010Activity\022\030\n\013ACT" +
      "_INVALID\020\377\377\377\377\377\377\377\377\377\001\022\r\n\tACT_RESET\020\000\022\014\n\010AC" +
      "T_IDLE\020\001\022\022\n\016ACT_TRANSITION\020\002\022\r\n\tACT_COVE" +
      "R\020\003\022\021\n\rACT_COVER_MED\020\004\022\021\n\rACT_COVER_LOW\020" +
      "\005\022\014\n\010ACT_WALK\020\006\022\020\n\014ACT_WALK_AIM\020\007\022\023\n\017ACT" +
      "_WALK_CROUCH\020\010\022\027\n\023ACT_WALK_CROUCH_AIM\020\t\022" +
      "\013\n\007ACT_RUN\020\n\022\017\n\013ACT_RUN_AIM\020\013\022\022\n\016ACT_RUN" +
      "_CROUCH\020\014\022\026\n\022ACT_RUN_CROUCH_AIM\020\r\022\025\n\021ACT" +
      "_RUN_PROTECTED\020\016\022\032\n\026ACT_SCRIPT_CUSTOM_MO" +
      "VE\020\017\022\025\n\021ACT_RANGE_ATTACK1\020\020\022\025\n\021ACT_RANGE",
      "_ATTACK2\020\021\022\031\n\025ACT_RANGE_ATTACK1_LOW\020\022\022\031\n" +
      "\025ACT_RANGE_ATTACK2_LOW\020\023\022\021\n\rACT_DIESIMPL" +
      "E\020\024\022\023\n\017ACT_DIEBACKWARD\020\025\022\022\n\016ACT_DIEFORWA" +
      "RD\020\026\022\022\n\016ACT_DIEVIOLENT\020\027\022\022\n\016ACT_DIERAGDO" +
      "LL\020\030\022\013\n\007ACT_FLY\020\031\022\r\n\tACT_HOVER\020\032\022\r\n\tACT_" +
      "GLIDE\020\033\022\014\n\010ACT_SWIM\020\034\022\014\n\010ACT_JUMP\020\035\022\013\n\007A" +
      "CT_HOP\020\036\022\014\n\010ACT_LEAP\020\037\022\014\n\010ACT_LAND\020 \022\020\n\014" +
      "ACT_CLIMB_UP\020!\022\022\n\016ACT_CLIMB_DOWN\020\"\022\026\n\022AC" +
      "T_CLIMB_DISMOUNT\020#\022\025\n\021ACT_SHIPLADDER_UP\020" +
      "$\022\027\n\023ACT_SHIPLADDER_DOWN\020%\022\023\n\017ACT_STRAFE",
      "_LEFT\020&\022\024\n\020ACT_STRAFE_RIGHT\020\'\022\021\n\rACT_ROL" +
      "L_LEFT\020(\022\022\n\016ACT_ROLL_RIGHT\020)\022\021\n\rACT_TURN" +
      "_LEFT\020*\022\022\n\016ACT_TURN_RIGHT\020+\022\016\n\nACT_CROUC" +
      "H\020,\022\022\n\016ACT_CROUCHIDLE\020-\022\r\n\tACT_STAND\020.\022\013" +
      "\n\007ACT_USE\020/\022\031\n\025ACT_ALIEN_BURROW_IDLE\0200\022\030" +
      "\n\024ACT_ALIEN_BURROW_OUT\0201\022\017\n\013ACT_SIGNAL1\020" +
      "2\022\017\n\013ACT_SIGNAL2\0203\022\017\n\013ACT_SIGNAL3\0204\022\026\n\022A" +
      "CT_SIGNAL_ADVANCE\0205\022\026\n\022ACT_SIGNAL_FORWAR" +
      "D\0206\022\024\n\020ACT_SIGNAL_GROUP\0207\022\023\n\017ACT_SIGNAL_" +
      "HALT\0208\022\023\n\017ACT_SIGNAL_LEFT\0209\022\024\n\020ACT_SIGNA",
      "L_RIGHT\020:\022\030\n\024ACT_SIGNAL_TAKECOVER\020;\022\026\n\022A" +
      "CT_LOOKBACK_RIGHT\020<\022\025\n\021ACT_LOOKBACK_LEFT" +
      "\020=\022\r\n\tACT_COWER\020>\022\024\n\020ACT_SMALL_FLINCH\020?\022" +
      "\022\n\016ACT_BIG_FLINCH\020@\022\025\n\021ACT_MELEE_ATTACK1" +
      "\020A\022\025\n\021ACT_MELEE_ATTACK2\020B\022\016\n\nACT_RELOAD\020" +
      "C\022\024\n\020ACT_RELOAD_START\020D\022\025\n\021ACT_RELOAD_FI" +
      "NISH\020E\022\022\n\016ACT_RELOAD_LOW\020F\022\013\n\007ACT_ARM\020G\022" +
      "\016\n\nACT_DISARM\020H\022\023\n\017ACT_DROP_WEAPON\020I\022\033\n\027" +
      "ACT_DROP_WEAPON_SHOTGUN\020J\022\025\n\021ACT_PICKUP_" +
      "GROUND\020K\022\023\n\017ACT_PICKUP_RACK\020L\022\022\n\016ACT_IDL",
      "E_ANGRY\020M\022\024\n\020ACT_IDLE_RELAXED\020N\022\027\n\023ACT_I" +
      "DLE_STIMULATED\020O\022\025\n\021ACT_IDLE_AGITATED\020P\022" +
      "\024\n\020ACT_IDLE_STEALTH\020Q\022\021\n\rACT_IDLE_HURT\020R" +
      "\022\024\n\020ACT_WALK_RELAXED\020S\022\027\n\023ACT_WALK_STIMU" +
      "LATED\020T\022\025\n\021ACT_WALK_AGITATED\020U\022\024\n\020ACT_WA" +
      "LK_STEALTH\020V\022\023\n\017ACT_RUN_RELAXED\020W\022\026\n\022ACT" +
      "_RUN_STIMULATED\020X\022\024\n\020ACT_RUN_AGITATED\020Y\022" +
      "\023\n\017ACT_RUN_STEALTH\020Z\022\030\n\024ACT_IDLE_AIM_REL" +
      "AXED\020[\022\033\n\027ACT_IDLE_AIM_STIMULATED\020\\\022\031\n\025A" +
      "CT_IDLE_AIM_AGITATED\020]\022\030\n\024ACT_IDLE_AIM_S",
      "TEALTH\020^\022\030\n\024ACT_WALK_AIM_RELAXED\020_\022\033\n\027AC" +
      "T_WALK_AIM_STIMULATED\020`\022\031\n\025ACT_WALK_AIM_" +
      "AGITATED\020a\022\030\n\024ACT_WALK_AIM_STEALTH\020b\022\027\n\023" +
      "ACT_RUN_AIM_RELAXED\020c\022\032\n\026ACT_RUN_AIM_STI" +
      "MULATED\020d\022\030\n\024ACT_RUN_AIM_AGITATED\020e\022\027\n\023A" +
      "CT_RUN_AIM_STEALTH\020f\022\035\n\031ACT_CROUCHIDLE_S" +
      "TIMULATED\020g\022!\n\035ACT_CROUCHIDLE_AIM_STIMUL" +
      "ATED\020h\022\033\n\027ACT_CROUCHIDLE_AGITATED\020i\022\021\n\rA" +
      "CT_WALK_HURT\020j\022\020\n\014ACT_RUN_HURT\020k\022\027\n\023ACT_" +
      "SPECIAL_ATTACK1\020l\022\027\n\023ACT_SPECIAL_ATTACK2",
      "\020m\022\023\n\017ACT_COMBAT_IDLE\020n\022\023\n\017ACT_WALK_SCAR" +
      "ED\020o\022\022\n\016ACT_RUN_SCARED\020p\022\025\n\021ACT_VICTORY_" +
      "DANCE\020q\022\024\n\020ACT_DIE_HEADSHOT\020r\022\025\n\021ACT_DIE" +
      "_CHESTSHOT\020s\022\023\n\017ACT_DIE_GUTSHOT\020t\022\024\n\020ACT" +
      "_DIE_BACKSHOT\020u\022\023\n\017ACT_FLINCH_HEAD\020v\022\024\n\020" +
      "ACT_FLINCH_CHEST\020w\022\026\n\022ACT_FLINCH_STOMACH" +
      "\020x\022\026\n\022ACT_FLINCH_LEFTARM\020y\022\027\n\023ACT_FLINCH" +
      "_RIGHTARM\020z\022\026\n\022ACT_FLINCH_LEFTLEG\020{\022\027\n\023A" +
      "CT_FLINCH_RIGHTLEG\020|\022\026\n\022ACT_FLINCH_PHYSI" +
      "CS\020}\022\030\n\024ACT_FLINCH_HEAD_BACK\020~\022\031\n\025ACT_FL",
      "INCH_CHEST_BACK\020\177\022\034\n\027ACT_FLINCH_STOMACH_" +
      "BACK\020\200\001\022\034\n\027ACT_FLINCH_CROUCH_FRONT\020\201\001\022\033\n" +
      "\026ACT_FLINCH_CROUCH_BACK\020\202\001\022\033\n\026ACT_FLINCH" +
      "_CROUCH_LEFT\020\203\001\022\034\n\027ACT_FLINCH_CROUCH_RIG" +
      "HT\020\204\001\022\025\n\020ACT_IDLE_ON_FIRE\020\205\001\022\025\n\020ACT_WALK" +
      "_ON_FIRE\020\206\001\022\024\n\017ACT_RUN_ON_FIRE\020\207\001\022\024\n\017ACT" +
      "_RAPPEL_LOOP\020\210\001\022\021\n\014ACT_180_LEFT\020\211\001\022\022\n\rAC" +
      "T_180_RIGHT\020\212\001\022\020\n\013ACT_90_LEFT\020\213\001\022\021\n\014ACT_" +
      "90_RIGHT\020\214\001\022\022\n\rACT_STEP_LEFT\020\215\001\022\023\n\016ACT_S" +
      "TEP_RIGHT\020\216\001\022\022\n\rACT_STEP_BACK\020\217\001\022\022\n\rACT_",
      "STEP_FORE\020\220\001\022\036\n\031ACT_GESTURE_RANGE_ATTACK" +
      "1\020\221\001\022\036\n\031ACT_GESTURE_RANGE_ATTACK2\020\222\001\022\036\n\031" +
      "ACT_GESTURE_MELEE_ATTACK1\020\223\001\022\036\n\031ACT_GEST" +
      "URE_MELEE_ATTACK2\020\224\001\022\"\n\035ACT_GESTURE_RANG" +
      "E_ATTACK1_LOW\020\225\001\022\"\n\035ACT_GESTURE_RANGE_AT" +
      "TACK2_LOW\020\226\001\022#\n\036ACT_MELEE_ATTACK_SWING_G" +
      "ESTURE\020\227\001\022\035\n\030ACT_GESTURE_SMALL_FLINCH\020\230\001" +
      "\022\033\n\026ACT_GESTURE_BIG_FLINCH\020\231\001\022\035\n\030ACT_GES" +
      "TURE_FLINCH_BLAST\020\232\001\022%\n ACT_GESTURE_FLIN" +
      "CH_BLAST_SHOTGUN\020\233\001\022%\n ACT_GESTURE_FLINC",
      "H_BLAST_DAMAGED\020\234\001\022-\n(ACT_GESTURE_FLINCH" +
      "_BLAST_DAMAGED_SHOTGUN\020\235\001\022\034\n\027ACT_GESTURE" +
      "_FLINCH_HEAD\020\236\001\022\035\n\030ACT_GESTURE_FLINCH_CH" +
      "EST\020\237\001\022\037\n\032ACT_GESTURE_FLINCH_STOMACH\020\240\001\022" +
      "\037\n\032ACT_GESTURE_FLINCH_LEFTARM\020\241\001\022 \n\033ACT_" +
      "GESTURE_FLINCH_RIGHTARM\020\242\001\022\037\n\032ACT_GESTUR" +
      "E_FLINCH_LEFTLEG\020\243\001\022 \n\033ACT_GESTURE_FLINC" +
      "H_RIGHTLEG\020\244\001\022\032\n\025ACT_GESTURE_TURN_LEFT\020\245" +
      "\001\022\033\n\026ACT_GESTURE_TURN_RIGHT\020\246\001\022\034\n\027ACT_GE" +
      "STURE_TURN_LEFT45\020\247\001\022\035\n\030ACT_GESTURE_TURN",
      "_RIGHT45\020\250\001\022\034\n\027ACT_GESTURE_TURN_LEFT90\020\251" +
      "\001\022\035\n\030ACT_GESTURE_TURN_RIGHT90\020\252\001\022!\n\034ACT_" +
      "GESTURE_TURN_LEFT45_FLAT\020\253\001\022\"\n\035ACT_GESTU" +
      "RE_TURN_RIGHT45_FLAT\020\254\001\022!\n\034ACT_GESTURE_T" +
      "URN_LEFT90_FLAT\020\255\001\022\"\n\035ACT_GESTURE_TURN_R" +
      "IGHT90_FLAT\020\256\001\022\025\n\020ACT_BARNACLE_HIT\020\257\001\022\026\n" +
      "\021ACT_BARNACLE_PULL\020\260\001\022\027\n\022ACT_BARNACLE_CH" +
      "OMP\020\261\001\022\026\n\021ACT_BARNACLE_CHEW\020\262\001\022\027\n\022ACT_DO" +
      "_NOT_DISTURB\020\263\001\022\032\n\025ACT_SPECIFIC_SEQUENCE" +
      "\020\264\001\022\020\n\013ACT_VM_DRAW\020\265\001\022\023\n\016ACT_VM_HOLSTER\020",
      "\266\001\022\020\n\013ACT_VM_IDLE\020\267\001\022\022\n\rACT_VM_FIDGET\020\270\001" +
      "\022\024\n\017ACT_VM_PULLBACK\020\271\001\022\031\n\024ACT_VM_PULLBAC" +
      "K_HIGH\020\272\001\022\030\n\023ACT_VM_PULLBACK_LOW\020\273\001\022\021\n\014A" +
      "CT_VM_THROW\020\274\001\022\023\n\016ACT_VM_PULLPIN\020\275\001\022\031\n\024A" +
      "CT_VM_PRIMARYATTACK\020\276\001\022\033\n\026ACT_VM_SECONDA" +
      "RYATTACK\020\277\001\022\022\n\rACT_VM_RELOAD\020\300\001\022\023\n\016ACT_V" +
      "M_DRYFIRE\020\301\001\022\023\n\016ACT_VM_HITLEFT\020\302\001\022\024\n\017ACT" +
      "_VM_HITLEFT2\020\303\001\022\024\n\017ACT_VM_HITRIGHT\020\304\001\022\025\n" +
      "\020ACT_VM_HITRIGHT2\020\305\001\022\025\n\020ACT_VM_HITCENTER" +
      "\020\306\001\022\026\n\021ACT_VM_HITCENTER2\020\307\001\022\024\n\017ACT_VM_MI",
      "SSLEFT\020\310\001\022\025\n\020ACT_VM_MISSLEFT2\020\311\001\022\025\n\020ACT_" +
      "VM_MISSRIGHT\020\312\001\022\026\n\021ACT_VM_MISSRIGHT2\020\313\001\022" +
      "\026\n\021ACT_VM_MISSCENTER\020\314\001\022\027\n\022ACT_VM_MISSCE" +
      "NTER2\020\315\001\022\024\n\017ACT_VM_HAULBACK\020\316\001\022\025\n\020ACT_VM" +
      "_SWINGHARD\020\317\001\022\025\n\020ACT_VM_SWINGMISS\020\320\001\022\024\n\017" +
      "ACT_VM_SWINGHIT\020\321\001\022\033\n\026ACT_VM_IDLE_TO_LOW" +
      "ERED\020\322\001\022\030\n\023ACT_VM_IDLE_LOWERED\020\323\001\022\033\n\026ACT" +
      "_VM_LOWERED_TO_IDLE\020\324\001\022\023\n\016ACT_VM_RECOIL1" +
      "\020\325\001\022\023\n\016ACT_VM_RECOIL2\020\326\001\022\023\n\016ACT_VM_RECOI" +
      "L3\020\327\001\022\022\n\rACT_VM_PICKUP\020\330\001\022\023\n\016ACT_VM_RELE",
      "ASE\020\331\001\022\033\n\026ACT_VM_ATTACH_SILENCER\020\332\001\022\033\n\026A" +
      "CT_VM_DETACH_SILENCER\020\333\001\022\034\n\027ACT_SLAM_STI" +
      "CKWALL_IDLE\020\334\001\022\037\n\032ACT_SLAM_STICKWALL_ND_" +
      "IDLE\020\335\001\022\036\n\031ACT_SLAM_STICKWALL_ATTACH\020\336\001\022" +
      "\037\n\032ACT_SLAM_STICKWALL_ATTACH2\020\337\001\022!\n\034ACT_" +
      "SLAM_STICKWALL_ND_ATTACH\020\340\001\022\"\n\035ACT_SLAM_" +
      "STICKWALL_ND_ATTACH2\020\341\001\022 \n\033ACT_SLAM_STIC" +
      "KWALL_DETONATE\020\342\001\022)\n$ACT_SLAM_STICKWALL_" +
      "DETONATOR_HOLSTER\020\343\001\022\034\n\027ACT_SLAM_STICKWA" +
      "LL_DRAW\020\344\001\022\037\n\032ACT_SLAM_STICKWALL_ND_DRAW",
      "\020\345\001\022 \n\033ACT_SLAM_STICKWALL_TO_THROW\020\346\001\022#\n" +
      "\036ACT_SLAM_STICKWALL_TO_THROW_ND\020\347\001\022&\n!AC" +
      "T_SLAM_STICKWALL_TO_TRIPMINE_ND\020\350\001\022\030\n\023AC" +
      "T_SLAM_THROW_IDLE\020\351\001\022\033\n\026ACT_SLAM_THROW_N" +
      "D_IDLE\020\352\001\022\031\n\024ACT_SLAM_THROW_THROW\020\353\001\022\032\n\025" +
      "ACT_SLAM_THROW_THROW2\020\354\001\022\034\n\027ACT_SLAM_THR" +
      "OW_THROW_ND\020\355\001\022\035\n\030ACT_SLAM_THROW_THROW_N" +
      "D2\020\356\001\022\030\n\023ACT_SLAM_THROW_DRAW\020\357\001\022\033\n\026ACT_S" +
      "LAM_THROW_ND_DRAW\020\360\001\022 \n\033ACT_SLAM_THROW_T" +
      "O_STICKWALL\020\361\001\022#\n\036ACT_SLAM_THROW_TO_STIC",
      "KWALL_ND\020\362\001\022\034\n\027ACT_SLAM_THROW_DETONATE\020\363" +
      "\001\022%\n ACT_SLAM_THROW_DETONATOR_HOLSTER\020\364\001" +
      "\022\"\n\035ACT_SLAM_THROW_TO_TRIPMINE_ND\020\365\001\022\033\n\026" +
      "ACT_SLAM_TRIPMINE_IDLE\020\366\001\022\033\n\026ACT_SLAM_TR" +
      "IPMINE_DRAW\020\367\001\022\035\n\030ACT_SLAM_TRIPMINE_ATTA" +
      "CH\020\370\001\022\036\n\031ACT_SLAM_TRIPMINE_ATTACH2\020\371\001\022&\n" +
      "!ACT_SLAM_TRIPMINE_TO_STICKWALL_ND\020\372\001\022\"\n" +
      "\035ACT_SLAM_TRIPMINE_TO_THROW_ND\020\373\001\022\034\n\027ACT" +
      "_SLAM_DETONATOR_IDLE\020\374\001\022\034\n\027ACT_SLAM_DETO" +
      "NATOR_DRAW\020\375\001\022 \n\033ACT_SLAM_DETONATOR_DETO",
      "NATE\020\376\001\022\037\n\032ACT_SLAM_DETONATOR_HOLSTER\020\377\001" +
      "\022&\n!ACT_SLAM_DETONATOR_STICKWALL_DRAW\020\200\002" +
      "\022\"\n\035ACT_SLAM_DETONATOR_THROW_DRAW\020\201\002\022\035\n\030" +
      "ACT_SHOTGUN_RELOAD_START\020\202\002\022\036\n\031ACT_SHOTG" +
      "UN_RELOAD_FINISH\020\203\002\022\025\n\020ACT_SHOTGUN_PUMP\020" +
      "\204\002\022\023\n\016ACT_SMG2_IDLE2\020\205\002\022\023\n\016ACT_SMG2_FIRE" +
      "2\020\206\002\022\023\n\016ACT_SMG2_DRAW2\020\207\002\022\025\n\020ACT_SMG2_RE" +
      "LOAD2\020\210\002\022\026\n\021ACT_SMG2_DRYFIRE2\020\211\002\022\024\n\017ACT_" +
      "SMG2_TOAUTO\020\212\002\022\025\n\020ACT_SMG2_TOBURST\020\213\002\022\033\n" +
      "\026ACT_PHYSCANNON_UPGRADE\020\214\002\022\031\n\024ACT_RANGE_",
      "ATTACK_AR1\020\215\002\022\031\n\024ACT_RANGE_ATTACK_AR2\020\216\002" +
      "\022\035\n\030ACT_RANGE_ATTACK_AR2_LOW\020\217\002\022!\n\034ACT_R" +
      "ANGE_ATTACK_AR2_GRENADE\020\220\002\022\032\n\025ACT_RANGE_" +
      "ATTACK_HMG1\020\221\002\022\030\n\023ACT_RANGE_ATTACK_ML\020\222\002" +
      "\022\032\n\025ACT_RANGE_ATTACK_SMG1\020\223\002\022\036\n\031ACT_RANG" +
      "E_ATTACK_SMG1_LOW\020\224\002\022\032\n\025ACT_RANGE_ATTACK" +
      "_SMG2\020\225\002\022\035\n\030ACT_RANGE_ATTACK_SHOTGUN\020\226\002\022" +
      "!\n\034ACT_RANGE_ATTACK_SHOTGUN_LOW\020\227\002\022\034\n\027AC" +
      "T_RANGE_ATTACK_PISTOL\020\230\002\022 \n\033ACT_RANGE_AT" +
      "TACK_PISTOL_LOW\020\231\002\022\032\n\025ACT_RANGE_ATTACK_S",
      "LAM\020\232\002\022\036\n\031ACT_RANGE_ATTACK_TRIPWIRE\020\233\002\022\033" +
      "\n\026ACT_RANGE_ATTACK_THROW\020\234\002\022\"\n\035ACT_RANGE" +
      "_ATTACK_SNIPER_RIFLE\020\235\002\022\031\n\024ACT_RANGE_ATT" +
      "ACK_RPG\020\236\002\022\033\n\026ACT_MELEE_ATTACK_SWING\020\237\002\022" +
      "\026\n\021ACT_RANGE_AIM_LOW\020\240\002\022\033\n\026ACT_RANGE_AIM" +
      "_SMG1_LOW\020\241\002\022\035\n\030ACT_RANGE_AIM_PISTOL_LOW" +
      "\020\242\002\022\032\n\025ACT_RANGE_AIM_AR2_LOW\020\243\002\022\031\n\024ACT_C" +
      "OVER_PISTOL_LOW\020\244\002\022\027\n\022ACT_COVER_SMG1_LOW" +
      "\020\245\002\022!\n\034ACT_GESTURE_RANGE_ATTACK_AR1\020\246\002\022!" +
      "\n\034ACT_GESTURE_RANGE_ATTACK_AR2\020\247\002\022)\n$ACT",
      "_GESTURE_RANGE_ATTACK_AR2_GRENADE\020\250\002\022\"\n\035" +
      "ACT_GESTURE_RANGE_ATTACK_HMG1\020\251\002\022 \n\033ACT_" +
      "GESTURE_RANGE_ATTACK_ML\020\252\002\022\"\n\035ACT_GESTUR" +
      "E_RANGE_ATTACK_SMG1\020\253\002\022&\n!ACT_GESTURE_RA" +
      "NGE_ATTACK_SMG1_LOW\020\254\002\022\"\n\035ACT_GESTURE_RA" +
      "NGE_ATTACK_SMG2\020\255\002\022%\n ACT_GESTURE_RANGE_" +
      "ATTACK_SHOTGUN\020\256\002\022$\n\037ACT_GESTURE_RANGE_A" +
      "TTACK_PISTOL\020\257\002\022(\n#ACT_GESTURE_RANGE_ATT" +
      "ACK_PISTOL_LOW\020\260\002\022\"\n\035ACT_GESTURE_RANGE_A" +
      "TTACK_SLAM\020\261\002\022&\n!ACT_GESTURE_RANGE_ATTAC",
      "K_TRIPWIRE\020\262\002\022#\n\036ACT_GESTURE_RANGE_ATTAC" +
      "K_THROW\020\263\002\022*\n%ACT_GESTURE_RANGE_ATTACK_S" +
      "NIPER_RIFLE\020\264\002\022#\n\036ACT_GESTURE_MELEE_ATTA" +
      "CK_SWING\020\265\002\022\023\n\016ACT_IDLE_RIFLE\020\266\002\022\022\n\rACT_" +
      "IDLE_SMG1\020\267\002\022\030\n\023ACT_IDLE_ANGRY_SMG1\020\270\002\022\024" +
      "\n\017ACT_IDLE_PISTOL\020\271\002\022\032\n\025ACT_IDLE_ANGRY_P" +
      "ISTOL\020\272\002\022\033\n\026ACT_IDLE_ANGRY_SHOTGUN\020\273\002\022\034\n" +
      "\027ACT_IDLE_STEALTH_PISTOL\020\274\002\022\025\n\020ACT_IDLE_" +
      "PACKAGE\020\275\002\022\025\n\020ACT_WALK_PACKAGE\020\276\002\022\026\n\021ACT" +
      "_IDLE_SUITCASE\020\277\002\022\026\n\021ACT_WALK_SUITCASE\020\300",
      "\002\022\032\n\025ACT_IDLE_SMG1_RELAXED\020\301\002\022\035\n\030ACT_IDL" +
      "E_SMG1_STIMULATED\020\302\002\022\033\n\026ACT_WALK_RIFLE_R" +
      "ELAXED\020\303\002\022\032\n\025ACT_RUN_RIFLE_RELAXED\020\304\002\022\036\n" +
      "\031ACT_WALK_RIFLE_STIMULATED\020\305\002\022\035\n\030ACT_RUN" +
      "_RIFLE_STIMULATED\020\306\002\022\"\n\035ACT_IDLE_AIM_RIF" +
      "LE_STIMULATED\020\307\002\022\"\n\035ACT_WALK_AIM_RIFLE_S" +
      "TIMULATED\020\310\002\022!\n\034ACT_RUN_AIM_RIFLE_STIMUL" +
      "ATED\020\311\002\022\035\n\030ACT_IDLE_SHOTGUN_RELAXED\020\312\002\022 " +
      "\n\033ACT_IDLE_SHOTGUN_STIMULATED\020\313\002\022\036\n\031ACT_" +
      "IDLE_SHOTGUN_AGITATED\020\314\002\022\023\n\016ACT_WALK_ANG",
      "RY\020\315\002\022\027\n\022ACT_POLICE_HARASS1\020\316\002\022\027\n\022ACT_PO" +
      "LICE_HARASS2\020\317\002\022\027\n\022ACT_IDLE_MANNEDGUN\020\320\002" +
      "\022\023\n\016ACT_IDLE_MELEE\020\321\002\022\031\n\024ACT_IDLE_ANGRY_" +
      "MELEE\020\322\002\022\031\n\024ACT_IDLE_RPG_RELAXED\020\323\002\022\021\n\014A" +
      "CT_IDLE_RPG\020\324\002\022\027\n\022ACT_IDLE_ANGRY_RPG\020\325\002\022" +
      "\026\n\021ACT_COVER_LOW_RPG\020\326\002\022\021\n\014ACT_WALK_RPG\020" +
      "\327\002\022\020\n\013ACT_RUN_RPG\020\330\002\022\030\n\023ACT_WALK_CROUCH_" +
      "RPG\020\331\002\022\027\n\022ACT_RUN_CROUCH_RPG\020\332\002\022\031\n\024ACT_W" +
      "ALK_RPG_RELAXED\020\333\002\022\030\n\023ACT_RUN_RPG_RELAXE" +
      "D\020\334\002\022\023\n\016ACT_WALK_RIFLE\020\335\002\022\027\n\022ACT_WALK_AI",
      "M_RIFLE\020\336\002\022\032\n\025ACT_WALK_CROUCH_RIFLE\020\337\002\022\036" +
      "\n\031ACT_WALK_CROUCH_AIM_RIFLE\020\340\002\022\022\n\rACT_RU" +
      "N_RIFLE\020\341\002\022\026\n\021ACT_RUN_AIM_RIFLE\020\342\002\022\031\n\024AC" +
      "T_RUN_CROUCH_RIFLE\020\343\002\022\035\n\030ACT_RUN_CROUCH_" +
      "AIM_RIFLE\020\344\002\022\033\n\026ACT_RUN_STEALTH_PISTOL\020\345" +
      "\002\022\031\n\024ACT_WALK_AIM_SHOTGUN\020\346\002\022\030\n\023ACT_RUN_" +
      "AIM_SHOTGUN\020\347\002\022\024\n\017ACT_WALK_PISTOL\020\350\002\022\023\n\016" +
      "ACT_RUN_PISTOL\020\351\002\022\030\n\023ACT_WALK_AIM_PISTOL" +
      "\020\352\002\022\027\n\022ACT_RUN_AIM_PISTOL\020\353\002\022\034\n\027ACT_WALK" +
      "_STEALTH_PISTOL\020\354\002\022 \n\033ACT_WALK_AIM_STEAL",
      "TH_PISTOL\020\355\002\022\037\n\032ACT_RUN_AIM_STEALTH_PIST" +
      "OL\020\356\002\022\026\n\021ACT_RELOAD_PISTOL\020\357\002\022\032\n\025ACT_REL" +
      "OAD_PISTOL_LOW\020\360\002\022\024\n\017ACT_RELOAD_SMG1\020\361\002\022" +
      "\030\n\023ACT_RELOAD_SMG1_LOW\020\362\002\022\027\n\022ACT_RELOAD_" +
      "SHOTGUN\020\363\002\022\033\n\026ACT_RELOAD_SHOTGUN_LOW\020\364\002\022" +
      "\027\n\022ACT_GESTURE_RELOAD\020\365\002\022\036\n\031ACT_GESTURE_" +
      "RELOAD_PISTOL\020\366\002\022\034\n\027ACT_GESTURE_RELOAD_S" +
      "MG1\020\367\002\022\037\n\032ACT_GESTURE_RELOAD_SHOTGUN\020\370\002\022" +
      "\027\n\022ACT_BUSY_LEAN_LEFT\020\371\002\022\035\n\030ACT_BUSY_LEA" +
      "N_LEFT_ENTRY\020\372\002\022\034\n\027ACT_BUSY_LEAN_LEFT_EX",
      "IT\020\373\002\022\027\n\022ACT_BUSY_LEAN_BACK\020\374\002\022\035\n\030ACT_BU" +
      "SY_LEAN_BACK_ENTRY\020\375\002\022\034\n\027ACT_BUSY_LEAN_B" +
      "ACK_EXIT\020\376\002\022\030\n\023ACT_BUSY_SIT_GROUND\020\377\002\022\036\n" +
      "\031ACT_BUSY_SIT_GROUND_ENTRY\020\200\003\022\035\n\030ACT_BUS" +
      "Y_SIT_GROUND_EXIT\020\201\003\022\027\n\022ACT_BUSY_SIT_CHA" +
      "IR\020\202\003\022\035\n\030ACT_BUSY_SIT_CHAIR_ENTRY\020\203\003\022\034\n\027" +
      "ACT_BUSY_SIT_CHAIR_EXIT\020\204\003\022\023\n\016ACT_BUSY_S" +
      "TAND\020\205\003\022\023\n\016ACT_BUSY_QUEUE\020\206\003\022\023\n\016ACT_DUCK" +
      "_DODGE\020\207\003\022\035\n\030ACT_DIE_BARNACLE_SWALLOW\020\210\003" +
      "\022\"\n\035ACT_GESTURE_BARNACLE_STRANGLE\020\211\003\022\032\n\025",
      "ACT_PHYSCANNON_DETACH\020\212\003\022\033\n\026ACT_PHYSCANN" +
      "ON_ANIMATE\020\213\003\022\037\n\032ACT_PHYSCANNON_ANIMATE_" +
      "PRE\020\214\003\022 \n\033ACT_PHYSCANNON_ANIMATE_POST\020\215\003" +
      "\022\026\n\021ACT_DIE_FRONTSIDE\020\216\003\022\026\n\021ACT_DIE_RIGH" +
      "TSIDE\020\217\003\022\025\n\020ACT_DIE_BACKSIDE\020\220\003\022\025\n\020ACT_D" +
      "IE_LEFTSIDE\020\221\003\022\022\n\rACT_OPEN_DOOR\020\222\003\022\035\n\030AC" +
      "T_DI_ALYX_ZOMBIE_MELEE\020\223\003\022#\n\036ACT_DI_ALYX" +
      "_ZOMBIE_TORSO_MELEE\020\224\003\022\037\n\032ACT_DI_ALYX_HE" +
      "ADCRAB_MELEE\020\225\003\022\030\n\023ACT_DI_ALYX_ANTLION\020\226" +
      "\003\022!\n\034ACT_DI_ALYX_ZOMBIE_SHOTGUN64\020\227\003\022!\n\034",
      "ACT_DI_ALYX_ZOMBIE_SHOTGUN26\020\230\003\022(\n#ACT_R" +
      "EADINESS_RELAXED_TO_STIMULATED\020\231\003\022-\n(ACT" +
      "_READINESS_RELAXED_TO_STIMULATED_WALK\020\232\003" +
      "\022)\n$ACT_READINESS_AGITATED_TO_STIMULATED" +
      "\020\233\003\022(\n#ACT_READINESS_STIMULATED_TO_RELAX" +
      "ED\020\234\003\022/\n*ACT_READINESS_PISTOL_RELAXED_TO" +
      "_STIMULATED\020\235\003\0224\n/ACT_READINESS_PISTOL_R" +
      "ELAXED_TO_STIMULATED_WALK\020\236\003\0220\n+ACT_READ" +
      "INESS_PISTOL_AGITATED_TO_STIMULATED\020\237\003\022/" +
      "\n*ACT_READINESS_PISTOL_STIMULATED_TO_REL",
      "AXED\020\240\003\022\023\n\016ACT_IDLE_CARRY\020\241\003\022\023\n\016ACT_WALK" +
      "_CARRY\020\242\003\022\022\n\rACT_DOTA_IDLE\020\243\003\022\027\n\022ACT_DOT" +
      "A_IDLE_RARE\020\245\003\022\021\n\014ACT_DOTA_RUN\020\246\003\022\024\n\017ACT" +
      "_DOTA_ATTACK\020\250\003\022\025\n\020ACT_DOTA_ATTACK2\020\251\003\022\032" +
      "\n\025ACT_DOTA_ATTACK_EVENT\020\252\003\022\021\n\014ACT_DOTA_D" +
      "IE\020\253\003\022\024\n\017ACT_DOTA_FLINCH\020\254\003\022\023\n\016ACT_DOTA_" +
      "FLAIL\020\255\003\022\026\n\021ACT_DOTA_DISABLED\020\256\003\022\034\n\027ACT_" +
      "DOTA_CAST_ABILITY_1\020\257\003\022\034\n\027ACT_DOTA_CAST_" +
      "ABILITY_2\020\260\003\022\034\n\027ACT_DOTA_CAST_ABILITY_3\020" +
      "\261\003\022\034\n\027ACT_DOTA_CAST_ABILITY_4\020\262\003\022\034\n\027ACT_",
      "DOTA_CAST_ABILITY_5\020\263\003\022\034\n\027ACT_DOTA_CAST_" +
      "ABILITY_6\020\264\003\022 \n\033ACT_DOTA_OVERRIDE_ABILIT" +
      "Y_1\020\265\003\022 \n\033ACT_DOTA_OVERRIDE_ABILITY_2\020\266\003" +
      "\022 \n\033ACT_DOTA_OVERRIDE_ABILITY_3\020\267\003\022 \n\033AC" +
      "T_DOTA_OVERRIDE_ABILITY_4\020\270\003\022\037\n\032ACT_DOTA" +
      "_CHANNEL_ABILITY_1\020\271\003\022\037\n\032ACT_DOTA_CHANNE" +
      "L_ABILITY_2\020\272\003\022\037\n\032ACT_DOTA_CHANNEL_ABILI" +
      "TY_3\020\273\003\022\037\n\032ACT_DOTA_CHANNEL_ABILITY_4\020\274\003" +
      "\022\037\n\032ACT_DOTA_CHANNEL_ABILITY_5\020\275\003\022\037\n\032ACT" +
      "_DOTA_CHANNEL_ABILITY_6\020\276\003\022#\n\036ACT_DOTA_C",
      "HANNEL_END_ABILITY_1\020\277\003\022#\n\036ACT_DOTA_CHAN" +
      "NEL_END_ABILITY_2\020\300\003\022#\n\036ACT_DOTA_CHANNEL" +
      "_END_ABILITY_3\020\301\003\022#\n\036ACT_DOTA_CHANNEL_EN" +
      "D_ABILITY_4\020\302\003\022#\n\036ACT_DOTA_CHANNEL_END_A" +
      "BILITY_5\020\303\003\022#\n\036ACT_DOTA_CHANNEL_END_ABIL" +
      "ITY_6\020\304\003\022\034\n\027ACT_DOTA_CONSTANT_LAYER\020\305\003\022\025" +
      "\n\020ACT_DOTA_CAPTURE\020\306\003\022\023\n\016ACT_DOTA_SPAWN\020" +
      "\307\003\022\027\n\022ACT_DOTA_KILLTAUNT\020\310\003\022\023\n\016ACT_DOTA_" +
      "TAUNT\020\311\003\022\024\n\017ACT_DOTA_THIRST\020\312\003\022\037\n\032ACT_DO" +
      "TA_CAST_DRAGONBREATH\020\313\003\022\027\n\022ACT_DOTA_ECHO",
      "_SLAM\020\314\003\022 \n\033ACT_DOTA_CAST_ABILITY_1_END\020" +
      "\315\003\022 \n\033ACT_DOTA_CAST_ABILITY_2_END\020\316\003\022 \n\033" +
      "ACT_DOTA_CAST_ABILITY_3_END\020\317\003\022 \n\033ACT_DO" +
      "TA_CAST_ABILITY_4_END\020\320\003\022\030\n\023ACT_MIRANA_L" +
      "EAP_END\020\321\003\022\027\n\022ACT_WAVEFORM_START\020\322\003\022\025\n\020A" +
      "CT_WAVEFORM_END\020\323\003\022\036\n\031ACT_DOTA_CAST_ABIL" +
      "ITY_ROT\020\324\003\022\031\n\024ACT_DOTA_DIE_SPECIAL\020\325\003\022\'\n" +
      "\"ACT_DOTA_RATTLETRAP_BATTERYASSAULT\020\326\003\022\"" +
      "\n\035ACT_DOTA_RATTLETRAP_POWERCOGS\020\327\003\022\'\n\"AC" +
      "T_DOTA_RATTLETRAP_HOOKSHOT_START\020\330\003\022&\n!A",
      "CT_DOTA_RATTLETRAP_HOOKSHOT_LOOP\020\331\003\022%\n A" +
      "CT_DOTA_RATTLETRAP_HOOKSHOT_END\020\332\003\022+\n&AC" +
      "T_STORM_SPIRIT_OVERLOAD_RUN_OVERRIDE\020\333\003\022" +
      "\033\n\026ACT_DOTA_TINKER_REARM1\020\334\003\022\033\n\026ACT_DOTA" +
      "_TINKER_REARM2\020\335\003\022\033\n\026ACT_DOTA_TINKER_REA" +
      "RM3\020\336\003\022\027\n\022ACT_TINY_AVALANCHE\020\337\003\022\022\n\rACT_T" +
      "INY_TOSS\020\340\003\022\023\n\016ACT_TINY_GROWL\020\341\003\022\036\n\031ACT_" +
      "DOTA_WEAVERBUG_ATTACH\020\342\003\022 \n\033ACT_DOTA_CAS" +
      "T_WILD_AXES_END\020\343\003\022#\n\036ACT_DOTA_CAST_LIFE" +
      "_BREAK_START\020\344\003\022!\n\034ACT_DOTA_CAST_LIFE_BR",
      "EAK_END\020\345\003\022%\n ACT_DOTA_NIGHTSTALKER_TRAN" +
      "SITION\020\346\003\022\036\n\031ACT_DOTA_LIFESTEALER_RAGE\020\347" +
      "\003\022%\n ACT_DOTA_LIFESTEALER_OPEN_WOUNDS\020\350\003" +
      "\022!\n\034ACT_DOTA_SAND_KING_BURROW_IN\020\351\003\022\"\n\035A" +
      "CT_DOTA_SAND_KING_BURROW_OUT\020\352\003\022&\n!ACT_D" +
      "OTA_EARTHSHAKER_TOTEM_ATTACK\020\353\003\022\031\n\024ACT_D" +
      "OTA_WHEEL_LAYER\020\354\003\022+\n&ACT_DOTA_ALCHEMIST" +
      "_CHEMICAL_RAGE_START\020\355\003\022\"\n\035ACT_DOTA_ALCH" +
      "EMIST_CONCOCTION\020\356\003\022%\n ACT_DOTA_JAKIRO_L" +
      "IQUIDFIRE_START\020\357\003\022$\n\037ACT_DOTA_JAKIRO_LI",
      "QUIDFIRE_LOOP\020\360\003\022 \n\033ACT_DOTA_LIFESTEALER" +
      "_INFEST\020\361\003\022$\n\037ACT_DOTA_LIFESTEALER_INFES" +
      "T_END\020\362\003\022\030\n\023ACT_DOTA_LASSO_LOOP\020\363\003\022(\n#AC" +
      "T_DOTA_ALCHEMIST_CONCOCTION_THROW\020\364\003\022)\n$" +
      "ACT_DOTA_ALCHEMIST_CHEMICAL_RAGE_END\020\365\003\022" +
      "\034\n\027ACT_DOTA_CAST_COLD_SNAP\020\366\003\022\035\n\030ACT_DOT" +
      "A_CAST_GHOST_WALK\020\367\003\022\032\n\025ACT_DOTA_CAST_TO" +
      "RNADO\020\370\003\022\026\n\021ACT_DOTA_CAST_EMP\020\371\003\022\033\n\026ACT_" +
      "DOTA_CAST_ALACRITY\020\372\003\022\037\n\032ACT_DOTA_CAST_C" +
      "HAOS_METEOR\020\373\003\022\035\n\030ACT_DOTA_CAST_SUN_STRI",
      "KE\020\374\003\022\037\n\032ACT_DOTA_CAST_FORGE_SPIRIT\020\375\003\022\033" +
      "\n\026ACT_DOTA_CAST_ICE_WALL\020\376\003\022\"\n\035ACT_DOTA_" +
      "CAST_DEAFENING_BLAST\020\377\003\022\025\n\020ACT_DOTA_VICT" +
      "ORY\020\200\004\022\024\n\017ACT_DOTA_DEFEAT\020\201\004\022(\n#ACT_DOTA" +
      "_SPIRIT_BREAKER_CHARGE_POSE\020\202\004\022\'\n\"ACT_DO" +
      "TA_SPIRIT_BREAKER_CHARGE_END\020\203\004\022\026\n\021ACT_D" +
      "OTA_TELEPORT\020\204\004\022\032\n\025ACT_DOTA_TELEPORT_END" +
      "\020\205\004\022\035\n\030ACT_DOTA_CAST_REFRACTION\020\206\004\022\034\n\027AC" +
      "T_DOTA_CAST_ABILITY_7\020\207\004\022\037\n\032ACT_DOTA_CAN" +
      "CEL_SIREN_SONG\020\210\004\022\037\n\032ACT_DOTA_CHANNEL_AB",
      "ILITY_7\020\211\004\022\025\n\020ACT_DOTA_LOADOUT\020\212\004\022\034\n\027ACT" +
      "_DOTA_FORCESTAFF_END\020\213\004\022\026\n\021ACT_DOTA_POOF" +
      "_END\020\214\004\022\032\n\025ACT_DOTA_SLARK_POUNCE\020\215\004\022!\n\034A" +
      "CT_DOTA_MAGNUS_SKEWER_START\020\216\004\022\037\n\032ACT_DO" +
      "TA_MAGNUS_SKEWER_END\020\217\004\022\037\n\032ACT_DOTA_MEDU" +
      "SA_STONE_GAZE\020\220\004\022\031\n\024ACT_DOTA_RELAX_START" +
      "\020\221\004\022\030\n\023ACT_DOTA_RELAX_LOOP\020\222\004\022\027\n\022ACT_DOT" +
      "A_RELAX_END\020\223\004\022\036\n\031ACT_DOTA_CENTAUR_STAMP" +
      "EDE\020\224\004\022\035\n\030ACT_DOTA_BELLYACHE_START\020\225\004\022\034\n" +
      "\027ACT_DOTA_BELLYACHE_LOOP\020\226\004\022\033\n\026ACT_DOTA_",
      "BELLYACHE_END\020\227\004\022\035\n\030ACT_DOTA_ROQUELAIRE_" +
      "LAND\020\230\004\022\"\n\035ACT_DOTA_ROQUELAIRE_LAND_IDLE" +
      "\020\231\004\022\032\n\025ACT_DOTA_GREEVIL_CAST\020\232\004\022&\n!ACT_D" +
      "OTA_GREEVIL_OVERRIDE_ABILITY\020\233\004\022 \n\033ACT_D" +
      "OTA_GREEVIL_HOOK_START\020\234\004\022\036\n\031ACT_DOTA_GR" +
      "EEVIL_HOOK_END\020\235\004\022 \n\033ACT_DOTA_GREEVIL_BL" +
      "INK_BONE\020\236\004\022\033\n\026ACT_DOTA_IDLE_SLEEPING\020\237\004" +
      "\022\023\n\016ACT_DOTA_INTRO\020\240\004\022\033\n\026ACT_DOTA_GESTUR" +
      "E_POINT\020\241\004\022\034\n\027ACT_DOTA_GESTURE_ACCENT\020\242\004" +
      "\022\032\n\025ACT_DOTA_SLEEPING_END\020\243\004\022\024\n\017ACT_DOTA",
      "_AMBUSH\020\244\004\022\027\n\022ACT_DOTA_ITEM_LOOK\020\245\004\022\025\n\020A" +
      "CT_DOTA_STARTLE\020\246\004\022\031\n\024ACT_DOTA_FRUSTRATI" +
      "ON\020\247\004\022\034\n\027ACT_DOTA_TELEPORT_REACT\020\250\004\022 \n\033A" +
      "CT_DOTA_TELEPORT_END_REACT\020\251\004\022\023\n\016ACT_DOT" +
      "A_SHRUG\020\252\004\022\034\n\027ACT_DOTA_RELAX_LOOP_END\020\253\004" +
      "\022\032\n\025ACT_DOTA_PRESENT_ITEM\020\254\004\022\034\n\027ACT_DOTA" +
      "_IDLE_IMPATIENT\020\255\004\022\034\n\027ACT_DOTA_SHARPEN_W" +
      "EAPON\020\256\004\022 \n\033ACT_DOTA_SHARPEN_WEAPON_OUT\020" +
      "\257\004\022\037\n\032ACT_DOTA_IDLE_SLEEPING_END\020\260\004\022\034\n\027A" +
      "CT_DOTA_BRIDGE_DESTROY\020\261\004\022\032\n\025ACT_DOTA_TA",
      "UNT_SNIPER\020\262\004\022\035\n\030ACT_DOTA_DEATH_BY_SNIPE" +
      "R\020\263\004\022\031\n\024ACT_DOTA_LOOK_AROUND\020\264\004\022\036\n\031ACT_D" +
      "OTA_CAGED_CREEP_RAGE\020\265\004\022\"\n\035ACT_DOTA_CAGE" +
      "D_CREEP_RAGE_OUT\020\266\004\022\037\n\032ACT_DOTA_CAGED_CR" +
      "EEP_SMASH\020\267\004\022#\n\036ACT_DOTA_CAGED_CREEP_SMA" +
      "SH_OUT\020\270\004\022&\n!ACT_DOTA_IDLE_IMPATIENT_SWO" +
      "RD_TAP\020\271\004\022\030\n\023ACT_DOTA_INTRO_LOOP\020\272\004\022\033\n\026A" +
      "CT_DOTA_BRIDGE_THREAT\020\273\004\022\023\n\016ACT_DOTA_DAG" +
      "ON\020\274\004\022*\n%ACT_DOTA_CAST_ABILITY_2_ES_ROLL" +
      "_START\020\275\004\022$\n\037ACT_DOTA_CAST_ABILITY_2_ES_",
      "ROLL\020\276\004\022(\n#ACT_DOTA_CAST_ABILITY_2_ES_RO" +
      "LL_END\020\277\004\022\034\n\027ACT_DOTA_NIAN_PIN_START\020\300\004\022" +
      "\033\n\026ACT_DOTA_NIAN_PIN_LOOP\020\301\004\022\032\n\025ACT_DOTA" +
      "_NIAN_PIN_END\020\302\004\022\027\n\022ACT_DOTA_LEAP_STUN\020\303" +
      "\004\022\030\n\023ACT_DOTA_LEAP_SWIPE\020\304\004\022\035\n\030ACT_DOTA_" +
      "NIAN_INTRO_LEAP\020\305\004\022\027\n\022ACT_DOTA_AREA_DENY" +
      "\020\306\004\022\036\n\031ACT_DOTA_NIAN_PIN_TO_STUN\020\307\004\022\024\n\017A" +
      "CT_DOTA_RAZE_1\020\310\004\022\024\n\017ACT_DOTA_RAZE_2\020\311\004\022" +
      "\024\n\017ACT_DOTA_RAZE_3\020\312\004\022\033\n\026ACT_DOTA_UNDYIN" +
      "G_DECAY\020\313\004\022\036\n\031ACT_DOTA_UNDYING_SOUL_RIP\020",
      "\314\004\022\037\n\032ACT_DOTA_UNDYING_TOMBSTONE\020\315\004\022\"\n\035A" +
      "CT_DOTA_WHIRLING_AXES_RANGED\020\316\004\022\033\n\026ACT_D" +
      "OTA_SHALLOW_GRAVE\020\317\004\022\027\n\022ACT_DOTA_COLD_FE" +
      "ET\020\320\004\022\030\n\023ACT_DOTA_ICE_VORTEX\020\321\004\022\034\n\027ACT_D" +
      "OTA_CHILLING_TOUCH\020\322\004\022\026\n\021ACT_DOTA_ENFEEB" +
      "LE\020\323\004\022\031\n\024ACT_DOTA_FATAL_BONDS\020\324\004\022\034\n\027ACT_" +
      "DOTA_MIDNIGHT_PULSE\020\325\004\022\036\n\031ACT_DOTA_ANCES" +
      "TRAL_SPIRIT\020\326\004\022\034\n\027ACT_DOTA_THUNDER_STRIK" +
      "E\020\327\004\022\033\n\026ACT_DOTA_KINETIC_FIELD\020\330\004\022\032\n\025ACT" +
      "_DOTA_STATIC_STORM\020\331\004\022\030\n\023ACT_DOTA_MINI_T",
      "AUNT\020\332\004B\037\n\035skadistats.clarity.wire.proto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
