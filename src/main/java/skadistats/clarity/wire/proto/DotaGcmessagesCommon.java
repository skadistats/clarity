// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_common.proto

package skadistats.clarity.wire.proto;

public final class DotaGcmessagesCommon {
  private DotaGcmessagesCommon() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code EDOTAGCMsg}
   */
  public enum EDOTAGCMsg
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EMsgGCDOTABase = 7000;</code>
     */
    k_EMsgGCDOTABase(0, 7000),
    /**
     * <code>k_EMsgGCGeneralResponse = 7001;</code>
     */
    k_EMsgGCGeneralResponse(1, 7001),
    /**
     * <code>k_EMsgGCGameMatchSignOut = 7004;</code>
     */
    k_EMsgGCGameMatchSignOut(2, 7004),
    /**
     * <code>k_EMsgGCGameMatchSignOutResponse = 7005;</code>
     */
    k_EMsgGCGameMatchSignOutResponse(3, 7005),
    /**
     * <code>k_EMsgGCJoinChatChannel = 7009;</code>
     */
    k_EMsgGCJoinChatChannel(4, 7009),
    /**
     * <code>k_EMsgGCJoinChatChannelResponse = 7010;</code>
     */
    k_EMsgGCJoinChatChannelResponse(5, 7010),
    /**
     * <code>k_EMsgGCOtherJoinedChannel = 7013;</code>
     */
    k_EMsgGCOtherJoinedChannel(6, 7013),
    /**
     * <code>k_EMsgGCOtherLeftChannel = 7014;</code>
     */
    k_EMsgGCOtherLeftChannel(7, 7014),
    /**
     * <code>k_EMsgGCMatchHistoryList = 7017;</code>
     */
    k_EMsgGCMatchHistoryList(8, 7017),
    /**
     * <code>k_EMsgServerToGCRequestStatus = 7026;</code>
     */
    k_EMsgServerToGCRequestStatus(9, 7026),
    /**
     * <code>k_EMsgGCGetRecentMatches = 7027;</code>
     */
    k_EMsgGCGetRecentMatches(10, 7027),
    /**
     * <code>k_EMsgGCRecentMatchesResponse = 7028;</code>
     */
    k_EMsgGCRecentMatchesResponse(11, 7028),
    /**
     * <code>k_EMsgGCFindSourceTVGames = 7031;</code>
     */
    k_EMsgGCFindSourceTVGames(12, 7031),
    /**
     * <code>k_EMsgGCSourceTVGamesResponse = 7032;</code>
     */
    k_EMsgGCSourceTVGamesResponse(13, 7032),
    /**
     * <code>k_EMsgGCStartFindingMatch = 7033;</code>
     */
    k_EMsgGCStartFindingMatch(14, 7033),
    /**
     * <code>k_EMsgGCConnectedPlayers = 7034;</code>
     */
    k_EMsgGCConnectedPlayers(15, 7034),
    /**
     * <code>k_EMsgGCAbandonCurrentGame = 7035;</code>
     */
    k_EMsgGCAbandonCurrentGame(16, 7035),
    /**
     * <code>k_EMsgGCStopFindingMatch = 7036;</code>
     */
    k_EMsgGCStopFindingMatch(17, 7036),
    /**
     * <code>k_EMsgGCPracticeLobbyCreate = 7038;</code>
     */
    k_EMsgGCPracticeLobbyCreate(18, 7038),
    /**
     * <code>k_EMsgGCPracticeLobbyLeave = 7040;</code>
     */
    k_EMsgGCPracticeLobbyLeave(19, 7040),
    /**
     * <code>k_EMsgGCPracticeLobbyLaunch = 7041;</code>
     */
    k_EMsgGCPracticeLobbyLaunch(20, 7041),
    /**
     * <code>k_EMsgGCPracticeLobbyList = 7042;</code>
     */
    k_EMsgGCPracticeLobbyList(21, 7042),
    /**
     * <code>k_EMsgGCPracticeLobbyListResponse = 7043;</code>
     */
    k_EMsgGCPracticeLobbyListResponse(22, 7043),
    /**
     * <code>k_EMsgGCPracticeLobbyJoin = 7044;</code>
     */
    k_EMsgGCPracticeLobbyJoin(23, 7044),
    /**
     * <code>k_EMsgGCPracticeLobbySetDetails = 7046;</code>
     */
    k_EMsgGCPracticeLobbySetDetails(24, 7046),
    /**
     * <code>k_EMsgGCPracticeLobbySetTeamSlot = 7047;</code>
     */
    k_EMsgGCPracticeLobbySetTeamSlot(25, 7047),
    /**
     * <code>k_EMsgGCInitialQuestionnaireResponse = 7049;</code>
     */
    k_EMsgGCInitialQuestionnaireResponse(26, 7049),
    /**
     * <code>k_EMsgGCTournamentRequest = 7051;</code>
     */
    k_EMsgGCTournamentRequest(27, 7051),
    /**
     * <code>k_EMsgGCTournamentResponse = 7052;</code>
     */
    k_EMsgGCTournamentResponse(28, 7052),
    /**
     * <code>k_EMsgGCPracticeLobbyResponse = 7055;</code>
     */
    k_EMsgGCPracticeLobbyResponse(29, 7055),
    /**
     * <code>k_EMsgGCBroadcastNotification = 7056;</code>
     */
    k_EMsgGCBroadcastNotification(30, 7056),
    /**
     * <code>k_EMsgGCLiveScoreboardUpdate = 7057;</code>
     */
    k_EMsgGCLiveScoreboardUpdate(31, 7057),
    /**
     * <code>k_EMsgGCRequestChatChannelList = 7060;</code>
     */
    k_EMsgGCRequestChatChannelList(32, 7060),
    /**
     * <code>k_EMsgGCRequestChatChannelListResponse = 7061;</code>
     */
    k_EMsgGCRequestChatChannelListResponse(33, 7061),
    /**
     * <code>k_EMsgGCRequestMatches = 7064;</code>
     */
    k_EMsgGCRequestMatches(34, 7064),
    /**
     * <code>k_EMsgGCRequestMatchesResponse = 7065;</code>
     */
    k_EMsgGCRequestMatchesResponse(35, 7065),
    /**
     * <code>k_EMsgGCRequestPlayerResources = 7068;</code>
     */
    k_EMsgGCRequestPlayerResources(36, 7068),
    /**
     * <code>k_EMsgGCRequestPlayerResourcesResponse = 7069;</code>
     */
    k_EMsgGCRequestPlayerResourcesResponse(37, 7069),
    /**
     * <code>k_EMsgGCReadyUp = 7070;</code>
     */
    k_EMsgGCReadyUp(38, 7070),
    /**
     * <code>k_EMsgGCKickedFromMatchmakingQueue = 7071;</code>
     */
    k_EMsgGCKickedFromMatchmakingQueue(39, 7071),
    /**
     * <code>k_EMsgGCLeaverDetected = 7072;</code>
     */
    k_EMsgGCLeaverDetected(40, 7072),
    /**
     * <code>k_EMsgGCSpectateFriendGame = 7073;</code>
     */
    k_EMsgGCSpectateFriendGame(41, 7073),
    /**
     * <code>k_EMsgGCSpectateFriendGameResponse = 7074;</code>
     */
    k_EMsgGCSpectateFriendGameResponse(42, 7074),
    /**
     * <code>k_EMsgGCPlayerReports = 7075;</code>
     */
    k_EMsgGCPlayerReports(43, 7075),
    /**
     * <code>k_EMsgGCReportsRemainingRequest = 7076;</code>
     */
    k_EMsgGCReportsRemainingRequest(44, 7076),
    /**
     * <code>k_EMsgGCReportsRemainingResponse = 7077;</code>
     */
    k_EMsgGCReportsRemainingResponse(45, 7077),
    /**
     * <code>k_EMsgGCSubmitPlayerReport = 7078;</code>
     */
    k_EMsgGCSubmitPlayerReport(46, 7078),
    /**
     * <code>k_EMsgGCSubmitPlayerReportResponse = 7079;</code>
     */
    k_EMsgGCSubmitPlayerReportResponse(47, 7079),
    /**
     * <code>k_EMsgGCGameChatLog = 7080;</code>
     */
    k_EMsgGCGameChatLog(48, 7080),
    /**
     * <code>k_EMsgGCPracticeLobbyKick = 7081;</code>
     */
    k_EMsgGCPracticeLobbyKick(49, 7081),
    /**
     * <code>k_EMsgGCReportCountsRequest = 7082;</code>
     */
    k_EMsgGCReportCountsRequest(50, 7082),
    /**
     * <code>k_EMsgGCReportCountsResponse = 7083;</code>
     */
    k_EMsgGCReportCountsResponse(51, 7083),
    /**
     * <code>k_EMsgGCRequestSaveGames = 7084;</code>
     */
    k_EMsgGCRequestSaveGames(52, 7084),
    /**
     * <code>k_EMsgGCRequestSaveGamesServer = 7085;</code>
     */
    k_EMsgGCRequestSaveGamesServer(53, 7085),
    /**
     * <code>k_EMsgGCRequestSaveGamesResponse = 7086;</code>
     */
    k_EMsgGCRequestSaveGamesResponse(54, 7086),
    /**
     * <code>k_EMsgGCLeaverDetectedResponse = 7087;</code>
     */
    k_EMsgGCLeaverDetectedResponse(55, 7087),
    /**
     * <code>k_EMsgGCPlayerFailedToConnect = 7088;</code>
     */
    k_EMsgGCPlayerFailedToConnect(56, 7088),
    /**
     * <code>k_EMsgGCGCToRelayConnect = 7089;</code>
     */
    k_EMsgGCGCToRelayConnect(57, 7089),
    /**
     * <code>k_EMsgGCGCToRelayConnectresponse = 7090;</code>
     */
    k_EMsgGCGCToRelayConnectresponse(58, 7090),
    /**
     * <code>k_EMsgGCWatchGame = 7091;</code>
     */
    k_EMsgGCWatchGame(59, 7091),
    /**
     * <code>k_EMsgGCWatchGameResponse = 7092;</code>
     */
    k_EMsgGCWatchGameResponse(60, 7092),
    /**
     * <code>k_EMsgGCBanStatusRequest = 7093;</code>
     */
    k_EMsgGCBanStatusRequest(61, 7093),
    /**
     * <code>k_EMsgGCBanStatusResponse = 7094;</code>
     */
    k_EMsgGCBanStatusResponse(62, 7094),
    /**
     * <code>k_EMsgGCMatchDetailsRequest = 7095;</code>
     */
    k_EMsgGCMatchDetailsRequest(63, 7095),
    /**
     * <code>k_EMsgGCMatchDetailsResponse = 7096;</code>
     */
    k_EMsgGCMatchDetailsResponse(64, 7096),
    /**
     * <code>k_EMsgGCCancelWatchGame = 7097;</code>
     */
    k_EMsgGCCancelWatchGame(65, 7097),
    /**
     * <code>k_EMsgGCProfileRequest = 7098;</code>
     */
    k_EMsgGCProfileRequest(66, 7098),
    /**
     * <code>k_EMsgGCProfileResponse = 7099;</code>
     */
    k_EMsgGCProfileResponse(67, 7099),
    /**
     * <code>k_EMsgGCPopup = 7102;</code>
     */
    k_EMsgGCPopup(68, 7102),
    /**
     * <code>k_EMsgGCDOTAClearNotifySuccessfulReport = 7104;</code>
     */
    k_EMsgGCDOTAClearNotifySuccessfulReport(69, 7104),
    /**
     * <code>k_EMsgGCGenericResult = 7108;</code>
     */
    k_EMsgGCGenericResult(70, 7108),
    /**
     * <code>k_EMsgGCFriendPracticeLobbyListRequest = 7111;</code>
     */
    k_EMsgGCFriendPracticeLobbyListRequest(71, 7111),
    /**
     * <code>k_EMsgGCFriendPracticeLobbyListResponse = 7112;</code>
     */
    k_EMsgGCFriendPracticeLobbyListResponse(72, 7112),
    /**
     * <code>k_EMsgGCPracticeLobbyJoinResponse = 7113;</code>
     */
    k_EMsgGCPracticeLobbyJoinResponse(73, 7113),
    /**
     * <code>k_EMsgClientEconNotification_Job = 7114;</code>
     */
    k_EMsgClientEconNotification_Job(74, 7114),
    /**
     * <code>k_EMsgGCCreateTeam = 7115;</code>
     */
    k_EMsgGCCreateTeam(75, 7115),
    /**
     * <code>k_EMsgGCCreateTeamResponse = 7116;</code>
     */
    k_EMsgGCCreateTeamResponse(76, 7116),
    /**
     * <code>k_EMsgGCDisbandTeam = 7117;</code>
     */
    k_EMsgGCDisbandTeam(77, 7117),
    /**
     * <code>k_EMsgGCDisbandTeamResponse = 7118;</code>
     */
    k_EMsgGCDisbandTeamResponse(78, 7118),
    /**
     * <code>k_EMsgGCRequestTeamData = 7119;</code>
     */
    k_EMsgGCRequestTeamData(79, 7119),
    /**
     * <code>k_EMsgGCRequestTeamDataResponse = 7120;</code>
     */
    k_EMsgGCRequestTeamDataResponse(80, 7120),
    /**
     * <code>k_EMsgGCTeamData = 7121;</code>
     */
    k_EMsgGCTeamData(81, 7121),
    /**
     * <code>k_EMsgGCTeamInvite_InviterToGC = 7122;</code>
     */
    k_EMsgGCTeamInvite_InviterToGC(82, 7122),
    /**
     * <code>k_EMsgGCTeamInvite_GCImmediateResponseToInviter = 7123;</code>
     */
    k_EMsgGCTeamInvite_GCImmediateResponseToInviter(83, 7123),
    /**
     * <code>k_EMsgGCTeamInvite_GCRequestToInvitee = 7124;</code>
     */
    k_EMsgGCTeamInvite_GCRequestToInvitee(84, 7124),
    /**
     * <code>k_EMsgGCTeamInvite_InviteeResponseToGC = 7125;</code>
     */
    k_EMsgGCTeamInvite_InviteeResponseToGC(85, 7125),
    /**
     * <code>k_EMsgGCTeamInvite_GCResponseToInviter = 7126;</code>
     */
    k_EMsgGCTeamInvite_GCResponseToInviter(86, 7126),
    /**
     * <code>k_EMsgGCTeamInvite_GCResponseToInvitee = 7127;</code>
     */
    k_EMsgGCTeamInvite_GCResponseToInvitee(87, 7127),
    /**
     * <code>k_EMsgGCKickTeamMember = 7128;</code>
     */
    k_EMsgGCKickTeamMember(88, 7128),
    /**
     * <code>k_EMsgGCKickTeamMemberResponse = 7129;</code>
     */
    k_EMsgGCKickTeamMemberResponse(89, 7129),
    /**
     * <code>k_EMsgGCLeaveTeam = 7130;</code>
     */
    k_EMsgGCLeaveTeam(90, 7130),
    /**
     * <code>k_EMsgGCLeaveTeamResponse = 7131;</code>
     */
    k_EMsgGCLeaveTeamResponse(91, 7131),
    /**
     * <code>k_EMsgGCSuggestTeamMatchmaking = 7132;</code>
     */
    k_EMsgGCSuggestTeamMatchmaking(92, 7132),
    /**
     * <code>k_EMsgGCPlayerHeroesFavoritesAdd = 7133;</code>
     */
    k_EMsgGCPlayerHeroesFavoritesAdd(93, 7133),
    /**
     * <code>k_EMsgGCPlayerHeroesFavoritesRemove = 7134;</code>
     */
    k_EMsgGCPlayerHeroesFavoritesRemove(94, 7134),
    /**
     * <code>k_EMsgGCEditTeamLogo = 7139;</code>
     */
    k_EMsgGCEditTeamLogo(95, 7139),
    /**
     * <code>k_EMsgGCEditTeamLogoResponse = 7140;</code>
     */
    k_EMsgGCEditTeamLogoResponse(96, 7140),
    /**
     * <code>k_EMsgGCSetShowcaseHero = 7141;</code>
     */
    k_EMsgGCSetShowcaseHero(97, 7141),
    /**
     * <code>k_EMsgGCApplyTeamToPracticeLobby = 7142;</code>
     */
    k_EMsgGCApplyTeamToPracticeLobby(98, 7142),
    /**
     * <code>k_EMsgGCRequestInternatinalTicketEmail = 7143;</code>
     */
    k_EMsgGCRequestInternatinalTicketEmail(99, 7143),
    /**
     * <code>k_EMsgGCTransferTeamAdmin = 7144;</code>
     */
    k_EMsgGCTransferTeamAdmin(100, 7144),
    /**
     * <code>k_EMsgGCClearTournamentGame = 7145;</code>
     */
    k_EMsgGCClearTournamentGame(101, 7145),
    /**
     * <code>k_EMsgRequestLeagueInfo = 7147;</code>
     */
    k_EMsgRequestLeagueInfo(102, 7147),
    /**
     * <code>k_EMsgResponseLeagueInfo = 7148;</code>
     */
    k_EMsgResponseLeagueInfo(103, 7148),
    /**
     * <code>k_EMsgGCPracticeLobbyJoinBroadcastChannel = 7149;</code>
     */
    k_EMsgGCPracticeLobbyJoinBroadcastChannel(104, 7149),
    /**
     * <code>k_EMsgGC_TournamentItemEvent = 7150;</code>
     */
    k_EMsgGC_TournamentItemEvent(105, 7150),
    /**
     * <code>k_EMsgGC_TournamentItemEventResponse = 7151;</code>
     */
    k_EMsgGC_TournamentItemEventResponse(106, 7151),
    /**
     * <code>k_EMsgCastMatchVote = 7152;</code>
     */
    k_EMsgCastMatchVote(107, 7152),
    /**
     * <code>k_EMsgCastMatchVoteResponse = 7153;</code>
     */
    k_EMsgCastMatchVoteResponse(108, 7153),
    /**
     * <code>k_EMsgRetrieveMatchVote = 7154;</code>
     */
    k_EMsgRetrieveMatchVote(109, 7154),
    /**
     * <code>k_EMsgRetrieveMatchVoteResponse = 7155;</code>
     */
    k_EMsgRetrieveMatchVoteResponse(110, 7155),
    /**
     * <code>k_EMsgTeamFanfare = 7156;</code>
     */
    k_EMsgTeamFanfare(111, 7156),
    /**
     * <code>k_EMsgResponseTeamFanfare = 7157;</code>
     */
    k_EMsgResponseTeamFanfare(112, 7157),
    /**
     * <code>k_EMsgGC_GameServerUploadSaveGame = 7158;</code>
     */
    k_EMsgGC_GameServerUploadSaveGame(113, 7158),
    /**
     * <code>k_EMsgGC_GameServerSaveGameResult = 7159;</code>
     */
    k_EMsgGC_GameServerSaveGameResult(114, 7159),
    /**
     * <code>k_EMsgGC_GameServerGetLoadGame = 7160;</code>
     */
    k_EMsgGC_GameServerGetLoadGame(115, 7160),
    /**
     * <code>k_EMsgGC_GameServerGetLoadGameResult = 7161;</code>
     */
    k_EMsgGC_GameServerGetLoadGameResult(116, 7161),
    /**
     * <code>k_EMsgGCTeamProfileRequest = 7164;</code>
     */
    k_EMsgGCTeamProfileRequest(117, 7164),
    /**
     * <code>k_EMsgGCTeamProfileResponse = 7165;</code>
     */
    k_EMsgGCTeamProfileResponse(118, 7165),
    /**
     * <code>k_EMsgGCEditTeamDetails = 7166;</code>
     */
    k_EMsgGCEditTeamDetails(119, 7166),
    /**
     * <code>k_EMsgGCEditTeamDetailsResponse = 7167;</code>
     */
    k_EMsgGCEditTeamDetailsResponse(120, 7167),
    /**
     * <code>k_EMsgGCProTeamListRequest = 7168;</code>
     */
    k_EMsgGCProTeamListRequest(121, 7168),
    /**
     * <code>k_EMsgGCProTeamListResponse = 7169;</code>
     */
    k_EMsgGCProTeamListResponse(122, 7169),
    /**
     * <code>k_EMsgGCReadyUpStatus = 7170;</code>
     */
    k_EMsgGCReadyUpStatus(123, 7170),
    /**
     * <code>k_EMsgGCHallOfFame = 7171;</code>
     */
    k_EMsgGCHallOfFame(124, 7171),
    /**
     * <code>k_EMsgGCHallOfFameRequest = 7172;</code>
     */
    k_EMsgGCHallOfFameRequest(125, 7172),
    /**
     * <code>k_EMsgGCHallOfFameResponse = 7173;</code>
     */
    k_EMsgGCHallOfFameResponse(126, 7173),
    /**
     * <code>k_EMsgGCGenerateDiretidePrizeList = 7174;</code>
     */
    k_EMsgGCGenerateDiretidePrizeList(127, 7174),
    /**
     * <code>k_EMsgGCRewardDiretidePrizes = 7176;</code>
     */
    k_EMsgGCRewardDiretidePrizes(128, 7176),
    /**
     * <code>k_EMsgGCDiretidePrizesRewardedResponse = 7177;</code>
     */
    k_EMsgGCDiretidePrizesRewardedResponse(129, 7177),
    /**
     * <code>k_EMsgGCHalloweenHighScoreRequest = 7178;</code>
     */
    k_EMsgGCHalloweenHighScoreRequest(130, 7178),
    /**
     * <code>k_EMsgGCHalloweenHighScoreResponse = 7179;</code>
     */
    k_EMsgGCHalloweenHighScoreResponse(131, 7179),
    /**
     * <code>k_EMsgGCGenerateDiretidePrizeListResponse = 7180;</code>
     */
    k_EMsgGCGenerateDiretidePrizeListResponse(132, 7180),
    /**
     * <code>k_EMsgGCStorePromoPagesRequest = 7182;</code>
     */
    k_EMsgGCStorePromoPagesRequest(133, 7182),
    /**
     * <code>k_EMsgGCStorePromoPagesResponse = 7183;</code>
     */
    k_EMsgGCStorePromoPagesResponse(134, 7183),
    /**
     * <code>k_EMsgGCSpawnLootGreevil = 7184;</code>
     */
    k_EMsgGCSpawnLootGreevil(135, 7184),
    /**
     * <code>k_EMsgGCDismissLootGreevil = 7185;</code>
     */
    k_EMsgGCDismissLootGreevil(136, 7185),
    /**
     * <code>k_EMsgGCToGCMatchCompleted = 7186;</code>
     */
    k_EMsgGCToGCMatchCompleted(137, 7186),
    /**
     * <code>k_EMsgGCDismissLootGreevilResponse = 7187;</code>
     */
    k_EMsgGCDismissLootGreevilResponse(138, 7187),
    /**
     * <code>k_EMsgGCBalancedShuffleLobby = 7188;</code>
     */
    k_EMsgGCBalancedShuffleLobby(139, 7188),
    /**
     * <code>k_EMsgGCToGCCheckLeaguePermission = 7189;</code>
     */
    k_EMsgGCToGCCheckLeaguePermission(140, 7189),
    /**
     * <code>k_EMsgGCToGCCheckLeaguePermissionResponse = 7190;</code>
     */
    k_EMsgGCToGCCheckLeaguePermissionResponse(141, 7190),
    /**
     * <code>k_EMsgGCLeagueScheduleRequest = 7191;</code>
     */
    k_EMsgGCLeagueScheduleRequest(142, 7191),
    /**
     * <code>k_EMsgGCLeagueScheduleResponse = 7192;</code>
     */
    k_EMsgGCLeagueScheduleResponse(143, 7192),
    /**
     * <code>k_EMsgGCLeagueScheduleEdit = 7193;</code>
     */
    k_EMsgGCLeagueScheduleEdit(144, 7193),
    /**
     * <code>k_EMsgGCLeagueScheduleEditResponse = 7194;</code>
     */
    k_EMsgGCLeagueScheduleEditResponse(145, 7194),
    /**
     * <code>k_EMsgGCLeaguesInMonthRequest = 7195;</code>
     */
    k_EMsgGCLeaguesInMonthRequest(146, 7195),
    /**
     * <code>k_EMsgGCLeaguesInMonthResponse = 7196;</code>
     */
    k_EMsgGCLeaguesInMonthResponse(147, 7196),
    /**
     * <code>k_EMsgGCMatchmakingStatsRequest = 7197;</code>
     */
    k_EMsgGCMatchmakingStatsRequest(148, 7197),
    /**
     * <code>k_EMsgGCMatchmakingStatsResponse = 7198;</code>
     */
    k_EMsgGCMatchmakingStatsResponse(149, 7198),
    /**
     * <code>k_EMsgGCBotGameCreate = 7199;</code>
     */
    k_EMsgGCBotGameCreate(150, 7199),
    /**
     * <code>k_EMsgGCSetMatchHistoryAccess = 7200;</code>
     */
    k_EMsgGCSetMatchHistoryAccess(151, 7200),
    /**
     * <code>k_EMsgGCSetMatchHistoryAccessResponse = 7201;</code>
     */
    k_EMsgGCSetMatchHistoryAccessResponse(152, 7201),
    /**
     * <code>k_EMsgUpgradeLeagueItem = 7203;</code>
     */
    k_EMsgUpgradeLeagueItem(153, 7203),
    /**
     * <code>k_EMsgUpgradeLeagueItemResponse = 7204;</code>
     */
    k_EMsgUpgradeLeagueItemResponse(154, 7204),
    /**
     * <code>k_EMsgGCTeamMemberProfileRequest = 7205;</code>
     */
    k_EMsgGCTeamMemberProfileRequest(155, 7205),
    /**
     * <code>k_EMsgGCWatchDownloadedReplay = 7206;</code>
     */
    k_EMsgGCWatchDownloadedReplay(156, 7206),
    /**
     * <code>k_EMsgGCSetMapLocationState = 7207;</code>
     */
    k_EMsgGCSetMapLocationState(157, 7207),
    /**
     * <code>k_EMsgGCSetMapLocationStateResponse = 7208;</code>
     */
    k_EMsgGCSetMapLocationStateResponse(158, 7208),
    /**
     * <code>k_EMsgGCResetMapLocations = 7209;</code>
     */
    k_EMsgGCResetMapLocations(159, 7209),
    /**
     * <code>k_EMsgGCResetMapLocationsResponse = 7210;</code>
     */
    k_EMsgGCResetMapLocationsResponse(160, 7210),
    /**
     * <code>k_EMsgGCTeamOnProfile = 7211;</code>
     */
    k_EMsgGCTeamOnProfile(161, 7211),
    /**
     * <code>k_EMsgGCSetFeaturedItems = 7212;</code>
     */
    k_EMsgGCSetFeaturedItems(162, 7212),
    /**
     * <code>k_EMsgGCFeaturedItems = 7215;</code>
     */
    k_EMsgGCFeaturedItems(163, 7215),
    /**
     * <code>k_EMsgRefreshPartnerAccountLink = 7216;</code>
     */
    k_EMsgRefreshPartnerAccountLink(164, 7216),
    /**
     * <code>k_EMsgClientsRejoinChatChannels = 7217;</code>
     */
    k_EMsgClientsRejoinChatChannels(165, 7217),
    /**
     * <code>k_EMsgGCToGCGetUserChatInfo = 7218;</code>
     */
    k_EMsgGCToGCGetUserChatInfo(166, 7218),
    /**
     * <code>k_EMsgGCToGCGetUserChatInfoResponse = 7219;</code>
     */
    k_EMsgGCToGCGetUserChatInfoResponse(167, 7219),
    /**
     * <code>k_EMsgGCToGCLeaveAllChatChannels = 7220;</code>
     */
    k_EMsgGCToGCLeaveAllChatChannels(168, 7220),
    /**
     * <code>k_EMsgGCToGCUpdateAccountChatBan = 7221;</code>
     */
    k_EMsgGCToGCUpdateAccountChatBan(169, 7221),
    /**
     * <code>k_EMsgGCGuildCreateRequest = 7222;</code>
     */
    k_EMsgGCGuildCreateRequest(170, 7222),
    /**
     * <code>k_EMsgGCGuildCreateResponse = 7223;</code>
     */
    k_EMsgGCGuildCreateResponse(171, 7223),
    /**
     * <code>k_EMsgGCGuildSetAccountRoleRequest = 7224;</code>
     */
    k_EMsgGCGuildSetAccountRoleRequest(172, 7224),
    /**
     * <code>k_EMsgGCGuildSetAccountRoleResponse = 7225;</code>
     */
    k_EMsgGCGuildSetAccountRoleResponse(173, 7225),
    /**
     * <code>k_EMsgGCRequestGuildData = 7226;</code>
     */
    k_EMsgGCRequestGuildData(174, 7226),
    /**
     * <code>k_EMsgGCGuildData = 7227;</code>
     */
    k_EMsgGCGuildData(175, 7227),
    /**
     * <code>k_EMsgGCGuildInviteAccountRequest = 7228;</code>
     */
    k_EMsgGCGuildInviteAccountRequest(176, 7228),
    /**
     * <code>k_EMsgGCGuildInviteAccountResponse = 7229;</code>
     */
    k_EMsgGCGuildInviteAccountResponse(177, 7229),
    /**
     * <code>k_EMsgGCGuildCancelInviteRequest = 7230;</code>
     */
    k_EMsgGCGuildCancelInviteRequest(178, 7230),
    /**
     * <code>k_EMsgGCGuildCancelInviteResponse = 7231;</code>
     */
    k_EMsgGCGuildCancelInviteResponse(179, 7231),
    /**
     * <code>k_EMsgGCGuildUpdateDetailsRequest = 7232;</code>
     */
    k_EMsgGCGuildUpdateDetailsRequest(180, 7232),
    /**
     * <code>k_EMsgGCGuildUpdateDetailsResponse = 7233;</code>
     */
    k_EMsgGCGuildUpdateDetailsResponse(181, 7233),
    /**
     * <code>k_EMsgGCToGCCanInviteUser = 7234;</code>
     */
    k_EMsgGCToGCCanInviteUser(182, 7234),
    /**
     * <code>k_EMsgGCToGCCanInviteUserResponse = 7235;</code>
     */
    k_EMsgGCToGCCanInviteUserResponse(183, 7235),
    /**
     * <code>k_EMsgGCToGCGetUserRank = 7236;</code>
     */
    k_EMsgGCToGCGetUserRank(184, 7236),
    /**
     * <code>k_EMsgGCToGCGetUserRankResponse = 7237;</code>
     */
    k_EMsgGCToGCGetUserRankResponse(185, 7237),
    /**
     * <code>k_EMsgGCToGCUpdateTeamStats = 7240;</code>
     */
    k_EMsgGCToGCUpdateTeamStats(186, 7240),
    /**
     * <code>k_EMsgGCToGCGetTeamRank = 7241;</code>
     */
    k_EMsgGCToGCGetTeamRank(187, 7241),
    /**
     * <code>k_EMsgGCToGCGetTeamRankResponse = 7242;</code>
     */
    k_EMsgGCToGCGetTeamRankResponse(188, 7242),
    /**
     * <code>k_EMsgGCTeamIDByNameRequest = 7245;</code>
     */
    k_EMsgGCTeamIDByNameRequest(189, 7245),
    /**
     * <code>k_EMsgGCTeamIDByNameResponse = 7246;</code>
     */
    k_EMsgGCTeamIDByNameResponse(190, 7246),
    /**
     * <code>k_EMsgGCEditTeam = 7247;</code>
     */
    k_EMsgGCEditTeam(191, 7247),
    /**
     * <code>k_EMsgGCPassportDataRequest = 7248;</code>
     */
    k_EMsgGCPassportDataRequest(192, 7248),
    /**
     * <code>k_EMsgGCPassportDataResponse = 7249;</code>
     */
    k_EMsgGCPassportDataResponse(193, 7249),
    /**
     * <code>k_EMsgGCNotInGuildData = 7251;</code>
     */
    k_EMsgGCNotInGuildData(194, 7251),
    /**
     * <code>k_EMsgGCGuildInviteData = 7254;</code>
     */
    k_EMsgGCGuildInviteData(195, 7254),
    /**
     * <code>k_EMsgGCToGCGetLeagueAdmin = 7255;</code>
     */
    k_EMsgGCToGCGetLeagueAdmin(196, 7255),
    /**
     * <code>k_EMsgGCToGCGetLeagueAdminResponse = 7256;</code>
     */
    k_EMsgGCToGCGetLeagueAdminResponse(197, 7256),
    /**
     * <code>k_EMsgGCRequestLeaguePrizePool = 7258;</code>
     */
    k_EMsgGCRequestLeaguePrizePool(198, 7258),
    /**
     * <code>k_EMsgGCRequestLeaguePrizePoolResponse = 7259;</code>
     */
    k_EMsgGCRequestLeaguePrizePoolResponse(199, 7259),
    /**
     * <code>k_EMsgGCToGCUpdateOpenGuildPartyRequest = 7261;</code>
     */
    k_EMsgGCToGCUpdateOpenGuildPartyRequest(200, 7261),
    /**
     * <code>k_EMsgGCToGCUpdateOpenGuildPartyResponse = 7262;</code>
     */
    k_EMsgGCToGCUpdateOpenGuildPartyResponse(201, 7262),
    /**
     * <code>k_EMsgGCToGCDestroyOpenGuildPartyRequest = 7263;</code>
     */
    k_EMsgGCToGCDestroyOpenGuildPartyRequest(202, 7263),
    /**
     * <code>k_EMsgGCToGCDestroyOpenGuildPartyResponse = 7264;</code>
     */
    k_EMsgGCToGCDestroyOpenGuildPartyResponse(203, 7264),
    /**
     * <code>k_EMsgGCGuildUpdateMessage = 7265;</code>
     */
    k_EMsgGCGuildUpdateMessage(204, 7265),
    /**
     * <code>k_EMsgGCPartySetOpenGuildRequest = 7266;</code>
     */
    k_EMsgGCPartySetOpenGuildRequest(205, 7266),
    /**
     * <code>k_EMsgGCPartySetOpenGuildResponse = 7267;</code>
     */
    k_EMsgGCPartySetOpenGuildResponse(206, 7267),
    /**
     * <code>k_EMsgGCGuildOpenPartyRefresh = 7268;</code>
     */
    k_EMsgGCGuildOpenPartyRefresh(207, 7268),
    /**
     * <code>k_EMsgGCJoinOpenGuildPartyRequest = 7269;</code>
     */
    k_EMsgGCJoinOpenGuildPartyRequest(208, 7269),
    /**
     * <code>k_EMsgGCJoinOpenGuildPartyResponse = 7270;</code>
     */
    k_EMsgGCJoinOpenGuildPartyResponse(209, 7270),
    /**
     * <code>k_EMsgGCLeaveChatChannel = 7272;</code>
     */
    k_EMsgGCLeaveChatChannel(210, 7272),
    /**
     * <code>k_EMsgGCChatMessage = 7273;</code>
     */
    k_EMsgGCChatMessage(211, 7273),
    /**
     * <code>k_EMsgGCGetHeroStandings = 7274;</code>
     */
    k_EMsgGCGetHeroStandings(212, 7274),
    /**
     * <code>k_EMsgGCGetHeroStandingsResponse = 7275;</code>
     */
    k_EMsgGCGetHeroStandingsResponse(213, 7275),
    /**
     * <code>k_EMsgGCGuildEditLogoRequest = 7279;</code>
     */
    k_EMsgGCGuildEditLogoRequest(214, 7279),
    /**
     * <code>k_EMsgGCGuildEditLogoResponse = 7280;</code>
     */
    k_EMsgGCGuildEditLogoResponse(215, 7280),
    /**
     * <code>k_EMsgGCGuildmatePracticeLobbyListRequest = 7281;</code>
     */
    k_EMsgGCGuildmatePracticeLobbyListRequest(216, 7281),
    /**
     * <code>k_EMsgGCGuildmatePracticeLobbyListResponse = 7282;</code>
     */
    k_EMsgGCGuildmatePracticeLobbyListResponse(217, 7282),
    /**
     * <code>k_EMsgGCItemEditorReservationsRequest = 7283;</code>
     */
    k_EMsgGCItemEditorReservationsRequest(218, 7283),
    /**
     * <code>k_EMsgGCItemEditorReservationsResponse = 7284;</code>
     */
    k_EMsgGCItemEditorReservationsResponse(219, 7284),
    /**
     * <code>k_EMsgGCItemEditorReserveItemDef = 7285;</code>
     */
    k_EMsgGCItemEditorReserveItemDef(220, 7285),
    /**
     * <code>k_EMsgGCItemEditorReserveItemDefResponse = 7286;</code>
     */
    k_EMsgGCItemEditorReserveItemDefResponse(221, 7286),
    /**
     * <code>k_EMsgGCItemEditorReleaseReservation = 7287;</code>
     */
    k_EMsgGCItemEditorReleaseReservation(222, 7287),
    /**
     * <code>k_EMsgGCItemEditorReleaseReservationResponse = 7288;</code>
     */
    k_EMsgGCItemEditorReleaseReservationResponse(223, 7288),
    /**
     * <code>k_EMsgGCRewardTutorialPrizes = 7289;</code>
     */
    k_EMsgGCRewardTutorialPrizes(224, 7289),
    /**
     * <code>k_EMsgGCLastHitChallengeHighScorePost = 7290;</code>
     */
    k_EMsgGCLastHitChallengeHighScorePost(225, 7290),
    /**
     * <code>k_EMsgGCLastHitChallengeHighScoreRequest = 7291;</code>
     */
    k_EMsgGCLastHitChallengeHighScoreRequest(226, 7291),
    /**
     * <code>k_EMsgGCLastHitChallengeHighScoreResponse = 7292;</code>
     */
    k_EMsgGCLastHitChallengeHighScoreResponse(227, 7292),
    /**
     * <code>k_EMsgGCCreateFantasyLeagueRequest = 7293;</code>
     */
    k_EMsgGCCreateFantasyLeagueRequest(228, 7293),
    /**
     * <code>k_EMsgGCCreateFantasyLeagueResponse = 7294;</code>
     */
    k_EMsgGCCreateFantasyLeagueResponse(229, 7294),
    /**
     * <code>k_EMsgGCFantasyLeagueInfoRequest = 7297;</code>
     */
    k_EMsgGCFantasyLeagueInfoRequest(230, 7297),
    /**
     * <code>k_EMsgGCFantasyLeagueInfoResponse = 7298;</code>
     */
    k_EMsgGCFantasyLeagueInfoResponse(231, 7298),
    /**
     * <code>k_EMsgGCFantasyLeagueInfo = 7299;</code>
     */
    k_EMsgGCFantasyLeagueInfo(232, 7299),
    /**
     * <code>k_EMsgGCCreateFantasyTeamRequest = 7300;</code>
     */
    k_EMsgGCCreateFantasyTeamRequest(233, 7300),
    /**
     * <code>k_EMsgGCCreateFantasyTeamResponse = 7301;</code>
     */
    k_EMsgGCCreateFantasyTeamResponse(234, 7301),
    /**
     * <code>k_EMsgGCEditFantasyTeamRequest = 7302;</code>
     */
    k_EMsgGCEditFantasyTeamRequest(235, 7302),
    /**
     * <code>k_EMsgGCEditFantasyTeamResponse = 7303;</code>
     */
    k_EMsgGCEditFantasyTeamResponse(236, 7303),
    /**
     * <code>k_EMsgGCFantasyTeamInfoRequestByFantasyLeagueID = 7304;</code>
     */
    k_EMsgGCFantasyTeamInfoRequestByFantasyLeagueID(237, 7304),
    /**
     * <code>k_EMsgGCFantasyTeamInfoRequestByOwnerAccountID = 7305;</code>
     */
    k_EMsgGCFantasyTeamInfoRequestByOwnerAccountID(238, 7305),
    /**
     * <code>k_EMsgGCFantasyTeamInfoResponse = 7306;</code>
     */
    k_EMsgGCFantasyTeamInfoResponse(239, 7306),
    /**
     * <code>k_EMsgGCFantasyTeamInfo = 7307;</code>
     */
    k_EMsgGCFantasyTeamInfo(240, 7307),
    /**
     * <code>k_EMsgGCFantasyLivePlayerStats = 7308;</code>
     */
    k_EMsgGCFantasyLivePlayerStats(241, 7308),
    /**
     * <code>k_EMsgGCFantasyFinalPlayerStats = 7309;</code>
     */
    k_EMsgGCFantasyFinalPlayerStats(242, 7309),
    /**
     * <code>k_EMsgGCFantasyMatch = 7310;</code>
     */
    k_EMsgGCFantasyMatch(243, 7310),
    /**
     * <code>k_EMsgGCToGCReloadVersions = 7311;</code>
     */
    k_EMsgGCToGCReloadVersions(244, 7311),
    /**
     * <code>k_EMsgGCFantasyTeamScoreRequest = 7312;</code>
     */
    k_EMsgGCFantasyTeamScoreRequest(245, 7312),
    /**
     * <code>k_EMsgGCFantasyTeamScoreResponse = 7313;</code>
     */
    k_EMsgGCFantasyTeamScoreResponse(246, 7313),
    /**
     * <code>k_EMsgGCFantasyTeamStandingsRequest = 7314;</code>
     */
    k_EMsgGCFantasyTeamStandingsRequest(247, 7314),
    /**
     * <code>k_EMsgGCFantasyTeamStandingsResponse = 7315;</code>
     */
    k_EMsgGCFantasyTeamStandingsResponse(248, 7315),
    /**
     * <code>k_EMsgGCFantasyPlayerScoreRequest = 7316;</code>
     */
    k_EMsgGCFantasyPlayerScoreRequest(249, 7316),
    /**
     * <code>k_EMsgGCFantasyPlayerScoreResponse = 7317;</code>
     */
    k_EMsgGCFantasyPlayerScoreResponse(250, 7317),
    /**
     * <code>k_EMsgGCFantasyPlayerStandingsRequest = 7318;</code>
     */
    k_EMsgGCFantasyPlayerStandingsRequest(251, 7318),
    /**
     * <code>k_EMsgGCFantasyPlayerStandingsResponse = 7319;</code>
     */
    k_EMsgGCFantasyPlayerStandingsResponse(252, 7319),
    /**
     * <code>k_EMsgGCFlipLobbyTeams = 7320;</code>
     */
    k_EMsgGCFlipLobbyTeams(253, 7320),
    /**
     * <code>k_EMsgGCCustomGameCreate = 7321;</code>
     */
    k_EMsgGCCustomGameCreate(254, 7321),
    /**
     * <code>k_EMsgGCFantasyPlayerInfoRequest = 7322;</code>
     */
    k_EMsgGCFantasyPlayerInfoRequest(255, 7322),
    /**
     * <code>k_EMsgGCFantasyPlayerInfoResponse = 7323;</code>
     */
    k_EMsgGCFantasyPlayerInfoResponse(256, 7323),
    /**
     * <code>k_EMsgGCToGCProcessPlayerReportForTarget = 7324;</code>
     */
    k_EMsgGCToGCProcessPlayerReportForTarget(257, 7324),
    /**
     * <code>k_EMsgGCToGCProcessReportSuccess = 7325;</code>
     */
    k_EMsgGCToGCProcessReportSuccess(258, 7325),
    /**
     * <code>k_EMsgGCNotifyAccountFlagsChange = 7326;</code>
     */
    k_EMsgGCNotifyAccountFlagsChange(259, 7326),
    /**
     * <code>k_EMsgGCSetProfilePrivacy = 7327;</code>
     */
    k_EMsgGCSetProfilePrivacy(260, 7327),
    /**
     * <code>k_EMsgGCSetProfilePrivacyResponse = 7328;</code>
     */
    k_EMsgGCSetProfilePrivacyResponse(261, 7328),
    /**
     * <code>k_EMsgGCSteamProfileRequest = 7329;</code>
     */
    k_EMsgGCSteamProfileRequest(262, 7329),
    /**
     * <code>k_EMsgGCSteamProfileRequestResponse = 7330;</code>
     */
    k_EMsgGCSteamProfileRequestResponse(263, 7330),
    /**
     * <code>k_EMsgGCFantasyLeagueCreateInfoRequest = 7331;</code>
     */
    k_EMsgGCFantasyLeagueCreateInfoRequest(264, 7331),
    /**
     * <code>k_EMsgGCFantasyLeagueCreateInfoResponse = 7332;</code>
     */
    k_EMsgGCFantasyLeagueCreateInfoResponse(265, 7332),
    /**
     * <code>k_EMsgGCFantasyLeagueInviteInfoRequest = 7333;</code>
     */
    k_EMsgGCFantasyLeagueInviteInfoRequest(266, 7333),
    /**
     * <code>k_EMsgGCFantasyLeagueInviteInfoResponse = 7334;</code>
     */
    k_EMsgGCFantasyLeagueInviteInfoResponse(267, 7334),
    /**
     * <code>k_EMsgGCClientIgnoredUser = 7335;</code>
     */
    k_EMsgGCClientIgnoredUser(268, 7335),
    /**
     * <code>k_EMsgGCFantasyLeagueCreateRequest = 7336;</code>
     */
    k_EMsgGCFantasyLeagueCreateRequest(269, 7336),
    /**
     * <code>k_EMsgGCFantasyLeagueCreateResponse = 7337;</code>
     */
    k_EMsgGCFantasyLeagueCreateResponse(270, 7337),
    /**
     * <code>k_EMsgGCFantasyTeamCreateRequest = 7338;</code>
     */
    k_EMsgGCFantasyTeamCreateRequest(271, 7338),
    /**
     * <code>k_EMsgGCFantasyTeamCreateResponse = 7339;</code>
     */
    k_EMsgGCFantasyTeamCreateResponse(272, 7339),
    /**
     * <code>k_EMsgGCFantasyLeagueFriendJoinListRequest = 7340;</code>
     */
    k_EMsgGCFantasyLeagueFriendJoinListRequest(273, 7340),
    /**
     * <code>k_EMsgGCFantasyLeagueFriendJoinListResponse = 7341;</code>
     */
    k_EMsgGCFantasyLeagueFriendJoinListResponse(274, 7341),
    /**
     * <code>k_EMsgGCClientSuspended = 7342;</code>
     */
    k_EMsgGCClientSuspended(275, 7342),
    /**
     * <code>k_EMsgGCPartyMemberSetCoach = 7343;</code>
     */
    k_EMsgGCPartyMemberSetCoach(276, 7343),
    /**
     * <code>k_EMsgGCFantasyLeagueEditInvitesRequest = 7344;</code>
     */
    k_EMsgGCFantasyLeagueEditInvitesRequest(277, 7344),
    /**
     * <code>k_EMsgGCFantasyLeagueEditInvitesResponse = 7345;</code>
     */
    k_EMsgGCFantasyLeagueEditInvitesResponse(278, 7345),
    /**
     * <code>k_EMsgGCPracticeLobbySetCoach = 7346;</code>
     */
    k_EMsgGCPracticeLobbySetCoach(279, 7346),
    /**
     * <code>k_EMsgGCFantasyLeagueEditInfoRequest = 7347;</code>
     */
    k_EMsgGCFantasyLeagueEditInfoRequest(280, 7347),
    /**
     * <code>k_EMsgGCFantasyLeagueEditInfoResponse = 7348;</code>
     */
    k_EMsgGCFantasyLeagueEditInfoResponse(281, 7348),
    /**
     * <code>k_EMsgGCFantasyLeagueDraftStatusRequest = 7349;</code>
     */
    k_EMsgGCFantasyLeagueDraftStatusRequest(282, 7349),
    /**
     * <code>k_EMsgGCFantasyLeagueDraftStatus = 7350;</code>
     */
    k_EMsgGCFantasyLeagueDraftStatus(283, 7350),
    /**
     * <code>k_EMsgGCFantasyLeagueDraftPlayerRequest = 7351;</code>
     */
    k_EMsgGCFantasyLeagueDraftPlayerRequest(284, 7351),
    /**
     * <code>k_EMsgGCFantasyLeagueDraftPlayerResponse = 7352;</code>
     */
    k_EMsgGCFantasyLeagueDraftPlayerResponse(285, 7352),
    /**
     * <code>k_EMsgGCFantasyLeagueMatchupsRequest = 7353;</code>
     */
    k_EMsgGCFantasyLeagueMatchupsRequest(286, 7353),
    /**
     * <code>k_EMsgGCFantasyLeagueMatchupsResponse = 7354;</code>
     */
    k_EMsgGCFantasyLeagueMatchupsResponse(287, 7354),
    /**
     * <code>k_EMsgGCFantasyTeamRosterSwapRequest = 7355;</code>
     */
    k_EMsgGCFantasyTeamRosterSwapRequest(288, 7355),
    /**
     * <code>k_EMsgGCFantasyTeamRosterSwapResponse = 7356;</code>
     */
    k_EMsgGCFantasyTeamRosterSwapResponse(289, 7356),
    /**
     * <code>k_EMsgGCFantasyTeamRosterRequest = 7357;</code>
     */
    k_EMsgGCFantasyTeamRosterRequest(290, 7357),
    /**
     * <code>k_EMsgGCFantasyTeamRosterResponse = 7358;</code>
     */
    k_EMsgGCFantasyTeamRosterResponse(291, 7358),
    /**
     * <code>k_EMsgGCNexonPartnerUpdate = 7359;</code>
     */
    k_EMsgGCNexonPartnerUpdate(292, 7359),
    /**
     * <code>k_EMsgGCToGCProcessPCBangRewardPoints = 7360;</code>
     */
    k_EMsgGCToGCProcessPCBangRewardPoints(293, 7360),
    /**
     * <code>k_EMsgGCFantasyTeamRosterAddDropRequest = 7361;</code>
     */
    k_EMsgGCFantasyTeamRosterAddDropRequest(294, 7361),
    /**
     * <code>k_EMsgGCFantasyTeamRosterAddDropResponse = 7362;</code>
     */
    k_EMsgGCFantasyTeamRosterAddDropResponse(295, 7362),
    /**
     * <code>k_EMsgPresentedClientTerminateDlg = 7363;</code>
     */
    k_EMsgPresentedClientTerminateDlg(296, 7363),
    /**
     * <code>k_EMsgGCFantasyPlayerHisoricalStatsRequest = 7364;</code>
     */
    k_EMsgGCFantasyPlayerHisoricalStatsRequest(297, 7364),
    /**
     * <code>k_EMsgGCFantasyPlayerHisoricalStatsResponse = 7365;</code>
     */
    k_EMsgGCFantasyPlayerHisoricalStatsResponse(298, 7365),
    /**
     * <code>k_EMsgGCPCBangTimedRewardMessage = 7366;</code>
     */
    k_EMsgGCPCBangTimedRewardMessage(299, 7366),
    /**
     * <code>k_EMsgGCLobbyUpdateBroadcastChannelInfo = 7367;</code>
     */
    k_EMsgGCLobbyUpdateBroadcastChannelInfo(300, 7367),
    /**
     * <code>k_EMsgGCFantasyTeamTradesRequest = 7368;</code>
     */
    k_EMsgGCFantasyTeamTradesRequest(301, 7368),
    /**
     * <code>k_EMsgGCFantasyTeamTradesResponse = 7369;</code>
     */
    k_EMsgGCFantasyTeamTradesResponse(302, 7369),
    /**
     * <code>k_EMsgGCFantasyTeamTradeCancelRequest = 7370;</code>
     */
    k_EMsgGCFantasyTeamTradeCancelRequest(303, 7370),
    /**
     * <code>k_EMsgGCFantasyTeamTradeCancelResponse = 7371;</code>
     */
    k_EMsgGCFantasyTeamTradeCancelResponse(304, 7371),
    /**
     * <code>k_EMsgGCToGCGrantTournamentItem = 7372;</code>
     */
    k_EMsgGCToGCGrantTournamentItem(305, 7372),
    /**
     * <code>k_EMsgGCProcessFantasyScheduledEvent = 7373;</code>
     */
    k_EMsgGCProcessFantasyScheduledEvent(306, 7373),
    /**
     * <code>k_EMsgGCToGCGrantPCBangRewardItem = 7374;</code>
     */
    k_EMsgGCToGCGrantPCBangRewardItem(307, 7374),
    /**
     * <code>k_EMsgGCToGCUpgradeTwitchViewerItems = 7375;</code>
     */
    k_EMsgGCToGCUpgradeTwitchViewerItems(308, 7375),
    /**
     * <code>k_EMsgGCToGCGetLiveMatchAffiliates = 7376;</code>
     */
    k_EMsgGCToGCGetLiveMatchAffiliates(309, 7376),
    /**
     * <code>k_EMsgGCToGCGetLiveMatchAffiliatesResponse = 7377;</code>
     */
    k_EMsgGCToGCGetLiveMatchAffiliatesResponse(310, 7377),
    /**
     * <code>k_EMsgGCToGCUpdatePlayerPennantCounts = 7378;</code>
     */
    k_EMsgGCToGCUpdatePlayerPennantCounts(311, 7378),
    /**
     * <code>k_EMsgGCToGCGetPlayerPennantCounts = 7379;</code>
     */
    k_EMsgGCToGCGetPlayerPennantCounts(312, 7379),
    /**
     * <code>k_EMsgGCToGCGetPlayerPennantCountsResponse = 7380;</code>
     */
    k_EMsgGCToGCGetPlayerPennantCountsResponse(313, 7380),
    /**
     * <code>k_EMsgGCGameMatchSignOutPermissionRequest = 7381;</code>
     */
    k_EMsgGCGameMatchSignOutPermissionRequest(314, 7381),
    /**
     * <code>k_EMsgGCGameMatchSignOutPermissionResponse = 7382;</code>
     */
    k_EMsgGCGameMatchSignOutPermissionResponse(315, 7382),
    /**
     * <code>k_EMsgDOTAChatChannelMemberUpdate = 7383;</code>
     */
    k_EMsgDOTAChatChannelMemberUpdate(316, 7383),
    /**
     * <code>k_EMsgDOTAAwardEventPoints = 7384;</code>
     */
    k_EMsgDOTAAwardEventPoints(317, 7384),
    /**
     * <code>k_EMsgDOTARedeemEventPrize = 7385;</code>
     */
    k_EMsgDOTARedeemEventPrize(318, 7385),
    /**
     * <code>k_EMsgDOTARedeemEventPrizeResponse = 7386;</code>
     */
    k_EMsgDOTARedeemEventPrizeResponse(319, 7386),
    /**
     * <code>k_EMsgDOTAGetEventPoints = 7387;</code>
     */
    k_EMsgDOTAGetEventPoints(320, 7387),
    /**
     * <code>k_EMsgDOTAGetEventPointsResponse = 7388;</code>
     */
    k_EMsgDOTAGetEventPointsResponse(321, 7388),
    /**
     * <code>k_EMsgGCToGCSignoutAwardEventPoints = 7390;</code>
     */
    k_EMsgGCToGCSignoutAwardEventPoints(322, 7390),
    /**
     * <code>k_EMsgDOTASendFriendRecruits = 7393;</code>
     */
    k_EMsgDOTASendFriendRecruits(323, 7393),
    /**
     * <code>k_EMsgDOTAFriendRecruitsRequest = 7394;</code>
     */
    k_EMsgDOTAFriendRecruitsRequest(324, 7394),
    /**
     * <code>k_EMsgDOTAFriendRecruitsResponse = 7395;</code>
     */
    k_EMsgDOTAFriendRecruitsResponse(325, 7395),
    /**
     * <code>k_EMsgDOTAFriendRecruitInviteAcceptDecline = 7396;</code>
     */
    k_EMsgDOTAFriendRecruitInviteAcceptDecline(326, 7396),
    /**
     * <code>k_EMsgGCPartyLeaderWatchGamePrompt = 7397;</code>
     */
    k_EMsgGCPartyLeaderWatchGamePrompt(327, 7397),
    /**
     * <code>k_EMsgDOTAFrostivusTimeElapsed = 7398;</code>
     */
    k_EMsgDOTAFrostivusTimeElapsed(328, 7398),
    /**
     * <code>k_EMsgGCToGCGrantEarnedLicense = 7399;</code>
     */
    k_EMsgGCToGCGrantEarnedLicense(329, 7399),
    /**
     * <code>k_EMsgDOTALiveLeagueGameUpdate = 7402;</code>
     */
    k_EMsgDOTALiveLeagueGameUpdate(330, 7402),
    /**
     * <code>k_EMsgDOTAChatGetUserList = 7403;</code>
     */
    k_EMsgDOTAChatGetUserList(331, 7403),
    /**
     * <code>k_EMsgDOTAChatGetUserListResponse = 7404;</code>
     */
    k_EMsgDOTAChatGetUserListResponse(332, 7404),
    /**
     * <code>k_EMsgGCCompendiumSetSelection = 7405;</code>
     */
    k_EMsgGCCompendiumSetSelection(333, 7405),
    /**
     * <code>k_EMsgGCCompendiumDataRequest = 7406;</code>
     */
    k_EMsgGCCompendiumDataRequest(334, 7406),
    /**
     * <code>k_EMsgGCCompendiumDataResponse = 7407;</code>
     */
    k_EMsgGCCompendiumDataResponse(335, 7407),
    /**
     * <code>k_EMsgDOTAGetPlayerMatchHistory = 7408;</code>
     */
    k_EMsgDOTAGetPlayerMatchHistory(336, 7408),
    /**
     * <code>k_EMsgDOTAGetPlayerMatchHistoryResponse = 7409;</code>
     */
    k_EMsgDOTAGetPlayerMatchHistoryResponse(337, 7409),
    /**
     * <code>k_EMsgGCToGCMatchmakingAddParty = 7410;</code>
     */
    k_EMsgGCToGCMatchmakingAddParty(338, 7410),
    /**
     * <code>k_EMsgGCToGCMatchmakingRemoveParty = 7411;</code>
     */
    k_EMsgGCToGCMatchmakingRemoveParty(339, 7411),
    /**
     * <code>k_EMsgGCToGCMatchmakingRemoveAllParties = 7412;</code>
     */
    k_EMsgGCToGCMatchmakingRemoveAllParties(340, 7412),
    /**
     * <code>k_EMsgGCToGCMatchmakingMatchFound = 7413;</code>
     */
    k_EMsgGCToGCMatchmakingMatchFound(341, 7413),
    /**
     * <code>k_EMsgGCToGCUpdateMatchManagementStats = 7414;</code>
     */
    k_EMsgGCToGCUpdateMatchManagementStats(342, 7414),
    /**
     * <code>k_EMsgGCToGCUpdateMatchmakingStats = 7415;</code>
     */
    k_EMsgGCToGCUpdateMatchmakingStats(343, 7415),
    /**
     * <code>k_EMsgGCToServerPingRequest = 7416;</code>
     */
    k_EMsgGCToServerPingRequest(344, 7416),
    /**
     * <code>k_EMsgGCToServerPingResponse = 7417;</code>
     */
    k_EMsgGCToServerPingResponse(345, 7417),
    /**
     * <code>k_EMsgGCToServerConsoleCommand = 7418;</code>
     */
    k_EMsgGCToServerConsoleCommand(346, 7418),
    /**
     * <code>k_EMsgGCToGCUpdateLiveLeagueGameInfo = 7420;</code>
     */
    k_EMsgGCToGCUpdateLiveLeagueGameInfo(347, 7420),
    /**
     * <code>k_EMsgGCMakeOffering = 7423;</code>
     */
    k_EMsgGCMakeOffering(348, 7423),
    /**
     * <code>k_EMsgGCRequestOfferings = 7424;</code>
     */
    k_EMsgGCRequestOfferings(349, 7424),
    /**
     * <code>k_EMsgGCRequestOfferingsResponse = 7425;</code>
     */
    k_EMsgGCRequestOfferingsResponse(350, 7425),
    /**
     * <code>k_EMsgGCToGCProcessMatchLeaver = 7426;</code>
     */
    k_EMsgGCToGCProcessMatchLeaver(351, 7426),
    /**
     * <code>k_EMsgGCNotificationsRequest = 7427;</code>
     */
    k_EMsgGCNotificationsRequest(352, 7427),
    /**
     * <code>k_EMsgGCNotificationsResponse = 7428;</code>
     */
    k_EMsgGCNotificationsResponse(353, 7428),
    /**
     * <code>k_EMsgGCToGCModifyNotification = 7429;</code>
     */
    k_EMsgGCToGCModifyNotification(354, 7429),
    /**
     * <code>k_EMsgGCToGCSetNewNotifications = 7430;</code>
     */
    k_EMsgGCToGCSetNewNotifications(355, 7430),
    /**
     * <code>k_EMsgGCToGCSetIsLeagueAdmin = 7431;</code>
     */
    k_EMsgGCToGCSetIsLeagueAdmin(356, 7431),
    /**
     * <code>k_EMsgGCLeagueAdminState = 7432;</code>
     */
    k_EMsgGCLeagueAdminState(357, 7432),
    /**
     * <code>k_EMsgGCToGCSendLeagueAdminState = 7433;</code>
     */
    k_EMsgGCToGCSendLeagueAdminState(358, 7433),
    /**
     * <code>k_EMsgGCLeagueAdminList = 7434;</code>
     */
    k_EMsgGCLeagueAdminList(359, 7434),
    /**
     * <code>k_EMsgGCNotificationsMarkReadRequest = 7435;</code>
     */
    k_EMsgGCNotificationsMarkReadRequest(360, 7435),
    /**
     * <code>k_EMsgGCFantasyMessageAdd = 7436;</code>
     */
    k_EMsgGCFantasyMessageAdd(361, 7436),
    /**
     * <code>k_EMsgGCFantasyMessagesRequest = 7437;</code>
     */
    k_EMsgGCFantasyMessagesRequest(362, 7437),
    /**
     * <code>k_EMsgGCFantasyMessagesResponse = 7438;</code>
     */
    k_EMsgGCFantasyMessagesResponse(363, 7438),
    /**
     * <code>k_EMsgGCFantasyScheduledMatchesRequest = 7439;</code>
     */
    k_EMsgGCFantasyScheduledMatchesRequest(364, 7439),
    /**
     * <code>k_EMsgGCFantasyScheduledMatchesResponse = 7440;</code>
     */
    k_EMsgGCFantasyScheduledMatchesResponse(365, 7440),
    /**
     * <code>k_EMsgGCToGCGrantLeagueAccess = 7441;</code>
     */
    k_EMsgGCToGCGrantLeagueAccess(366, 7441),
    /**
     * <code>k_EMsgGCEventGameCreate = 7443;</code>
     */
    k_EMsgGCEventGameCreate(367, 7443),
    /**
     * <code>k_EMsgGCPerfectWorldUserLookupRequest = 7444;</code>
     */
    k_EMsgGCPerfectWorldUserLookupRequest(368, 7444),
    /**
     * <code>k_EMsgGCPerfectWorldUserLookupResponse = 7445;</code>
     */
    k_EMsgGCPerfectWorldUserLookupResponse(369, 7445),
    /**
     * <code>k_EMsgGCToGCIncrementRecruitmentSDO = 7446;</code>
     */
    k_EMsgGCToGCIncrementRecruitmentSDO(370, 7446),
    /**
     * <code>k_EMsgGCToGCIncrementRecruitmentLevel = 7447;</code>
     */
    k_EMsgGCToGCIncrementRecruitmentLevel(371, 7447),
    /**
     * <code>k_EMsgGCFantasyRemoveOwner = 7448;</code>
     */
    k_EMsgGCFantasyRemoveOwner(372, 7448),
    /**
     * <code>k_EMsgGCFantasyRemoveOwnerResponse = 7449;</code>
     */
    k_EMsgGCFantasyRemoveOwnerResponse(373, 7449),
    /**
     * <code>k_EMsgGCRequestBatchPlayerResources = 7450;</code>
     */
    k_EMsgGCRequestBatchPlayerResources(374, 7450),
    /**
     * <code>k_EMsgGCRequestBatchPlayerResourcesResponse = 7451;</code>
     */
    k_EMsgGCRequestBatchPlayerResourcesResponse(375, 7451),
    /**
     * <code>k_EMsgGCToGCSendUpdateLeagues = 7452;</code>
     */
    k_EMsgGCToGCSendUpdateLeagues(376, 7452),
    /**
     * <code>k_EMsgGCCompendiumSetSelectionResponse = 7453;</code>
     */
    k_EMsgGCCompendiumSetSelectionResponse(377, 7453),
    /**
     * <code>k_EMsgGCPlayerInfoRequest = 7454;</code>
     */
    k_EMsgGCPlayerInfoRequest(378, 7454),
    /**
     * <code>k_EMsgGCPlayerInfo = 7455;</code>
     */
    k_EMsgGCPlayerInfo(379, 7455),
    /**
     * <code>k_EMsgGCPlayerInfoSubmit = 7456;</code>
     */
    k_EMsgGCPlayerInfoSubmit(380, 7456),
    /**
     * <code>k_EMsgGCPlayerInfoSubmitResponse = 7457;</code>
     */
    k_EMsgGCPlayerInfoSubmitResponse(381, 7457),
    /**
     * <code>k_EMsgGCToGCGetAccountLevel = 7458;</code>
     */
    k_EMsgGCToGCGetAccountLevel(382, 7458),
    /**
     * <code>k_EMsgGCToGCGetAccountLevelResponse = 7459;</code>
     */
    k_EMsgGCToGCGetAccountLevelResponse(383, 7459),
    /**
     * <code>k_EMsgGCToGCGetAccountPartner = 7460;</code>
     */
    k_EMsgGCToGCGetAccountPartner(384, 7460),
    /**
     * <code>k_EMsgGCToGCGetAccountPartnerResponse = 7461;</code>
     */
    k_EMsgGCToGCGetAccountPartnerResponse(385, 7461),
    /**
     * <code>k_EMsgGCToGCGetAccountProfile = 7462;</code>
     */
    k_EMsgGCToGCGetAccountProfile(386, 7462),
    /**
     * <code>k_EMsgGCToGCGetAccountProfileResponse = 7463;</code>
     */
    k_EMsgGCToGCGetAccountProfileResponse(387, 7463),
    /**
     * <code>k_EMsgDOTAGetWeekendTourneySchedule = 7464;</code>
     */
    k_EMsgDOTAGetWeekendTourneySchedule(388, 7464),
    /**
     * <code>k_EMsgDOTAWeekendTourneySchedule = 7465;</code>
     */
    k_EMsgDOTAWeekendTourneySchedule(389, 7465),
    /**
     * <code>k_EMsgGCJoinableCustomGameModesRequest = 7466;</code>
     */
    k_EMsgGCJoinableCustomGameModesRequest(390, 7466),
    /**
     * <code>k_EMsgGCJoinableCustomGameModesResponse = 7467;</code>
     */
    k_EMsgGCJoinableCustomGameModesResponse(391, 7467),
    /**
     * <code>k_EMsgGCJoinableCustomLobbiesRequest = 7468;</code>
     */
    k_EMsgGCJoinableCustomLobbiesRequest(392, 7468),
    /**
     * <code>k_EMsgGCJoinableCustomLobbiesResponse = 7469;</code>
     */
    k_EMsgGCJoinableCustomLobbiesResponse(393, 7469),
    /**
     * <code>k_EMsgGCQuickJoinCustomLobby = 7470;</code>
     */
    k_EMsgGCQuickJoinCustomLobby(394, 7470),
    /**
     * <code>k_EMsgGCQuickJoinCustomLobbyResponse = 7471;</code>
     */
    k_EMsgGCQuickJoinCustomLobbyResponse(395, 7471),
    /**
     * <code>k_EMsgGCToGCGrantEventPointAction = 7472;</code>
     */
    k_EMsgGCToGCGrantEventPointAction(396, 7472),
    /**
     * <code>k_EMsgServerGetEventPoints = 7473;</code>
     */
    k_EMsgServerGetEventPoints(397, 7473),
    /**
     * <code>k_EMsgServerGetEventPointsResponse = 7474;</code>
     */
    k_EMsgServerGetEventPointsResponse(398, 7474),
    /**
     * <code>k_EMsgServerGrantSurveyPermission = 7475;</code>
     */
    k_EMsgServerGrantSurveyPermission(399, 7475),
    /**
     * <code>k_EMsgServerGrantSurveyPermissionResponse = 7476;</code>
     */
    k_EMsgServerGrantSurveyPermissionResponse(400, 7476),
    /**
     * <code>k_EMsgClientProvideSurveyResult = 7477;</code>
     */
    k_EMsgClientProvideSurveyResult(401, 7477),
    /**
     * <code>k_EMsgGCToGCSetCompendiumSelection = 7478;</code>
     */
    k_EMsgGCToGCSetCompendiumSelection(402, 7478),
    /**
     * <code>k_EMsgGCToGCUpdateTI4HeroQuest = 7480;</code>
     */
    k_EMsgGCToGCUpdateTI4HeroQuest(403, 7480),
    /**
     * <code>k_EMsgGCCompendiumDataChanged = 7481;</code>
     */
    k_EMsgGCCompendiumDataChanged(404, 7481),
    /**
     * <code>k_EMsgDOTAFantasyLeagueFindRequest = 7482;</code>
     */
    k_EMsgDOTAFantasyLeagueFindRequest(405, 7482),
    /**
     * <code>k_EMsgDOTAFantasyLeagueFindResponse = 7483;</code>
     */
    k_EMsgDOTAFantasyLeagueFindResponse(406, 7483),
    /**
     * <code>k_EMsgGCHasItemQuery = 7484;</code>
     */
    k_EMsgGCHasItemQuery(407, 7484),
    /**
     * <code>k_EMsgGCHasItemResponse = 7485;</code>
     */
    k_EMsgGCHasItemResponse(408, 7485),
    /**
     * <code>k_EMsgGCConsumeFantasyTicket = 7486;</code>
     */
    k_EMsgGCConsumeFantasyTicket(409, 7486),
    /**
     * <code>k_EMsgGCConsumeFantasyTicketFailure = 7487;</code>
     */
    k_EMsgGCConsumeFantasyTicketFailure(410, 7487),
    /**
     * <code>k_EMsgGCToGCGrantEventPointActionMsg = 7488;</code>
     */
    k_EMsgGCToGCGrantEventPointActionMsg(411, 7488),
    /**
     * <code>k_EMsgClientToGCTrackDialogResult = 7489;</code>
     */
    k_EMsgClientToGCTrackDialogResult(412, 7489),
    /**
     * <code>k_EMsgGCFantasyLeaveLeagueRequest = 7490;</code>
     */
    k_EMsgGCFantasyLeaveLeagueRequest(413, 7490),
    /**
     * <code>k_EMsgGCFantasyLeaveLeagueResponse = 7491;</code>
     */
    k_EMsgGCFantasyLeaveLeagueResponse(414, 7491),
    /**
     * <code>k_EMsgGCToGCGetCompendiumSelections = 7492;</code>
     */
    k_EMsgGCToGCGetCompendiumSelections(415, 7492),
    /**
     * <code>k_EMsgGCToGCGetCompendiumSelectionsResponse = 7493;</code>
     */
    k_EMsgGCToGCGetCompendiumSelectionsResponse(416, 7493),
    /**
     * <code>k_EMsgServerToGCMatchConnectionStats = 7494;</code>
     */
    k_EMsgServerToGCMatchConnectionStats(417, 7494),
    /**
     * <code>k_EMsgGCToClientTournamentItemDrop = 7495;</code>
     */
    k_EMsgGCToClientTournamentItemDrop(418, 7495),
    /**
     * <code>k_EMsgSQLDelayedGrantLeagueDrop = 7496;</code>
     */
    k_EMsgSQLDelayedGrantLeagueDrop(419, 7496),
    /**
     * <code>k_EMsgServerGCUpdateSpectatorCount = 7497;</code>
     */
    k_EMsgServerGCUpdateSpectatorCount(420, 7497),
    /**
     * <code>k_EMsgDOTAStartDailyHeroChallengeRequest = 7498;</code>
     */
    k_EMsgDOTAStartDailyHeroChallengeRequest(421, 7498),
    /**
     * <code>k_EMsgGCFantasyPlayerScoreDetailsRequest = 7499;</code>
     */
    k_EMsgGCFantasyPlayerScoreDetailsRequest(422, 7499),
    /**
     * <code>k_EMsgGCFantasyPlayerScoreDetailsResponse = 7500;</code>
     */
    k_EMsgGCFantasyPlayerScoreDetailsResponse(423, 7500),
    /**
     * <code>k_EMsgGCToGCEmoticonUnlock = 7501;</code>
     */
    k_EMsgGCToGCEmoticonUnlock(424, 7501),
    /**
     * <code>k_EMsgSignOutDraftInfo = 7502;</code>
     */
    k_EMsgSignOutDraftInfo(425, 7502),
    /**
     * <code>k_EMsgClientToGCEmoticonDataRequest = 7503;</code>
     */
    k_EMsgClientToGCEmoticonDataRequest(426, 7503),
    /**
     * <code>k_EMsgGCToClientEmoticonData = 7504;</code>
     */
    k_EMsgGCToClientEmoticonData(427, 7504),
    /**
     * <code>k_EMsgGCPracticeLobbyToggleBroadcastChannelCameramanStatus = 7505;</code>
     */
    k_EMsgGCPracticeLobbyToggleBroadcastChannelCameramanStatus(428, 7505),
    /**
     * <code>k_EMsgGCToGCCreateWeekendTourneyRequest = 7506;</code>
     */
    k_EMsgGCToGCCreateWeekendTourneyRequest(429, 7506),
    /**
     * <code>k_EMsgGCToGCCreateWeekendTourneyResponse = 7507;</code>
     */
    k_EMsgGCToGCCreateWeekendTourneyResponse(430, 7507),
    /**
     * <code>k_EMsgGCHeroPickStatsRequest = 7508;</code>
     */
    k_EMsgGCHeroPickStatsRequest(431, 7508),
    /**
     * <code>k_EMsgGCHeroPickStatsResponse = 7509;</code>
     */
    k_EMsgGCHeroPickStatsResponse(432, 7509),
    /**
     * <code>k_EMsgGCToGCCreateGenericTeamsRequest = 7510;</code>
     */
    k_EMsgGCToGCCreateGenericTeamsRequest(433, 7510),
    /**
     * <code>k_EMsgGCToGCCreateGenericTeamsResponse = 7511;</code>
     */
    k_EMsgGCToGCCreateGenericTeamsResponse(434, 7511),
    /**
     * <code>k_EMsgSQLLaunchOneWeekendTourney = 7512;</code>
     */
    k_EMsgSQLLaunchOneWeekendTourney(435, 7512),
    /**
     * <code>k_EMsgClientToGCSetAdditionalEquips = 7513;</code>
     */
    k_EMsgClientToGCSetAdditionalEquips(436, 7513),
    /**
     * <code>k_EMsgClientToGCGetAdditionalEquips = 7514;</code>
     */
    k_EMsgClientToGCGetAdditionalEquips(437, 7514),
    /**
     * <code>k_EMsgClientToGCGetAdditionalEquipsResponse = 7515;</code>
     */
    k_EMsgClientToGCGetAdditionalEquipsResponse(438, 7515),
    /**
     * <code>k_EMsgServerToGCGetAdditionalEquips = 7516;</code>
     */
    k_EMsgServerToGCGetAdditionalEquips(439, 7516),
    /**
     * <code>k_EMsgServerToGCGetAdditionalEquipsResponse = 7517;</code>
     */
    k_EMsgServerToGCGetAdditionalEquipsResponse(440, 7517),
    /**
     * <code>k_EMsgDOTARedeemItem = 7518;</code>
     */
    k_EMsgDOTARedeemItem(441, 7518),
    /**
     * <code>k_EMsgDOTARedeemItemResponse = 7519;</code>
     */
    k_EMsgDOTARedeemItemResponse(442, 7519),
    /**
     * <code>k_EMsgSQLGCToGCGrantAllHeroProgress = 7520;</code>
     */
    k_EMsgSQLGCToGCGrantAllHeroProgress(443, 7520),
    /**
     * <code>k_EMsgClientToGCGetAllHeroProgress = 7521;</code>
     */
    k_EMsgClientToGCGetAllHeroProgress(444, 7521),
    /**
     * <code>k_EMsgClientToGCGetAllHeroProgressResponse = 7522;</code>
     */
    k_EMsgClientToGCGetAllHeroProgressResponse(445, 7522),
    /**
     * <code>k_EMsgGCToGCGetServerForClient = 7523;</code>
     */
    k_EMsgGCToGCGetServerForClient(446, 7523),
    /**
     * <code>k_EMsgGCToGCGetServerForClientResponse = 7524;</code>
     */
    k_EMsgGCToGCGetServerForClientResponse(447, 7524),
    /**
     * <code>k_EMsgSQLProcessTournamentGameOutcome = 7525;</code>
     */
    k_EMsgSQLProcessTournamentGameOutcome(448, 7525),
    /**
     * <code>k_EMsgSQLGrantTrophyToAccount = 7526;</code>
     */
    k_EMsgSQLGrantTrophyToAccount(449, 7526),
    /**
     * <code>k_EMsgClientToGCGetTrophyList = 7527;</code>
     */
    k_EMsgClientToGCGetTrophyList(450, 7527),
    /**
     * <code>k_EMsgClientToGCGetTrophyListResponse = 7528;</code>
     */
    k_EMsgClientToGCGetTrophyListResponse(451, 7528),
    /**
     * <code>k_EMsgGCToClientTrophyAwarded = 7529;</code>
     */
    k_EMsgGCToClientTrophyAwarded(452, 7529),
    /**
     * <code>k_EMsgGCGameBotMatchSignOut = 7530;</code>
     */
    k_EMsgGCGameBotMatchSignOut(453, 7530),
    /**
     * <code>k_EMsgGCGameBotMatchSignOutPermissionRequest = 7531;</code>
     */
    k_EMsgGCGameBotMatchSignOutPermissionRequest(454, 7531),
    /**
     * <code>k_EMsgSignOutBotInfo = 7532;</code>
     */
    k_EMsgSignOutBotInfo(455, 7532),
    /**
     * <code>k_EMsgGCToGCUpdateProfileCards = 7533;</code>
     */
    k_EMsgGCToGCUpdateProfileCards(456, 7533),
    /**
     * <code>k_EMsgClientToGCGetProfileCard = 7534;</code>
     */
    k_EMsgClientToGCGetProfileCard(457, 7534),
    /**
     * <code>k_EMsgClientToGCGetProfileCardResponse = 7535;</code>
     */
    k_EMsgClientToGCGetProfileCardResponse(458, 7535),
    /**
     * <code>k_EMsgServerToGCGetProfileCard = 7536;</code>
     */
    k_EMsgServerToGCGetProfileCard(459, 7536),
    /**
     * <code>k_EMsgServerToGCGetProfileCardResponse = 7537;</code>
     */
    k_EMsgServerToGCGetProfileCardResponse(460, 7537),
    /**
     * <code>k_EMsgClientToGCSetProfileCardSlots = 7538;</code>
     */
    k_EMsgClientToGCSetProfileCardSlots(461, 7538),
    /**
     * <code>k_EMsgGCToClientProfileCardUpdated = 7539;</code>
     */
    k_EMsgGCToClientProfileCardUpdated(462, 7539),
    /**
     * <code>k_EMsgServerToGCVictoryPredictions = 7540;</code>
     */
    k_EMsgServerToGCVictoryPredictions(463, 7540),
    /**
     * <code>k_EMsgClientToGCMarkNotificationListRead = 7542;</code>
     */
    k_EMsgClientToGCMarkNotificationListRead(464, 7542),
    /**
     * <code>k_EMsgGCToClientNewNotificationAdded = 7543;</code>
     */
    k_EMsgGCToClientNewNotificationAdded(465, 7543),
    /**
     * <code>k_EMsgServerToGCSuspiciousActivity = 7544;</code>
     */
    k_EMsgServerToGCSuspiciousActivity(466, 7544),
    /**
     * <code>k_EMsgSignOutCommunicationSummary = 7545;</code>
     */
    k_EMsgSignOutCommunicationSummary(467, 7545),
    /**
     * <code>k_EMsgServerToGCRequestStatus_Response = 7546;</code>
     */
    k_EMsgServerToGCRequestStatus_Response(468, 7546),
    /**
     * <code>k_EMsgClientToGCCreateHeroStatue = 7547;</code>
     */
    k_EMsgClientToGCCreateHeroStatue(469, 7547),
    /**
     * <code>k_EMsgGCToClientHeroStatueCreateResult = 7548;</code>
     */
    k_EMsgGCToClientHeroStatueCreateResult(470, 7548),
    /**
     * <code>k_EMsgGCGCToLANServerRelayConnect = 7549;</code>
     */
    k_EMsgGCGCToLANServerRelayConnect(471, 7549),
    /**
     * <code>k_EMsgSignOutAssassinMiniGameInfo = 7550;</code>
     */
    k_EMsgSignOutAssassinMiniGameInfo(472, 7550),
    /**
     * <code>k_EMsgServerToGCGetIngameEventData = 7551;</code>
     */
    k_EMsgServerToGCGetIngameEventData(473, 7551),
    /**
     * <code>k_EMsgGCToGCUpdateIngameEventDataBroadcast = 7552;</code>
     */
    k_EMsgGCToGCUpdateIngameEventDataBroadcast(474, 7552),
    /**
     * <code>k_EMsgGCToServerIngameEventData_OraclePA = 7553;</code>
     */
    k_EMsgGCToServerIngameEventData_OraclePA(475, 7553),
    /**
     * <code>k_EMsgServerToGCReportKillSummaries = 7554;</code>
     */
    k_EMsgServerToGCReportKillSummaries(476, 7554),
    /**
     * <code>k_EMsgGCToGCReportKillSummaries = 7555;</code>
     */
    k_EMsgGCToGCReportKillSummaries(477, 7555),
    /**
     * <code>k_EMsgGCToGCUpdateAssassinMinigame = 7556;</code>
     */
    k_EMsgGCToGCUpdateAssassinMinigame(478, 7556),
    /**
     * <code>k_EMsgGCToGCFantasySetMatchLeague = 7557;</code>
     */
    k_EMsgGCToGCFantasySetMatchLeague(479, 7557),
    /**
     * <code>k_EMsgClientToGCRecordCompendiumStats = 7558;</code>
     */
    k_EMsgClientToGCRecordCompendiumStats(480, 7558),
    /**
     * <code>k_EMsgGCItemEditorRequestLeagueInfo = 7559;</code>
     */
    k_EMsgGCItemEditorRequestLeagueInfo(481, 7559),
    /**
     * <code>k_EMsgGCItemEditorLeagueInfoResponse = 7560;</code>
     */
    k_EMsgGCItemEditorLeagueInfoResponse(482, 7560),
    /**
     * <code>k_EMsgGCToGCUpdatePlayerPredictions = 7561;</code>
     */
    k_EMsgGCToGCUpdatePlayerPredictions(483, 7561),
    /**
     * <code>k_EMsgGCToServerPredictionResult = 7562;</code>
     */
    k_EMsgGCToServerPredictionResult(484, 7562),
    /**
     * <code>k_EMsgServerToGCSignoutAwardAdditionalDrops = 7563;</code>
     */
    k_EMsgServerToGCSignoutAwardAdditionalDrops(485, 7563),
    /**
     * <code>k_EMsgGCToGCSignoutAwardAdditionalDrops = 7564;</code>
     */
    k_EMsgGCToGCSignoutAwardAdditionalDrops(486, 7564),
    /**
     * <code>k_EMsgGCToClientEventStatusChanged = 7565;</code>
     */
    k_EMsgGCToClientEventStatusChanged(487, 7565),
    /**
     * <code>k_EMsgGCHasItemDefsQuery = 7566;</code>
     */
    k_EMsgGCHasItemDefsQuery(488, 7566),
    /**
     * <code>k_EMsgGCHasItemDefsResponse = 7567;</code>
     */
    k_EMsgGCHasItemDefsResponse(489, 7567),
    /**
     * <code>k_EMsgGCToGCReplayMonitorValidateReplay = 7569;</code>
     */
    k_EMsgGCToGCReplayMonitorValidateReplay(490, 7569),
    /**
     * <code>k_EMsgClientToGCExchangeItemsForOffering = 7570;</code>
     */
    k_EMsgClientToGCExchangeItemsForOffering(491, 7570),
    /**
     * <code>k_EMsgClientToGCExchangeItemsForOfferingResponse = 7571;</code>
     */
    k_EMsgClientToGCExchangeItemsForOfferingResponse(492, 7571),
    /**
     * <code>k_EMsgLobbyEventPoints = 7572;</code>
     */
    k_EMsgLobbyEventPoints(493, 7572),
    /**
     * <code>k_EMsgGCToGCGetCustomGameTickets = 7573;</code>
     */
    k_EMsgGCToGCGetCustomGameTickets(494, 7573),
    /**
     * <code>k_EMsgGCToGCGetCustomGameTicketsResponse = 7574;</code>
     */
    k_EMsgGCToGCGetCustomGameTicketsResponse(495, 7574),
    /**
     * <code>k_EMsgGCToClientNewBloomTimingUpdated = 7575;</code>
     */
    k_EMsgGCToClientNewBloomTimingUpdated(496, 7575),
    /**
     * <code>k_EMsgGCToGCCustomGamePlayed = 7576;</code>
     */
    k_EMsgGCToGCCustomGamePlayed(497, 7576),
    /**
     * <code>k_EMsgGCToGCGrantEventPointsToUser = 7577;</code>
     */
    k_EMsgGCToGCGrantEventPointsToUser(498, 7577),
    /**
     * <code>k_EMsgGCToGCSetEventMMPanicFlushTime = 7578;</code>
     */
    k_EMsgGCToGCSetEventMMPanicFlushTime(499, 7578),
    /**
     * <code>k_EMsgGameserverCrashReport = 7579;</code>
     */
    k_EMsgGameserverCrashReport(500, 7579),
    /**
     * <code>k_EMsgGameserverCrashReportResponse = 7580;</code>
     */
    k_EMsgGameserverCrashReportResponse(501, 7580),
    /**
     * <code>k_EMsgGCToClientSteamDatagramTicket = 7581;</code>
     */
    k_EMsgGCToClientSteamDatagramTicket(502, 7581),
    /**
     * <code>k_EMsgGCToGCGrantEventOwnership = 7582;</code>
     */
    k_EMsgGCToGCGrantEventOwnership(503, 7582),
    /**
     * <code>k_EMsgGCToGCSendAccountsEventPoints = 7583;</code>
     */
    k_EMsgGCToGCSendAccountsEventPoints(504, 7583),
    /**
     * <code>k_EMsgClientToGCRerollPlayerChallenge = 7584;</code>
     */
    k_EMsgClientToGCRerollPlayerChallenge(505, 7584),
    /**
     * <code>k_EMsgServerToGCRerollPlayerChallenge = 7585;</code>
     */
    k_EMsgServerToGCRerollPlayerChallenge(506, 7585),
    /**
     * <code>k_EMsgGCRerollPlayerChallengeResponse = 7586;</code>
     */
    k_EMsgGCRerollPlayerChallengeResponse(507, 7586),
    /**
     * <code>k_EMsgSignOutUpdatePlayerChallenge = 7587;</code>
     */
    k_EMsgSignOutUpdatePlayerChallenge(508, 7587),
    /**
     * <code>k_EMsgClientToGCSetPartyLeader = 7588;</code>
     */
    k_EMsgClientToGCSetPartyLeader(509, 7588),
    /**
     * <code>k_EMsgClientToGCCancelPartyInvites = 7589;</code>
     */
    k_EMsgClientToGCCancelPartyInvites(510, 7589),
    /**
     * <code>k_EMsgGCToGCMasterReloadAccount = 7590;</code>
     */
    k_EMsgGCToGCMasterReloadAccount(511, 7590),
    /**
     * <code>k_EMsgSQLGCToGCGrantBackpackSlots = 7591;</code>
     */
    k_EMsgSQLGCToGCGrantBackpackSlots(512, 7591),
    /**
     * <code>k_EMsgSQLGrantLeagueMatchToTicketHolders = 7592;</code>
     */
    k_EMsgSQLGrantLeagueMatchToTicketHolders(513, 7592),
    /**
     * <code>k_EMsgClientToGCSetAdditionalEquipsResponse = 7593;</code>
     */
    k_EMsgClientToGCSetAdditionalEquipsResponse(514, 7593),
    /**
     * <code>k_EMsgGCDev_GrantWarKill = 8001;</code>
     */
    k_EMsgGCDev_GrantWarKill(515, 8001),
    /**
     * <code>k_EMsgClientToGCCreateTeamShowcase = 8002;</code>
     */
    k_EMsgClientToGCCreateTeamShowcase(516, 8002),
    /**
     * <code>k_EMsgGCToClientTeamShowcaseCreateResult = 8003;</code>
     */
    k_EMsgGCToClientTeamShowcaseCreateResult(517, 8003),
    /**
     * <code>k_EMsgServerToGCLockCharmTrading = 8004;</code>
     */
    k_EMsgServerToGCLockCharmTrading(518, 8004),
    /**
     * <code>k_EMsgDOTACNY2015EventPointUsage = 8005;</code>
     */
    k_EMsgDOTACNY2015EventPointUsage(519, 8005),
    /**
     * <code>k_EMsgClientToGCPlayerStatsRequest = 8006;</code>
     */
    k_EMsgClientToGCPlayerStatsRequest(520, 8006),
    /**
     * <code>k_EMsgGCToClientPlayerStatsResponse = 8007;</code>
     */
    k_EMsgGCToClientPlayerStatsResponse(521, 8007),
    /**
     * <code>k_EMsgGCClearPracticeLobbyTeam = 8008;</code>
     */
    k_EMsgGCClearPracticeLobbyTeam(522, 8008),
    /**
     * <code>k_EMsgClientToGCFindTopSourceTVGames = 8009;</code>
     */
    k_EMsgClientToGCFindTopSourceTVGames(523, 8009),
    /**
     * <code>k_EMsgGCToClientFindTopSourceTVGamesResponse = 8010;</code>
     */
    k_EMsgGCToClientFindTopSourceTVGamesResponse(524, 8010),
    /**
     * <code>k_EMsgGCLobbyList = 8011;</code>
     */
    k_EMsgGCLobbyList(525, 8011),
    /**
     * <code>k_EMsgGCLobbyListResponse = 8012;</code>
     */
    k_EMsgGCLobbyListResponse(526, 8012),
    /**
     * <code>k_EMsgGCPlayerStatsMatchSignOut = 8013;</code>
     */
    k_EMsgGCPlayerStatsMatchSignOut(527, 8013),
    /**
     * <code>k_EMsgClientToGCCustomGamePlayerCountRequest = 8014;</code>
     */
    k_EMsgClientToGCCustomGamePlayerCountRequest(528, 8014),
    /**
     * <code>k_EMsgGCToClientCustomGamePlayerCountResponse = 8015;</code>
     */
    k_EMsgGCToClientCustomGamePlayerCountResponse(529, 8015),
    /**
     * <code>k_EMsgClientToGCSocialFeedPostCommentRequest = 8016;</code>
     */
    k_EMsgClientToGCSocialFeedPostCommentRequest(530, 8016),
    /**
     * <code>k_EMsgGCToClientSocialFeedPostCommentResponse = 8017;</code>
     */
    k_EMsgGCToClientSocialFeedPostCommentResponse(531, 8017),
    /**
     * <code>k_EMsgClientToGCCustomGamesFriendsPlayedRequest = 8018;</code>
     */
    k_EMsgClientToGCCustomGamesFriendsPlayedRequest(532, 8018),
    /**
     * <code>k_EMsgGCToClientCustomGamesFriendsPlayedResponse = 8019;</code>
     */
    k_EMsgGCToClientCustomGamesFriendsPlayedResponse(533, 8019),
    /**
     * <code>k_EMsgClientToGCFriendsPlayedCustomGameRequest = 8020;</code>
     */
    k_EMsgClientToGCFriendsPlayedCustomGameRequest(534, 8020),
    /**
     * <code>k_EMsgGCToClientFriendsPlayedCustomGameResponse = 8021;</code>
     */
    k_EMsgGCToClientFriendsPlayedCustomGameResponse(535, 8021),
    /**
     * <code>k_EMsgClientToGCFeaturedHeroesRequest = 8022;</code>
     */
    k_EMsgClientToGCFeaturedHeroesRequest(536, 8022),
    /**
     * <code>k_EMsgGCToClientFeaturedHeroesResponse = 8023;</code>
     */
    k_EMsgGCToClientFeaturedHeroesResponse(537, 8023),
    /**
     * <code>k_EMsgGCToClientTopCustomGamesList = 8024;</code>
     */
    k_EMsgGCToClientTopCustomGamesList(538, 8024),
    /**
     * <code>k_EMsgClientToGCSocialMatchPostCommentRequest = 8025;</code>
     */
    k_EMsgClientToGCSocialMatchPostCommentRequest(539, 8025),
    /**
     * <code>k_EMsgGCToClientSocialMatchPostCommentResponse = 8026;</code>
     */
    k_EMsgGCToClientSocialMatchPostCommentResponse(540, 8026),
    /**
     * <code>k_EMsgClientToGCSocialMatchDetailsRequest = 8027;</code>
     */
    k_EMsgClientToGCSocialMatchDetailsRequest(541, 8027),
    /**
     * <code>k_EMsgGCToClientSocialMatchDetailsResponse = 8028;</code>
     */
    k_EMsgGCToClientSocialMatchDetailsResponse(542, 8028),
    /**
     * <code>k_EMsgClientToGCSetPartyOpen = 8029;</code>
     */
    k_EMsgClientToGCSetPartyOpen(543, 8029),
    /**
     * <code>k_EMsgClientToGCMergePartyInvite = 8030;</code>
     */
    k_EMsgClientToGCMergePartyInvite(544, 8030),
    /**
     * <code>k_EMsgGCToClientMergeGroupInviteReply = 8031;</code>
     */
    k_EMsgGCToClientMergeGroupInviteReply(545, 8031),
    /**
     * <code>k_EMsgClientToGCMergePartyResponse = 8032;</code>
     */
    k_EMsgClientToGCMergePartyResponse(546, 8032),
    /**
     * <code>k_EMsgGCToClientMergePartyResponseReply = 8033;</code>
     */
    k_EMsgGCToClientMergePartyResponseReply(547, 8033),
    /**
     * <code>k_EMsgClientToGCGetProfileCardStats = 8034;</code>
     */
    k_EMsgClientToGCGetProfileCardStats(548, 8034),
    /**
     * <code>k_EMsgClientToGCGetProfileCardStatsResponse = 8035;</code>
     */
    k_EMsgClientToGCGetProfileCardStatsResponse(549, 8035),
    /**
     * <code>k_EMsgClientToGCTopLeagueMatchesRequest = 8036;</code>
     */
    k_EMsgClientToGCTopLeagueMatchesRequest(550, 8036),
    /**
     * <code>k_EMsgClientToGCTopFriendMatchesRequest = 8037;</code>
     */
    k_EMsgClientToGCTopFriendMatchesRequest(551, 8037),
    /**
     * <code>k_EMsgGCToClientTopMatchesResponse = 8038;</code>
     */
    k_EMsgGCToClientTopMatchesResponse(552, 8038),
    /**
     * <code>k_EMsgClientToGCTopPubMatchesRequest = 8039;</code>
     */
    k_EMsgClientToGCTopPubMatchesRequest(553, 8039),
    /**
     * <code>k_EMsgGCToClientProfileCardStatsUpdated = 8040;</code>
     */
    k_EMsgGCToClientProfileCardStatsUpdated(554, 8040),
    /**
     * <code>k_EMsgServerToGCRealtimeStats = 8041;</code>
     */
    k_EMsgServerToGCRealtimeStats(555, 8041),
    /**
     * <code>k_EMsgGCToServerRealtimeStatsStartStop = 8042;</code>
     */
    k_EMsgGCToServerRealtimeStatsStartStop(556, 8042),
    /**
     * <code>k_EMsgGCToClientDOTARealtimeGameStats = 8043;</code>
     */
    k_EMsgGCToClientDOTARealtimeGameStats(557, 8043),
    /**
     * <code>k_EMsgClientToGCRealtimeGameStateViewing = 8044;</code>
     */
    k_EMsgClientToGCRealtimeGameStateViewing(558, 8044),
    /**
     * <code>k_EMsgGCToGCGetServersForClients = 8045;</code>
     */
    k_EMsgGCToGCGetServersForClients(559, 8045),
    /**
     * <code>k_EMsgGCToGCGetServersForClientsResponse = 8046;</code>
     */
    k_EMsgGCToGCGetServersForClientsResponse(560, 8046),
    /**
     * <code>k_EMsgGCPracticeLobbyKickFromTeam = 8047;</code>
     */
    k_EMsgGCPracticeLobbyKickFromTeam(561, 8047),
    ;

    /**
     * <code>k_EMsgGCDOTABase = 7000;</code>
     */
    public static final int k_EMsgGCDOTABase_VALUE = 7000;
    /**
     * <code>k_EMsgGCGeneralResponse = 7001;</code>
     */
    public static final int k_EMsgGCGeneralResponse_VALUE = 7001;
    /**
     * <code>k_EMsgGCGameMatchSignOut = 7004;</code>
     */
    public static final int k_EMsgGCGameMatchSignOut_VALUE = 7004;
    /**
     * <code>k_EMsgGCGameMatchSignOutResponse = 7005;</code>
     */
    public static final int k_EMsgGCGameMatchSignOutResponse_VALUE = 7005;
    /**
     * <code>k_EMsgGCJoinChatChannel = 7009;</code>
     */
    public static final int k_EMsgGCJoinChatChannel_VALUE = 7009;
    /**
     * <code>k_EMsgGCJoinChatChannelResponse = 7010;</code>
     */
    public static final int k_EMsgGCJoinChatChannelResponse_VALUE = 7010;
    /**
     * <code>k_EMsgGCOtherJoinedChannel = 7013;</code>
     */
    public static final int k_EMsgGCOtherJoinedChannel_VALUE = 7013;
    /**
     * <code>k_EMsgGCOtherLeftChannel = 7014;</code>
     */
    public static final int k_EMsgGCOtherLeftChannel_VALUE = 7014;
    /**
     * <code>k_EMsgGCMatchHistoryList = 7017;</code>
     */
    public static final int k_EMsgGCMatchHistoryList_VALUE = 7017;
    /**
     * <code>k_EMsgServerToGCRequestStatus = 7026;</code>
     */
    public static final int k_EMsgServerToGCRequestStatus_VALUE = 7026;
    /**
     * <code>k_EMsgGCGetRecentMatches = 7027;</code>
     */
    public static final int k_EMsgGCGetRecentMatches_VALUE = 7027;
    /**
     * <code>k_EMsgGCRecentMatchesResponse = 7028;</code>
     */
    public static final int k_EMsgGCRecentMatchesResponse_VALUE = 7028;
    /**
     * <code>k_EMsgGCFindSourceTVGames = 7031;</code>
     */
    public static final int k_EMsgGCFindSourceTVGames_VALUE = 7031;
    /**
     * <code>k_EMsgGCSourceTVGamesResponse = 7032;</code>
     */
    public static final int k_EMsgGCSourceTVGamesResponse_VALUE = 7032;
    /**
     * <code>k_EMsgGCStartFindingMatch = 7033;</code>
     */
    public static final int k_EMsgGCStartFindingMatch_VALUE = 7033;
    /**
     * <code>k_EMsgGCConnectedPlayers = 7034;</code>
     */
    public static final int k_EMsgGCConnectedPlayers_VALUE = 7034;
    /**
     * <code>k_EMsgGCAbandonCurrentGame = 7035;</code>
     */
    public static final int k_EMsgGCAbandonCurrentGame_VALUE = 7035;
    /**
     * <code>k_EMsgGCStopFindingMatch = 7036;</code>
     */
    public static final int k_EMsgGCStopFindingMatch_VALUE = 7036;
    /**
     * <code>k_EMsgGCPracticeLobbyCreate = 7038;</code>
     */
    public static final int k_EMsgGCPracticeLobbyCreate_VALUE = 7038;
    /**
     * <code>k_EMsgGCPracticeLobbyLeave = 7040;</code>
     */
    public static final int k_EMsgGCPracticeLobbyLeave_VALUE = 7040;
    /**
     * <code>k_EMsgGCPracticeLobbyLaunch = 7041;</code>
     */
    public static final int k_EMsgGCPracticeLobbyLaunch_VALUE = 7041;
    /**
     * <code>k_EMsgGCPracticeLobbyList = 7042;</code>
     */
    public static final int k_EMsgGCPracticeLobbyList_VALUE = 7042;
    /**
     * <code>k_EMsgGCPracticeLobbyListResponse = 7043;</code>
     */
    public static final int k_EMsgGCPracticeLobbyListResponse_VALUE = 7043;
    /**
     * <code>k_EMsgGCPracticeLobbyJoin = 7044;</code>
     */
    public static final int k_EMsgGCPracticeLobbyJoin_VALUE = 7044;
    /**
     * <code>k_EMsgGCPracticeLobbySetDetails = 7046;</code>
     */
    public static final int k_EMsgGCPracticeLobbySetDetails_VALUE = 7046;
    /**
     * <code>k_EMsgGCPracticeLobbySetTeamSlot = 7047;</code>
     */
    public static final int k_EMsgGCPracticeLobbySetTeamSlot_VALUE = 7047;
    /**
     * <code>k_EMsgGCInitialQuestionnaireResponse = 7049;</code>
     */
    public static final int k_EMsgGCInitialQuestionnaireResponse_VALUE = 7049;
    /**
     * <code>k_EMsgGCTournamentRequest = 7051;</code>
     */
    public static final int k_EMsgGCTournamentRequest_VALUE = 7051;
    /**
     * <code>k_EMsgGCTournamentResponse = 7052;</code>
     */
    public static final int k_EMsgGCTournamentResponse_VALUE = 7052;
    /**
     * <code>k_EMsgGCPracticeLobbyResponse = 7055;</code>
     */
    public static final int k_EMsgGCPracticeLobbyResponse_VALUE = 7055;
    /**
     * <code>k_EMsgGCBroadcastNotification = 7056;</code>
     */
    public static final int k_EMsgGCBroadcastNotification_VALUE = 7056;
    /**
     * <code>k_EMsgGCLiveScoreboardUpdate = 7057;</code>
     */
    public static final int k_EMsgGCLiveScoreboardUpdate_VALUE = 7057;
    /**
     * <code>k_EMsgGCRequestChatChannelList = 7060;</code>
     */
    public static final int k_EMsgGCRequestChatChannelList_VALUE = 7060;
    /**
     * <code>k_EMsgGCRequestChatChannelListResponse = 7061;</code>
     */
    public static final int k_EMsgGCRequestChatChannelListResponse_VALUE = 7061;
    /**
     * <code>k_EMsgGCRequestMatches = 7064;</code>
     */
    public static final int k_EMsgGCRequestMatches_VALUE = 7064;
    /**
     * <code>k_EMsgGCRequestMatchesResponse = 7065;</code>
     */
    public static final int k_EMsgGCRequestMatchesResponse_VALUE = 7065;
    /**
     * <code>k_EMsgGCRequestPlayerResources = 7068;</code>
     */
    public static final int k_EMsgGCRequestPlayerResources_VALUE = 7068;
    /**
     * <code>k_EMsgGCRequestPlayerResourcesResponse = 7069;</code>
     */
    public static final int k_EMsgGCRequestPlayerResourcesResponse_VALUE = 7069;
    /**
     * <code>k_EMsgGCReadyUp = 7070;</code>
     */
    public static final int k_EMsgGCReadyUp_VALUE = 7070;
    /**
     * <code>k_EMsgGCKickedFromMatchmakingQueue = 7071;</code>
     */
    public static final int k_EMsgGCKickedFromMatchmakingQueue_VALUE = 7071;
    /**
     * <code>k_EMsgGCLeaverDetected = 7072;</code>
     */
    public static final int k_EMsgGCLeaverDetected_VALUE = 7072;
    /**
     * <code>k_EMsgGCSpectateFriendGame = 7073;</code>
     */
    public static final int k_EMsgGCSpectateFriendGame_VALUE = 7073;
    /**
     * <code>k_EMsgGCSpectateFriendGameResponse = 7074;</code>
     */
    public static final int k_EMsgGCSpectateFriendGameResponse_VALUE = 7074;
    /**
     * <code>k_EMsgGCPlayerReports = 7075;</code>
     */
    public static final int k_EMsgGCPlayerReports_VALUE = 7075;
    /**
     * <code>k_EMsgGCReportsRemainingRequest = 7076;</code>
     */
    public static final int k_EMsgGCReportsRemainingRequest_VALUE = 7076;
    /**
     * <code>k_EMsgGCReportsRemainingResponse = 7077;</code>
     */
    public static final int k_EMsgGCReportsRemainingResponse_VALUE = 7077;
    /**
     * <code>k_EMsgGCSubmitPlayerReport = 7078;</code>
     */
    public static final int k_EMsgGCSubmitPlayerReport_VALUE = 7078;
    /**
     * <code>k_EMsgGCSubmitPlayerReportResponse = 7079;</code>
     */
    public static final int k_EMsgGCSubmitPlayerReportResponse_VALUE = 7079;
    /**
     * <code>k_EMsgGCGameChatLog = 7080;</code>
     */
    public static final int k_EMsgGCGameChatLog_VALUE = 7080;
    /**
     * <code>k_EMsgGCPracticeLobbyKick = 7081;</code>
     */
    public static final int k_EMsgGCPracticeLobbyKick_VALUE = 7081;
    /**
     * <code>k_EMsgGCReportCountsRequest = 7082;</code>
     */
    public static final int k_EMsgGCReportCountsRequest_VALUE = 7082;
    /**
     * <code>k_EMsgGCReportCountsResponse = 7083;</code>
     */
    public static final int k_EMsgGCReportCountsResponse_VALUE = 7083;
    /**
     * <code>k_EMsgGCRequestSaveGames = 7084;</code>
     */
    public static final int k_EMsgGCRequestSaveGames_VALUE = 7084;
    /**
     * <code>k_EMsgGCRequestSaveGamesServer = 7085;</code>
     */
    public static final int k_EMsgGCRequestSaveGamesServer_VALUE = 7085;
    /**
     * <code>k_EMsgGCRequestSaveGamesResponse = 7086;</code>
     */
    public static final int k_EMsgGCRequestSaveGamesResponse_VALUE = 7086;
    /**
     * <code>k_EMsgGCLeaverDetectedResponse = 7087;</code>
     */
    public static final int k_EMsgGCLeaverDetectedResponse_VALUE = 7087;
    /**
     * <code>k_EMsgGCPlayerFailedToConnect = 7088;</code>
     */
    public static final int k_EMsgGCPlayerFailedToConnect_VALUE = 7088;
    /**
     * <code>k_EMsgGCGCToRelayConnect = 7089;</code>
     */
    public static final int k_EMsgGCGCToRelayConnect_VALUE = 7089;
    /**
     * <code>k_EMsgGCGCToRelayConnectresponse = 7090;</code>
     */
    public static final int k_EMsgGCGCToRelayConnectresponse_VALUE = 7090;
    /**
     * <code>k_EMsgGCWatchGame = 7091;</code>
     */
    public static final int k_EMsgGCWatchGame_VALUE = 7091;
    /**
     * <code>k_EMsgGCWatchGameResponse = 7092;</code>
     */
    public static final int k_EMsgGCWatchGameResponse_VALUE = 7092;
    /**
     * <code>k_EMsgGCBanStatusRequest = 7093;</code>
     */
    public static final int k_EMsgGCBanStatusRequest_VALUE = 7093;
    /**
     * <code>k_EMsgGCBanStatusResponse = 7094;</code>
     */
    public static final int k_EMsgGCBanStatusResponse_VALUE = 7094;
    /**
     * <code>k_EMsgGCMatchDetailsRequest = 7095;</code>
     */
    public static final int k_EMsgGCMatchDetailsRequest_VALUE = 7095;
    /**
     * <code>k_EMsgGCMatchDetailsResponse = 7096;</code>
     */
    public static final int k_EMsgGCMatchDetailsResponse_VALUE = 7096;
    /**
     * <code>k_EMsgGCCancelWatchGame = 7097;</code>
     */
    public static final int k_EMsgGCCancelWatchGame_VALUE = 7097;
    /**
     * <code>k_EMsgGCProfileRequest = 7098;</code>
     */
    public static final int k_EMsgGCProfileRequest_VALUE = 7098;
    /**
     * <code>k_EMsgGCProfileResponse = 7099;</code>
     */
    public static final int k_EMsgGCProfileResponse_VALUE = 7099;
    /**
     * <code>k_EMsgGCPopup = 7102;</code>
     */
    public static final int k_EMsgGCPopup_VALUE = 7102;
    /**
     * <code>k_EMsgGCDOTAClearNotifySuccessfulReport = 7104;</code>
     */
    public static final int k_EMsgGCDOTAClearNotifySuccessfulReport_VALUE = 7104;
    /**
     * <code>k_EMsgGCGenericResult = 7108;</code>
     */
    public static final int k_EMsgGCGenericResult_VALUE = 7108;
    /**
     * <code>k_EMsgGCFriendPracticeLobbyListRequest = 7111;</code>
     */
    public static final int k_EMsgGCFriendPracticeLobbyListRequest_VALUE = 7111;
    /**
     * <code>k_EMsgGCFriendPracticeLobbyListResponse = 7112;</code>
     */
    public static final int k_EMsgGCFriendPracticeLobbyListResponse_VALUE = 7112;
    /**
     * <code>k_EMsgGCPracticeLobbyJoinResponse = 7113;</code>
     */
    public static final int k_EMsgGCPracticeLobbyJoinResponse_VALUE = 7113;
    /**
     * <code>k_EMsgClientEconNotification_Job = 7114;</code>
     */
    public static final int k_EMsgClientEconNotification_Job_VALUE = 7114;
    /**
     * <code>k_EMsgGCCreateTeam = 7115;</code>
     */
    public static final int k_EMsgGCCreateTeam_VALUE = 7115;
    /**
     * <code>k_EMsgGCCreateTeamResponse = 7116;</code>
     */
    public static final int k_EMsgGCCreateTeamResponse_VALUE = 7116;
    /**
     * <code>k_EMsgGCDisbandTeam = 7117;</code>
     */
    public static final int k_EMsgGCDisbandTeam_VALUE = 7117;
    /**
     * <code>k_EMsgGCDisbandTeamResponse = 7118;</code>
     */
    public static final int k_EMsgGCDisbandTeamResponse_VALUE = 7118;
    /**
     * <code>k_EMsgGCRequestTeamData = 7119;</code>
     */
    public static final int k_EMsgGCRequestTeamData_VALUE = 7119;
    /**
     * <code>k_EMsgGCRequestTeamDataResponse = 7120;</code>
     */
    public static final int k_EMsgGCRequestTeamDataResponse_VALUE = 7120;
    /**
     * <code>k_EMsgGCTeamData = 7121;</code>
     */
    public static final int k_EMsgGCTeamData_VALUE = 7121;
    /**
     * <code>k_EMsgGCTeamInvite_InviterToGC = 7122;</code>
     */
    public static final int k_EMsgGCTeamInvite_InviterToGC_VALUE = 7122;
    /**
     * <code>k_EMsgGCTeamInvite_GCImmediateResponseToInviter = 7123;</code>
     */
    public static final int k_EMsgGCTeamInvite_GCImmediateResponseToInviter_VALUE = 7123;
    /**
     * <code>k_EMsgGCTeamInvite_GCRequestToInvitee = 7124;</code>
     */
    public static final int k_EMsgGCTeamInvite_GCRequestToInvitee_VALUE = 7124;
    /**
     * <code>k_EMsgGCTeamInvite_InviteeResponseToGC = 7125;</code>
     */
    public static final int k_EMsgGCTeamInvite_InviteeResponseToGC_VALUE = 7125;
    /**
     * <code>k_EMsgGCTeamInvite_GCResponseToInviter = 7126;</code>
     */
    public static final int k_EMsgGCTeamInvite_GCResponseToInviter_VALUE = 7126;
    /**
     * <code>k_EMsgGCTeamInvite_GCResponseToInvitee = 7127;</code>
     */
    public static final int k_EMsgGCTeamInvite_GCResponseToInvitee_VALUE = 7127;
    /**
     * <code>k_EMsgGCKickTeamMember = 7128;</code>
     */
    public static final int k_EMsgGCKickTeamMember_VALUE = 7128;
    /**
     * <code>k_EMsgGCKickTeamMemberResponse = 7129;</code>
     */
    public static final int k_EMsgGCKickTeamMemberResponse_VALUE = 7129;
    /**
     * <code>k_EMsgGCLeaveTeam = 7130;</code>
     */
    public static final int k_EMsgGCLeaveTeam_VALUE = 7130;
    /**
     * <code>k_EMsgGCLeaveTeamResponse = 7131;</code>
     */
    public static final int k_EMsgGCLeaveTeamResponse_VALUE = 7131;
    /**
     * <code>k_EMsgGCSuggestTeamMatchmaking = 7132;</code>
     */
    public static final int k_EMsgGCSuggestTeamMatchmaking_VALUE = 7132;
    /**
     * <code>k_EMsgGCPlayerHeroesFavoritesAdd = 7133;</code>
     */
    public static final int k_EMsgGCPlayerHeroesFavoritesAdd_VALUE = 7133;
    /**
     * <code>k_EMsgGCPlayerHeroesFavoritesRemove = 7134;</code>
     */
    public static final int k_EMsgGCPlayerHeroesFavoritesRemove_VALUE = 7134;
    /**
     * <code>k_EMsgGCEditTeamLogo = 7139;</code>
     */
    public static final int k_EMsgGCEditTeamLogo_VALUE = 7139;
    /**
     * <code>k_EMsgGCEditTeamLogoResponse = 7140;</code>
     */
    public static final int k_EMsgGCEditTeamLogoResponse_VALUE = 7140;
    /**
     * <code>k_EMsgGCSetShowcaseHero = 7141;</code>
     */
    public static final int k_EMsgGCSetShowcaseHero_VALUE = 7141;
    /**
     * <code>k_EMsgGCApplyTeamToPracticeLobby = 7142;</code>
     */
    public static final int k_EMsgGCApplyTeamToPracticeLobby_VALUE = 7142;
    /**
     * <code>k_EMsgGCRequestInternatinalTicketEmail = 7143;</code>
     */
    public static final int k_EMsgGCRequestInternatinalTicketEmail_VALUE = 7143;
    /**
     * <code>k_EMsgGCTransferTeamAdmin = 7144;</code>
     */
    public static final int k_EMsgGCTransferTeamAdmin_VALUE = 7144;
    /**
     * <code>k_EMsgGCClearTournamentGame = 7145;</code>
     */
    public static final int k_EMsgGCClearTournamentGame_VALUE = 7145;
    /**
     * <code>k_EMsgRequestLeagueInfo = 7147;</code>
     */
    public static final int k_EMsgRequestLeagueInfo_VALUE = 7147;
    /**
     * <code>k_EMsgResponseLeagueInfo = 7148;</code>
     */
    public static final int k_EMsgResponseLeagueInfo_VALUE = 7148;
    /**
     * <code>k_EMsgGCPracticeLobbyJoinBroadcastChannel = 7149;</code>
     */
    public static final int k_EMsgGCPracticeLobbyJoinBroadcastChannel_VALUE = 7149;
    /**
     * <code>k_EMsgGC_TournamentItemEvent = 7150;</code>
     */
    public static final int k_EMsgGC_TournamentItemEvent_VALUE = 7150;
    /**
     * <code>k_EMsgGC_TournamentItemEventResponse = 7151;</code>
     */
    public static final int k_EMsgGC_TournamentItemEventResponse_VALUE = 7151;
    /**
     * <code>k_EMsgCastMatchVote = 7152;</code>
     */
    public static final int k_EMsgCastMatchVote_VALUE = 7152;
    /**
     * <code>k_EMsgCastMatchVoteResponse = 7153;</code>
     */
    public static final int k_EMsgCastMatchVoteResponse_VALUE = 7153;
    /**
     * <code>k_EMsgRetrieveMatchVote = 7154;</code>
     */
    public static final int k_EMsgRetrieveMatchVote_VALUE = 7154;
    /**
     * <code>k_EMsgRetrieveMatchVoteResponse = 7155;</code>
     */
    public static final int k_EMsgRetrieveMatchVoteResponse_VALUE = 7155;
    /**
     * <code>k_EMsgTeamFanfare = 7156;</code>
     */
    public static final int k_EMsgTeamFanfare_VALUE = 7156;
    /**
     * <code>k_EMsgResponseTeamFanfare = 7157;</code>
     */
    public static final int k_EMsgResponseTeamFanfare_VALUE = 7157;
    /**
     * <code>k_EMsgGC_GameServerUploadSaveGame = 7158;</code>
     */
    public static final int k_EMsgGC_GameServerUploadSaveGame_VALUE = 7158;
    /**
     * <code>k_EMsgGC_GameServerSaveGameResult = 7159;</code>
     */
    public static final int k_EMsgGC_GameServerSaveGameResult_VALUE = 7159;
    /**
     * <code>k_EMsgGC_GameServerGetLoadGame = 7160;</code>
     */
    public static final int k_EMsgGC_GameServerGetLoadGame_VALUE = 7160;
    /**
     * <code>k_EMsgGC_GameServerGetLoadGameResult = 7161;</code>
     */
    public static final int k_EMsgGC_GameServerGetLoadGameResult_VALUE = 7161;
    /**
     * <code>k_EMsgGCTeamProfileRequest = 7164;</code>
     */
    public static final int k_EMsgGCTeamProfileRequest_VALUE = 7164;
    /**
     * <code>k_EMsgGCTeamProfileResponse = 7165;</code>
     */
    public static final int k_EMsgGCTeamProfileResponse_VALUE = 7165;
    /**
     * <code>k_EMsgGCEditTeamDetails = 7166;</code>
     */
    public static final int k_EMsgGCEditTeamDetails_VALUE = 7166;
    /**
     * <code>k_EMsgGCEditTeamDetailsResponse = 7167;</code>
     */
    public static final int k_EMsgGCEditTeamDetailsResponse_VALUE = 7167;
    /**
     * <code>k_EMsgGCProTeamListRequest = 7168;</code>
     */
    public static final int k_EMsgGCProTeamListRequest_VALUE = 7168;
    /**
     * <code>k_EMsgGCProTeamListResponse = 7169;</code>
     */
    public static final int k_EMsgGCProTeamListResponse_VALUE = 7169;
    /**
     * <code>k_EMsgGCReadyUpStatus = 7170;</code>
     */
    public static final int k_EMsgGCReadyUpStatus_VALUE = 7170;
    /**
     * <code>k_EMsgGCHallOfFame = 7171;</code>
     */
    public static final int k_EMsgGCHallOfFame_VALUE = 7171;
    /**
     * <code>k_EMsgGCHallOfFameRequest = 7172;</code>
     */
    public static final int k_EMsgGCHallOfFameRequest_VALUE = 7172;
    /**
     * <code>k_EMsgGCHallOfFameResponse = 7173;</code>
     */
    public static final int k_EMsgGCHallOfFameResponse_VALUE = 7173;
    /**
     * <code>k_EMsgGCGenerateDiretidePrizeList = 7174;</code>
     */
    public static final int k_EMsgGCGenerateDiretidePrizeList_VALUE = 7174;
    /**
     * <code>k_EMsgGCRewardDiretidePrizes = 7176;</code>
     */
    public static final int k_EMsgGCRewardDiretidePrizes_VALUE = 7176;
    /**
     * <code>k_EMsgGCDiretidePrizesRewardedResponse = 7177;</code>
     */
    public static final int k_EMsgGCDiretidePrizesRewardedResponse_VALUE = 7177;
    /**
     * <code>k_EMsgGCHalloweenHighScoreRequest = 7178;</code>
     */
    public static final int k_EMsgGCHalloweenHighScoreRequest_VALUE = 7178;
    /**
     * <code>k_EMsgGCHalloweenHighScoreResponse = 7179;</code>
     */
    public static final int k_EMsgGCHalloweenHighScoreResponse_VALUE = 7179;
    /**
     * <code>k_EMsgGCGenerateDiretidePrizeListResponse = 7180;</code>
     */
    public static final int k_EMsgGCGenerateDiretidePrizeListResponse_VALUE = 7180;
    /**
     * <code>k_EMsgGCStorePromoPagesRequest = 7182;</code>
     */
    public static final int k_EMsgGCStorePromoPagesRequest_VALUE = 7182;
    /**
     * <code>k_EMsgGCStorePromoPagesResponse = 7183;</code>
     */
    public static final int k_EMsgGCStorePromoPagesResponse_VALUE = 7183;
    /**
     * <code>k_EMsgGCSpawnLootGreevil = 7184;</code>
     */
    public static final int k_EMsgGCSpawnLootGreevil_VALUE = 7184;
    /**
     * <code>k_EMsgGCDismissLootGreevil = 7185;</code>
     */
    public static final int k_EMsgGCDismissLootGreevil_VALUE = 7185;
    /**
     * <code>k_EMsgGCToGCMatchCompleted = 7186;</code>
     */
    public static final int k_EMsgGCToGCMatchCompleted_VALUE = 7186;
    /**
     * <code>k_EMsgGCDismissLootGreevilResponse = 7187;</code>
     */
    public static final int k_EMsgGCDismissLootGreevilResponse_VALUE = 7187;
    /**
     * <code>k_EMsgGCBalancedShuffleLobby = 7188;</code>
     */
    public static final int k_EMsgGCBalancedShuffleLobby_VALUE = 7188;
    /**
     * <code>k_EMsgGCToGCCheckLeaguePermission = 7189;</code>
     */
    public static final int k_EMsgGCToGCCheckLeaguePermission_VALUE = 7189;
    /**
     * <code>k_EMsgGCToGCCheckLeaguePermissionResponse = 7190;</code>
     */
    public static final int k_EMsgGCToGCCheckLeaguePermissionResponse_VALUE = 7190;
    /**
     * <code>k_EMsgGCLeagueScheduleRequest = 7191;</code>
     */
    public static final int k_EMsgGCLeagueScheduleRequest_VALUE = 7191;
    /**
     * <code>k_EMsgGCLeagueScheduleResponse = 7192;</code>
     */
    public static final int k_EMsgGCLeagueScheduleResponse_VALUE = 7192;
    /**
     * <code>k_EMsgGCLeagueScheduleEdit = 7193;</code>
     */
    public static final int k_EMsgGCLeagueScheduleEdit_VALUE = 7193;
    /**
     * <code>k_EMsgGCLeagueScheduleEditResponse = 7194;</code>
     */
    public static final int k_EMsgGCLeagueScheduleEditResponse_VALUE = 7194;
    /**
     * <code>k_EMsgGCLeaguesInMonthRequest = 7195;</code>
     */
    public static final int k_EMsgGCLeaguesInMonthRequest_VALUE = 7195;
    /**
     * <code>k_EMsgGCLeaguesInMonthResponse = 7196;</code>
     */
    public static final int k_EMsgGCLeaguesInMonthResponse_VALUE = 7196;
    /**
     * <code>k_EMsgGCMatchmakingStatsRequest = 7197;</code>
     */
    public static final int k_EMsgGCMatchmakingStatsRequest_VALUE = 7197;
    /**
     * <code>k_EMsgGCMatchmakingStatsResponse = 7198;</code>
     */
    public static final int k_EMsgGCMatchmakingStatsResponse_VALUE = 7198;
    /**
     * <code>k_EMsgGCBotGameCreate = 7199;</code>
     */
    public static final int k_EMsgGCBotGameCreate_VALUE = 7199;
    /**
     * <code>k_EMsgGCSetMatchHistoryAccess = 7200;</code>
     */
    public static final int k_EMsgGCSetMatchHistoryAccess_VALUE = 7200;
    /**
     * <code>k_EMsgGCSetMatchHistoryAccessResponse = 7201;</code>
     */
    public static final int k_EMsgGCSetMatchHistoryAccessResponse_VALUE = 7201;
    /**
     * <code>k_EMsgUpgradeLeagueItem = 7203;</code>
     */
    public static final int k_EMsgUpgradeLeagueItem_VALUE = 7203;
    /**
     * <code>k_EMsgUpgradeLeagueItemResponse = 7204;</code>
     */
    public static final int k_EMsgUpgradeLeagueItemResponse_VALUE = 7204;
    /**
     * <code>k_EMsgGCTeamMemberProfileRequest = 7205;</code>
     */
    public static final int k_EMsgGCTeamMemberProfileRequest_VALUE = 7205;
    /**
     * <code>k_EMsgGCWatchDownloadedReplay = 7206;</code>
     */
    public static final int k_EMsgGCWatchDownloadedReplay_VALUE = 7206;
    /**
     * <code>k_EMsgGCSetMapLocationState = 7207;</code>
     */
    public static final int k_EMsgGCSetMapLocationState_VALUE = 7207;
    /**
     * <code>k_EMsgGCSetMapLocationStateResponse = 7208;</code>
     */
    public static final int k_EMsgGCSetMapLocationStateResponse_VALUE = 7208;
    /**
     * <code>k_EMsgGCResetMapLocations = 7209;</code>
     */
    public static final int k_EMsgGCResetMapLocations_VALUE = 7209;
    /**
     * <code>k_EMsgGCResetMapLocationsResponse = 7210;</code>
     */
    public static final int k_EMsgGCResetMapLocationsResponse_VALUE = 7210;
    /**
     * <code>k_EMsgGCTeamOnProfile = 7211;</code>
     */
    public static final int k_EMsgGCTeamOnProfile_VALUE = 7211;
    /**
     * <code>k_EMsgGCSetFeaturedItems = 7212;</code>
     */
    public static final int k_EMsgGCSetFeaturedItems_VALUE = 7212;
    /**
     * <code>k_EMsgGCFeaturedItems = 7215;</code>
     */
    public static final int k_EMsgGCFeaturedItems_VALUE = 7215;
    /**
     * <code>k_EMsgRefreshPartnerAccountLink = 7216;</code>
     */
    public static final int k_EMsgRefreshPartnerAccountLink_VALUE = 7216;
    /**
     * <code>k_EMsgClientsRejoinChatChannels = 7217;</code>
     */
    public static final int k_EMsgClientsRejoinChatChannels_VALUE = 7217;
    /**
     * <code>k_EMsgGCToGCGetUserChatInfo = 7218;</code>
     */
    public static final int k_EMsgGCToGCGetUserChatInfo_VALUE = 7218;
    /**
     * <code>k_EMsgGCToGCGetUserChatInfoResponse = 7219;</code>
     */
    public static final int k_EMsgGCToGCGetUserChatInfoResponse_VALUE = 7219;
    /**
     * <code>k_EMsgGCToGCLeaveAllChatChannels = 7220;</code>
     */
    public static final int k_EMsgGCToGCLeaveAllChatChannels_VALUE = 7220;
    /**
     * <code>k_EMsgGCToGCUpdateAccountChatBan = 7221;</code>
     */
    public static final int k_EMsgGCToGCUpdateAccountChatBan_VALUE = 7221;
    /**
     * <code>k_EMsgGCGuildCreateRequest = 7222;</code>
     */
    public static final int k_EMsgGCGuildCreateRequest_VALUE = 7222;
    /**
     * <code>k_EMsgGCGuildCreateResponse = 7223;</code>
     */
    public static final int k_EMsgGCGuildCreateResponse_VALUE = 7223;
    /**
     * <code>k_EMsgGCGuildSetAccountRoleRequest = 7224;</code>
     */
    public static final int k_EMsgGCGuildSetAccountRoleRequest_VALUE = 7224;
    /**
     * <code>k_EMsgGCGuildSetAccountRoleResponse = 7225;</code>
     */
    public static final int k_EMsgGCGuildSetAccountRoleResponse_VALUE = 7225;
    /**
     * <code>k_EMsgGCRequestGuildData = 7226;</code>
     */
    public static final int k_EMsgGCRequestGuildData_VALUE = 7226;
    /**
     * <code>k_EMsgGCGuildData = 7227;</code>
     */
    public static final int k_EMsgGCGuildData_VALUE = 7227;
    /**
     * <code>k_EMsgGCGuildInviteAccountRequest = 7228;</code>
     */
    public static final int k_EMsgGCGuildInviteAccountRequest_VALUE = 7228;
    /**
     * <code>k_EMsgGCGuildInviteAccountResponse = 7229;</code>
     */
    public static final int k_EMsgGCGuildInviteAccountResponse_VALUE = 7229;
    /**
     * <code>k_EMsgGCGuildCancelInviteRequest = 7230;</code>
     */
    public static final int k_EMsgGCGuildCancelInviteRequest_VALUE = 7230;
    /**
     * <code>k_EMsgGCGuildCancelInviteResponse = 7231;</code>
     */
    public static final int k_EMsgGCGuildCancelInviteResponse_VALUE = 7231;
    /**
     * <code>k_EMsgGCGuildUpdateDetailsRequest = 7232;</code>
     */
    public static final int k_EMsgGCGuildUpdateDetailsRequest_VALUE = 7232;
    /**
     * <code>k_EMsgGCGuildUpdateDetailsResponse = 7233;</code>
     */
    public static final int k_EMsgGCGuildUpdateDetailsResponse_VALUE = 7233;
    /**
     * <code>k_EMsgGCToGCCanInviteUser = 7234;</code>
     */
    public static final int k_EMsgGCToGCCanInviteUser_VALUE = 7234;
    /**
     * <code>k_EMsgGCToGCCanInviteUserResponse = 7235;</code>
     */
    public static final int k_EMsgGCToGCCanInviteUserResponse_VALUE = 7235;
    /**
     * <code>k_EMsgGCToGCGetUserRank = 7236;</code>
     */
    public static final int k_EMsgGCToGCGetUserRank_VALUE = 7236;
    /**
     * <code>k_EMsgGCToGCGetUserRankResponse = 7237;</code>
     */
    public static final int k_EMsgGCToGCGetUserRankResponse_VALUE = 7237;
    /**
     * <code>k_EMsgGCToGCUpdateTeamStats = 7240;</code>
     */
    public static final int k_EMsgGCToGCUpdateTeamStats_VALUE = 7240;
    /**
     * <code>k_EMsgGCToGCGetTeamRank = 7241;</code>
     */
    public static final int k_EMsgGCToGCGetTeamRank_VALUE = 7241;
    /**
     * <code>k_EMsgGCToGCGetTeamRankResponse = 7242;</code>
     */
    public static final int k_EMsgGCToGCGetTeamRankResponse_VALUE = 7242;
    /**
     * <code>k_EMsgGCTeamIDByNameRequest = 7245;</code>
     */
    public static final int k_EMsgGCTeamIDByNameRequest_VALUE = 7245;
    /**
     * <code>k_EMsgGCTeamIDByNameResponse = 7246;</code>
     */
    public static final int k_EMsgGCTeamIDByNameResponse_VALUE = 7246;
    /**
     * <code>k_EMsgGCEditTeam = 7247;</code>
     */
    public static final int k_EMsgGCEditTeam_VALUE = 7247;
    /**
     * <code>k_EMsgGCPassportDataRequest = 7248;</code>
     */
    public static final int k_EMsgGCPassportDataRequest_VALUE = 7248;
    /**
     * <code>k_EMsgGCPassportDataResponse = 7249;</code>
     */
    public static final int k_EMsgGCPassportDataResponse_VALUE = 7249;
    /**
     * <code>k_EMsgGCNotInGuildData = 7251;</code>
     */
    public static final int k_EMsgGCNotInGuildData_VALUE = 7251;
    /**
     * <code>k_EMsgGCGuildInviteData = 7254;</code>
     */
    public static final int k_EMsgGCGuildInviteData_VALUE = 7254;
    /**
     * <code>k_EMsgGCToGCGetLeagueAdmin = 7255;</code>
     */
    public static final int k_EMsgGCToGCGetLeagueAdmin_VALUE = 7255;
    /**
     * <code>k_EMsgGCToGCGetLeagueAdminResponse = 7256;</code>
     */
    public static final int k_EMsgGCToGCGetLeagueAdminResponse_VALUE = 7256;
    /**
     * <code>k_EMsgGCRequestLeaguePrizePool = 7258;</code>
     */
    public static final int k_EMsgGCRequestLeaguePrizePool_VALUE = 7258;
    /**
     * <code>k_EMsgGCRequestLeaguePrizePoolResponse = 7259;</code>
     */
    public static final int k_EMsgGCRequestLeaguePrizePoolResponse_VALUE = 7259;
    /**
     * <code>k_EMsgGCToGCUpdateOpenGuildPartyRequest = 7261;</code>
     */
    public static final int k_EMsgGCToGCUpdateOpenGuildPartyRequest_VALUE = 7261;
    /**
     * <code>k_EMsgGCToGCUpdateOpenGuildPartyResponse = 7262;</code>
     */
    public static final int k_EMsgGCToGCUpdateOpenGuildPartyResponse_VALUE = 7262;
    /**
     * <code>k_EMsgGCToGCDestroyOpenGuildPartyRequest = 7263;</code>
     */
    public static final int k_EMsgGCToGCDestroyOpenGuildPartyRequest_VALUE = 7263;
    /**
     * <code>k_EMsgGCToGCDestroyOpenGuildPartyResponse = 7264;</code>
     */
    public static final int k_EMsgGCToGCDestroyOpenGuildPartyResponse_VALUE = 7264;
    /**
     * <code>k_EMsgGCGuildUpdateMessage = 7265;</code>
     */
    public static final int k_EMsgGCGuildUpdateMessage_VALUE = 7265;
    /**
     * <code>k_EMsgGCPartySetOpenGuildRequest = 7266;</code>
     */
    public static final int k_EMsgGCPartySetOpenGuildRequest_VALUE = 7266;
    /**
     * <code>k_EMsgGCPartySetOpenGuildResponse = 7267;</code>
     */
    public static final int k_EMsgGCPartySetOpenGuildResponse_VALUE = 7267;
    /**
     * <code>k_EMsgGCGuildOpenPartyRefresh = 7268;</code>
     */
    public static final int k_EMsgGCGuildOpenPartyRefresh_VALUE = 7268;
    /**
     * <code>k_EMsgGCJoinOpenGuildPartyRequest = 7269;</code>
     */
    public static final int k_EMsgGCJoinOpenGuildPartyRequest_VALUE = 7269;
    /**
     * <code>k_EMsgGCJoinOpenGuildPartyResponse = 7270;</code>
     */
    public static final int k_EMsgGCJoinOpenGuildPartyResponse_VALUE = 7270;
    /**
     * <code>k_EMsgGCLeaveChatChannel = 7272;</code>
     */
    public static final int k_EMsgGCLeaveChatChannel_VALUE = 7272;
    /**
     * <code>k_EMsgGCChatMessage = 7273;</code>
     */
    public static final int k_EMsgGCChatMessage_VALUE = 7273;
    /**
     * <code>k_EMsgGCGetHeroStandings = 7274;</code>
     */
    public static final int k_EMsgGCGetHeroStandings_VALUE = 7274;
    /**
     * <code>k_EMsgGCGetHeroStandingsResponse = 7275;</code>
     */
    public static final int k_EMsgGCGetHeroStandingsResponse_VALUE = 7275;
    /**
     * <code>k_EMsgGCGuildEditLogoRequest = 7279;</code>
     */
    public static final int k_EMsgGCGuildEditLogoRequest_VALUE = 7279;
    /**
     * <code>k_EMsgGCGuildEditLogoResponse = 7280;</code>
     */
    public static final int k_EMsgGCGuildEditLogoResponse_VALUE = 7280;
    /**
     * <code>k_EMsgGCGuildmatePracticeLobbyListRequest = 7281;</code>
     */
    public static final int k_EMsgGCGuildmatePracticeLobbyListRequest_VALUE = 7281;
    /**
     * <code>k_EMsgGCGuildmatePracticeLobbyListResponse = 7282;</code>
     */
    public static final int k_EMsgGCGuildmatePracticeLobbyListResponse_VALUE = 7282;
    /**
     * <code>k_EMsgGCItemEditorReservationsRequest = 7283;</code>
     */
    public static final int k_EMsgGCItemEditorReservationsRequest_VALUE = 7283;
    /**
     * <code>k_EMsgGCItemEditorReservationsResponse = 7284;</code>
     */
    public static final int k_EMsgGCItemEditorReservationsResponse_VALUE = 7284;
    /**
     * <code>k_EMsgGCItemEditorReserveItemDef = 7285;</code>
     */
    public static final int k_EMsgGCItemEditorReserveItemDef_VALUE = 7285;
    /**
     * <code>k_EMsgGCItemEditorReserveItemDefResponse = 7286;</code>
     */
    public static final int k_EMsgGCItemEditorReserveItemDefResponse_VALUE = 7286;
    /**
     * <code>k_EMsgGCItemEditorReleaseReservation = 7287;</code>
     */
    public static final int k_EMsgGCItemEditorReleaseReservation_VALUE = 7287;
    /**
     * <code>k_EMsgGCItemEditorReleaseReservationResponse = 7288;</code>
     */
    public static final int k_EMsgGCItemEditorReleaseReservationResponse_VALUE = 7288;
    /**
     * <code>k_EMsgGCRewardTutorialPrizes = 7289;</code>
     */
    public static final int k_EMsgGCRewardTutorialPrizes_VALUE = 7289;
    /**
     * <code>k_EMsgGCLastHitChallengeHighScorePost = 7290;</code>
     */
    public static final int k_EMsgGCLastHitChallengeHighScorePost_VALUE = 7290;
    /**
     * <code>k_EMsgGCLastHitChallengeHighScoreRequest = 7291;</code>
     */
    public static final int k_EMsgGCLastHitChallengeHighScoreRequest_VALUE = 7291;
    /**
     * <code>k_EMsgGCLastHitChallengeHighScoreResponse = 7292;</code>
     */
    public static final int k_EMsgGCLastHitChallengeHighScoreResponse_VALUE = 7292;
    /**
     * <code>k_EMsgGCCreateFantasyLeagueRequest = 7293;</code>
     */
    public static final int k_EMsgGCCreateFantasyLeagueRequest_VALUE = 7293;
    /**
     * <code>k_EMsgGCCreateFantasyLeagueResponse = 7294;</code>
     */
    public static final int k_EMsgGCCreateFantasyLeagueResponse_VALUE = 7294;
    /**
     * <code>k_EMsgGCFantasyLeagueInfoRequest = 7297;</code>
     */
    public static final int k_EMsgGCFantasyLeagueInfoRequest_VALUE = 7297;
    /**
     * <code>k_EMsgGCFantasyLeagueInfoResponse = 7298;</code>
     */
    public static final int k_EMsgGCFantasyLeagueInfoResponse_VALUE = 7298;
    /**
     * <code>k_EMsgGCFantasyLeagueInfo = 7299;</code>
     */
    public static final int k_EMsgGCFantasyLeagueInfo_VALUE = 7299;
    /**
     * <code>k_EMsgGCCreateFantasyTeamRequest = 7300;</code>
     */
    public static final int k_EMsgGCCreateFantasyTeamRequest_VALUE = 7300;
    /**
     * <code>k_EMsgGCCreateFantasyTeamResponse = 7301;</code>
     */
    public static final int k_EMsgGCCreateFantasyTeamResponse_VALUE = 7301;
    /**
     * <code>k_EMsgGCEditFantasyTeamRequest = 7302;</code>
     */
    public static final int k_EMsgGCEditFantasyTeamRequest_VALUE = 7302;
    /**
     * <code>k_EMsgGCEditFantasyTeamResponse = 7303;</code>
     */
    public static final int k_EMsgGCEditFantasyTeamResponse_VALUE = 7303;
    /**
     * <code>k_EMsgGCFantasyTeamInfoRequestByFantasyLeagueID = 7304;</code>
     */
    public static final int k_EMsgGCFantasyTeamInfoRequestByFantasyLeagueID_VALUE = 7304;
    /**
     * <code>k_EMsgGCFantasyTeamInfoRequestByOwnerAccountID = 7305;</code>
     */
    public static final int k_EMsgGCFantasyTeamInfoRequestByOwnerAccountID_VALUE = 7305;
    /**
     * <code>k_EMsgGCFantasyTeamInfoResponse = 7306;</code>
     */
    public static final int k_EMsgGCFantasyTeamInfoResponse_VALUE = 7306;
    /**
     * <code>k_EMsgGCFantasyTeamInfo = 7307;</code>
     */
    public static final int k_EMsgGCFantasyTeamInfo_VALUE = 7307;
    /**
     * <code>k_EMsgGCFantasyLivePlayerStats = 7308;</code>
     */
    public static final int k_EMsgGCFantasyLivePlayerStats_VALUE = 7308;
    /**
     * <code>k_EMsgGCFantasyFinalPlayerStats = 7309;</code>
     */
    public static final int k_EMsgGCFantasyFinalPlayerStats_VALUE = 7309;
    /**
     * <code>k_EMsgGCFantasyMatch = 7310;</code>
     */
    public static final int k_EMsgGCFantasyMatch_VALUE = 7310;
    /**
     * <code>k_EMsgGCToGCReloadVersions = 7311;</code>
     */
    public static final int k_EMsgGCToGCReloadVersions_VALUE = 7311;
    /**
     * <code>k_EMsgGCFantasyTeamScoreRequest = 7312;</code>
     */
    public static final int k_EMsgGCFantasyTeamScoreRequest_VALUE = 7312;
    /**
     * <code>k_EMsgGCFantasyTeamScoreResponse = 7313;</code>
     */
    public static final int k_EMsgGCFantasyTeamScoreResponse_VALUE = 7313;
    /**
     * <code>k_EMsgGCFantasyTeamStandingsRequest = 7314;</code>
     */
    public static final int k_EMsgGCFantasyTeamStandingsRequest_VALUE = 7314;
    /**
     * <code>k_EMsgGCFantasyTeamStandingsResponse = 7315;</code>
     */
    public static final int k_EMsgGCFantasyTeamStandingsResponse_VALUE = 7315;
    /**
     * <code>k_EMsgGCFantasyPlayerScoreRequest = 7316;</code>
     */
    public static final int k_EMsgGCFantasyPlayerScoreRequest_VALUE = 7316;
    /**
     * <code>k_EMsgGCFantasyPlayerScoreResponse = 7317;</code>
     */
    public static final int k_EMsgGCFantasyPlayerScoreResponse_VALUE = 7317;
    /**
     * <code>k_EMsgGCFantasyPlayerStandingsRequest = 7318;</code>
     */
    public static final int k_EMsgGCFantasyPlayerStandingsRequest_VALUE = 7318;
    /**
     * <code>k_EMsgGCFantasyPlayerStandingsResponse = 7319;</code>
     */
    public static final int k_EMsgGCFantasyPlayerStandingsResponse_VALUE = 7319;
    /**
     * <code>k_EMsgGCFlipLobbyTeams = 7320;</code>
     */
    public static final int k_EMsgGCFlipLobbyTeams_VALUE = 7320;
    /**
     * <code>k_EMsgGCCustomGameCreate = 7321;</code>
     */
    public static final int k_EMsgGCCustomGameCreate_VALUE = 7321;
    /**
     * <code>k_EMsgGCFantasyPlayerInfoRequest = 7322;</code>
     */
    public static final int k_EMsgGCFantasyPlayerInfoRequest_VALUE = 7322;
    /**
     * <code>k_EMsgGCFantasyPlayerInfoResponse = 7323;</code>
     */
    public static final int k_EMsgGCFantasyPlayerInfoResponse_VALUE = 7323;
    /**
     * <code>k_EMsgGCToGCProcessPlayerReportForTarget = 7324;</code>
     */
    public static final int k_EMsgGCToGCProcessPlayerReportForTarget_VALUE = 7324;
    /**
     * <code>k_EMsgGCToGCProcessReportSuccess = 7325;</code>
     */
    public static final int k_EMsgGCToGCProcessReportSuccess_VALUE = 7325;
    /**
     * <code>k_EMsgGCNotifyAccountFlagsChange = 7326;</code>
     */
    public static final int k_EMsgGCNotifyAccountFlagsChange_VALUE = 7326;
    /**
     * <code>k_EMsgGCSetProfilePrivacy = 7327;</code>
     */
    public static final int k_EMsgGCSetProfilePrivacy_VALUE = 7327;
    /**
     * <code>k_EMsgGCSetProfilePrivacyResponse = 7328;</code>
     */
    public static final int k_EMsgGCSetProfilePrivacyResponse_VALUE = 7328;
    /**
     * <code>k_EMsgGCSteamProfileRequest = 7329;</code>
     */
    public static final int k_EMsgGCSteamProfileRequest_VALUE = 7329;
    /**
     * <code>k_EMsgGCSteamProfileRequestResponse = 7330;</code>
     */
    public static final int k_EMsgGCSteamProfileRequestResponse_VALUE = 7330;
    /**
     * <code>k_EMsgGCFantasyLeagueCreateInfoRequest = 7331;</code>
     */
    public static final int k_EMsgGCFantasyLeagueCreateInfoRequest_VALUE = 7331;
    /**
     * <code>k_EMsgGCFantasyLeagueCreateInfoResponse = 7332;</code>
     */
    public static final int k_EMsgGCFantasyLeagueCreateInfoResponse_VALUE = 7332;
    /**
     * <code>k_EMsgGCFantasyLeagueInviteInfoRequest = 7333;</code>
     */
    public static final int k_EMsgGCFantasyLeagueInviteInfoRequest_VALUE = 7333;
    /**
     * <code>k_EMsgGCFantasyLeagueInviteInfoResponse = 7334;</code>
     */
    public static final int k_EMsgGCFantasyLeagueInviteInfoResponse_VALUE = 7334;
    /**
     * <code>k_EMsgGCClientIgnoredUser = 7335;</code>
     */
    public static final int k_EMsgGCClientIgnoredUser_VALUE = 7335;
    /**
     * <code>k_EMsgGCFantasyLeagueCreateRequest = 7336;</code>
     */
    public static final int k_EMsgGCFantasyLeagueCreateRequest_VALUE = 7336;
    /**
     * <code>k_EMsgGCFantasyLeagueCreateResponse = 7337;</code>
     */
    public static final int k_EMsgGCFantasyLeagueCreateResponse_VALUE = 7337;
    /**
     * <code>k_EMsgGCFantasyTeamCreateRequest = 7338;</code>
     */
    public static final int k_EMsgGCFantasyTeamCreateRequest_VALUE = 7338;
    /**
     * <code>k_EMsgGCFantasyTeamCreateResponse = 7339;</code>
     */
    public static final int k_EMsgGCFantasyTeamCreateResponse_VALUE = 7339;
    /**
     * <code>k_EMsgGCFantasyLeagueFriendJoinListRequest = 7340;</code>
     */
    public static final int k_EMsgGCFantasyLeagueFriendJoinListRequest_VALUE = 7340;
    /**
     * <code>k_EMsgGCFantasyLeagueFriendJoinListResponse = 7341;</code>
     */
    public static final int k_EMsgGCFantasyLeagueFriendJoinListResponse_VALUE = 7341;
    /**
     * <code>k_EMsgGCClientSuspended = 7342;</code>
     */
    public static final int k_EMsgGCClientSuspended_VALUE = 7342;
    /**
     * <code>k_EMsgGCPartyMemberSetCoach = 7343;</code>
     */
    public static final int k_EMsgGCPartyMemberSetCoach_VALUE = 7343;
    /**
     * <code>k_EMsgGCFantasyLeagueEditInvitesRequest = 7344;</code>
     */
    public static final int k_EMsgGCFantasyLeagueEditInvitesRequest_VALUE = 7344;
    /**
     * <code>k_EMsgGCFantasyLeagueEditInvitesResponse = 7345;</code>
     */
    public static final int k_EMsgGCFantasyLeagueEditInvitesResponse_VALUE = 7345;
    /**
     * <code>k_EMsgGCPracticeLobbySetCoach = 7346;</code>
     */
    public static final int k_EMsgGCPracticeLobbySetCoach_VALUE = 7346;
    /**
     * <code>k_EMsgGCFantasyLeagueEditInfoRequest = 7347;</code>
     */
    public static final int k_EMsgGCFantasyLeagueEditInfoRequest_VALUE = 7347;
    /**
     * <code>k_EMsgGCFantasyLeagueEditInfoResponse = 7348;</code>
     */
    public static final int k_EMsgGCFantasyLeagueEditInfoResponse_VALUE = 7348;
    /**
     * <code>k_EMsgGCFantasyLeagueDraftStatusRequest = 7349;</code>
     */
    public static final int k_EMsgGCFantasyLeagueDraftStatusRequest_VALUE = 7349;
    /**
     * <code>k_EMsgGCFantasyLeagueDraftStatus = 7350;</code>
     */
    public static final int k_EMsgGCFantasyLeagueDraftStatus_VALUE = 7350;
    /**
     * <code>k_EMsgGCFantasyLeagueDraftPlayerRequest = 7351;</code>
     */
    public static final int k_EMsgGCFantasyLeagueDraftPlayerRequest_VALUE = 7351;
    /**
     * <code>k_EMsgGCFantasyLeagueDraftPlayerResponse = 7352;</code>
     */
    public static final int k_EMsgGCFantasyLeagueDraftPlayerResponse_VALUE = 7352;
    /**
     * <code>k_EMsgGCFantasyLeagueMatchupsRequest = 7353;</code>
     */
    public static final int k_EMsgGCFantasyLeagueMatchupsRequest_VALUE = 7353;
    /**
     * <code>k_EMsgGCFantasyLeagueMatchupsResponse = 7354;</code>
     */
    public static final int k_EMsgGCFantasyLeagueMatchupsResponse_VALUE = 7354;
    /**
     * <code>k_EMsgGCFantasyTeamRosterSwapRequest = 7355;</code>
     */
    public static final int k_EMsgGCFantasyTeamRosterSwapRequest_VALUE = 7355;
    /**
     * <code>k_EMsgGCFantasyTeamRosterSwapResponse = 7356;</code>
     */
    public static final int k_EMsgGCFantasyTeamRosterSwapResponse_VALUE = 7356;
    /**
     * <code>k_EMsgGCFantasyTeamRosterRequest = 7357;</code>
     */
    public static final int k_EMsgGCFantasyTeamRosterRequest_VALUE = 7357;
    /**
     * <code>k_EMsgGCFantasyTeamRosterResponse = 7358;</code>
     */
    public static final int k_EMsgGCFantasyTeamRosterResponse_VALUE = 7358;
    /**
     * <code>k_EMsgGCNexonPartnerUpdate = 7359;</code>
     */
    public static final int k_EMsgGCNexonPartnerUpdate_VALUE = 7359;
    /**
     * <code>k_EMsgGCToGCProcessPCBangRewardPoints = 7360;</code>
     */
    public static final int k_EMsgGCToGCProcessPCBangRewardPoints_VALUE = 7360;
    /**
     * <code>k_EMsgGCFantasyTeamRosterAddDropRequest = 7361;</code>
     */
    public static final int k_EMsgGCFantasyTeamRosterAddDropRequest_VALUE = 7361;
    /**
     * <code>k_EMsgGCFantasyTeamRosterAddDropResponse = 7362;</code>
     */
    public static final int k_EMsgGCFantasyTeamRosterAddDropResponse_VALUE = 7362;
    /**
     * <code>k_EMsgPresentedClientTerminateDlg = 7363;</code>
     */
    public static final int k_EMsgPresentedClientTerminateDlg_VALUE = 7363;
    /**
     * <code>k_EMsgGCFantasyPlayerHisoricalStatsRequest = 7364;</code>
     */
    public static final int k_EMsgGCFantasyPlayerHisoricalStatsRequest_VALUE = 7364;
    /**
     * <code>k_EMsgGCFantasyPlayerHisoricalStatsResponse = 7365;</code>
     */
    public static final int k_EMsgGCFantasyPlayerHisoricalStatsResponse_VALUE = 7365;
    /**
     * <code>k_EMsgGCPCBangTimedRewardMessage = 7366;</code>
     */
    public static final int k_EMsgGCPCBangTimedRewardMessage_VALUE = 7366;
    /**
     * <code>k_EMsgGCLobbyUpdateBroadcastChannelInfo = 7367;</code>
     */
    public static final int k_EMsgGCLobbyUpdateBroadcastChannelInfo_VALUE = 7367;
    /**
     * <code>k_EMsgGCFantasyTeamTradesRequest = 7368;</code>
     */
    public static final int k_EMsgGCFantasyTeamTradesRequest_VALUE = 7368;
    /**
     * <code>k_EMsgGCFantasyTeamTradesResponse = 7369;</code>
     */
    public static final int k_EMsgGCFantasyTeamTradesResponse_VALUE = 7369;
    /**
     * <code>k_EMsgGCFantasyTeamTradeCancelRequest = 7370;</code>
     */
    public static final int k_EMsgGCFantasyTeamTradeCancelRequest_VALUE = 7370;
    /**
     * <code>k_EMsgGCFantasyTeamTradeCancelResponse = 7371;</code>
     */
    public static final int k_EMsgGCFantasyTeamTradeCancelResponse_VALUE = 7371;
    /**
     * <code>k_EMsgGCToGCGrantTournamentItem = 7372;</code>
     */
    public static final int k_EMsgGCToGCGrantTournamentItem_VALUE = 7372;
    /**
     * <code>k_EMsgGCProcessFantasyScheduledEvent = 7373;</code>
     */
    public static final int k_EMsgGCProcessFantasyScheduledEvent_VALUE = 7373;
    /**
     * <code>k_EMsgGCToGCGrantPCBangRewardItem = 7374;</code>
     */
    public static final int k_EMsgGCToGCGrantPCBangRewardItem_VALUE = 7374;
    /**
     * <code>k_EMsgGCToGCUpgradeTwitchViewerItems = 7375;</code>
     */
    public static final int k_EMsgGCToGCUpgradeTwitchViewerItems_VALUE = 7375;
    /**
     * <code>k_EMsgGCToGCGetLiveMatchAffiliates = 7376;</code>
     */
    public static final int k_EMsgGCToGCGetLiveMatchAffiliates_VALUE = 7376;
    /**
     * <code>k_EMsgGCToGCGetLiveMatchAffiliatesResponse = 7377;</code>
     */
    public static final int k_EMsgGCToGCGetLiveMatchAffiliatesResponse_VALUE = 7377;
    /**
     * <code>k_EMsgGCToGCUpdatePlayerPennantCounts = 7378;</code>
     */
    public static final int k_EMsgGCToGCUpdatePlayerPennantCounts_VALUE = 7378;
    /**
     * <code>k_EMsgGCToGCGetPlayerPennantCounts = 7379;</code>
     */
    public static final int k_EMsgGCToGCGetPlayerPennantCounts_VALUE = 7379;
    /**
     * <code>k_EMsgGCToGCGetPlayerPennantCountsResponse = 7380;</code>
     */
    public static final int k_EMsgGCToGCGetPlayerPennantCountsResponse_VALUE = 7380;
    /**
     * <code>k_EMsgGCGameMatchSignOutPermissionRequest = 7381;</code>
     */
    public static final int k_EMsgGCGameMatchSignOutPermissionRequest_VALUE = 7381;
    /**
     * <code>k_EMsgGCGameMatchSignOutPermissionResponse = 7382;</code>
     */
    public static final int k_EMsgGCGameMatchSignOutPermissionResponse_VALUE = 7382;
    /**
     * <code>k_EMsgDOTAChatChannelMemberUpdate = 7383;</code>
     */
    public static final int k_EMsgDOTAChatChannelMemberUpdate_VALUE = 7383;
    /**
     * <code>k_EMsgDOTAAwardEventPoints = 7384;</code>
     */
    public static final int k_EMsgDOTAAwardEventPoints_VALUE = 7384;
    /**
     * <code>k_EMsgDOTARedeemEventPrize = 7385;</code>
     */
    public static final int k_EMsgDOTARedeemEventPrize_VALUE = 7385;
    /**
     * <code>k_EMsgDOTARedeemEventPrizeResponse = 7386;</code>
     */
    public static final int k_EMsgDOTARedeemEventPrizeResponse_VALUE = 7386;
    /**
     * <code>k_EMsgDOTAGetEventPoints = 7387;</code>
     */
    public static final int k_EMsgDOTAGetEventPoints_VALUE = 7387;
    /**
     * <code>k_EMsgDOTAGetEventPointsResponse = 7388;</code>
     */
    public static final int k_EMsgDOTAGetEventPointsResponse_VALUE = 7388;
    /**
     * <code>k_EMsgGCToGCSignoutAwardEventPoints = 7390;</code>
     */
    public static final int k_EMsgGCToGCSignoutAwardEventPoints_VALUE = 7390;
    /**
     * <code>k_EMsgDOTASendFriendRecruits = 7393;</code>
     */
    public static final int k_EMsgDOTASendFriendRecruits_VALUE = 7393;
    /**
     * <code>k_EMsgDOTAFriendRecruitsRequest = 7394;</code>
     */
    public static final int k_EMsgDOTAFriendRecruitsRequest_VALUE = 7394;
    /**
     * <code>k_EMsgDOTAFriendRecruitsResponse = 7395;</code>
     */
    public static final int k_EMsgDOTAFriendRecruitsResponse_VALUE = 7395;
    /**
     * <code>k_EMsgDOTAFriendRecruitInviteAcceptDecline = 7396;</code>
     */
    public static final int k_EMsgDOTAFriendRecruitInviteAcceptDecline_VALUE = 7396;
    /**
     * <code>k_EMsgGCPartyLeaderWatchGamePrompt = 7397;</code>
     */
    public static final int k_EMsgGCPartyLeaderWatchGamePrompt_VALUE = 7397;
    /**
     * <code>k_EMsgDOTAFrostivusTimeElapsed = 7398;</code>
     */
    public static final int k_EMsgDOTAFrostivusTimeElapsed_VALUE = 7398;
    /**
     * <code>k_EMsgGCToGCGrantEarnedLicense = 7399;</code>
     */
    public static final int k_EMsgGCToGCGrantEarnedLicense_VALUE = 7399;
    /**
     * <code>k_EMsgDOTALiveLeagueGameUpdate = 7402;</code>
     */
    public static final int k_EMsgDOTALiveLeagueGameUpdate_VALUE = 7402;
    /**
     * <code>k_EMsgDOTAChatGetUserList = 7403;</code>
     */
    public static final int k_EMsgDOTAChatGetUserList_VALUE = 7403;
    /**
     * <code>k_EMsgDOTAChatGetUserListResponse = 7404;</code>
     */
    public static final int k_EMsgDOTAChatGetUserListResponse_VALUE = 7404;
    /**
     * <code>k_EMsgGCCompendiumSetSelection = 7405;</code>
     */
    public static final int k_EMsgGCCompendiumSetSelection_VALUE = 7405;
    /**
     * <code>k_EMsgGCCompendiumDataRequest = 7406;</code>
     */
    public static final int k_EMsgGCCompendiumDataRequest_VALUE = 7406;
    /**
     * <code>k_EMsgGCCompendiumDataResponse = 7407;</code>
     */
    public static final int k_EMsgGCCompendiumDataResponse_VALUE = 7407;
    /**
     * <code>k_EMsgDOTAGetPlayerMatchHistory = 7408;</code>
     */
    public static final int k_EMsgDOTAGetPlayerMatchHistory_VALUE = 7408;
    /**
     * <code>k_EMsgDOTAGetPlayerMatchHistoryResponse = 7409;</code>
     */
    public static final int k_EMsgDOTAGetPlayerMatchHistoryResponse_VALUE = 7409;
    /**
     * <code>k_EMsgGCToGCMatchmakingAddParty = 7410;</code>
     */
    public static final int k_EMsgGCToGCMatchmakingAddParty_VALUE = 7410;
    /**
     * <code>k_EMsgGCToGCMatchmakingRemoveParty = 7411;</code>
     */
    public static final int k_EMsgGCToGCMatchmakingRemoveParty_VALUE = 7411;
    /**
     * <code>k_EMsgGCToGCMatchmakingRemoveAllParties = 7412;</code>
     */
    public static final int k_EMsgGCToGCMatchmakingRemoveAllParties_VALUE = 7412;
    /**
     * <code>k_EMsgGCToGCMatchmakingMatchFound = 7413;</code>
     */
    public static final int k_EMsgGCToGCMatchmakingMatchFound_VALUE = 7413;
    /**
     * <code>k_EMsgGCToGCUpdateMatchManagementStats = 7414;</code>
     */
    public static final int k_EMsgGCToGCUpdateMatchManagementStats_VALUE = 7414;
    /**
     * <code>k_EMsgGCToGCUpdateMatchmakingStats = 7415;</code>
     */
    public static final int k_EMsgGCToGCUpdateMatchmakingStats_VALUE = 7415;
    /**
     * <code>k_EMsgGCToServerPingRequest = 7416;</code>
     */
    public static final int k_EMsgGCToServerPingRequest_VALUE = 7416;
    /**
     * <code>k_EMsgGCToServerPingResponse = 7417;</code>
     */
    public static final int k_EMsgGCToServerPingResponse_VALUE = 7417;
    /**
     * <code>k_EMsgGCToServerConsoleCommand = 7418;</code>
     */
    public static final int k_EMsgGCToServerConsoleCommand_VALUE = 7418;
    /**
     * <code>k_EMsgGCToGCUpdateLiveLeagueGameInfo = 7420;</code>
     */
    public static final int k_EMsgGCToGCUpdateLiveLeagueGameInfo_VALUE = 7420;
    /**
     * <code>k_EMsgGCMakeOffering = 7423;</code>
     */
    public static final int k_EMsgGCMakeOffering_VALUE = 7423;
    /**
     * <code>k_EMsgGCRequestOfferings = 7424;</code>
     */
    public static final int k_EMsgGCRequestOfferings_VALUE = 7424;
    /**
     * <code>k_EMsgGCRequestOfferingsResponse = 7425;</code>
     */
    public static final int k_EMsgGCRequestOfferingsResponse_VALUE = 7425;
    /**
     * <code>k_EMsgGCToGCProcessMatchLeaver = 7426;</code>
     */
    public static final int k_EMsgGCToGCProcessMatchLeaver_VALUE = 7426;
    /**
     * <code>k_EMsgGCNotificationsRequest = 7427;</code>
     */
    public static final int k_EMsgGCNotificationsRequest_VALUE = 7427;
    /**
     * <code>k_EMsgGCNotificationsResponse = 7428;</code>
     */
    public static final int k_EMsgGCNotificationsResponse_VALUE = 7428;
    /**
     * <code>k_EMsgGCToGCModifyNotification = 7429;</code>
     */
    public static final int k_EMsgGCToGCModifyNotification_VALUE = 7429;
    /**
     * <code>k_EMsgGCToGCSetNewNotifications = 7430;</code>
     */
    public static final int k_EMsgGCToGCSetNewNotifications_VALUE = 7430;
    /**
     * <code>k_EMsgGCToGCSetIsLeagueAdmin = 7431;</code>
     */
    public static final int k_EMsgGCToGCSetIsLeagueAdmin_VALUE = 7431;
    /**
     * <code>k_EMsgGCLeagueAdminState = 7432;</code>
     */
    public static final int k_EMsgGCLeagueAdminState_VALUE = 7432;
    /**
     * <code>k_EMsgGCToGCSendLeagueAdminState = 7433;</code>
     */
    public static final int k_EMsgGCToGCSendLeagueAdminState_VALUE = 7433;
    /**
     * <code>k_EMsgGCLeagueAdminList = 7434;</code>
     */
    public static final int k_EMsgGCLeagueAdminList_VALUE = 7434;
    /**
     * <code>k_EMsgGCNotificationsMarkReadRequest = 7435;</code>
     */
    public static final int k_EMsgGCNotificationsMarkReadRequest_VALUE = 7435;
    /**
     * <code>k_EMsgGCFantasyMessageAdd = 7436;</code>
     */
    public static final int k_EMsgGCFantasyMessageAdd_VALUE = 7436;
    /**
     * <code>k_EMsgGCFantasyMessagesRequest = 7437;</code>
     */
    public static final int k_EMsgGCFantasyMessagesRequest_VALUE = 7437;
    /**
     * <code>k_EMsgGCFantasyMessagesResponse = 7438;</code>
     */
    public static final int k_EMsgGCFantasyMessagesResponse_VALUE = 7438;
    /**
     * <code>k_EMsgGCFantasyScheduledMatchesRequest = 7439;</code>
     */
    public static final int k_EMsgGCFantasyScheduledMatchesRequest_VALUE = 7439;
    /**
     * <code>k_EMsgGCFantasyScheduledMatchesResponse = 7440;</code>
     */
    public static final int k_EMsgGCFantasyScheduledMatchesResponse_VALUE = 7440;
    /**
     * <code>k_EMsgGCToGCGrantLeagueAccess = 7441;</code>
     */
    public static final int k_EMsgGCToGCGrantLeagueAccess_VALUE = 7441;
    /**
     * <code>k_EMsgGCEventGameCreate = 7443;</code>
     */
    public static final int k_EMsgGCEventGameCreate_VALUE = 7443;
    /**
     * <code>k_EMsgGCPerfectWorldUserLookupRequest = 7444;</code>
     */
    public static final int k_EMsgGCPerfectWorldUserLookupRequest_VALUE = 7444;
    /**
     * <code>k_EMsgGCPerfectWorldUserLookupResponse = 7445;</code>
     */
    public static final int k_EMsgGCPerfectWorldUserLookupResponse_VALUE = 7445;
    /**
     * <code>k_EMsgGCToGCIncrementRecruitmentSDO = 7446;</code>
     */
    public static final int k_EMsgGCToGCIncrementRecruitmentSDO_VALUE = 7446;
    /**
     * <code>k_EMsgGCToGCIncrementRecruitmentLevel = 7447;</code>
     */
    public static final int k_EMsgGCToGCIncrementRecruitmentLevel_VALUE = 7447;
    /**
     * <code>k_EMsgGCFantasyRemoveOwner = 7448;</code>
     */
    public static final int k_EMsgGCFantasyRemoveOwner_VALUE = 7448;
    /**
     * <code>k_EMsgGCFantasyRemoveOwnerResponse = 7449;</code>
     */
    public static final int k_EMsgGCFantasyRemoveOwnerResponse_VALUE = 7449;
    /**
     * <code>k_EMsgGCRequestBatchPlayerResources = 7450;</code>
     */
    public static final int k_EMsgGCRequestBatchPlayerResources_VALUE = 7450;
    /**
     * <code>k_EMsgGCRequestBatchPlayerResourcesResponse = 7451;</code>
     */
    public static final int k_EMsgGCRequestBatchPlayerResourcesResponse_VALUE = 7451;
    /**
     * <code>k_EMsgGCToGCSendUpdateLeagues = 7452;</code>
     */
    public static final int k_EMsgGCToGCSendUpdateLeagues_VALUE = 7452;
    /**
     * <code>k_EMsgGCCompendiumSetSelectionResponse = 7453;</code>
     */
    public static final int k_EMsgGCCompendiumSetSelectionResponse_VALUE = 7453;
    /**
     * <code>k_EMsgGCPlayerInfoRequest = 7454;</code>
     */
    public static final int k_EMsgGCPlayerInfoRequest_VALUE = 7454;
    /**
     * <code>k_EMsgGCPlayerInfo = 7455;</code>
     */
    public static final int k_EMsgGCPlayerInfo_VALUE = 7455;
    /**
     * <code>k_EMsgGCPlayerInfoSubmit = 7456;</code>
     */
    public static final int k_EMsgGCPlayerInfoSubmit_VALUE = 7456;
    /**
     * <code>k_EMsgGCPlayerInfoSubmitResponse = 7457;</code>
     */
    public static final int k_EMsgGCPlayerInfoSubmitResponse_VALUE = 7457;
    /**
     * <code>k_EMsgGCToGCGetAccountLevel = 7458;</code>
     */
    public static final int k_EMsgGCToGCGetAccountLevel_VALUE = 7458;
    /**
     * <code>k_EMsgGCToGCGetAccountLevelResponse = 7459;</code>
     */
    public static final int k_EMsgGCToGCGetAccountLevelResponse_VALUE = 7459;
    /**
     * <code>k_EMsgGCToGCGetAccountPartner = 7460;</code>
     */
    public static final int k_EMsgGCToGCGetAccountPartner_VALUE = 7460;
    /**
     * <code>k_EMsgGCToGCGetAccountPartnerResponse = 7461;</code>
     */
    public static final int k_EMsgGCToGCGetAccountPartnerResponse_VALUE = 7461;
    /**
     * <code>k_EMsgGCToGCGetAccountProfile = 7462;</code>
     */
    public static final int k_EMsgGCToGCGetAccountProfile_VALUE = 7462;
    /**
     * <code>k_EMsgGCToGCGetAccountProfileResponse = 7463;</code>
     */
    public static final int k_EMsgGCToGCGetAccountProfileResponse_VALUE = 7463;
    /**
     * <code>k_EMsgDOTAGetWeekendTourneySchedule = 7464;</code>
     */
    public static final int k_EMsgDOTAGetWeekendTourneySchedule_VALUE = 7464;
    /**
     * <code>k_EMsgDOTAWeekendTourneySchedule = 7465;</code>
     */
    public static final int k_EMsgDOTAWeekendTourneySchedule_VALUE = 7465;
    /**
     * <code>k_EMsgGCJoinableCustomGameModesRequest = 7466;</code>
     */
    public static final int k_EMsgGCJoinableCustomGameModesRequest_VALUE = 7466;
    /**
     * <code>k_EMsgGCJoinableCustomGameModesResponse = 7467;</code>
     */
    public static final int k_EMsgGCJoinableCustomGameModesResponse_VALUE = 7467;
    /**
     * <code>k_EMsgGCJoinableCustomLobbiesRequest = 7468;</code>
     */
    public static final int k_EMsgGCJoinableCustomLobbiesRequest_VALUE = 7468;
    /**
     * <code>k_EMsgGCJoinableCustomLobbiesResponse = 7469;</code>
     */
    public static final int k_EMsgGCJoinableCustomLobbiesResponse_VALUE = 7469;
    /**
     * <code>k_EMsgGCQuickJoinCustomLobby = 7470;</code>
     */
    public static final int k_EMsgGCQuickJoinCustomLobby_VALUE = 7470;
    /**
     * <code>k_EMsgGCQuickJoinCustomLobbyResponse = 7471;</code>
     */
    public static final int k_EMsgGCQuickJoinCustomLobbyResponse_VALUE = 7471;
    /**
     * <code>k_EMsgGCToGCGrantEventPointAction = 7472;</code>
     */
    public static final int k_EMsgGCToGCGrantEventPointAction_VALUE = 7472;
    /**
     * <code>k_EMsgServerGetEventPoints = 7473;</code>
     */
    public static final int k_EMsgServerGetEventPoints_VALUE = 7473;
    /**
     * <code>k_EMsgServerGetEventPointsResponse = 7474;</code>
     */
    public static final int k_EMsgServerGetEventPointsResponse_VALUE = 7474;
    /**
     * <code>k_EMsgServerGrantSurveyPermission = 7475;</code>
     */
    public static final int k_EMsgServerGrantSurveyPermission_VALUE = 7475;
    /**
     * <code>k_EMsgServerGrantSurveyPermissionResponse = 7476;</code>
     */
    public static final int k_EMsgServerGrantSurveyPermissionResponse_VALUE = 7476;
    /**
     * <code>k_EMsgClientProvideSurveyResult = 7477;</code>
     */
    public static final int k_EMsgClientProvideSurveyResult_VALUE = 7477;
    /**
     * <code>k_EMsgGCToGCSetCompendiumSelection = 7478;</code>
     */
    public static final int k_EMsgGCToGCSetCompendiumSelection_VALUE = 7478;
    /**
     * <code>k_EMsgGCToGCUpdateTI4HeroQuest = 7480;</code>
     */
    public static final int k_EMsgGCToGCUpdateTI4HeroQuest_VALUE = 7480;
    /**
     * <code>k_EMsgGCCompendiumDataChanged = 7481;</code>
     */
    public static final int k_EMsgGCCompendiumDataChanged_VALUE = 7481;
    /**
     * <code>k_EMsgDOTAFantasyLeagueFindRequest = 7482;</code>
     */
    public static final int k_EMsgDOTAFantasyLeagueFindRequest_VALUE = 7482;
    /**
     * <code>k_EMsgDOTAFantasyLeagueFindResponse = 7483;</code>
     */
    public static final int k_EMsgDOTAFantasyLeagueFindResponse_VALUE = 7483;
    /**
     * <code>k_EMsgGCHasItemQuery = 7484;</code>
     */
    public static final int k_EMsgGCHasItemQuery_VALUE = 7484;
    /**
     * <code>k_EMsgGCHasItemResponse = 7485;</code>
     */
    public static final int k_EMsgGCHasItemResponse_VALUE = 7485;
    /**
     * <code>k_EMsgGCConsumeFantasyTicket = 7486;</code>
     */
    public static final int k_EMsgGCConsumeFantasyTicket_VALUE = 7486;
    /**
     * <code>k_EMsgGCConsumeFantasyTicketFailure = 7487;</code>
     */
    public static final int k_EMsgGCConsumeFantasyTicketFailure_VALUE = 7487;
    /**
     * <code>k_EMsgGCToGCGrantEventPointActionMsg = 7488;</code>
     */
    public static final int k_EMsgGCToGCGrantEventPointActionMsg_VALUE = 7488;
    /**
     * <code>k_EMsgClientToGCTrackDialogResult = 7489;</code>
     */
    public static final int k_EMsgClientToGCTrackDialogResult_VALUE = 7489;
    /**
     * <code>k_EMsgGCFantasyLeaveLeagueRequest = 7490;</code>
     */
    public static final int k_EMsgGCFantasyLeaveLeagueRequest_VALUE = 7490;
    /**
     * <code>k_EMsgGCFantasyLeaveLeagueResponse = 7491;</code>
     */
    public static final int k_EMsgGCFantasyLeaveLeagueResponse_VALUE = 7491;
    /**
     * <code>k_EMsgGCToGCGetCompendiumSelections = 7492;</code>
     */
    public static final int k_EMsgGCToGCGetCompendiumSelections_VALUE = 7492;
    /**
     * <code>k_EMsgGCToGCGetCompendiumSelectionsResponse = 7493;</code>
     */
    public static final int k_EMsgGCToGCGetCompendiumSelectionsResponse_VALUE = 7493;
    /**
     * <code>k_EMsgServerToGCMatchConnectionStats = 7494;</code>
     */
    public static final int k_EMsgServerToGCMatchConnectionStats_VALUE = 7494;
    /**
     * <code>k_EMsgGCToClientTournamentItemDrop = 7495;</code>
     */
    public static final int k_EMsgGCToClientTournamentItemDrop_VALUE = 7495;
    /**
     * <code>k_EMsgSQLDelayedGrantLeagueDrop = 7496;</code>
     */
    public static final int k_EMsgSQLDelayedGrantLeagueDrop_VALUE = 7496;
    /**
     * <code>k_EMsgServerGCUpdateSpectatorCount = 7497;</code>
     */
    public static final int k_EMsgServerGCUpdateSpectatorCount_VALUE = 7497;
    /**
     * <code>k_EMsgDOTAStartDailyHeroChallengeRequest = 7498;</code>
     */
    public static final int k_EMsgDOTAStartDailyHeroChallengeRequest_VALUE = 7498;
    /**
     * <code>k_EMsgGCFantasyPlayerScoreDetailsRequest = 7499;</code>
     */
    public static final int k_EMsgGCFantasyPlayerScoreDetailsRequest_VALUE = 7499;
    /**
     * <code>k_EMsgGCFantasyPlayerScoreDetailsResponse = 7500;</code>
     */
    public static final int k_EMsgGCFantasyPlayerScoreDetailsResponse_VALUE = 7500;
    /**
     * <code>k_EMsgGCToGCEmoticonUnlock = 7501;</code>
     */
    public static final int k_EMsgGCToGCEmoticonUnlock_VALUE = 7501;
    /**
     * <code>k_EMsgSignOutDraftInfo = 7502;</code>
     */
    public static final int k_EMsgSignOutDraftInfo_VALUE = 7502;
    /**
     * <code>k_EMsgClientToGCEmoticonDataRequest = 7503;</code>
     */
    public static final int k_EMsgClientToGCEmoticonDataRequest_VALUE = 7503;
    /**
     * <code>k_EMsgGCToClientEmoticonData = 7504;</code>
     */
    public static final int k_EMsgGCToClientEmoticonData_VALUE = 7504;
    /**
     * <code>k_EMsgGCPracticeLobbyToggleBroadcastChannelCameramanStatus = 7505;</code>
     */
    public static final int k_EMsgGCPracticeLobbyToggleBroadcastChannelCameramanStatus_VALUE = 7505;
    /**
     * <code>k_EMsgGCToGCCreateWeekendTourneyRequest = 7506;</code>
     */
    public static final int k_EMsgGCToGCCreateWeekendTourneyRequest_VALUE = 7506;
    /**
     * <code>k_EMsgGCToGCCreateWeekendTourneyResponse = 7507;</code>
     */
    public static final int k_EMsgGCToGCCreateWeekendTourneyResponse_VALUE = 7507;
    /**
     * <code>k_EMsgGCHeroPickStatsRequest = 7508;</code>
     */
    public static final int k_EMsgGCHeroPickStatsRequest_VALUE = 7508;
    /**
     * <code>k_EMsgGCHeroPickStatsResponse = 7509;</code>
     */
    public static final int k_EMsgGCHeroPickStatsResponse_VALUE = 7509;
    /**
     * <code>k_EMsgGCToGCCreateGenericTeamsRequest = 7510;</code>
     */
    public static final int k_EMsgGCToGCCreateGenericTeamsRequest_VALUE = 7510;
    /**
     * <code>k_EMsgGCToGCCreateGenericTeamsResponse = 7511;</code>
     */
    public static final int k_EMsgGCToGCCreateGenericTeamsResponse_VALUE = 7511;
    /**
     * <code>k_EMsgSQLLaunchOneWeekendTourney = 7512;</code>
     */
    public static final int k_EMsgSQLLaunchOneWeekendTourney_VALUE = 7512;
    /**
     * <code>k_EMsgClientToGCSetAdditionalEquips = 7513;</code>
     */
    public static final int k_EMsgClientToGCSetAdditionalEquips_VALUE = 7513;
    /**
     * <code>k_EMsgClientToGCGetAdditionalEquips = 7514;</code>
     */
    public static final int k_EMsgClientToGCGetAdditionalEquips_VALUE = 7514;
    /**
     * <code>k_EMsgClientToGCGetAdditionalEquipsResponse = 7515;</code>
     */
    public static final int k_EMsgClientToGCGetAdditionalEquipsResponse_VALUE = 7515;
    /**
     * <code>k_EMsgServerToGCGetAdditionalEquips = 7516;</code>
     */
    public static final int k_EMsgServerToGCGetAdditionalEquips_VALUE = 7516;
    /**
     * <code>k_EMsgServerToGCGetAdditionalEquipsResponse = 7517;</code>
     */
    public static final int k_EMsgServerToGCGetAdditionalEquipsResponse_VALUE = 7517;
    /**
     * <code>k_EMsgDOTARedeemItem = 7518;</code>
     */
    public static final int k_EMsgDOTARedeemItem_VALUE = 7518;
    /**
     * <code>k_EMsgDOTARedeemItemResponse = 7519;</code>
     */
    public static final int k_EMsgDOTARedeemItemResponse_VALUE = 7519;
    /**
     * <code>k_EMsgSQLGCToGCGrantAllHeroProgress = 7520;</code>
     */
    public static final int k_EMsgSQLGCToGCGrantAllHeroProgress_VALUE = 7520;
    /**
     * <code>k_EMsgClientToGCGetAllHeroProgress = 7521;</code>
     */
    public static final int k_EMsgClientToGCGetAllHeroProgress_VALUE = 7521;
    /**
     * <code>k_EMsgClientToGCGetAllHeroProgressResponse = 7522;</code>
     */
    public static final int k_EMsgClientToGCGetAllHeroProgressResponse_VALUE = 7522;
    /**
     * <code>k_EMsgGCToGCGetServerForClient = 7523;</code>
     */
    public static final int k_EMsgGCToGCGetServerForClient_VALUE = 7523;
    /**
     * <code>k_EMsgGCToGCGetServerForClientResponse = 7524;</code>
     */
    public static final int k_EMsgGCToGCGetServerForClientResponse_VALUE = 7524;
    /**
     * <code>k_EMsgSQLProcessTournamentGameOutcome = 7525;</code>
     */
    public static final int k_EMsgSQLProcessTournamentGameOutcome_VALUE = 7525;
    /**
     * <code>k_EMsgSQLGrantTrophyToAccount = 7526;</code>
     */
    public static final int k_EMsgSQLGrantTrophyToAccount_VALUE = 7526;
    /**
     * <code>k_EMsgClientToGCGetTrophyList = 7527;</code>
     */
    public static final int k_EMsgClientToGCGetTrophyList_VALUE = 7527;
    /**
     * <code>k_EMsgClientToGCGetTrophyListResponse = 7528;</code>
     */
    public static final int k_EMsgClientToGCGetTrophyListResponse_VALUE = 7528;
    /**
     * <code>k_EMsgGCToClientTrophyAwarded = 7529;</code>
     */
    public static final int k_EMsgGCToClientTrophyAwarded_VALUE = 7529;
    /**
     * <code>k_EMsgGCGameBotMatchSignOut = 7530;</code>
     */
    public static final int k_EMsgGCGameBotMatchSignOut_VALUE = 7530;
    /**
     * <code>k_EMsgGCGameBotMatchSignOutPermissionRequest = 7531;</code>
     */
    public static final int k_EMsgGCGameBotMatchSignOutPermissionRequest_VALUE = 7531;
    /**
     * <code>k_EMsgSignOutBotInfo = 7532;</code>
     */
    public static final int k_EMsgSignOutBotInfo_VALUE = 7532;
    /**
     * <code>k_EMsgGCToGCUpdateProfileCards = 7533;</code>
     */
    public static final int k_EMsgGCToGCUpdateProfileCards_VALUE = 7533;
    /**
     * <code>k_EMsgClientToGCGetProfileCard = 7534;</code>
     */
    public static final int k_EMsgClientToGCGetProfileCard_VALUE = 7534;
    /**
     * <code>k_EMsgClientToGCGetProfileCardResponse = 7535;</code>
     */
    public static final int k_EMsgClientToGCGetProfileCardResponse_VALUE = 7535;
    /**
     * <code>k_EMsgServerToGCGetProfileCard = 7536;</code>
     */
    public static final int k_EMsgServerToGCGetProfileCard_VALUE = 7536;
    /**
     * <code>k_EMsgServerToGCGetProfileCardResponse = 7537;</code>
     */
    public static final int k_EMsgServerToGCGetProfileCardResponse_VALUE = 7537;
    /**
     * <code>k_EMsgClientToGCSetProfileCardSlots = 7538;</code>
     */
    public static final int k_EMsgClientToGCSetProfileCardSlots_VALUE = 7538;
    /**
     * <code>k_EMsgGCToClientProfileCardUpdated = 7539;</code>
     */
    public static final int k_EMsgGCToClientProfileCardUpdated_VALUE = 7539;
    /**
     * <code>k_EMsgServerToGCVictoryPredictions = 7540;</code>
     */
    public static final int k_EMsgServerToGCVictoryPredictions_VALUE = 7540;
    /**
     * <code>k_EMsgClientToGCMarkNotificationListRead = 7542;</code>
     */
    public static final int k_EMsgClientToGCMarkNotificationListRead_VALUE = 7542;
    /**
     * <code>k_EMsgGCToClientNewNotificationAdded = 7543;</code>
     */
    public static final int k_EMsgGCToClientNewNotificationAdded_VALUE = 7543;
    /**
     * <code>k_EMsgServerToGCSuspiciousActivity = 7544;</code>
     */
    public static final int k_EMsgServerToGCSuspiciousActivity_VALUE = 7544;
    /**
     * <code>k_EMsgSignOutCommunicationSummary = 7545;</code>
     */
    public static final int k_EMsgSignOutCommunicationSummary_VALUE = 7545;
    /**
     * <code>k_EMsgServerToGCRequestStatus_Response = 7546;</code>
     */
    public static final int k_EMsgServerToGCRequestStatus_Response_VALUE = 7546;
    /**
     * <code>k_EMsgClientToGCCreateHeroStatue = 7547;</code>
     */
    public static final int k_EMsgClientToGCCreateHeroStatue_VALUE = 7547;
    /**
     * <code>k_EMsgGCToClientHeroStatueCreateResult = 7548;</code>
     */
    public static final int k_EMsgGCToClientHeroStatueCreateResult_VALUE = 7548;
    /**
     * <code>k_EMsgGCGCToLANServerRelayConnect = 7549;</code>
     */
    public static final int k_EMsgGCGCToLANServerRelayConnect_VALUE = 7549;
    /**
     * <code>k_EMsgSignOutAssassinMiniGameInfo = 7550;</code>
     */
    public static final int k_EMsgSignOutAssassinMiniGameInfo_VALUE = 7550;
    /**
     * <code>k_EMsgServerToGCGetIngameEventData = 7551;</code>
     */
    public static final int k_EMsgServerToGCGetIngameEventData_VALUE = 7551;
    /**
     * <code>k_EMsgGCToGCUpdateIngameEventDataBroadcast = 7552;</code>
     */
    public static final int k_EMsgGCToGCUpdateIngameEventDataBroadcast_VALUE = 7552;
    /**
     * <code>k_EMsgGCToServerIngameEventData_OraclePA = 7553;</code>
     */
    public static final int k_EMsgGCToServerIngameEventData_OraclePA_VALUE = 7553;
    /**
     * <code>k_EMsgServerToGCReportKillSummaries = 7554;</code>
     */
    public static final int k_EMsgServerToGCReportKillSummaries_VALUE = 7554;
    /**
     * <code>k_EMsgGCToGCReportKillSummaries = 7555;</code>
     */
    public static final int k_EMsgGCToGCReportKillSummaries_VALUE = 7555;
    /**
     * <code>k_EMsgGCToGCUpdateAssassinMinigame = 7556;</code>
     */
    public static final int k_EMsgGCToGCUpdateAssassinMinigame_VALUE = 7556;
    /**
     * <code>k_EMsgGCToGCFantasySetMatchLeague = 7557;</code>
     */
    public static final int k_EMsgGCToGCFantasySetMatchLeague_VALUE = 7557;
    /**
     * <code>k_EMsgClientToGCRecordCompendiumStats = 7558;</code>
     */
    public static final int k_EMsgClientToGCRecordCompendiumStats_VALUE = 7558;
    /**
     * <code>k_EMsgGCItemEditorRequestLeagueInfo = 7559;</code>
     */
    public static final int k_EMsgGCItemEditorRequestLeagueInfo_VALUE = 7559;
    /**
     * <code>k_EMsgGCItemEditorLeagueInfoResponse = 7560;</code>
     */
    public static final int k_EMsgGCItemEditorLeagueInfoResponse_VALUE = 7560;
    /**
     * <code>k_EMsgGCToGCUpdatePlayerPredictions = 7561;</code>
     */
    public static final int k_EMsgGCToGCUpdatePlayerPredictions_VALUE = 7561;
    /**
     * <code>k_EMsgGCToServerPredictionResult = 7562;</code>
     */
    public static final int k_EMsgGCToServerPredictionResult_VALUE = 7562;
    /**
     * <code>k_EMsgServerToGCSignoutAwardAdditionalDrops = 7563;</code>
     */
    public static final int k_EMsgServerToGCSignoutAwardAdditionalDrops_VALUE = 7563;
    /**
     * <code>k_EMsgGCToGCSignoutAwardAdditionalDrops = 7564;</code>
     */
    public static final int k_EMsgGCToGCSignoutAwardAdditionalDrops_VALUE = 7564;
    /**
     * <code>k_EMsgGCToClientEventStatusChanged = 7565;</code>
     */
    public static final int k_EMsgGCToClientEventStatusChanged_VALUE = 7565;
    /**
     * <code>k_EMsgGCHasItemDefsQuery = 7566;</code>
     */
    public static final int k_EMsgGCHasItemDefsQuery_VALUE = 7566;
    /**
     * <code>k_EMsgGCHasItemDefsResponse = 7567;</code>
     */
    public static final int k_EMsgGCHasItemDefsResponse_VALUE = 7567;
    /**
     * <code>k_EMsgGCToGCReplayMonitorValidateReplay = 7569;</code>
     */
    public static final int k_EMsgGCToGCReplayMonitorValidateReplay_VALUE = 7569;
    /**
     * <code>k_EMsgClientToGCExchangeItemsForOffering = 7570;</code>
     */
    public static final int k_EMsgClientToGCExchangeItemsForOffering_VALUE = 7570;
    /**
     * <code>k_EMsgClientToGCExchangeItemsForOfferingResponse = 7571;</code>
     */
    public static final int k_EMsgClientToGCExchangeItemsForOfferingResponse_VALUE = 7571;
    /**
     * <code>k_EMsgLobbyEventPoints = 7572;</code>
     */
    public static final int k_EMsgLobbyEventPoints_VALUE = 7572;
    /**
     * <code>k_EMsgGCToGCGetCustomGameTickets = 7573;</code>
     */
    public static final int k_EMsgGCToGCGetCustomGameTickets_VALUE = 7573;
    /**
     * <code>k_EMsgGCToGCGetCustomGameTicketsResponse = 7574;</code>
     */
    public static final int k_EMsgGCToGCGetCustomGameTicketsResponse_VALUE = 7574;
    /**
     * <code>k_EMsgGCToClientNewBloomTimingUpdated = 7575;</code>
     */
    public static final int k_EMsgGCToClientNewBloomTimingUpdated_VALUE = 7575;
    /**
     * <code>k_EMsgGCToGCCustomGamePlayed = 7576;</code>
     */
    public static final int k_EMsgGCToGCCustomGamePlayed_VALUE = 7576;
    /**
     * <code>k_EMsgGCToGCGrantEventPointsToUser = 7577;</code>
     */
    public static final int k_EMsgGCToGCGrantEventPointsToUser_VALUE = 7577;
    /**
     * <code>k_EMsgGCToGCSetEventMMPanicFlushTime = 7578;</code>
     */
    public static final int k_EMsgGCToGCSetEventMMPanicFlushTime_VALUE = 7578;
    /**
     * <code>k_EMsgGameserverCrashReport = 7579;</code>
     */
    public static final int k_EMsgGameserverCrashReport_VALUE = 7579;
    /**
     * <code>k_EMsgGameserverCrashReportResponse = 7580;</code>
     */
    public static final int k_EMsgGameserverCrashReportResponse_VALUE = 7580;
    /**
     * <code>k_EMsgGCToClientSteamDatagramTicket = 7581;</code>
     */
    public static final int k_EMsgGCToClientSteamDatagramTicket_VALUE = 7581;
    /**
     * <code>k_EMsgGCToGCGrantEventOwnership = 7582;</code>
     */
    public static final int k_EMsgGCToGCGrantEventOwnership_VALUE = 7582;
    /**
     * <code>k_EMsgGCToGCSendAccountsEventPoints = 7583;</code>
     */
    public static final int k_EMsgGCToGCSendAccountsEventPoints_VALUE = 7583;
    /**
     * <code>k_EMsgClientToGCRerollPlayerChallenge = 7584;</code>
     */
    public static final int k_EMsgClientToGCRerollPlayerChallenge_VALUE = 7584;
    /**
     * <code>k_EMsgServerToGCRerollPlayerChallenge = 7585;</code>
     */
    public static final int k_EMsgServerToGCRerollPlayerChallenge_VALUE = 7585;
    /**
     * <code>k_EMsgGCRerollPlayerChallengeResponse = 7586;</code>
     */
    public static final int k_EMsgGCRerollPlayerChallengeResponse_VALUE = 7586;
    /**
     * <code>k_EMsgSignOutUpdatePlayerChallenge = 7587;</code>
     */
    public static final int k_EMsgSignOutUpdatePlayerChallenge_VALUE = 7587;
    /**
     * <code>k_EMsgClientToGCSetPartyLeader = 7588;</code>
     */
    public static final int k_EMsgClientToGCSetPartyLeader_VALUE = 7588;
    /**
     * <code>k_EMsgClientToGCCancelPartyInvites = 7589;</code>
     */
    public static final int k_EMsgClientToGCCancelPartyInvites_VALUE = 7589;
    /**
     * <code>k_EMsgGCToGCMasterReloadAccount = 7590;</code>
     */
    public static final int k_EMsgGCToGCMasterReloadAccount_VALUE = 7590;
    /**
     * <code>k_EMsgSQLGCToGCGrantBackpackSlots = 7591;</code>
     */
    public static final int k_EMsgSQLGCToGCGrantBackpackSlots_VALUE = 7591;
    /**
     * <code>k_EMsgSQLGrantLeagueMatchToTicketHolders = 7592;</code>
     */
    public static final int k_EMsgSQLGrantLeagueMatchToTicketHolders_VALUE = 7592;
    /**
     * <code>k_EMsgClientToGCSetAdditionalEquipsResponse = 7593;</code>
     */
    public static final int k_EMsgClientToGCSetAdditionalEquipsResponse_VALUE = 7593;
    /**
     * <code>k_EMsgGCDev_GrantWarKill = 8001;</code>
     */
    public static final int k_EMsgGCDev_GrantWarKill_VALUE = 8001;
    /**
     * <code>k_EMsgClientToGCCreateTeamShowcase = 8002;</code>
     */
    public static final int k_EMsgClientToGCCreateTeamShowcase_VALUE = 8002;
    /**
     * <code>k_EMsgGCToClientTeamShowcaseCreateResult = 8003;</code>
     */
    public static final int k_EMsgGCToClientTeamShowcaseCreateResult_VALUE = 8003;
    /**
     * <code>k_EMsgServerToGCLockCharmTrading = 8004;</code>
     */
    public static final int k_EMsgServerToGCLockCharmTrading_VALUE = 8004;
    /**
     * <code>k_EMsgDOTACNY2015EventPointUsage = 8005;</code>
     */
    public static final int k_EMsgDOTACNY2015EventPointUsage_VALUE = 8005;
    /**
     * <code>k_EMsgClientToGCPlayerStatsRequest = 8006;</code>
     */
    public static final int k_EMsgClientToGCPlayerStatsRequest_VALUE = 8006;
    /**
     * <code>k_EMsgGCToClientPlayerStatsResponse = 8007;</code>
     */
    public static final int k_EMsgGCToClientPlayerStatsResponse_VALUE = 8007;
    /**
     * <code>k_EMsgGCClearPracticeLobbyTeam = 8008;</code>
     */
    public static final int k_EMsgGCClearPracticeLobbyTeam_VALUE = 8008;
    /**
     * <code>k_EMsgClientToGCFindTopSourceTVGames = 8009;</code>
     */
    public static final int k_EMsgClientToGCFindTopSourceTVGames_VALUE = 8009;
    /**
     * <code>k_EMsgGCToClientFindTopSourceTVGamesResponse = 8010;</code>
     */
    public static final int k_EMsgGCToClientFindTopSourceTVGamesResponse_VALUE = 8010;
    /**
     * <code>k_EMsgGCLobbyList = 8011;</code>
     */
    public static final int k_EMsgGCLobbyList_VALUE = 8011;
    /**
     * <code>k_EMsgGCLobbyListResponse = 8012;</code>
     */
    public static final int k_EMsgGCLobbyListResponse_VALUE = 8012;
    /**
     * <code>k_EMsgGCPlayerStatsMatchSignOut = 8013;</code>
     */
    public static final int k_EMsgGCPlayerStatsMatchSignOut_VALUE = 8013;
    /**
     * <code>k_EMsgClientToGCCustomGamePlayerCountRequest = 8014;</code>
     */
    public static final int k_EMsgClientToGCCustomGamePlayerCountRequest_VALUE = 8014;
    /**
     * <code>k_EMsgGCToClientCustomGamePlayerCountResponse = 8015;</code>
     */
    public static final int k_EMsgGCToClientCustomGamePlayerCountResponse_VALUE = 8015;
    /**
     * <code>k_EMsgClientToGCSocialFeedPostCommentRequest = 8016;</code>
     */
    public static final int k_EMsgClientToGCSocialFeedPostCommentRequest_VALUE = 8016;
    /**
     * <code>k_EMsgGCToClientSocialFeedPostCommentResponse = 8017;</code>
     */
    public static final int k_EMsgGCToClientSocialFeedPostCommentResponse_VALUE = 8017;
    /**
     * <code>k_EMsgClientToGCCustomGamesFriendsPlayedRequest = 8018;</code>
     */
    public static final int k_EMsgClientToGCCustomGamesFriendsPlayedRequest_VALUE = 8018;
    /**
     * <code>k_EMsgGCToClientCustomGamesFriendsPlayedResponse = 8019;</code>
     */
    public static final int k_EMsgGCToClientCustomGamesFriendsPlayedResponse_VALUE = 8019;
    /**
     * <code>k_EMsgClientToGCFriendsPlayedCustomGameRequest = 8020;</code>
     */
    public static final int k_EMsgClientToGCFriendsPlayedCustomGameRequest_VALUE = 8020;
    /**
     * <code>k_EMsgGCToClientFriendsPlayedCustomGameResponse = 8021;</code>
     */
    public static final int k_EMsgGCToClientFriendsPlayedCustomGameResponse_VALUE = 8021;
    /**
     * <code>k_EMsgClientToGCFeaturedHeroesRequest = 8022;</code>
     */
    public static final int k_EMsgClientToGCFeaturedHeroesRequest_VALUE = 8022;
    /**
     * <code>k_EMsgGCToClientFeaturedHeroesResponse = 8023;</code>
     */
    public static final int k_EMsgGCToClientFeaturedHeroesResponse_VALUE = 8023;
    /**
     * <code>k_EMsgGCToClientTopCustomGamesList = 8024;</code>
     */
    public static final int k_EMsgGCToClientTopCustomGamesList_VALUE = 8024;
    /**
     * <code>k_EMsgClientToGCSocialMatchPostCommentRequest = 8025;</code>
     */
    public static final int k_EMsgClientToGCSocialMatchPostCommentRequest_VALUE = 8025;
    /**
     * <code>k_EMsgGCToClientSocialMatchPostCommentResponse = 8026;</code>
     */
    public static final int k_EMsgGCToClientSocialMatchPostCommentResponse_VALUE = 8026;
    /**
     * <code>k_EMsgClientToGCSocialMatchDetailsRequest = 8027;</code>
     */
    public static final int k_EMsgClientToGCSocialMatchDetailsRequest_VALUE = 8027;
    /**
     * <code>k_EMsgGCToClientSocialMatchDetailsResponse = 8028;</code>
     */
    public static final int k_EMsgGCToClientSocialMatchDetailsResponse_VALUE = 8028;
    /**
     * <code>k_EMsgClientToGCSetPartyOpen = 8029;</code>
     */
    public static final int k_EMsgClientToGCSetPartyOpen_VALUE = 8029;
    /**
     * <code>k_EMsgClientToGCMergePartyInvite = 8030;</code>
     */
    public static final int k_EMsgClientToGCMergePartyInvite_VALUE = 8030;
    /**
     * <code>k_EMsgGCToClientMergeGroupInviteReply = 8031;</code>
     */
    public static final int k_EMsgGCToClientMergeGroupInviteReply_VALUE = 8031;
    /**
     * <code>k_EMsgClientToGCMergePartyResponse = 8032;</code>
     */
    public static final int k_EMsgClientToGCMergePartyResponse_VALUE = 8032;
    /**
     * <code>k_EMsgGCToClientMergePartyResponseReply = 8033;</code>
     */
    public static final int k_EMsgGCToClientMergePartyResponseReply_VALUE = 8033;
    /**
     * <code>k_EMsgClientToGCGetProfileCardStats = 8034;</code>
     */
    public static final int k_EMsgClientToGCGetProfileCardStats_VALUE = 8034;
    /**
     * <code>k_EMsgClientToGCGetProfileCardStatsResponse = 8035;</code>
     */
    public static final int k_EMsgClientToGCGetProfileCardStatsResponse_VALUE = 8035;
    /**
     * <code>k_EMsgClientToGCTopLeagueMatchesRequest = 8036;</code>
     */
    public static final int k_EMsgClientToGCTopLeagueMatchesRequest_VALUE = 8036;
    /**
     * <code>k_EMsgClientToGCTopFriendMatchesRequest = 8037;</code>
     */
    public static final int k_EMsgClientToGCTopFriendMatchesRequest_VALUE = 8037;
    /**
     * <code>k_EMsgGCToClientTopMatchesResponse = 8038;</code>
     */
    public static final int k_EMsgGCToClientTopMatchesResponse_VALUE = 8038;
    /**
     * <code>k_EMsgClientToGCTopPubMatchesRequest = 8039;</code>
     */
    public static final int k_EMsgClientToGCTopPubMatchesRequest_VALUE = 8039;
    /**
     * <code>k_EMsgGCToClientProfileCardStatsUpdated = 8040;</code>
     */
    public static final int k_EMsgGCToClientProfileCardStatsUpdated_VALUE = 8040;
    /**
     * <code>k_EMsgServerToGCRealtimeStats = 8041;</code>
     */
    public static final int k_EMsgServerToGCRealtimeStats_VALUE = 8041;
    /**
     * <code>k_EMsgGCToServerRealtimeStatsStartStop = 8042;</code>
     */
    public static final int k_EMsgGCToServerRealtimeStatsStartStop_VALUE = 8042;
    /**
     * <code>k_EMsgGCToClientDOTARealtimeGameStats = 8043;</code>
     */
    public static final int k_EMsgGCToClientDOTARealtimeGameStats_VALUE = 8043;
    /**
     * <code>k_EMsgClientToGCRealtimeGameStateViewing = 8044;</code>
     */
    public static final int k_EMsgClientToGCRealtimeGameStateViewing_VALUE = 8044;
    /**
     * <code>k_EMsgGCToGCGetServersForClients = 8045;</code>
     */
    public static final int k_EMsgGCToGCGetServersForClients_VALUE = 8045;
    /**
     * <code>k_EMsgGCToGCGetServersForClientsResponse = 8046;</code>
     */
    public static final int k_EMsgGCToGCGetServersForClientsResponse_VALUE = 8046;
    /**
     * <code>k_EMsgGCPracticeLobbyKickFromTeam = 8047;</code>
     */
    public static final int k_EMsgGCPracticeLobbyKickFromTeam_VALUE = 8047;


    public final int getNumber() { return value; }

    public static EDOTAGCMsg valueOf(int value) {
      switch (value) {
        case 7000: return k_EMsgGCDOTABase;
        case 7001: return k_EMsgGCGeneralResponse;
        case 7004: return k_EMsgGCGameMatchSignOut;
        case 7005: return k_EMsgGCGameMatchSignOutResponse;
        case 7009: return k_EMsgGCJoinChatChannel;
        case 7010: return k_EMsgGCJoinChatChannelResponse;
        case 7013: return k_EMsgGCOtherJoinedChannel;
        case 7014: return k_EMsgGCOtherLeftChannel;
        case 7017: return k_EMsgGCMatchHistoryList;
        case 7026: return k_EMsgServerToGCRequestStatus;
        case 7027: return k_EMsgGCGetRecentMatches;
        case 7028: return k_EMsgGCRecentMatchesResponse;
        case 7031: return k_EMsgGCFindSourceTVGames;
        case 7032: return k_EMsgGCSourceTVGamesResponse;
        case 7033: return k_EMsgGCStartFindingMatch;
        case 7034: return k_EMsgGCConnectedPlayers;
        case 7035: return k_EMsgGCAbandonCurrentGame;
        case 7036: return k_EMsgGCStopFindingMatch;
        case 7038: return k_EMsgGCPracticeLobbyCreate;
        case 7040: return k_EMsgGCPracticeLobbyLeave;
        case 7041: return k_EMsgGCPracticeLobbyLaunch;
        case 7042: return k_EMsgGCPracticeLobbyList;
        case 7043: return k_EMsgGCPracticeLobbyListResponse;
        case 7044: return k_EMsgGCPracticeLobbyJoin;
        case 7046: return k_EMsgGCPracticeLobbySetDetails;
        case 7047: return k_EMsgGCPracticeLobbySetTeamSlot;
        case 7049: return k_EMsgGCInitialQuestionnaireResponse;
        case 7051: return k_EMsgGCTournamentRequest;
        case 7052: return k_EMsgGCTournamentResponse;
        case 7055: return k_EMsgGCPracticeLobbyResponse;
        case 7056: return k_EMsgGCBroadcastNotification;
        case 7057: return k_EMsgGCLiveScoreboardUpdate;
        case 7060: return k_EMsgGCRequestChatChannelList;
        case 7061: return k_EMsgGCRequestChatChannelListResponse;
        case 7064: return k_EMsgGCRequestMatches;
        case 7065: return k_EMsgGCRequestMatchesResponse;
        case 7068: return k_EMsgGCRequestPlayerResources;
        case 7069: return k_EMsgGCRequestPlayerResourcesResponse;
        case 7070: return k_EMsgGCReadyUp;
        case 7071: return k_EMsgGCKickedFromMatchmakingQueue;
        case 7072: return k_EMsgGCLeaverDetected;
        case 7073: return k_EMsgGCSpectateFriendGame;
        case 7074: return k_EMsgGCSpectateFriendGameResponse;
        case 7075: return k_EMsgGCPlayerReports;
        case 7076: return k_EMsgGCReportsRemainingRequest;
        case 7077: return k_EMsgGCReportsRemainingResponse;
        case 7078: return k_EMsgGCSubmitPlayerReport;
        case 7079: return k_EMsgGCSubmitPlayerReportResponse;
        case 7080: return k_EMsgGCGameChatLog;
        case 7081: return k_EMsgGCPracticeLobbyKick;
        case 7082: return k_EMsgGCReportCountsRequest;
        case 7083: return k_EMsgGCReportCountsResponse;
        case 7084: return k_EMsgGCRequestSaveGames;
        case 7085: return k_EMsgGCRequestSaveGamesServer;
        case 7086: return k_EMsgGCRequestSaveGamesResponse;
        case 7087: return k_EMsgGCLeaverDetectedResponse;
        case 7088: return k_EMsgGCPlayerFailedToConnect;
        case 7089: return k_EMsgGCGCToRelayConnect;
        case 7090: return k_EMsgGCGCToRelayConnectresponse;
        case 7091: return k_EMsgGCWatchGame;
        case 7092: return k_EMsgGCWatchGameResponse;
        case 7093: return k_EMsgGCBanStatusRequest;
        case 7094: return k_EMsgGCBanStatusResponse;
        case 7095: return k_EMsgGCMatchDetailsRequest;
        case 7096: return k_EMsgGCMatchDetailsResponse;
        case 7097: return k_EMsgGCCancelWatchGame;
        case 7098: return k_EMsgGCProfileRequest;
        case 7099: return k_EMsgGCProfileResponse;
        case 7102: return k_EMsgGCPopup;
        case 7104: return k_EMsgGCDOTAClearNotifySuccessfulReport;
        case 7108: return k_EMsgGCGenericResult;
        case 7111: return k_EMsgGCFriendPracticeLobbyListRequest;
        case 7112: return k_EMsgGCFriendPracticeLobbyListResponse;
        case 7113: return k_EMsgGCPracticeLobbyJoinResponse;
        case 7114: return k_EMsgClientEconNotification_Job;
        case 7115: return k_EMsgGCCreateTeam;
        case 7116: return k_EMsgGCCreateTeamResponse;
        case 7117: return k_EMsgGCDisbandTeam;
        case 7118: return k_EMsgGCDisbandTeamResponse;
        case 7119: return k_EMsgGCRequestTeamData;
        case 7120: return k_EMsgGCRequestTeamDataResponse;
        case 7121: return k_EMsgGCTeamData;
        case 7122: return k_EMsgGCTeamInvite_InviterToGC;
        case 7123: return k_EMsgGCTeamInvite_GCImmediateResponseToInviter;
        case 7124: return k_EMsgGCTeamInvite_GCRequestToInvitee;
        case 7125: return k_EMsgGCTeamInvite_InviteeResponseToGC;
        case 7126: return k_EMsgGCTeamInvite_GCResponseToInviter;
        case 7127: return k_EMsgGCTeamInvite_GCResponseToInvitee;
        case 7128: return k_EMsgGCKickTeamMember;
        case 7129: return k_EMsgGCKickTeamMemberResponse;
        case 7130: return k_EMsgGCLeaveTeam;
        case 7131: return k_EMsgGCLeaveTeamResponse;
        case 7132: return k_EMsgGCSuggestTeamMatchmaking;
        case 7133: return k_EMsgGCPlayerHeroesFavoritesAdd;
        case 7134: return k_EMsgGCPlayerHeroesFavoritesRemove;
        case 7139: return k_EMsgGCEditTeamLogo;
        case 7140: return k_EMsgGCEditTeamLogoResponse;
        case 7141: return k_EMsgGCSetShowcaseHero;
        case 7142: return k_EMsgGCApplyTeamToPracticeLobby;
        case 7143: return k_EMsgGCRequestInternatinalTicketEmail;
        case 7144: return k_EMsgGCTransferTeamAdmin;
        case 7145: return k_EMsgGCClearTournamentGame;
        case 7147: return k_EMsgRequestLeagueInfo;
        case 7148: return k_EMsgResponseLeagueInfo;
        case 7149: return k_EMsgGCPracticeLobbyJoinBroadcastChannel;
        case 7150: return k_EMsgGC_TournamentItemEvent;
        case 7151: return k_EMsgGC_TournamentItemEventResponse;
        case 7152: return k_EMsgCastMatchVote;
        case 7153: return k_EMsgCastMatchVoteResponse;
        case 7154: return k_EMsgRetrieveMatchVote;
        case 7155: return k_EMsgRetrieveMatchVoteResponse;
        case 7156: return k_EMsgTeamFanfare;
        case 7157: return k_EMsgResponseTeamFanfare;
        case 7158: return k_EMsgGC_GameServerUploadSaveGame;
        case 7159: return k_EMsgGC_GameServerSaveGameResult;
        case 7160: return k_EMsgGC_GameServerGetLoadGame;
        case 7161: return k_EMsgGC_GameServerGetLoadGameResult;
        case 7164: return k_EMsgGCTeamProfileRequest;
        case 7165: return k_EMsgGCTeamProfileResponse;
        case 7166: return k_EMsgGCEditTeamDetails;
        case 7167: return k_EMsgGCEditTeamDetailsResponse;
        case 7168: return k_EMsgGCProTeamListRequest;
        case 7169: return k_EMsgGCProTeamListResponse;
        case 7170: return k_EMsgGCReadyUpStatus;
        case 7171: return k_EMsgGCHallOfFame;
        case 7172: return k_EMsgGCHallOfFameRequest;
        case 7173: return k_EMsgGCHallOfFameResponse;
        case 7174: return k_EMsgGCGenerateDiretidePrizeList;
        case 7176: return k_EMsgGCRewardDiretidePrizes;
        case 7177: return k_EMsgGCDiretidePrizesRewardedResponse;
        case 7178: return k_EMsgGCHalloweenHighScoreRequest;
        case 7179: return k_EMsgGCHalloweenHighScoreResponse;
        case 7180: return k_EMsgGCGenerateDiretidePrizeListResponse;
        case 7182: return k_EMsgGCStorePromoPagesRequest;
        case 7183: return k_EMsgGCStorePromoPagesResponse;
        case 7184: return k_EMsgGCSpawnLootGreevil;
        case 7185: return k_EMsgGCDismissLootGreevil;
        case 7186: return k_EMsgGCToGCMatchCompleted;
        case 7187: return k_EMsgGCDismissLootGreevilResponse;
        case 7188: return k_EMsgGCBalancedShuffleLobby;
        case 7189: return k_EMsgGCToGCCheckLeaguePermission;
        case 7190: return k_EMsgGCToGCCheckLeaguePermissionResponse;
        case 7191: return k_EMsgGCLeagueScheduleRequest;
        case 7192: return k_EMsgGCLeagueScheduleResponse;
        case 7193: return k_EMsgGCLeagueScheduleEdit;
        case 7194: return k_EMsgGCLeagueScheduleEditResponse;
        case 7195: return k_EMsgGCLeaguesInMonthRequest;
        case 7196: return k_EMsgGCLeaguesInMonthResponse;
        case 7197: return k_EMsgGCMatchmakingStatsRequest;
        case 7198: return k_EMsgGCMatchmakingStatsResponse;
        case 7199: return k_EMsgGCBotGameCreate;
        case 7200: return k_EMsgGCSetMatchHistoryAccess;
        case 7201: return k_EMsgGCSetMatchHistoryAccessResponse;
        case 7203: return k_EMsgUpgradeLeagueItem;
        case 7204: return k_EMsgUpgradeLeagueItemResponse;
        case 7205: return k_EMsgGCTeamMemberProfileRequest;
        case 7206: return k_EMsgGCWatchDownloadedReplay;
        case 7207: return k_EMsgGCSetMapLocationState;
        case 7208: return k_EMsgGCSetMapLocationStateResponse;
        case 7209: return k_EMsgGCResetMapLocations;
        case 7210: return k_EMsgGCResetMapLocationsResponse;
        case 7211: return k_EMsgGCTeamOnProfile;
        case 7212: return k_EMsgGCSetFeaturedItems;
        case 7215: return k_EMsgGCFeaturedItems;
        case 7216: return k_EMsgRefreshPartnerAccountLink;
        case 7217: return k_EMsgClientsRejoinChatChannels;
        case 7218: return k_EMsgGCToGCGetUserChatInfo;
        case 7219: return k_EMsgGCToGCGetUserChatInfoResponse;
        case 7220: return k_EMsgGCToGCLeaveAllChatChannels;
        case 7221: return k_EMsgGCToGCUpdateAccountChatBan;
        case 7222: return k_EMsgGCGuildCreateRequest;
        case 7223: return k_EMsgGCGuildCreateResponse;
        case 7224: return k_EMsgGCGuildSetAccountRoleRequest;
        case 7225: return k_EMsgGCGuildSetAccountRoleResponse;
        case 7226: return k_EMsgGCRequestGuildData;
        case 7227: return k_EMsgGCGuildData;
        case 7228: return k_EMsgGCGuildInviteAccountRequest;
        case 7229: return k_EMsgGCGuildInviteAccountResponse;
        case 7230: return k_EMsgGCGuildCancelInviteRequest;
        case 7231: return k_EMsgGCGuildCancelInviteResponse;
        case 7232: return k_EMsgGCGuildUpdateDetailsRequest;
        case 7233: return k_EMsgGCGuildUpdateDetailsResponse;
        case 7234: return k_EMsgGCToGCCanInviteUser;
        case 7235: return k_EMsgGCToGCCanInviteUserResponse;
        case 7236: return k_EMsgGCToGCGetUserRank;
        case 7237: return k_EMsgGCToGCGetUserRankResponse;
        case 7240: return k_EMsgGCToGCUpdateTeamStats;
        case 7241: return k_EMsgGCToGCGetTeamRank;
        case 7242: return k_EMsgGCToGCGetTeamRankResponse;
        case 7245: return k_EMsgGCTeamIDByNameRequest;
        case 7246: return k_EMsgGCTeamIDByNameResponse;
        case 7247: return k_EMsgGCEditTeam;
        case 7248: return k_EMsgGCPassportDataRequest;
        case 7249: return k_EMsgGCPassportDataResponse;
        case 7251: return k_EMsgGCNotInGuildData;
        case 7254: return k_EMsgGCGuildInviteData;
        case 7255: return k_EMsgGCToGCGetLeagueAdmin;
        case 7256: return k_EMsgGCToGCGetLeagueAdminResponse;
        case 7258: return k_EMsgGCRequestLeaguePrizePool;
        case 7259: return k_EMsgGCRequestLeaguePrizePoolResponse;
        case 7261: return k_EMsgGCToGCUpdateOpenGuildPartyRequest;
        case 7262: return k_EMsgGCToGCUpdateOpenGuildPartyResponse;
        case 7263: return k_EMsgGCToGCDestroyOpenGuildPartyRequest;
        case 7264: return k_EMsgGCToGCDestroyOpenGuildPartyResponse;
        case 7265: return k_EMsgGCGuildUpdateMessage;
        case 7266: return k_EMsgGCPartySetOpenGuildRequest;
        case 7267: return k_EMsgGCPartySetOpenGuildResponse;
        case 7268: return k_EMsgGCGuildOpenPartyRefresh;
        case 7269: return k_EMsgGCJoinOpenGuildPartyRequest;
        case 7270: return k_EMsgGCJoinOpenGuildPartyResponse;
        case 7272: return k_EMsgGCLeaveChatChannel;
        case 7273: return k_EMsgGCChatMessage;
        case 7274: return k_EMsgGCGetHeroStandings;
        case 7275: return k_EMsgGCGetHeroStandingsResponse;
        case 7279: return k_EMsgGCGuildEditLogoRequest;
        case 7280: return k_EMsgGCGuildEditLogoResponse;
        case 7281: return k_EMsgGCGuildmatePracticeLobbyListRequest;
        case 7282: return k_EMsgGCGuildmatePracticeLobbyListResponse;
        case 7283: return k_EMsgGCItemEditorReservationsRequest;
        case 7284: return k_EMsgGCItemEditorReservationsResponse;
        case 7285: return k_EMsgGCItemEditorReserveItemDef;
        case 7286: return k_EMsgGCItemEditorReserveItemDefResponse;
        case 7287: return k_EMsgGCItemEditorReleaseReservation;
        case 7288: return k_EMsgGCItemEditorReleaseReservationResponse;
        case 7289: return k_EMsgGCRewardTutorialPrizes;
        case 7290: return k_EMsgGCLastHitChallengeHighScorePost;
        case 7291: return k_EMsgGCLastHitChallengeHighScoreRequest;
        case 7292: return k_EMsgGCLastHitChallengeHighScoreResponse;
        case 7293: return k_EMsgGCCreateFantasyLeagueRequest;
        case 7294: return k_EMsgGCCreateFantasyLeagueResponse;
        case 7297: return k_EMsgGCFantasyLeagueInfoRequest;
        case 7298: return k_EMsgGCFantasyLeagueInfoResponse;
        case 7299: return k_EMsgGCFantasyLeagueInfo;
        case 7300: return k_EMsgGCCreateFantasyTeamRequest;
        case 7301: return k_EMsgGCCreateFantasyTeamResponse;
        case 7302: return k_EMsgGCEditFantasyTeamRequest;
        case 7303: return k_EMsgGCEditFantasyTeamResponse;
        case 7304: return k_EMsgGCFantasyTeamInfoRequestByFantasyLeagueID;
        case 7305: return k_EMsgGCFantasyTeamInfoRequestByOwnerAccountID;
        case 7306: return k_EMsgGCFantasyTeamInfoResponse;
        case 7307: return k_EMsgGCFantasyTeamInfo;
        case 7308: return k_EMsgGCFantasyLivePlayerStats;
        case 7309: return k_EMsgGCFantasyFinalPlayerStats;
        case 7310: return k_EMsgGCFantasyMatch;
        case 7311: return k_EMsgGCToGCReloadVersions;
        case 7312: return k_EMsgGCFantasyTeamScoreRequest;
        case 7313: return k_EMsgGCFantasyTeamScoreResponse;
        case 7314: return k_EMsgGCFantasyTeamStandingsRequest;
        case 7315: return k_EMsgGCFantasyTeamStandingsResponse;
        case 7316: return k_EMsgGCFantasyPlayerScoreRequest;
        case 7317: return k_EMsgGCFantasyPlayerScoreResponse;
        case 7318: return k_EMsgGCFantasyPlayerStandingsRequest;
        case 7319: return k_EMsgGCFantasyPlayerStandingsResponse;
        case 7320: return k_EMsgGCFlipLobbyTeams;
        case 7321: return k_EMsgGCCustomGameCreate;
        case 7322: return k_EMsgGCFantasyPlayerInfoRequest;
        case 7323: return k_EMsgGCFantasyPlayerInfoResponse;
        case 7324: return k_EMsgGCToGCProcessPlayerReportForTarget;
        case 7325: return k_EMsgGCToGCProcessReportSuccess;
        case 7326: return k_EMsgGCNotifyAccountFlagsChange;
        case 7327: return k_EMsgGCSetProfilePrivacy;
        case 7328: return k_EMsgGCSetProfilePrivacyResponse;
        case 7329: return k_EMsgGCSteamProfileRequest;
        case 7330: return k_EMsgGCSteamProfileRequestResponse;
        case 7331: return k_EMsgGCFantasyLeagueCreateInfoRequest;
        case 7332: return k_EMsgGCFantasyLeagueCreateInfoResponse;
        case 7333: return k_EMsgGCFantasyLeagueInviteInfoRequest;
        case 7334: return k_EMsgGCFantasyLeagueInviteInfoResponse;
        case 7335: return k_EMsgGCClientIgnoredUser;
        case 7336: return k_EMsgGCFantasyLeagueCreateRequest;
        case 7337: return k_EMsgGCFantasyLeagueCreateResponse;
        case 7338: return k_EMsgGCFantasyTeamCreateRequest;
        case 7339: return k_EMsgGCFantasyTeamCreateResponse;
        case 7340: return k_EMsgGCFantasyLeagueFriendJoinListRequest;
        case 7341: return k_EMsgGCFantasyLeagueFriendJoinListResponse;
        case 7342: return k_EMsgGCClientSuspended;
        case 7343: return k_EMsgGCPartyMemberSetCoach;
        case 7344: return k_EMsgGCFantasyLeagueEditInvitesRequest;
        case 7345: return k_EMsgGCFantasyLeagueEditInvitesResponse;
        case 7346: return k_EMsgGCPracticeLobbySetCoach;
        case 7347: return k_EMsgGCFantasyLeagueEditInfoRequest;
        case 7348: return k_EMsgGCFantasyLeagueEditInfoResponse;
        case 7349: return k_EMsgGCFantasyLeagueDraftStatusRequest;
        case 7350: return k_EMsgGCFantasyLeagueDraftStatus;
        case 7351: return k_EMsgGCFantasyLeagueDraftPlayerRequest;
        case 7352: return k_EMsgGCFantasyLeagueDraftPlayerResponse;
        case 7353: return k_EMsgGCFantasyLeagueMatchupsRequest;
        case 7354: return k_EMsgGCFantasyLeagueMatchupsResponse;
        case 7355: return k_EMsgGCFantasyTeamRosterSwapRequest;
        case 7356: return k_EMsgGCFantasyTeamRosterSwapResponse;
        case 7357: return k_EMsgGCFantasyTeamRosterRequest;
        case 7358: return k_EMsgGCFantasyTeamRosterResponse;
        case 7359: return k_EMsgGCNexonPartnerUpdate;
        case 7360: return k_EMsgGCToGCProcessPCBangRewardPoints;
        case 7361: return k_EMsgGCFantasyTeamRosterAddDropRequest;
        case 7362: return k_EMsgGCFantasyTeamRosterAddDropResponse;
        case 7363: return k_EMsgPresentedClientTerminateDlg;
        case 7364: return k_EMsgGCFantasyPlayerHisoricalStatsRequest;
        case 7365: return k_EMsgGCFantasyPlayerHisoricalStatsResponse;
        case 7366: return k_EMsgGCPCBangTimedRewardMessage;
        case 7367: return k_EMsgGCLobbyUpdateBroadcastChannelInfo;
        case 7368: return k_EMsgGCFantasyTeamTradesRequest;
        case 7369: return k_EMsgGCFantasyTeamTradesResponse;
        case 7370: return k_EMsgGCFantasyTeamTradeCancelRequest;
        case 7371: return k_EMsgGCFantasyTeamTradeCancelResponse;
        case 7372: return k_EMsgGCToGCGrantTournamentItem;
        case 7373: return k_EMsgGCProcessFantasyScheduledEvent;
        case 7374: return k_EMsgGCToGCGrantPCBangRewardItem;
        case 7375: return k_EMsgGCToGCUpgradeTwitchViewerItems;
        case 7376: return k_EMsgGCToGCGetLiveMatchAffiliates;
        case 7377: return k_EMsgGCToGCGetLiveMatchAffiliatesResponse;
        case 7378: return k_EMsgGCToGCUpdatePlayerPennantCounts;
        case 7379: return k_EMsgGCToGCGetPlayerPennantCounts;
        case 7380: return k_EMsgGCToGCGetPlayerPennantCountsResponse;
        case 7381: return k_EMsgGCGameMatchSignOutPermissionRequest;
        case 7382: return k_EMsgGCGameMatchSignOutPermissionResponse;
        case 7383: return k_EMsgDOTAChatChannelMemberUpdate;
        case 7384: return k_EMsgDOTAAwardEventPoints;
        case 7385: return k_EMsgDOTARedeemEventPrize;
        case 7386: return k_EMsgDOTARedeemEventPrizeResponse;
        case 7387: return k_EMsgDOTAGetEventPoints;
        case 7388: return k_EMsgDOTAGetEventPointsResponse;
        case 7390: return k_EMsgGCToGCSignoutAwardEventPoints;
        case 7393: return k_EMsgDOTASendFriendRecruits;
        case 7394: return k_EMsgDOTAFriendRecruitsRequest;
        case 7395: return k_EMsgDOTAFriendRecruitsResponse;
        case 7396: return k_EMsgDOTAFriendRecruitInviteAcceptDecline;
        case 7397: return k_EMsgGCPartyLeaderWatchGamePrompt;
        case 7398: return k_EMsgDOTAFrostivusTimeElapsed;
        case 7399: return k_EMsgGCToGCGrantEarnedLicense;
        case 7402: return k_EMsgDOTALiveLeagueGameUpdate;
        case 7403: return k_EMsgDOTAChatGetUserList;
        case 7404: return k_EMsgDOTAChatGetUserListResponse;
        case 7405: return k_EMsgGCCompendiumSetSelection;
        case 7406: return k_EMsgGCCompendiumDataRequest;
        case 7407: return k_EMsgGCCompendiumDataResponse;
        case 7408: return k_EMsgDOTAGetPlayerMatchHistory;
        case 7409: return k_EMsgDOTAGetPlayerMatchHistoryResponse;
        case 7410: return k_EMsgGCToGCMatchmakingAddParty;
        case 7411: return k_EMsgGCToGCMatchmakingRemoveParty;
        case 7412: return k_EMsgGCToGCMatchmakingRemoveAllParties;
        case 7413: return k_EMsgGCToGCMatchmakingMatchFound;
        case 7414: return k_EMsgGCToGCUpdateMatchManagementStats;
        case 7415: return k_EMsgGCToGCUpdateMatchmakingStats;
        case 7416: return k_EMsgGCToServerPingRequest;
        case 7417: return k_EMsgGCToServerPingResponse;
        case 7418: return k_EMsgGCToServerConsoleCommand;
        case 7420: return k_EMsgGCToGCUpdateLiveLeagueGameInfo;
        case 7423: return k_EMsgGCMakeOffering;
        case 7424: return k_EMsgGCRequestOfferings;
        case 7425: return k_EMsgGCRequestOfferingsResponse;
        case 7426: return k_EMsgGCToGCProcessMatchLeaver;
        case 7427: return k_EMsgGCNotificationsRequest;
        case 7428: return k_EMsgGCNotificationsResponse;
        case 7429: return k_EMsgGCToGCModifyNotification;
        case 7430: return k_EMsgGCToGCSetNewNotifications;
        case 7431: return k_EMsgGCToGCSetIsLeagueAdmin;
        case 7432: return k_EMsgGCLeagueAdminState;
        case 7433: return k_EMsgGCToGCSendLeagueAdminState;
        case 7434: return k_EMsgGCLeagueAdminList;
        case 7435: return k_EMsgGCNotificationsMarkReadRequest;
        case 7436: return k_EMsgGCFantasyMessageAdd;
        case 7437: return k_EMsgGCFantasyMessagesRequest;
        case 7438: return k_EMsgGCFantasyMessagesResponse;
        case 7439: return k_EMsgGCFantasyScheduledMatchesRequest;
        case 7440: return k_EMsgGCFantasyScheduledMatchesResponse;
        case 7441: return k_EMsgGCToGCGrantLeagueAccess;
        case 7443: return k_EMsgGCEventGameCreate;
        case 7444: return k_EMsgGCPerfectWorldUserLookupRequest;
        case 7445: return k_EMsgGCPerfectWorldUserLookupResponse;
        case 7446: return k_EMsgGCToGCIncrementRecruitmentSDO;
        case 7447: return k_EMsgGCToGCIncrementRecruitmentLevel;
        case 7448: return k_EMsgGCFantasyRemoveOwner;
        case 7449: return k_EMsgGCFantasyRemoveOwnerResponse;
        case 7450: return k_EMsgGCRequestBatchPlayerResources;
        case 7451: return k_EMsgGCRequestBatchPlayerResourcesResponse;
        case 7452: return k_EMsgGCToGCSendUpdateLeagues;
        case 7453: return k_EMsgGCCompendiumSetSelectionResponse;
        case 7454: return k_EMsgGCPlayerInfoRequest;
        case 7455: return k_EMsgGCPlayerInfo;
        case 7456: return k_EMsgGCPlayerInfoSubmit;
        case 7457: return k_EMsgGCPlayerInfoSubmitResponse;
        case 7458: return k_EMsgGCToGCGetAccountLevel;
        case 7459: return k_EMsgGCToGCGetAccountLevelResponse;
        case 7460: return k_EMsgGCToGCGetAccountPartner;
        case 7461: return k_EMsgGCToGCGetAccountPartnerResponse;
        case 7462: return k_EMsgGCToGCGetAccountProfile;
        case 7463: return k_EMsgGCToGCGetAccountProfileResponse;
        case 7464: return k_EMsgDOTAGetWeekendTourneySchedule;
        case 7465: return k_EMsgDOTAWeekendTourneySchedule;
        case 7466: return k_EMsgGCJoinableCustomGameModesRequest;
        case 7467: return k_EMsgGCJoinableCustomGameModesResponse;
        case 7468: return k_EMsgGCJoinableCustomLobbiesRequest;
        case 7469: return k_EMsgGCJoinableCustomLobbiesResponse;
        case 7470: return k_EMsgGCQuickJoinCustomLobby;
        case 7471: return k_EMsgGCQuickJoinCustomLobbyResponse;
        case 7472: return k_EMsgGCToGCGrantEventPointAction;
        case 7473: return k_EMsgServerGetEventPoints;
        case 7474: return k_EMsgServerGetEventPointsResponse;
        case 7475: return k_EMsgServerGrantSurveyPermission;
        case 7476: return k_EMsgServerGrantSurveyPermissionResponse;
        case 7477: return k_EMsgClientProvideSurveyResult;
        case 7478: return k_EMsgGCToGCSetCompendiumSelection;
        case 7480: return k_EMsgGCToGCUpdateTI4HeroQuest;
        case 7481: return k_EMsgGCCompendiumDataChanged;
        case 7482: return k_EMsgDOTAFantasyLeagueFindRequest;
        case 7483: return k_EMsgDOTAFantasyLeagueFindResponse;
        case 7484: return k_EMsgGCHasItemQuery;
        case 7485: return k_EMsgGCHasItemResponse;
        case 7486: return k_EMsgGCConsumeFantasyTicket;
        case 7487: return k_EMsgGCConsumeFantasyTicketFailure;
        case 7488: return k_EMsgGCToGCGrantEventPointActionMsg;
        case 7489: return k_EMsgClientToGCTrackDialogResult;
        case 7490: return k_EMsgGCFantasyLeaveLeagueRequest;
        case 7491: return k_EMsgGCFantasyLeaveLeagueResponse;
        case 7492: return k_EMsgGCToGCGetCompendiumSelections;
        case 7493: return k_EMsgGCToGCGetCompendiumSelectionsResponse;
        case 7494: return k_EMsgServerToGCMatchConnectionStats;
        case 7495: return k_EMsgGCToClientTournamentItemDrop;
        case 7496: return k_EMsgSQLDelayedGrantLeagueDrop;
        case 7497: return k_EMsgServerGCUpdateSpectatorCount;
        case 7498: return k_EMsgDOTAStartDailyHeroChallengeRequest;
        case 7499: return k_EMsgGCFantasyPlayerScoreDetailsRequest;
        case 7500: return k_EMsgGCFantasyPlayerScoreDetailsResponse;
        case 7501: return k_EMsgGCToGCEmoticonUnlock;
        case 7502: return k_EMsgSignOutDraftInfo;
        case 7503: return k_EMsgClientToGCEmoticonDataRequest;
        case 7504: return k_EMsgGCToClientEmoticonData;
        case 7505: return k_EMsgGCPracticeLobbyToggleBroadcastChannelCameramanStatus;
        case 7506: return k_EMsgGCToGCCreateWeekendTourneyRequest;
        case 7507: return k_EMsgGCToGCCreateWeekendTourneyResponse;
        case 7508: return k_EMsgGCHeroPickStatsRequest;
        case 7509: return k_EMsgGCHeroPickStatsResponse;
        case 7510: return k_EMsgGCToGCCreateGenericTeamsRequest;
        case 7511: return k_EMsgGCToGCCreateGenericTeamsResponse;
        case 7512: return k_EMsgSQLLaunchOneWeekendTourney;
        case 7513: return k_EMsgClientToGCSetAdditionalEquips;
        case 7514: return k_EMsgClientToGCGetAdditionalEquips;
        case 7515: return k_EMsgClientToGCGetAdditionalEquipsResponse;
        case 7516: return k_EMsgServerToGCGetAdditionalEquips;
        case 7517: return k_EMsgServerToGCGetAdditionalEquipsResponse;
        case 7518: return k_EMsgDOTARedeemItem;
        case 7519: return k_EMsgDOTARedeemItemResponse;
        case 7520: return k_EMsgSQLGCToGCGrantAllHeroProgress;
        case 7521: return k_EMsgClientToGCGetAllHeroProgress;
        case 7522: return k_EMsgClientToGCGetAllHeroProgressResponse;
        case 7523: return k_EMsgGCToGCGetServerForClient;
        case 7524: return k_EMsgGCToGCGetServerForClientResponse;
        case 7525: return k_EMsgSQLProcessTournamentGameOutcome;
        case 7526: return k_EMsgSQLGrantTrophyToAccount;
        case 7527: return k_EMsgClientToGCGetTrophyList;
        case 7528: return k_EMsgClientToGCGetTrophyListResponse;
        case 7529: return k_EMsgGCToClientTrophyAwarded;
        case 7530: return k_EMsgGCGameBotMatchSignOut;
        case 7531: return k_EMsgGCGameBotMatchSignOutPermissionRequest;
        case 7532: return k_EMsgSignOutBotInfo;
        case 7533: return k_EMsgGCToGCUpdateProfileCards;
        case 7534: return k_EMsgClientToGCGetProfileCard;
        case 7535: return k_EMsgClientToGCGetProfileCardResponse;
        case 7536: return k_EMsgServerToGCGetProfileCard;
        case 7537: return k_EMsgServerToGCGetProfileCardResponse;
        case 7538: return k_EMsgClientToGCSetProfileCardSlots;
        case 7539: return k_EMsgGCToClientProfileCardUpdated;
        case 7540: return k_EMsgServerToGCVictoryPredictions;
        case 7542: return k_EMsgClientToGCMarkNotificationListRead;
        case 7543: return k_EMsgGCToClientNewNotificationAdded;
        case 7544: return k_EMsgServerToGCSuspiciousActivity;
        case 7545: return k_EMsgSignOutCommunicationSummary;
        case 7546: return k_EMsgServerToGCRequestStatus_Response;
        case 7547: return k_EMsgClientToGCCreateHeroStatue;
        case 7548: return k_EMsgGCToClientHeroStatueCreateResult;
        case 7549: return k_EMsgGCGCToLANServerRelayConnect;
        case 7550: return k_EMsgSignOutAssassinMiniGameInfo;
        case 7551: return k_EMsgServerToGCGetIngameEventData;
        case 7552: return k_EMsgGCToGCUpdateIngameEventDataBroadcast;
        case 7553: return k_EMsgGCToServerIngameEventData_OraclePA;
        case 7554: return k_EMsgServerToGCReportKillSummaries;
        case 7555: return k_EMsgGCToGCReportKillSummaries;
        case 7556: return k_EMsgGCToGCUpdateAssassinMinigame;
        case 7557: return k_EMsgGCToGCFantasySetMatchLeague;
        case 7558: return k_EMsgClientToGCRecordCompendiumStats;
        case 7559: return k_EMsgGCItemEditorRequestLeagueInfo;
        case 7560: return k_EMsgGCItemEditorLeagueInfoResponse;
        case 7561: return k_EMsgGCToGCUpdatePlayerPredictions;
        case 7562: return k_EMsgGCToServerPredictionResult;
        case 7563: return k_EMsgServerToGCSignoutAwardAdditionalDrops;
        case 7564: return k_EMsgGCToGCSignoutAwardAdditionalDrops;
        case 7565: return k_EMsgGCToClientEventStatusChanged;
        case 7566: return k_EMsgGCHasItemDefsQuery;
        case 7567: return k_EMsgGCHasItemDefsResponse;
        case 7569: return k_EMsgGCToGCReplayMonitorValidateReplay;
        case 7570: return k_EMsgClientToGCExchangeItemsForOffering;
        case 7571: return k_EMsgClientToGCExchangeItemsForOfferingResponse;
        case 7572: return k_EMsgLobbyEventPoints;
        case 7573: return k_EMsgGCToGCGetCustomGameTickets;
        case 7574: return k_EMsgGCToGCGetCustomGameTicketsResponse;
        case 7575: return k_EMsgGCToClientNewBloomTimingUpdated;
        case 7576: return k_EMsgGCToGCCustomGamePlayed;
        case 7577: return k_EMsgGCToGCGrantEventPointsToUser;
        case 7578: return k_EMsgGCToGCSetEventMMPanicFlushTime;
        case 7579: return k_EMsgGameserverCrashReport;
        case 7580: return k_EMsgGameserverCrashReportResponse;
        case 7581: return k_EMsgGCToClientSteamDatagramTicket;
        case 7582: return k_EMsgGCToGCGrantEventOwnership;
        case 7583: return k_EMsgGCToGCSendAccountsEventPoints;
        case 7584: return k_EMsgClientToGCRerollPlayerChallenge;
        case 7585: return k_EMsgServerToGCRerollPlayerChallenge;
        case 7586: return k_EMsgGCRerollPlayerChallengeResponse;
        case 7587: return k_EMsgSignOutUpdatePlayerChallenge;
        case 7588: return k_EMsgClientToGCSetPartyLeader;
        case 7589: return k_EMsgClientToGCCancelPartyInvites;
        case 7590: return k_EMsgGCToGCMasterReloadAccount;
        case 7591: return k_EMsgSQLGCToGCGrantBackpackSlots;
        case 7592: return k_EMsgSQLGrantLeagueMatchToTicketHolders;
        case 7593: return k_EMsgClientToGCSetAdditionalEquipsResponse;
        case 8001: return k_EMsgGCDev_GrantWarKill;
        case 8002: return k_EMsgClientToGCCreateTeamShowcase;
        case 8003: return k_EMsgGCToClientTeamShowcaseCreateResult;
        case 8004: return k_EMsgServerToGCLockCharmTrading;
        case 8005: return k_EMsgDOTACNY2015EventPointUsage;
        case 8006: return k_EMsgClientToGCPlayerStatsRequest;
        case 8007: return k_EMsgGCToClientPlayerStatsResponse;
        case 8008: return k_EMsgGCClearPracticeLobbyTeam;
        case 8009: return k_EMsgClientToGCFindTopSourceTVGames;
        case 8010: return k_EMsgGCToClientFindTopSourceTVGamesResponse;
        case 8011: return k_EMsgGCLobbyList;
        case 8012: return k_EMsgGCLobbyListResponse;
        case 8013: return k_EMsgGCPlayerStatsMatchSignOut;
        case 8014: return k_EMsgClientToGCCustomGamePlayerCountRequest;
        case 8015: return k_EMsgGCToClientCustomGamePlayerCountResponse;
        case 8016: return k_EMsgClientToGCSocialFeedPostCommentRequest;
        case 8017: return k_EMsgGCToClientSocialFeedPostCommentResponse;
        case 8018: return k_EMsgClientToGCCustomGamesFriendsPlayedRequest;
        case 8019: return k_EMsgGCToClientCustomGamesFriendsPlayedResponse;
        case 8020: return k_EMsgClientToGCFriendsPlayedCustomGameRequest;
        case 8021: return k_EMsgGCToClientFriendsPlayedCustomGameResponse;
        case 8022: return k_EMsgClientToGCFeaturedHeroesRequest;
        case 8023: return k_EMsgGCToClientFeaturedHeroesResponse;
        case 8024: return k_EMsgGCToClientTopCustomGamesList;
        case 8025: return k_EMsgClientToGCSocialMatchPostCommentRequest;
        case 8026: return k_EMsgGCToClientSocialMatchPostCommentResponse;
        case 8027: return k_EMsgClientToGCSocialMatchDetailsRequest;
        case 8028: return k_EMsgGCToClientSocialMatchDetailsResponse;
        case 8029: return k_EMsgClientToGCSetPartyOpen;
        case 8030: return k_EMsgClientToGCMergePartyInvite;
        case 8031: return k_EMsgGCToClientMergeGroupInviteReply;
        case 8032: return k_EMsgClientToGCMergePartyResponse;
        case 8033: return k_EMsgGCToClientMergePartyResponseReply;
        case 8034: return k_EMsgClientToGCGetProfileCardStats;
        case 8035: return k_EMsgClientToGCGetProfileCardStatsResponse;
        case 8036: return k_EMsgClientToGCTopLeagueMatchesRequest;
        case 8037: return k_EMsgClientToGCTopFriendMatchesRequest;
        case 8038: return k_EMsgGCToClientTopMatchesResponse;
        case 8039: return k_EMsgClientToGCTopPubMatchesRequest;
        case 8040: return k_EMsgGCToClientProfileCardStatsUpdated;
        case 8041: return k_EMsgServerToGCRealtimeStats;
        case 8042: return k_EMsgGCToServerRealtimeStatsStartStop;
        case 8043: return k_EMsgGCToClientDOTARealtimeGameStats;
        case 8044: return k_EMsgClientToGCRealtimeGameStateViewing;
        case 8045: return k_EMsgGCToGCGetServersForClients;
        case 8046: return k_EMsgGCToGCGetServersForClientsResponse;
        case 8047: return k_EMsgGCPracticeLobbyKickFromTeam;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDOTAGCMsg>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDOTAGCMsg>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDOTAGCMsg>() {
            public EDOTAGCMsg findValueByNumber(int number) {
              return EDOTAGCMsg.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(0);
    }

    private static final EDOTAGCMsg[] VALUES = values();

    public static EDOTAGCMsg valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EDOTAGCMsg(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EDOTAGCMsg)
  }

  /**
   * Protobuf enum {@code DOTA_GameMode}
   */
  public enum DOTA_GameMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_GAMEMODE_NONE = 0;</code>
     */
    DOTA_GAMEMODE_NONE(0, 0),
    /**
     * <code>DOTA_GAMEMODE_AP = 1;</code>
     */
    DOTA_GAMEMODE_AP(1, 1),
    /**
     * <code>DOTA_GAMEMODE_CM = 2;</code>
     */
    DOTA_GAMEMODE_CM(2, 2),
    /**
     * <code>DOTA_GAMEMODE_RD = 3;</code>
     */
    DOTA_GAMEMODE_RD(3, 3),
    /**
     * <code>DOTA_GAMEMODE_SD = 4;</code>
     */
    DOTA_GAMEMODE_SD(4, 4),
    /**
     * <code>DOTA_GAMEMODE_AR = 5;</code>
     */
    DOTA_GAMEMODE_AR(5, 5),
    /**
     * <code>DOTA_GAMEMODE_INTRO = 6;</code>
     */
    DOTA_GAMEMODE_INTRO(6, 6),
    /**
     * <code>DOTA_GAMEMODE_HW = 7;</code>
     */
    DOTA_GAMEMODE_HW(7, 7),
    /**
     * <code>DOTA_GAMEMODE_REVERSE_CM = 8;</code>
     */
    DOTA_GAMEMODE_REVERSE_CM(8, 8),
    /**
     * <code>DOTA_GAMEMODE_XMAS = 9;</code>
     */
    DOTA_GAMEMODE_XMAS(9, 9),
    /**
     * <code>DOTA_GAMEMODE_TUTORIAL = 10;</code>
     */
    DOTA_GAMEMODE_TUTORIAL(10, 10),
    /**
     * <code>DOTA_GAMEMODE_MO = 11;</code>
     */
    DOTA_GAMEMODE_MO(11, 11),
    /**
     * <code>DOTA_GAMEMODE_LP = 12;</code>
     */
    DOTA_GAMEMODE_LP(12, 12),
    /**
     * <code>DOTA_GAMEMODE_POOL1 = 13;</code>
     */
    DOTA_GAMEMODE_POOL1(13, 13),
    /**
     * <code>DOTA_GAMEMODE_FH = 14;</code>
     */
    DOTA_GAMEMODE_FH(14, 14),
    /**
     * <code>DOTA_GAMEMODE_CUSTOM = 15;</code>
     */
    DOTA_GAMEMODE_CUSTOM(15, 15),
    /**
     * <code>DOTA_GAMEMODE_CD = 16;</code>
     */
    DOTA_GAMEMODE_CD(16, 16),
    /**
     * <code>DOTA_GAMEMODE_BD = 17;</code>
     */
    DOTA_GAMEMODE_BD(17, 17),
    /**
     * <code>DOTA_GAMEMODE_ABILITY_DRAFT = 18;</code>
     */
    DOTA_GAMEMODE_ABILITY_DRAFT(18, 18),
    /**
     * <code>DOTA_GAMEMODE_EVENT = 19;</code>
     */
    DOTA_GAMEMODE_EVENT(19, 19),
    /**
     * <code>DOTA_GAMEMODE_ARDM = 20;</code>
     */
    DOTA_GAMEMODE_ARDM(20, 20),
    /**
     * <code>DOTA_GAMEMODE_1V1MID = 21;</code>
     */
    DOTA_GAMEMODE_1V1MID(21, 21),
    /**
     * <code>DOTA_GAMEMODE_ALL_DRAFT = 22;</code>
     */
    DOTA_GAMEMODE_ALL_DRAFT(22, 22),
    ;

    /**
     * <code>DOTA_GAMEMODE_NONE = 0;</code>
     */
    public static final int DOTA_GAMEMODE_NONE_VALUE = 0;
    /**
     * <code>DOTA_GAMEMODE_AP = 1;</code>
     */
    public static final int DOTA_GAMEMODE_AP_VALUE = 1;
    /**
     * <code>DOTA_GAMEMODE_CM = 2;</code>
     */
    public static final int DOTA_GAMEMODE_CM_VALUE = 2;
    /**
     * <code>DOTA_GAMEMODE_RD = 3;</code>
     */
    public static final int DOTA_GAMEMODE_RD_VALUE = 3;
    /**
     * <code>DOTA_GAMEMODE_SD = 4;</code>
     */
    public static final int DOTA_GAMEMODE_SD_VALUE = 4;
    /**
     * <code>DOTA_GAMEMODE_AR = 5;</code>
     */
    public static final int DOTA_GAMEMODE_AR_VALUE = 5;
    /**
     * <code>DOTA_GAMEMODE_INTRO = 6;</code>
     */
    public static final int DOTA_GAMEMODE_INTRO_VALUE = 6;
    /**
     * <code>DOTA_GAMEMODE_HW = 7;</code>
     */
    public static final int DOTA_GAMEMODE_HW_VALUE = 7;
    /**
     * <code>DOTA_GAMEMODE_REVERSE_CM = 8;</code>
     */
    public static final int DOTA_GAMEMODE_REVERSE_CM_VALUE = 8;
    /**
     * <code>DOTA_GAMEMODE_XMAS = 9;</code>
     */
    public static final int DOTA_GAMEMODE_XMAS_VALUE = 9;
    /**
     * <code>DOTA_GAMEMODE_TUTORIAL = 10;</code>
     */
    public static final int DOTA_GAMEMODE_TUTORIAL_VALUE = 10;
    /**
     * <code>DOTA_GAMEMODE_MO = 11;</code>
     */
    public static final int DOTA_GAMEMODE_MO_VALUE = 11;
    /**
     * <code>DOTA_GAMEMODE_LP = 12;</code>
     */
    public static final int DOTA_GAMEMODE_LP_VALUE = 12;
    /**
     * <code>DOTA_GAMEMODE_POOL1 = 13;</code>
     */
    public static final int DOTA_GAMEMODE_POOL1_VALUE = 13;
    /**
     * <code>DOTA_GAMEMODE_FH = 14;</code>
     */
    public static final int DOTA_GAMEMODE_FH_VALUE = 14;
    /**
     * <code>DOTA_GAMEMODE_CUSTOM = 15;</code>
     */
    public static final int DOTA_GAMEMODE_CUSTOM_VALUE = 15;
    /**
     * <code>DOTA_GAMEMODE_CD = 16;</code>
     */
    public static final int DOTA_GAMEMODE_CD_VALUE = 16;
    /**
     * <code>DOTA_GAMEMODE_BD = 17;</code>
     */
    public static final int DOTA_GAMEMODE_BD_VALUE = 17;
    /**
     * <code>DOTA_GAMEMODE_ABILITY_DRAFT = 18;</code>
     */
    public static final int DOTA_GAMEMODE_ABILITY_DRAFT_VALUE = 18;
    /**
     * <code>DOTA_GAMEMODE_EVENT = 19;</code>
     */
    public static final int DOTA_GAMEMODE_EVENT_VALUE = 19;
    /**
     * <code>DOTA_GAMEMODE_ARDM = 20;</code>
     */
    public static final int DOTA_GAMEMODE_ARDM_VALUE = 20;
    /**
     * <code>DOTA_GAMEMODE_1V1MID = 21;</code>
     */
    public static final int DOTA_GAMEMODE_1V1MID_VALUE = 21;
    /**
     * <code>DOTA_GAMEMODE_ALL_DRAFT = 22;</code>
     */
    public static final int DOTA_GAMEMODE_ALL_DRAFT_VALUE = 22;


    public final int getNumber() { return value; }

    public static DOTA_GameMode valueOf(int value) {
      switch (value) {
        case 0: return DOTA_GAMEMODE_NONE;
        case 1: return DOTA_GAMEMODE_AP;
        case 2: return DOTA_GAMEMODE_CM;
        case 3: return DOTA_GAMEMODE_RD;
        case 4: return DOTA_GAMEMODE_SD;
        case 5: return DOTA_GAMEMODE_AR;
        case 6: return DOTA_GAMEMODE_INTRO;
        case 7: return DOTA_GAMEMODE_HW;
        case 8: return DOTA_GAMEMODE_REVERSE_CM;
        case 9: return DOTA_GAMEMODE_XMAS;
        case 10: return DOTA_GAMEMODE_TUTORIAL;
        case 11: return DOTA_GAMEMODE_MO;
        case 12: return DOTA_GAMEMODE_LP;
        case 13: return DOTA_GAMEMODE_POOL1;
        case 14: return DOTA_GAMEMODE_FH;
        case 15: return DOTA_GAMEMODE_CUSTOM;
        case 16: return DOTA_GAMEMODE_CD;
        case 17: return DOTA_GAMEMODE_BD;
        case 18: return DOTA_GAMEMODE_ABILITY_DRAFT;
        case 19: return DOTA_GAMEMODE_EVENT;
        case 20: return DOTA_GAMEMODE_ARDM;
        case 21: return DOTA_GAMEMODE_1V1MID;
        case 22: return DOTA_GAMEMODE_ALL_DRAFT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>() {
            public DOTA_GameMode findValueByNumber(int number) {
              return DOTA_GameMode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(1);
    }

    private static final DOTA_GameMode[] VALUES = values();

    public static DOTA_GameMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_GameMode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_GameMode)
  }

  /**
   * Protobuf enum {@code DOTA_GameState}
   */
  public enum DOTA_GameState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_GAMERULES_STATE_INIT = 0;</code>
     */
    DOTA_GAMERULES_STATE_INIT(0, 0),
    /**
     * <code>DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD = 1;</code>
     */
    DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD(1, 1),
    /**
     * <code>DOTA_GAMERULES_STATE_HERO_SELECTION = 2;</code>
     */
    DOTA_GAMERULES_STATE_HERO_SELECTION(2, 2),
    /**
     * <code>DOTA_GAMERULES_STATE_STRATEGY_TIME = 3;</code>
     */
    DOTA_GAMERULES_STATE_STRATEGY_TIME(3, 3),
    /**
     * <code>DOTA_GAMERULES_STATE_PRE_GAME = 4;</code>
     */
    DOTA_GAMERULES_STATE_PRE_GAME(4, 4),
    /**
     * <code>DOTA_GAMERULES_STATE_GAME_IN_PROGRESS = 5;</code>
     */
    DOTA_GAMERULES_STATE_GAME_IN_PROGRESS(5, 5),
    /**
     * <code>DOTA_GAMERULES_STATE_POST_GAME = 6;</code>
     */
    DOTA_GAMERULES_STATE_POST_GAME(6, 6),
    /**
     * <code>DOTA_GAMERULES_STATE_DISCONNECT = 7;</code>
     */
    DOTA_GAMERULES_STATE_DISCONNECT(7, 7),
    /**
     * <code>DOTA_GAMERULES_STATE_TEAM_SHOWCASE = 8;</code>
     */
    DOTA_GAMERULES_STATE_TEAM_SHOWCASE(8, 8),
    /**
     * <code>DOTA_GAMERULES_STATE_LAST = 9;</code>
     */
    DOTA_GAMERULES_STATE_LAST(9, 9),
    ;

    /**
     * <code>DOTA_GAMERULES_STATE_INIT = 0;</code>
     */
    public static final int DOTA_GAMERULES_STATE_INIT_VALUE = 0;
    /**
     * <code>DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD = 1;</code>
     */
    public static final int DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD_VALUE = 1;
    /**
     * <code>DOTA_GAMERULES_STATE_HERO_SELECTION = 2;</code>
     */
    public static final int DOTA_GAMERULES_STATE_HERO_SELECTION_VALUE = 2;
    /**
     * <code>DOTA_GAMERULES_STATE_STRATEGY_TIME = 3;</code>
     */
    public static final int DOTA_GAMERULES_STATE_STRATEGY_TIME_VALUE = 3;
    /**
     * <code>DOTA_GAMERULES_STATE_PRE_GAME = 4;</code>
     */
    public static final int DOTA_GAMERULES_STATE_PRE_GAME_VALUE = 4;
    /**
     * <code>DOTA_GAMERULES_STATE_GAME_IN_PROGRESS = 5;</code>
     */
    public static final int DOTA_GAMERULES_STATE_GAME_IN_PROGRESS_VALUE = 5;
    /**
     * <code>DOTA_GAMERULES_STATE_POST_GAME = 6;</code>
     */
    public static final int DOTA_GAMERULES_STATE_POST_GAME_VALUE = 6;
    /**
     * <code>DOTA_GAMERULES_STATE_DISCONNECT = 7;</code>
     */
    public static final int DOTA_GAMERULES_STATE_DISCONNECT_VALUE = 7;
    /**
     * <code>DOTA_GAMERULES_STATE_TEAM_SHOWCASE = 8;</code>
     */
    public static final int DOTA_GAMERULES_STATE_TEAM_SHOWCASE_VALUE = 8;
    /**
     * <code>DOTA_GAMERULES_STATE_LAST = 9;</code>
     */
    public static final int DOTA_GAMERULES_STATE_LAST_VALUE = 9;


    public final int getNumber() { return value; }

    public static DOTA_GameState valueOf(int value) {
      switch (value) {
        case 0: return DOTA_GAMERULES_STATE_INIT;
        case 1: return DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD;
        case 2: return DOTA_GAMERULES_STATE_HERO_SELECTION;
        case 3: return DOTA_GAMERULES_STATE_STRATEGY_TIME;
        case 4: return DOTA_GAMERULES_STATE_PRE_GAME;
        case 5: return DOTA_GAMERULES_STATE_GAME_IN_PROGRESS;
        case 6: return DOTA_GAMERULES_STATE_POST_GAME;
        case 7: return DOTA_GAMERULES_STATE_DISCONNECT;
        case 8: return DOTA_GAMERULES_STATE_TEAM_SHOWCASE;
        case 9: return DOTA_GAMERULES_STATE_LAST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_GameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_GameState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_GameState>() {
            public DOTA_GameState findValueByNumber(int number) {
              return DOTA_GameState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(2);
    }

    private static final DOTA_GameState[] VALUES = values();

    public static DOTA_GameState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_GameState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_GameState)
  }

  /**
   * Protobuf enum {@code DOTA_GC_TEAM}
   */
  public enum DOTA_GC_TEAM
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_GC_TEAM_GOOD_GUYS = 0;</code>
     */
    DOTA_GC_TEAM_GOOD_GUYS(0, 0),
    /**
     * <code>DOTA_GC_TEAM_BAD_GUYS = 1;</code>
     */
    DOTA_GC_TEAM_BAD_GUYS(1, 1),
    /**
     * <code>DOTA_GC_TEAM_BROADCASTER = 2;</code>
     */
    DOTA_GC_TEAM_BROADCASTER(2, 2),
    /**
     * <code>DOTA_GC_TEAM_SPECTATOR = 3;</code>
     */
    DOTA_GC_TEAM_SPECTATOR(3, 3),
    /**
     * <code>DOTA_GC_TEAM_PLAYER_POOL = 4;</code>
     */
    DOTA_GC_TEAM_PLAYER_POOL(4, 4),
    /**
     * <code>DOTA_GC_TEAM_NOTEAM = 5;</code>
     */
    DOTA_GC_TEAM_NOTEAM(5, 5),
    ;

    /**
     * <code>DOTA_GC_TEAM_GOOD_GUYS = 0;</code>
     */
    public static final int DOTA_GC_TEAM_GOOD_GUYS_VALUE = 0;
    /**
     * <code>DOTA_GC_TEAM_BAD_GUYS = 1;</code>
     */
    public static final int DOTA_GC_TEAM_BAD_GUYS_VALUE = 1;
    /**
     * <code>DOTA_GC_TEAM_BROADCASTER = 2;</code>
     */
    public static final int DOTA_GC_TEAM_BROADCASTER_VALUE = 2;
    /**
     * <code>DOTA_GC_TEAM_SPECTATOR = 3;</code>
     */
    public static final int DOTA_GC_TEAM_SPECTATOR_VALUE = 3;
    /**
     * <code>DOTA_GC_TEAM_PLAYER_POOL = 4;</code>
     */
    public static final int DOTA_GC_TEAM_PLAYER_POOL_VALUE = 4;
    /**
     * <code>DOTA_GC_TEAM_NOTEAM = 5;</code>
     */
    public static final int DOTA_GC_TEAM_NOTEAM_VALUE = 5;


    public final int getNumber() { return value; }

    public static DOTA_GC_TEAM valueOf(int value) {
      switch (value) {
        case 0: return DOTA_GC_TEAM_GOOD_GUYS;
        case 1: return DOTA_GC_TEAM_BAD_GUYS;
        case 2: return DOTA_GC_TEAM_BROADCASTER;
        case 3: return DOTA_GC_TEAM_SPECTATOR;
        case 4: return DOTA_GC_TEAM_PLAYER_POOL;
        case 5: return DOTA_GC_TEAM_NOTEAM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>() {
            public DOTA_GC_TEAM findValueByNumber(int number) {
              return DOTA_GC_TEAM.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(3);
    }

    private static final DOTA_GC_TEAM[] VALUES = values();

    public static DOTA_GC_TEAM valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_GC_TEAM(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_GC_TEAM)
  }

  /**
   * Protobuf enum {@code DOTA_CM_PICK}
   */
  public enum DOTA_CM_PICK
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_CM_RANDOM = 0;</code>
     */
    DOTA_CM_RANDOM(0, 0),
    /**
     * <code>DOTA_CM_GOOD_GUYS = 1;</code>
     */
    DOTA_CM_GOOD_GUYS(1, 1),
    /**
     * <code>DOTA_CM_BAD_GUYS = 2;</code>
     */
    DOTA_CM_BAD_GUYS(2, 2),
    ;

    /**
     * <code>DOTA_CM_RANDOM = 0;</code>
     */
    public static final int DOTA_CM_RANDOM_VALUE = 0;
    /**
     * <code>DOTA_CM_GOOD_GUYS = 1;</code>
     */
    public static final int DOTA_CM_GOOD_GUYS_VALUE = 1;
    /**
     * <code>DOTA_CM_BAD_GUYS = 2;</code>
     */
    public static final int DOTA_CM_BAD_GUYS_VALUE = 2;


    public final int getNumber() { return value; }

    public static DOTA_CM_PICK valueOf(int value) {
      switch (value) {
        case 0: return DOTA_CM_RANDOM;
        case 1: return DOTA_CM_GOOD_GUYS;
        case 2: return DOTA_CM_BAD_GUYS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_CM_PICK>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_CM_PICK>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_CM_PICK>() {
            public DOTA_CM_PICK findValueByNumber(int number) {
              return DOTA_CM_PICK.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(4);
    }

    private static final DOTA_CM_PICK[] VALUES = values();

    public static DOTA_CM_PICK valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_CM_PICK(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_CM_PICK)
  }

  /**
   * Protobuf enum {@code DOTAConnectionState_t}
   */
  public enum DOTAConnectionState_t
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_CONNECTION_STATE_UNKNOWN = 0;</code>
     */
    DOTA_CONNECTION_STATE_UNKNOWN(0, 0),
    /**
     * <code>DOTA_CONNECTION_STATE_NOT_YET_CONNECTED = 1;</code>
     */
    DOTA_CONNECTION_STATE_NOT_YET_CONNECTED(1, 1),
    /**
     * <code>DOTA_CONNECTION_STATE_CONNECTED = 2;</code>
     */
    DOTA_CONNECTION_STATE_CONNECTED(2, 2),
    /**
     * <code>DOTA_CONNECTION_STATE_DISCONNECTED = 3;</code>
     */
    DOTA_CONNECTION_STATE_DISCONNECTED(3, 3),
    /**
     * <code>DOTA_CONNECTION_STATE_ABANDONED = 4;</code>
     */
    DOTA_CONNECTION_STATE_ABANDONED(4, 4),
    /**
     * <code>DOTA_CONNECTION_STATE_LOADING = 5;</code>
     */
    DOTA_CONNECTION_STATE_LOADING(5, 5),
    /**
     * <code>DOTA_CONNECTION_STATE_FAILED = 6;</code>
     */
    DOTA_CONNECTION_STATE_FAILED(6, 6),
    ;

    /**
     * <code>DOTA_CONNECTION_STATE_UNKNOWN = 0;</code>
     */
    public static final int DOTA_CONNECTION_STATE_UNKNOWN_VALUE = 0;
    /**
     * <code>DOTA_CONNECTION_STATE_NOT_YET_CONNECTED = 1;</code>
     */
    public static final int DOTA_CONNECTION_STATE_NOT_YET_CONNECTED_VALUE = 1;
    /**
     * <code>DOTA_CONNECTION_STATE_CONNECTED = 2;</code>
     */
    public static final int DOTA_CONNECTION_STATE_CONNECTED_VALUE = 2;
    /**
     * <code>DOTA_CONNECTION_STATE_DISCONNECTED = 3;</code>
     */
    public static final int DOTA_CONNECTION_STATE_DISCONNECTED_VALUE = 3;
    /**
     * <code>DOTA_CONNECTION_STATE_ABANDONED = 4;</code>
     */
    public static final int DOTA_CONNECTION_STATE_ABANDONED_VALUE = 4;
    /**
     * <code>DOTA_CONNECTION_STATE_LOADING = 5;</code>
     */
    public static final int DOTA_CONNECTION_STATE_LOADING_VALUE = 5;
    /**
     * <code>DOTA_CONNECTION_STATE_FAILED = 6;</code>
     */
    public static final int DOTA_CONNECTION_STATE_FAILED_VALUE = 6;


    public final int getNumber() { return value; }

    public static DOTAConnectionState_t valueOf(int value) {
      switch (value) {
        case 0: return DOTA_CONNECTION_STATE_UNKNOWN;
        case 1: return DOTA_CONNECTION_STATE_NOT_YET_CONNECTED;
        case 2: return DOTA_CONNECTION_STATE_CONNECTED;
        case 3: return DOTA_CONNECTION_STATE_DISCONNECTED;
        case 4: return DOTA_CONNECTION_STATE_ABANDONED;
        case 5: return DOTA_CONNECTION_STATE_LOADING;
        case 6: return DOTA_CONNECTION_STATE_FAILED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTAConnectionState_t>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTAConnectionState_t>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTAConnectionState_t>() {
            public DOTAConnectionState_t findValueByNumber(int number) {
              return DOTAConnectionState_t.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(5);
    }

    private static final DOTAConnectionState_t[] VALUES = values();

    public static DOTAConnectionState_t valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTAConnectionState_t(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTAConnectionState_t)
  }

  /**
   * Protobuf enum {@code DOTALeaverStatus_t}
   */
  public enum DOTALeaverStatus_t
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_LEAVER_NONE = 0;</code>
     */
    DOTA_LEAVER_NONE(0, 0),
    /**
     * <code>DOTA_LEAVER_DISCONNECTED = 1;</code>
     */
    DOTA_LEAVER_DISCONNECTED(1, 1),
    /**
     * <code>DOTA_LEAVER_DISCONNECTED_TOO_LONG = 2;</code>
     */
    DOTA_LEAVER_DISCONNECTED_TOO_LONG(2, 2),
    /**
     * <code>DOTA_LEAVER_ABANDONED = 3;</code>
     */
    DOTA_LEAVER_ABANDONED(3, 3),
    /**
     * <code>DOTA_LEAVER_AFK = 4;</code>
     */
    DOTA_LEAVER_AFK(4, 4),
    /**
     * <code>DOTA_LEAVER_NEVER_CONNECTED = 5;</code>
     */
    DOTA_LEAVER_NEVER_CONNECTED(5, 5),
    /**
     * <code>DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG = 6;</code>
     */
    DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG(6, 6),
    /**
     * <code>DOTA_LEAVER_FAILED_TO_READY_UP = 7;</code>
     */
    DOTA_LEAVER_FAILED_TO_READY_UP(7, 7),
    /**
     * <code>DOTA_LEAVER_DECLINED = 8;</code>
     */
    DOTA_LEAVER_DECLINED(8, 8),
    ;

    /**
     * <code>DOTA_LEAVER_NONE = 0;</code>
     */
    public static final int DOTA_LEAVER_NONE_VALUE = 0;
    /**
     * <code>DOTA_LEAVER_DISCONNECTED = 1;</code>
     */
    public static final int DOTA_LEAVER_DISCONNECTED_VALUE = 1;
    /**
     * <code>DOTA_LEAVER_DISCONNECTED_TOO_LONG = 2;</code>
     */
    public static final int DOTA_LEAVER_DISCONNECTED_TOO_LONG_VALUE = 2;
    /**
     * <code>DOTA_LEAVER_ABANDONED = 3;</code>
     */
    public static final int DOTA_LEAVER_ABANDONED_VALUE = 3;
    /**
     * <code>DOTA_LEAVER_AFK = 4;</code>
     */
    public static final int DOTA_LEAVER_AFK_VALUE = 4;
    /**
     * <code>DOTA_LEAVER_NEVER_CONNECTED = 5;</code>
     */
    public static final int DOTA_LEAVER_NEVER_CONNECTED_VALUE = 5;
    /**
     * <code>DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG = 6;</code>
     */
    public static final int DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG_VALUE = 6;
    /**
     * <code>DOTA_LEAVER_FAILED_TO_READY_UP = 7;</code>
     */
    public static final int DOTA_LEAVER_FAILED_TO_READY_UP_VALUE = 7;
    /**
     * <code>DOTA_LEAVER_DECLINED = 8;</code>
     */
    public static final int DOTA_LEAVER_DECLINED_VALUE = 8;


    public final int getNumber() { return value; }

    public static DOTALeaverStatus_t valueOf(int value) {
      switch (value) {
        case 0: return DOTA_LEAVER_NONE;
        case 1: return DOTA_LEAVER_DISCONNECTED;
        case 2: return DOTA_LEAVER_DISCONNECTED_TOO_LONG;
        case 3: return DOTA_LEAVER_ABANDONED;
        case 4: return DOTA_LEAVER_AFK;
        case 5: return DOTA_LEAVER_NEVER_CONNECTED;
        case 6: return DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG;
        case 7: return DOTA_LEAVER_FAILED_TO_READY_UP;
        case 8: return DOTA_LEAVER_DECLINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTALeaverStatus_t>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTALeaverStatus_t>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTALeaverStatus_t>() {
            public DOTALeaverStatus_t findValueByNumber(int number) {
              return DOTALeaverStatus_t.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(6);
    }

    private static final DOTALeaverStatus_t[] VALUES = values();

    public static DOTALeaverStatus_t valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTALeaverStatus_t(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTALeaverStatus_t)
  }

  /**
   * Protobuf enum {@code DOTALowPriorityBanType}
   */
  public enum DOTALowPriorityBanType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_ABANDON = 0;</code>
     */
    DOTA_LOW_PRIORITY_BAN_ABANDON(0, 0),
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_REPORTS = 1;</code>
     */
    DOTA_LOW_PRIORITY_BAN_REPORTS(1, 1),
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON = 2;</code>
     */
    DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON(2, 2),
    ;

    /**
     * <code>DOTA_LOW_PRIORITY_BAN_ABANDON = 0;</code>
     */
    public static final int DOTA_LOW_PRIORITY_BAN_ABANDON_VALUE = 0;
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_REPORTS = 1;</code>
     */
    public static final int DOTA_LOW_PRIORITY_BAN_REPORTS_VALUE = 1;
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON = 2;</code>
     */
    public static final int DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON_VALUE = 2;


    public final int getNumber() { return value; }

    public static DOTALowPriorityBanType valueOf(int value) {
      switch (value) {
        case 0: return DOTA_LOW_PRIORITY_BAN_ABANDON;
        case 1: return DOTA_LOW_PRIORITY_BAN_REPORTS;
        case 2: return DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTALowPriorityBanType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTALowPriorityBanType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTALowPriorityBanType>() {
            public DOTALowPriorityBanType findValueByNumber(int number) {
              return DOTALowPriorityBanType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(7);
    }

    private static final DOTALowPriorityBanType[] VALUES = values();

    public static DOTALowPriorityBanType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTALowPriorityBanType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTALowPriorityBanType)
  }

  /**
   * Protobuf enum {@code DOTALobbyReadyState}
   */
  public enum DOTALobbyReadyState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTALobbyReadyState_UNDECLARED = 0;</code>
     */
    DOTALobbyReadyState_UNDECLARED(0, 0),
    /**
     * <code>DOTALobbyReadyState_ACCEPTED = 1;</code>
     */
    DOTALobbyReadyState_ACCEPTED(1, 1),
    /**
     * <code>DOTALobbyReadyState_DECLINED = 2;</code>
     */
    DOTALobbyReadyState_DECLINED(2, 2),
    ;

    /**
     * <code>DOTALobbyReadyState_UNDECLARED = 0;</code>
     */
    public static final int DOTALobbyReadyState_UNDECLARED_VALUE = 0;
    /**
     * <code>DOTALobbyReadyState_ACCEPTED = 1;</code>
     */
    public static final int DOTALobbyReadyState_ACCEPTED_VALUE = 1;
    /**
     * <code>DOTALobbyReadyState_DECLINED = 2;</code>
     */
    public static final int DOTALobbyReadyState_DECLINED_VALUE = 2;


    public final int getNumber() { return value; }

    public static DOTALobbyReadyState valueOf(int value) {
      switch (value) {
        case 0: return DOTALobbyReadyState_UNDECLARED;
        case 1: return DOTALobbyReadyState_ACCEPTED;
        case 2: return DOTALobbyReadyState_DECLINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTALobbyReadyState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTALobbyReadyState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTALobbyReadyState>() {
            public DOTALobbyReadyState findValueByNumber(int number) {
              return DOTALobbyReadyState.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(8);
    }

    private static final DOTALobbyReadyState[] VALUES = values();

    public static DOTALobbyReadyState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTALobbyReadyState(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTALobbyReadyState)
  }

  /**
   * Protobuf enum {@code DOTAGameVersion}
   */
  public enum DOTAGameVersion
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GAME_VERSION_CURRENT = 0;</code>
     */
    GAME_VERSION_CURRENT(0, 0),
    /**
     * <code>GAME_VERSION_STABLE = 1;</code>
     */
    GAME_VERSION_STABLE(1, 1),
    ;

    /**
     * <code>GAME_VERSION_CURRENT = 0;</code>
     */
    public static final int GAME_VERSION_CURRENT_VALUE = 0;
    /**
     * <code>GAME_VERSION_STABLE = 1;</code>
     */
    public static final int GAME_VERSION_STABLE_VALUE = 1;


    public final int getNumber() { return value; }

    public static DOTAGameVersion valueOf(int value) {
      switch (value) {
        case 0: return GAME_VERSION_CURRENT;
        case 1: return GAME_VERSION_STABLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTAGameVersion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTAGameVersion>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTAGameVersion>() {
            public DOTAGameVersion findValueByNumber(int number) {
              return DOTAGameVersion.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(9);
    }

    private static final DOTAGameVersion[] VALUES = values();

    public static DOTAGameVersion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTAGameVersion(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTAGameVersion)
  }

  /**
   * Protobuf enum {@code DOTAJoinLobbyResult}
   */
  public enum DOTAJoinLobbyResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_JOIN_RESULT_SUCCESS = 0;</code>
     */
    DOTA_JOIN_RESULT_SUCCESS(0, 0),
    /**
     * <code>DOTA_JOIN_RESULT_ALREADY_IN_GAME = 1;</code>
     */
    DOTA_JOIN_RESULT_ALREADY_IN_GAME(1, 1),
    /**
     * <code>DOTA_JOIN_RESULT_INVALID_LOBBY = 2;</code>
     */
    DOTA_JOIN_RESULT_INVALID_LOBBY(2, 2),
    /**
     * <code>DOTA_JOIN_RESULT_INCORRECT_PASSWORD = 3;</code>
     */
    DOTA_JOIN_RESULT_INCORRECT_PASSWORD(3, 3),
    /**
     * <code>DOTA_JOIN_RESULT_ACCESS_DENIED = 4;</code>
     */
    DOTA_JOIN_RESULT_ACCESS_DENIED(4, 4),
    /**
     * <code>DOTA_JOIN_RESULT_GENERIC_ERROR = 5;</code>
     */
    DOTA_JOIN_RESULT_GENERIC_ERROR(5, 5),
    /**
     * <code>DOTA_JOIN_RESULT_INCORRECT_VERSION = 6;</code>
     */
    DOTA_JOIN_RESULT_INCORRECT_VERSION(6, 6),
    /**
     * <code>DOTA_JOIN_RESULT_IN_TEAM_PARTY = 7;</code>
     */
    DOTA_JOIN_RESULT_IN_TEAM_PARTY(7, 7),
    /**
     * <code>DOTA_JOIN_RESULT_NO_LOBBY_FOUND = 8;</code>
     */
    DOTA_JOIN_RESULT_NO_LOBBY_FOUND(8, 8),
    /**
     * <code>DOTA_JOIN_RESULT_LOBBY_FULL = 9;</code>
     */
    DOTA_JOIN_RESULT_LOBBY_FULL(9, 9),
    ;

    /**
     * <code>DOTA_JOIN_RESULT_SUCCESS = 0;</code>
     */
    public static final int DOTA_JOIN_RESULT_SUCCESS_VALUE = 0;
    /**
     * <code>DOTA_JOIN_RESULT_ALREADY_IN_GAME = 1;</code>
     */
    public static final int DOTA_JOIN_RESULT_ALREADY_IN_GAME_VALUE = 1;
    /**
     * <code>DOTA_JOIN_RESULT_INVALID_LOBBY = 2;</code>
     */
    public static final int DOTA_JOIN_RESULT_INVALID_LOBBY_VALUE = 2;
    /**
     * <code>DOTA_JOIN_RESULT_INCORRECT_PASSWORD = 3;</code>
     */
    public static final int DOTA_JOIN_RESULT_INCORRECT_PASSWORD_VALUE = 3;
    /**
     * <code>DOTA_JOIN_RESULT_ACCESS_DENIED = 4;</code>
     */
    public static final int DOTA_JOIN_RESULT_ACCESS_DENIED_VALUE = 4;
    /**
     * <code>DOTA_JOIN_RESULT_GENERIC_ERROR = 5;</code>
     */
    public static final int DOTA_JOIN_RESULT_GENERIC_ERROR_VALUE = 5;
    /**
     * <code>DOTA_JOIN_RESULT_INCORRECT_VERSION = 6;</code>
     */
    public static final int DOTA_JOIN_RESULT_INCORRECT_VERSION_VALUE = 6;
    /**
     * <code>DOTA_JOIN_RESULT_IN_TEAM_PARTY = 7;</code>
     */
    public static final int DOTA_JOIN_RESULT_IN_TEAM_PARTY_VALUE = 7;
    /**
     * <code>DOTA_JOIN_RESULT_NO_LOBBY_FOUND = 8;</code>
     */
    public static final int DOTA_JOIN_RESULT_NO_LOBBY_FOUND_VALUE = 8;
    /**
     * <code>DOTA_JOIN_RESULT_LOBBY_FULL = 9;</code>
     */
    public static final int DOTA_JOIN_RESULT_LOBBY_FULL_VALUE = 9;


    public final int getNumber() { return value; }

    public static DOTAJoinLobbyResult valueOf(int value) {
      switch (value) {
        case 0: return DOTA_JOIN_RESULT_SUCCESS;
        case 1: return DOTA_JOIN_RESULT_ALREADY_IN_GAME;
        case 2: return DOTA_JOIN_RESULT_INVALID_LOBBY;
        case 3: return DOTA_JOIN_RESULT_INCORRECT_PASSWORD;
        case 4: return DOTA_JOIN_RESULT_ACCESS_DENIED;
        case 5: return DOTA_JOIN_RESULT_GENERIC_ERROR;
        case 6: return DOTA_JOIN_RESULT_INCORRECT_VERSION;
        case 7: return DOTA_JOIN_RESULT_IN_TEAM_PARTY;
        case 8: return DOTA_JOIN_RESULT_NO_LOBBY_FOUND;
        case 9: return DOTA_JOIN_RESULT_LOBBY_FULL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTAJoinLobbyResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTAJoinLobbyResult>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTAJoinLobbyResult>() {
            public DOTAJoinLobbyResult findValueByNumber(int number) {
              return DOTAJoinLobbyResult.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(10);
    }

    private static final DOTAJoinLobbyResult[] VALUES = values();

    public static DOTAJoinLobbyResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTAJoinLobbyResult(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTAJoinLobbyResult)
  }

  /**
   * Protobuf enum {@code DOTAMatchVote}
   */
  public enum DOTAMatchVote
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTAMatchVote_INVALID = 0;</code>
     */
    DOTAMatchVote_INVALID(0, 0),
    /**
     * <code>DOTAMatchVote_POSITIVE = 1;</code>
     */
    DOTAMatchVote_POSITIVE(1, 1),
    /**
     * <code>DOTAMatchVote_NEGATIVE = 2;</code>
     */
    DOTAMatchVote_NEGATIVE(2, 2),
    ;

    /**
     * <code>DOTAMatchVote_INVALID = 0;</code>
     */
    public static final int DOTAMatchVote_INVALID_VALUE = 0;
    /**
     * <code>DOTAMatchVote_POSITIVE = 1;</code>
     */
    public static final int DOTAMatchVote_POSITIVE_VALUE = 1;
    /**
     * <code>DOTAMatchVote_NEGATIVE = 2;</code>
     */
    public static final int DOTAMatchVote_NEGATIVE_VALUE = 2;


    public final int getNumber() { return value; }

    public static DOTAMatchVote valueOf(int value) {
      switch (value) {
        case 0: return DOTAMatchVote_INVALID;
        case 1: return DOTAMatchVote_POSITIVE;
        case 2: return DOTAMatchVote_NEGATIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTAMatchVote>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTAMatchVote>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTAMatchVote>() {
            public DOTAMatchVote findValueByNumber(int number) {
              return DOTAMatchVote.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(11);
    }

    private static final DOTAMatchVote[] VALUES = values();

    public static DOTAMatchVote valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTAMatchVote(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTAMatchVote)
  }

  /**
   * Protobuf enum {@code DOTA_LobbyMemberXPBonus}
   */
  public enum DOTA_LobbyMemberXPBonus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_LobbyMemberXPBonus_DEFAULT = 0;</code>
     */
    DOTA_LobbyMemberXPBonus_DEFAULT(0, 0),
    /**
     * <code>DOTA_LobbyMemberXPBonus_BATTLE_BOOSTER = 1;</code>
     */
    DOTA_LobbyMemberXPBonus_BATTLE_BOOSTER(1, 1),
    /**
     * <code>DOTA_LobbyMemberXPBonus_SHARE_BONUS = 2;</code>
     */
    DOTA_LobbyMemberXPBonus_SHARE_BONUS(2, 2),
    /**
     * <code>DOTA_LobbyMemberXPBonus_PARTY = 3;</code>
     */
    DOTA_LobbyMemberXPBonus_PARTY(3, 3),
    /**
     * <code>DOTA_LobbyMemberXPBonus_RECRUITMENT = 4;</code>
     */
    DOTA_LobbyMemberXPBonus_RECRUITMENT(4, 4),
    /**
     * <code>DOTA_LobbyMemberXPBonus_PCBANG = 5;</code>
     */
    DOTA_LobbyMemberXPBonus_PCBANG(5, 5),
    ;

    /**
     * <code>DOTA_LobbyMemberXPBonus_DEFAULT = 0;</code>
     */
    public static final int DOTA_LobbyMemberXPBonus_DEFAULT_VALUE = 0;
    /**
     * <code>DOTA_LobbyMemberXPBonus_BATTLE_BOOSTER = 1;</code>
     */
    public static final int DOTA_LobbyMemberXPBonus_BATTLE_BOOSTER_VALUE = 1;
    /**
     * <code>DOTA_LobbyMemberXPBonus_SHARE_BONUS = 2;</code>
     */
    public static final int DOTA_LobbyMemberXPBonus_SHARE_BONUS_VALUE = 2;
    /**
     * <code>DOTA_LobbyMemberXPBonus_PARTY = 3;</code>
     */
    public static final int DOTA_LobbyMemberXPBonus_PARTY_VALUE = 3;
    /**
     * <code>DOTA_LobbyMemberXPBonus_RECRUITMENT = 4;</code>
     */
    public static final int DOTA_LobbyMemberXPBonus_RECRUITMENT_VALUE = 4;
    /**
     * <code>DOTA_LobbyMemberXPBonus_PCBANG = 5;</code>
     */
    public static final int DOTA_LobbyMemberXPBonus_PCBANG_VALUE = 5;


    public final int getNumber() { return value; }

    public static DOTA_LobbyMemberXPBonus valueOf(int value) {
      switch (value) {
        case 0: return DOTA_LobbyMemberXPBonus_DEFAULT;
        case 1: return DOTA_LobbyMemberXPBonus_BATTLE_BOOSTER;
        case 2: return DOTA_LobbyMemberXPBonus_SHARE_BONUS;
        case 3: return DOTA_LobbyMemberXPBonus_PARTY;
        case 4: return DOTA_LobbyMemberXPBonus_RECRUITMENT;
        case 5: return DOTA_LobbyMemberXPBonus_PCBANG;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_LobbyMemberXPBonus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_LobbyMemberXPBonus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_LobbyMemberXPBonus>() {
            public DOTA_LobbyMemberXPBonus findValueByNumber(int number) {
              return DOTA_LobbyMemberXPBonus.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(12);
    }

    private static final DOTA_LobbyMemberXPBonus[] VALUES = values();

    public static DOTA_LobbyMemberXPBonus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_LobbyMemberXPBonus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_LobbyMemberXPBonus)
  }

  /**
   * Protobuf enum {@code EDOTAPlayerMMRType}
   */
  public enum EDOTAPlayerMMRType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EDOTAPlayerMMRType_Invalid = 0;</code>
     */
    k_EDOTAPlayerMMRType_Invalid(0, 0),
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralHidden = 1;</code>
     */
    k_EDOTAPlayerMMRType_GeneralHidden(1, 1),
    /**
     * <code>k_EDOTAPlayerMMRType_SoloHidden = 2;</code>
     */
    k_EDOTAPlayerMMRType_SoloHidden(2, 2),
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralCompetitive = 3;</code>
     */
    k_EDOTAPlayerMMRType_GeneralCompetitive(3, 3),
    /**
     * <code>k_EDOTAPlayerMMRType_SoloCompetitive = 4;</code>
     */
    k_EDOTAPlayerMMRType_SoloCompetitive(4, 4),
    /**
     * <code>k_EDOTAPlayerMMRType_1v1Competitive = 5;</code>
     */
    k_EDOTAPlayerMMRType_1v1Competitive(5, 5),
    ;

    /**
     * <code>k_EDOTAPlayerMMRType_Invalid = 0;</code>
     */
    public static final int k_EDOTAPlayerMMRType_Invalid_VALUE = 0;
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralHidden = 1;</code>
     */
    public static final int k_EDOTAPlayerMMRType_GeneralHidden_VALUE = 1;
    /**
     * <code>k_EDOTAPlayerMMRType_SoloHidden = 2;</code>
     */
    public static final int k_EDOTAPlayerMMRType_SoloHidden_VALUE = 2;
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralCompetitive = 3;</code>
     */
    public static final int k_EDOTAPlayerMMRType_GeneralCompetitive_VALUE = 3;
    /**
     * <code>k_EDOTAPlayerMMRType_SoloCompetitive = 4;</code>
     */
    public static final int k_EDOTAPlayerMMRType_SoloCompetitive_VALUE = 4;
    /**
     * <code>k_EDOTAPlayerMMRType_1v1Competitive = 5;</code>
     */
    public static final int k_EDOTAPlayerMMRType_1v1Competitive_VALUE = 5;


    public final int getNumber() { return value; }

    public static EDOTAPlayerMMRType valueOf(int value) {
      switch (value) {
        case 0: return k_EDOTAPlayerMMRType_Invalid;
        case 1: return k_EDOTAPlayerMMRType_GeneralHidden;
        case 2: return k_EDOTAPlayerMMRType_SoloHidden;
        case 3: return k_EDOTAPlayerMMRType_GeneralCompetitive;
        case 4: return k_EDOTAPlayerMMRType_SoloCompetitive;
        case 5: return k_EDOTAPlayerMMRType_1v1Competitive;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>() {
            public EDOTAPlayerMMRType findValueByNumber(int number) {
              return EDOTAPlayerMMRType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(13);
    }

    private static final EDOTAPlayerMMRType[] VALUES = values();

    public static EDOTAPlayerMMRType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EDOTAPlayerMMRType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EDOTAPlayerMMRType)
  }

  /**
   * Protobuf enum {@code MatchType}
   */
  public enum MatchType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MATCH_TYPE_CASUAL = 0;</code>
     */
    MATCH_TYPE_CASUAL(0, 0),
    /**
     * <code>MATCH_TYPE_COOP_BOTS = 1;</code>
     */
    MATCH_TYPE_COOP_BOTS(1, 1),
    /**
     * <code>MATCH_TYPE_TEAM_RANKED = 2;</code>
     */
    MATCH_TYPE_TEAM_RANKED(2, 2),
    /**
     * <code>MATCH_TYPE_LEGACY_SOLO_QUEUE = 3;</code>
     */
    MATCH_TYPE_LEGACY_SOLO_QUEUE(3, 3),
    /**
     * <code>MATCH_TYPE_COMPETITIVE = 4;</code>
     */
    MATCH_TYPE_COMPETITIVE(4, 4),
    /**
     * <code>MATCH_TYPE_WEEKEND_TOURNEY = 5;</code>
     */
    MATCH_TYPE_WEEKEND_TOURNEY(5, 5),
    /**
     * <code>MATCH_TYPE_CASUAL_1V1 = 6;</code>
     */
    MATCH_TYPE_CASUAL_1V1(6, 6),
    /**
     * <code>MATCH_TYPE_EVENT = 7;</code>
     */
    MATCH_TYPE_EVENT(7, 7),
    ;

    /**
     * <code>MATCH_TYPE_CASUAL = 0;</code>
     */
    public static final int MATCH_TYPE_CASUAL_VALUE = 0;
    /**
     * <code>MATCH_TYPE_COOP_BOTS = 1;</code>
     */
    public static final int MATCH_TYPE_COOP_BOTS_VALUE = 1;
    /**
     * <code>MATCH_TYPE_TEAM_RANKED = 2;</code>
     */
    public static final int MATCH_TYPE_TEAM_RANKED_VALUE = 2;
    /**
     * <code>MATCH_TYPE_LEGACY_SOLO_QUEUE = 3;</code>
     */
    public static final int MATCH_TYPE_LEGACY_SOLO_QUEUE_VALUE = 3;
    /**
     * <code>MATCH_TYPE_COMPETITIVE = 4;</code>
     */
    public static final int MATCH_TYPE_COMPETITIVE_VALUE = 4;
    /**
     * <code>MATCH_TYPE_WEEKEND_TOURNEY = 5;</code>
     */
    public static final int MATCH_TYPE_WEEKEND_TOURNEY_VALUE = 5;
    /**
     * <code>MATCH_TYPE_CASUAL_1V1 = 6;</code>
     */
    public static final int MATCH_TYPE_CASUAL_1V1_VALUE = 6;
    /**
     * <code>MATCH_TYPE_EVENT = 7;</code>
     */
    public static final int MATCH_TYPE_EVENT_VALUE = 7;


    public final int getNumber() { return value; }

    public static MatchType valueOf(int value) {
      switch (value) {
        case 0: return MATCH_TYPE_CASUAL;
        case 1: return MATCH_TYPE_COOP_BOTS;
        case 2: return MATCH_TYPE_TEAM_RANKED;
        case 3: return MATCH_TYPE_LEGACY_SOLO_QUEUE;
        case 4: return MATCH_TYPE_COMPETITIVE;
        case 5: return MATCH_TYPE_WEEKEND_TOURNEY;
        case 6: return MATCH_TYPE_CASUAL_1V1;
        case 7: return MATCH_TYPE_EVENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MatchType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MatchType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MatchType>() {
            public MatchType findValueByNumber(int number) {
              return MatchType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(14);
    }

    private static final MatchType[] VALUES = values();

    public static MatchType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MatchType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MatchType)
  }

  /**
   * Protobuf enum {@code DOTABotDifficulty}
   */
  public enum DOTABotDifficulty
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BOT_DIFFICULTY_PASSIVE = 0;</code>
     */
    BOT_DIFFICULTY_PASSIVE(0, 0),
    /**
     * <code>BOT_DIFFICULTY_EASY = 1;</code>
     */
    BOT_DIFFICULTY_EASY(1, 1),
    /**
     * <code>BOT_DIFFICULTY_MEDIUM = 2;</code>
     */
    BOT_DIFFICULTY_MEDIUM(2, 2),
    /**
     * <code>BOT_DIFFICULTY_HARD = 3;</code>
     */
    BOT_DIFFICULTY_HARD(3, 3),
    /**
     * <code>BOT_DIFFICULTY_UNFAIR = 4;</code>
     */
    BOT_DIFFICULTY_UNFAIR(4, 4),
    /**
     * <code>BOT_DIFFICULTY_INVALID = 5;</code>
     */
    BOT_DIFFICULTY_INVALID(5, 5),
    /**
     * <code>BOT_DIFFICULTY_EXTRA1 = 6;</code>
     */
    BOT_DIFFICULTY_EXTRA1(6, 6),
    /**
     * <code>BOT_DIFFICULTY_EXTRA2 = 7;</code>
     */
    BOT_DIFFICULTY_EXTRA2(7, 7),
    /**
     * <code>BOT_DIFFICULTY_EXTRA3 = 8;</code>
     */
    BOT_DIFFICULTY_EXTRA3(8, 8),
    ;

    /**
     * <code>BOT_DIFFICULTY_PASSIVE = 0;</code>
     */
    public static final int BOT_DIFFICULTY_PASSIVE_VALUE = 0;
    /**
     * <code>BOT_DIFFICULTY_EASY = 1;</code>
     */
    public static final int BOT_DIFFICULTY_EASY_VALUE = 1;
    /**
     * <code>BOT_DIFFICULTY_MEDIUM = 2;</code>
     */
    public static final int BOT_DIFFICULTY_MEDIUM_VALUE = 2;
    /**
     * <code>BOT_DIFFICULTY_HARD = 3;</code>
     */
    public static final int BOT_DIFFICULTY_HARD_VALUE = 3;
    /**
     * <code>BOT_DIFFICULTY_UNFAIR = 4;</code>
     */
    public static final int BOT_DIFFICULTY_UNFAIR_VALUE = 4;
    /**
     * <code>BOT_DIFFICULTY_INVALID = 5;</code>
     */
    public static final int BOT_DIFFICULTY_INVALID_VALUE = 5;
    /**
     * <code>BOT_DIFFICULTY_EXTRA1 = 6;</code>
     */
    public static final int BOT_DIFFICULTY_EXTRA1_VALUE = 6;
    /**
     * <code>BOT_DIFFICULTY_EXTRA2 = 7;</code>
     */
    public static final int BOT_DIFFICULTY_EXTRA2_VALUE = 7;
    /**
     * <code>BOT_DIFFICULTY_EXTRA3 = 8;</code>
     */
    public static final int BOT_DIFFICULTY_EXTRA3_VALUE = 8;


    public final int getNumber() { return value; }

    public static DOTABotDifficulty valueOf(int value) {
      switch (value) {
        case 0: return BOT_DIFFICULTY_PASSIVE;
        case 1: return BOT_DIFFICULTY_EASY;
        case 2: return BOT_DIFFICULTY_MEDIUM;
        case 3: return BOT_DIFFICULTY_HARD;
        case 4: return BOT_DIFFICULTY_UNFAIR;
        case 5: return BOT_DIFFICULTY_INVALID;
        case 6: return BOT_DIFFICULTY_EXTRA1;
        case 7: return BOT_DIFFICULTY_EXTRA2;
        case 8: return BOT_DIFFICULTY_EXTRA3;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTABotDifficulty>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTABotDifficulty>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTABotDifficulty>() {
            public DOTABotDifficulty findValueByNumber(int number) {
              return DOTABotDifficulty.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(15);
    }

    private static final DOTABotDifficulty[] VALUES = values();

    public static DOTABotDifficulty valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTABotDifficulty(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTABotDifficulty)
  }

  /**
   * Protobuf enum {@code MatchLanguages}
   */
  public enum MatchLanguages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MATCH_LANGUAGE_INVALID = 0;</code>
     */
    MATCH_LANGUAGE_INVALID(0, 0),
    /**
     * <code>MATCH_LANGUAGE_ENGLISH = 1;</code>
     */
    MATCH_LANGUAGE_ENGLISH(1, 1),
    /**
     * <code>MATCH_LANGUAGE_RUSSIAN = 2;</code>
     */
    MATCH_LANGUAGE_RUSSIAN(2, 2),
    /**
     * <code>MATCH_LANGUAGE_CHINESE = 3;</code>
     */
    MATCH_LANGUAGE_CHINESE(3, 3),
    /**
     * <code>MATCH_LANGUAGE_KOREAN = 4;</code>
     */
    MATCH_LANGUAGE_KOREAN(4, 4),
    /**
     * <code>MATCH_LANGUAGE_SPANISH = 5;</code>
     */
    MATCH_LANGUAGE_SPANISH(5, 5),
    /**
     * <code>MATCH_LANGUAGE_PORTUGUESE = 6;</code>
     */
    MATCH_LANGUAGE_PORTUGUESE(6, 6),
    /**
     * <code>MATCH_LANGUAGE_ENGLISH2 = 7;</code>
     */
    MATCH_LANGUAGE_ENGLISH2(7, 7),
    ;

    /**
     * <code>MATCH_LANGUAGE_INVALID = 0;</code>
     */
    public static final int MATCH_LANGUAGE_INVALID_VALUE = 0;
    /**
     * <code>MATCH_LANGUAGE_ENGLISH = 1;</code>
     */
    public static final int MATCH_LANGUAGE_ENGLISH_VALUE = 1;
    /**
     * <code>MATCH_LANGUAGE_RUSSIAN = 2;</code>
     */
    public static final int MATCH_LANGUAGE_RUSSIAN_VALUE = 2;
    /**
     * <code>MATCH_LANGUAGE_CHINESE = 3;</code>
     */
    public static final int MATCH_LANGUAGE_CHINESE_VALUE = 3;
    /**
     * <code>MATCH_LANGUAGE_KOREAN = 4;</code>
     */
    public static final int MATCH_LANGUAGE_KOREAN_VALUE = 4;
    /**
     * <code>MATCH_LANGUAGE_SPANISH = 5;</code>
     */
    public static final int MATCH_LANGUAGE_SPANISH_VALUE = 5;
    /**
     * <code>MATCH_LANGUAGE_PORTUGUESE = 6;</code>
     */
    public static final int MATCH_LANGUAGE_PORTUGUESE_VALUE = 6;
    /**
     * <code>MATCH_LANGUAGE_ENGLISH2 = 7;</code>
     */
    public static final int MATCH_LANGUAGE_ENGLISH2_VALUE = 7;


    public final int getNumber() { return value; }

    public static MatchLanguages valueOf(int value) {
      switch (value) {
        case 0: return MATCH_LANGUAGE_INVALID;
        case 1: return MATCH_LANGUAGE_ENGLISH;
        case 2: return MATCH_LANGUAGE_RUSSIAN;
        case 3: return MATCH_LANGUAGE_CHINESE;
        case 4: return MATCH_LANGUAGE_KOREAN;
        case 5: return MATCH_LANGUAGE_SPANISH;
        case 6: return MATCH_LANGUAGE_PORTUGUESE;
        case 7: return MATCH_LANGUAGE_ENGLISH2;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MatchLanguages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MatchLanguages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MatchLanguages>() {
            public MatchLanguages findValueByNumber(int number) {
              return MatchLanguages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(16);
    }

    private static final MatchLanguages[] VALUES = values();

    public static MatchLanguages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MatchLanguages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MatchLanguages)
  }

  /**
   * Protobuf enum {@code ETournamentTemplate}
   */
  public enum ETournamentTemplate
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ETournamentTemplate_None = 0;</code>
     */
    k_ETournamentTemplate_None(0, 0),
    /**
     * <code>k_ETournamentTemplate_SingleElimination = 1;</code>
     */
    k_ETournamentTemplate_SingleElimination(1, 1),
    ;

    /**
     * <code>k_ETournamentTemplate_None = 0;</code>
     */
    public static final int k_ETournamentTemplate_None_VALUE = 0;
    /**
     * <code>k_ETournamentTemplate_SingleElimination = 1;</code>
     */
    public static final int k_ETournamentTemplate_SingleElimination_VALUE = 1;


    public final int getNumber() { return value; }

    public static ETournamentTemplate valueOf(int value) {
      switch (value) {
        case 0: return k_ETournamentTemplate_None;
        case 1: return k_ETournamentTemplate_SingleElimination;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETournamentTemplate>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ETournamentTemplate>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETournamentTemplate>() {
            public ETournamentTemplate findValueByNumber(int number) {
              return ETournamentTemplate.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(17);
    }

    private static final ETournamentTemplate[] VALUES = values();

    public static ETournamentTemplate valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ETournamentTemplate(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ETournamentTemplate)
  }

  /**
   * Protobuf enum {@code ETournamentType}
   */
  public enum ETournamentType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ETournamentType_Unknown = 0;</code>
     */
    k_ETournamentType_Unknown(0, 0),
    /**
     * <code>k_ETournamentType_WeeklyDivision = 1;</code>
     */
    k_ETournamentType_WeeklyDivision(1, 1),
    ;

    /**
     * <code>k_ETournamentType_Unknown = 0;</code>
     */
    public static final int k_ETournamentType_Unknown_VALUE = 0;
    /**
     * <code>k_ETournamentType_WeeklyDivision = 1;</code>
     */
    public static final int k_ETournamentType_WeeklyDivision_VALUE = 1;


    public final int getNumber() { return value; }

    public static ETournamentType valueOf(int value) {
      switch (value) {
        case 0: return k_ETournamentType_Unknown;
        case 1: return k_ETournamentType_WeeklyDivision;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETournamentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ETournamentType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETournamentType>() {
            public ETournamentType findValueByNumber(int number) {
              return ETournamentType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(18);
    }

    private static final ETournamentType[] VALUES = values();

    public static ETournamentType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ETournamentType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ETournamentType)
  }

  /**
   * Protobuf enum {@code EIngameEvent}
   */
  public enum EIngameEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EIngameEvent_OraclePA = 0;</code>
     */
    k_EIngameEvent_OraclePA(0, 0),
    /**
     * <code>k_EIngameEvent_CNY2015 = 1;</code>
     */
    k_EIngameEvent_CNY2015(1, 1),
    /**
     * <code>k_EIngameEvent_CNY2015_PreBeast = 2;</code>
     */
    k_EIngameEvent_CNY2015_PreBeast(2, 2),
    /**
     * <code>k_EIngameEvent_TI5 = 3;</code>
     */
    k_EIngameEvent_TI5(3, 3),
    ;

    /**
     * <code>k_EIngameEvent_OraclePA = 0;</code>
     */
    public static final int k_EIngameEvent_OraclePA_VALUE = 0;
    /**
     * <code>k_EIngameEvent_CNY2015 = 1;</code>
     */
    public static final int k_EIngameEvent_CNY2015_VALUE = 1;
    /**
     * <code>k_EIngameEvent_CNY2015_PreBeast = 2;</code>
     */
    public static final int k_EIngameEvent_CNY2015_PreBeast_VALUE = 2;
    /**
     * <code>k_EIngameEvent_TI5 = 3;</code>
     */
    public static final int k_EIngameEvent_TI5_VALUE = 3;


    public final int getNumber() { return value; }

    public static EIngameEvent valueOf(int value) {
      switch (value) {
        case 0: return k_EIngameEvent_OraclePA;
        case 1: return k_EIngameEvent_CNY2015;
        case 2: return k_EIngameEvent_CNY2015_PreBeast;
        case 3: return k_EIngameEvent_TI5;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EIngameEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EIngameEvent>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EIngameEvent>() {
            public EIngameEvent findValueByNumber(int number) {
              return EIngameEvent.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(19);
    }

    private static final EIngameEvent[] VALUES = values();

    public static EIngameEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EIngameEvent(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EIngameEvent)
  }

  /**
   * Protobuf enum {@code LobbyDotaTVDelay}
   */
  public enum LobbyDotaTVDelay
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LobbyDotaTV_10 = 0;</code>
     */
    LobbyDotaTV_10(0, 0),
    /**
     * <code>LobbyDotaTV_120 = 1;</code>
     */
    LobbyDotaTV_120(1, 1),
    /**
     * <code>LobbyDotaTV_300 = 2;</code>
     */
    LobbyDotaTV_300(2, 2),
    ;

    /**
     * <code>LobbyDotaTV_10 = 0;</code>
     */
    public static final int LobbyDotaTV_10_VALUE = 0;
    /**
     * <code>LobbyDotaTV_120 = 1;</code>
     */
    public static final int LobbyDotaTV_120_VALUE = 1;
    /**
     * <code>LobbyDotaTV_300 = 2;</code>
     */
    public static final int LobbyDotaTV_300_VALUE = 2;


    public final int getNumber() { return value; }

    public static LobbyDotaTVDelay valueOf(int value) {
      switch (value) {
        case 0: return LobbyDotaTV_10;
        case 1: return LobbyDotaTV_120;
        case 2: return LobbyDotaTV_300;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LobbyDotaTVDelay>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LobbyDotaTVDelay>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LobbyDotaTVDelay>() {
            public LobbyDotaTVDelay findValueByNumber(int number) {
              return LobbyDotaTVDelay.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(20);
    }

    private static final LobbyDotaTVDelay[] VALUES = values();

    public static LobbyDotaTVDelay valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private LobbyDotaTVDelay(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:LobbyDotaTVDelay)
  }

  /**
   * Protobuf enum {@code EMatchOutcome}
   */
  public enum EMatchOutcome
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EMatchOutcome_Unknown = 0;</code>
     */
    k_EMatchOutcome_Unknown(0, 0),
    /**
     * <code>k_EMatchOutcome_RadVictory = 2;</code>
     */
    k_EMatchOutcome_RadVictory(1, 2),
    /**
     * <code>k_EMatchOutcome_DireVictory = 3;</code>
     */
    k_EMatchOutcome_DireVictory(2, 3),
    /**
     * <code>k_EMatchOutcome_NotScored_PoorNetworkConditions = 64;</code>
     */
    k_EMatchOutcome_NotScored_PoorNetworkConditions(3, 64),
    /**
     * <code>k_EMatchOutcome_NotScored_Leaver = 65;</code>
     */
    k_EMatchOutcome_NotScored_Leaver(4, 65),
    /**
     * <code>k_EMatchOutcome_NotScored_ServerCrash = 66;</code>
     */
    k_EMatchOutcome_NotScored_ServerCrash(5, 66),
    /**
     * <code>k_EMatchOutcome_NotScored_NeverStarted = 67;</code>
     */
    k_EMatchOutcome_NotScored_NeverStarted(6, 67),
    ;

    /**
     * <code>k_EMatchOutcome_Unknown = 0;</code>
     */
    public static final int k_EMatchOutcome_Unknown_VALUE = 0;
    /**
     * <code>k_EMatchOutcome_RadVictory = 2;</code>
     */
    public static final int k_EMatchOutcome_RadVictory_VALUE = 2;
    /**
     * <code>k_EMatchOutcome_DireVictory = 3;</code>
     */
    public static final int k_EMatchOutcome_DireVictory_VALUE = 3;
    /**
     * <code>k_EMatchOutcome_NotScored_PoorNetworkConditions = 64;</code>
     */
    public static final int k_EMatchOutcome_NotScored_PoorNetworkConditions_VALUE = 64;
    /**
     * <code>k_EMatchOutcome_NotScored_Leaver = 65;</code>
     */
    public static final int k_EMatchOutcome_NotScored_Leaver_VALUE = 65;
    /**
     * <code>k_EMatchOutcome_NotScored_ServerCrash = 66;</code>
     */
    public static final int k_EMatchOutcome_NotScored_ServerCrash_VALUE = 66;
    /**
     * <code>k_EMatchOutcome_NotScored_NeverStarted = 67;</code>
     */
    public static final int k_EMatchOutcome_NotScored_NeverStarted_VALUE = 67;


    public final int getNumber() { return value; }

    public static EMatchOutcome valueOf(int value) {
      switch (value) {
        case 0: return k_EMatchOutcome_Unknown;
        case 2: return k_EMatchOutcome_RadVictory;
        case 3: return k_EMatchOutcome_DireVictory;
        case 64: return k_EMatchOutcome_NotScored_PoorNetworkConditions;
        case 65: return k_EMatchOutcome_NotScored_Leaver;
        case 66: return k_EMatchOutcome_NotScored_ServerCrash;
        case 67: return k_EMatchOutcome_NotScored_NeverStarted;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>() {
            public EMatchOutcome findValueByNumber(int number) {
              return EMatchOutcome.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(21);
    }

    private static final EMatchOutcome[] VALUES = values();

    public static EMatchOutcome valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EMatchOutcome(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EMatchOutcome)
  }

  /**
   * Protobuf enum {@code EDOTAGCSessionNeed}
   */
  public enum EDOTAGCSessionNeed
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EDOTAGCSessionNeed_Unknown = 0;</code>
     */
    k_EDOTAGCSessionNeed_Unknown(0, 0),
    /**
     * <code>k_EDOTAGCSessionNeed_UserNoSessionNeeded = 100;</code>
     */
    k_EDOTAGCSessionNeed_UserNoSessionNeeded(1, 100),
    /**
     * <code>k_EDOTAGCSessionNeed_UserInOnlineGame = 101;</code>
     */
    k_EDOTAGCSessionNeed_UserInOnlineGame(2, 101),
    /**
     * <code>k_EDOTAGCSessionNeed_UserInLocalGame = 102;</code>
     */
    k_EDOTAGCSessionNeed_UserInLocalGame(3, 102),
    /**
     * <code>k_EDOTAGCSessionNeed_UserInUIWasConnected = 103;</code>
     */
    k_EDOTAGCSessionNeed_UserInUIWasConnected(4, 103),
    /**
     * <code>k_EDOTAGCSessionNeed_UserInUINeverConnected = 104;</code>
     */
    k_EDOTAGCSessionNeed_UserInUINeverConnected(5, 104),
    /**
     * <code>k_EDOTAGCSessionNeed_UserTutorials = 105;</code>
     */
    k_EDOTAGCSessionNeed_UserTutorials(6, 105),
    /**
     * <code>k_EDOTAGCSessionNeed_GameServerOnline = 200;</code>
     */
    k_EDOTAGCSessionNeed_GameServerOnline(7, 200),
    /**
     * <code>k_EDOTAGCSessionNeed_GameServerLocal = 201;</code>
     */
    k_EDOTAGCSessionNeed_GameServerLocal(8, 201),
    /**
     * <code>k_EDOTAGCSessionNeed_GameServerIdle = 202;</code>
     */
    k_EDOTAGCSessionNeed_GameServerIdle(9, 202),
    /**
     * <code>k_EDOTAGCSessionNeed_GameServerRelay = 203;</code>
     */
    k_EDOTAGCSessionNeed_GameServerRelay(10, 203),
    /**
     * <code>k_EDOTAGCSessionNeed_GameServerLocalUpload = 204;</code>
     */
    k_EDOTAGCSessionNeed_GameServerLocalUpload(11, 204),
    ;

    /**
     * <code>k_EDOTAGCSessionNeed_Unknown = 0;</code>
     */
    public static final int k_EDOTAGCSessionNeed_Unknown_VALUE = 0;
    /**
     * <code>k_EDOTAGCSessionNeed_UserNoSessionNeeded = 100;</code>
     */
    public static final int k_EDOTAGCSessionNeed_UserNoSessionNeeded_VALUE = 100;
    /**
     * <code>k_EDOTAGCSessionNeed_UserInOnlineGame = 101;</code>
     */
    public static final int k_EDOTAGCSessionNeed_UserInOnlineGame_VALUE = 101;
    /**
     * <code>k_EDOTAGCSessionNeed_UserInLocalGame = 102;</code>
     */
    public static final int k_EDOTAGCSessionNeed_UserInLocalGame_VALUE = 102;
    /**
     * <code>k_EDOTAGCSessionNeed_UserInUIWasConnected = 103;</code>
     */
    public static final int k_EDOTAGCSessionNeed_UserInUIWasConnected_VALUE = 103;
    /**
     * <code>k_EDOTAGCSessionNeed_UserInUINeverConnected = 104;</code>
     */
    public static final int k_EDOTAGCSessionNeed_UserInUINeverConnected_VALUE = 104;
    /**
     * <code>k_EDOTAGCSessionNeed_UserTutorials = 105;</code>
     */
    public static final int k_EDOTAGCSessionNeed_UserTutorials_VALUE = 105;
    /**
     * <code>k_EDOTAGCSessionNeed_GameServerOnline = 200;</code>
     */
    public static final int k_EDOTAGCSessionNeed_GameServerOnline_VALUE = 200;
    /**
     * <code>k_EDOTAGCSessionNeed_GameServerLocal = 201;</code>
     */
    public static final int k_EDOTAGCSessionNeed_GameServerLocal_VALUE = 201;
    /**
     * <code>k_EDOTAGCSessionNeed_GameServerIdle = 202;</code>
     */
    public static final int k_EDOTAGCSessionNeed_GameServerIdle_VALUE = 202;
    /**
     * <code>k_EDOTAGCSessionNeed_GameServerRelay = 203;</code>
     */
    public static final int k_EDOTAGCSessionNeed_GameServerRelay_VALUE = 203;
    /**
     * <code>k_EDOTAGCSessionNeed_GameServerLocalUpload = 204;</code>
     */
    public static final int k_EDOTAGCSessionNeed_GameServerLocalUpload_VALUE = 204;


    public final int getNumber() { return value; }

    public static EDOTAGCSessionNeed valueOf(int value) {
      switch (value) {
        case 0: return k_EDOTAGCSessionNeed_Unknown;
        case 100: return k_EDOTAGCSessionNeed_UserNoSessionNeeded;
        case 101: return k_EDOTAGCSessionNeed_UserInOnlineGame;
        case 102: return k_EDOTAGCSessionNeed_UserInLocalGame;
        case 103: return k_EDOTAGCSessionNeed_UserInUIWasConnected;
        case 104: return k_EDOTAGCSessionNeed_UserInUINeverConnected;
        case 105: return k_EDOTAGCSessionNeed_UserTutorials;
        case 200: return k_EDOTAGCSessionNeed_GameServerOnline;
        case 201: return k_EDOTAGCSessionNeed_GameServerLocal;
        case 202: return k_EDOTAGCSessionNeed_GameServerIdle;
        case 203: return k_EDOTAGCSessionNeed_GameServerRelay;
        case 204: return k_EDOTAGCSessionNeed_GameServerLocalUpload;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDOTAGCSessionNeed>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDOTAGCSessionNeed>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDOTAGCSessionNeed>() {
            public EDOTAGCSessionNeed findValueByNumber(int number) {
              return EDOTAGCSessionNeed.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(22);
    }

    private static final EDOTAGCSessionNeed[] VALUES = values();

    public static EDOTAGCSessionNeed valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EDOTAGCSessionNeed(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EDOTAGCSessionNeed)
  }

  /**
   * Protobuf enum {@code Fantasy_Roles}
   */
  public enum Fantasy_Roles
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FANTASY_ROLE_UNDEFINED = 0;</code>
     */
    FANTASY_ROLE_UNDEFINED(0, 0),
    /**
     * <code>FANTASY_ROLE_CORE = 1;</code>
     */
    FANTASY_ROLE_CORE(1, 1),
    /**
     * <code>FANTASY_ROLE_SUPPORT = 2;</code>
     */
    FANTASY_ROLE_SUPPORT(2, 2),
    ;

    /**
     * <code>FANTASY_ROLE_UNDEFINED = 0;</code>
     */
    public static final int FANTASY_ROLE_UNDEFINED_VALUE = 0;
    /**
     * <code>FANTASY_ROLE_CORE = 1;</code>
     */
    public static final int FANTASY_ROLE_CORE_VALUE = 1;
    /**
     * <code>FANTASY_ROLE_SUPPORT = 2;</code>
     */
    public static final int FANTASY_ROLE_SUPPORT_VALUE = 2;


    public final int getNumber() { return value; }

    public static Fantasy_Roles valueOf(int value) {
      switch (value) {
        case 0: return FANTASY_ROLE_UNDEFINED;
        case 1: return FANTASY_ROLE_CORE;
        case 2: return FANTASY_ROLE_SUPPORT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Roles>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Roles>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Fantasy_Roles>() {
            public Fantasy_Roles findValueByNumber(int number) {
              return Fantasy_Roles.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(23);
    }

    private static final Fantasy_Roles[] VALUES = values();

    public static Fantasy_Roles valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Fantasy_Roles(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Fantasy_Roles)
  }

  /**
   * Protobuf enum {@code Fantasy_Team_Slots}
   */
  public enum Fantasy_Team_Slots
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FANTASY_SLOT_NONE = 0;</code>
     */
    FANTASY_SLOT_NONE(0, 0),
    /**
     * <code>FANTASY_SLOT_CORE = 1;</code>
     */
    FANTASY_SLOT_CORE(1, 1),
    /**
     * <code>FANTASY_SLOT_SUPPORT = 2;</code>
     */
    FANTASY_SLOT_SUPPORT(2, 2),
    /**
     * <code>FANTASY_SLOT_ANY = 3;</code>
     */
    FANTASY_SLOT_ANY(3, 3),
    /**
     * <code>FANTASY_SLOT_BENCH = 4;</code>
     */
    FANTASY_SLOT_BENCH(4, 4),
    ;

    /**
     * <code>FANTASY_SLOT_NONE = 0;</code>
     */
    public static final int FANTASY_SLOT_NONE_VALUE = 0;
    /**
     * <code>FANTASY_SLOT_CORE = 1;</code>
     */
    public static final int FANTASY_SLOT_CORE_VALUE = 1;
    /**
     * <code>FANTASY_SLOT_SUPPORT = 2;</code>
     */
    public static final int FANTASY_SLOT_SUPPORT_VALUE = 2;
    /**
     * <code>FANTASY_SLOT_ANY = 3;</code>
     */
    public static final int FANTASY_SLOT_ANY_VALUE = 3;
    /**
     * <code>FANTASY_SLOT_BENCH = 4;</code>
     */
    public static final int FANTASY_SLOT_BENCH_VALUE = 4;


    public final int getNumber() { return value; }

    public static Fantasy_Team_Slots valueOf(int value) {
      switch (value) {
        case 0: return FANTASY_SLOT_NONE;
        case 1: return FANTASY_SLOT_CORE;
        case 2: return FANTASY_SLOT_SUPPORT;
        case 3: return FANTASY_SLOT_ANY;
        case 4: return FANTASY_SLOT_BENCH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Team_Slots>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Team_Slots>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Fantasy_Team_Slots>() {
            public Fantasy_Team_Slots findValueByNumber(int number) {
              return Fantasy_Team_Slots.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(24);
    }

    private static final Fantasy_Team_Slots[] VALUES = values();

    public static Fantasy_Team_Slots valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Fantasy_Team_Slots(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Fantasy_Team_Slots)
  }

  /**
   * Protobuf enum {@code Fantasy_Selection_Mode}
   */
  public enum Fantasy_Selection_Mode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FANTASY_SELECTION_INVALID = 0;</code>
     */
    FANTASY_SELECTION_INVALID(0, 0),
    /**
     * <code>FANTASY_SELECTION_LOCKED = 1;</code>
     */
    FANTASY_SELECTION_LOCKED(1, 1),
    /**
     * <code>FANTASY_SELECTION_SHUFFLE = 2;</code>
     */
    FANTASY_SELECTION_SHUFFLE(2, 2),
    /**
     * <code>FANTASY_SELECTION_FREE_PICK = 3;</code>
     */
    FANTASY_SELECTION_FREE_PICK(3, 3),
    /**
     * <code>FANTASY_SELECTION_ENDED = 4;</code>
     */
    FANTASY_SELECTION_ENDED(4, 4),
    /**
     * <code>FANTASY_SELECTION_PRE_SEASON = 5;</code>
     */
    FANTASY_SELECTION_PRE_SEASON(5, 5),
    /**
     * <code>FANTASY_SELECTION_PRE_DRAFT = 6;</code>
     */
    FANTASY_SELECTION_PRE_DRAFT(6, 6),
    /**
     * <code>FANTASY_SELECTION_DRAFTING = 7;</code>
     */
    FANTASY_SELECTION_DRAFTING(7, 7),
    /**
     * <code>FANTASY_SELECTION_REGULAR_SEASON = 8;</code>
     */
    FANTASY_SELECTION_REGULAR_SEASON(8, 8),
    ;

    /**
     * <code>FANTASY_SELECTION_INVALID = 0;</code>
     */
    public static final int FANTASY_SELECTION_INVALID_VALUE = 0;
    /**
     * <code>FANTASY_SELECTION_LOCKED = 1;</code>
     */
    public static final int FANTASY_SELECTION_LOCKED_VALUE = 1;
    /**
     * <code>FANTASY_SELECTION_SHUFFLE = 2;</code>
     */
    public static final int FANTASY_SELECTION_SHUFFLE_VALUE = 2;
    /**
     * <code>FANTASY_SELECTION_FREE_PICK = 3;</code>
     */
    public static final int FANTASY_SELECTION_FREE_PICK_VALUE = 3;
    /**
     * <code>FANTASY_SELECTION_ENDED = 4;</code>
     */
    public static final int FANTASY_SELECTION_ENDED_VALUE = 4;
    /**
     * <code>FANTASY_SELECTION_PRE_SEASON = 5;</code>
     */
    public static final int FANTASY_SELECTION_PRE_SEASON_VALUE = 5;
    /**
     * <code>FANTASY_SELECTION_PRE_DRAFT = 6;</code>
     */
    public static final int FANTASY_SELECTION_PRE_DRAFT_VALUE = 6;
    /**
     * <code>FANTASY_SELECTION_DRAFTING = 7;</code>
     */
    public static final int FANTASY_SELECTION_DRAFTING_VALUE = 7;
    /**
     * <code>FANTASY_SELECTION_REGULAR_SEASON = 8;</code>
     */
    public static final int FANTASY_SELECTION_REGULAR_SEASON_VALUE = 8;


    public final int getNumber() { return value; }

    public static Fantasy_Selection_Mode valueOf(int value) {
      switch (value) {
        case 0: return FANTASY_SELECTION_INVALID;
        case 1: return FANTASY_SELECTION_LOCKED;
        case 2: return FANTASY_SELECTION_SHUFFLE;
        case 3: return FANTASY_SELECTION_FREE_PICK;
        case 4: return FANTASY_SELECTION_ENDED;
        case 5: return FANTASY_SELECTION_PRE_SEASON;
        case 6: return FANTASY_SELECTION_PRE_DRAFT;
        case 7: return FANTASY_SELECTION_DRAFTING;
        case 8: return FANTASY_SELECTION_REGULAR_SEASON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Selection_Mode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Selection_Mode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Fantasy_Selection_Mode>() {
            public Fantasy_Selection_Mode findValueByNumber(int number) {
              return Fantasy_Selection_Mode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(25);
    }

    private static final Fantasy_Selection_Mode[] VALUES = values();

    public static Fantasy_Selection_Mode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Fantasy_Selection_Mode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Fantasy_Selection_Mode)
  }

  /**
   * Protobuf enum {@code DOTA_TournamentEvents}
   */
  public enum DOTA_TournamentEvents
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TE_FIRST_BLOOD = 0;</code>
     */
    TE_FIRST_BLOOD(0, 0),
    /**
     * <code>TE_GAME_END = 1;</code>
     */
    TE_GAME_END(1, 1),
    /**
     * <code>TE_MULTI_KILL = 2;</code>
     */
    TE_MULTI_KILL(2, 2),
    /**
     * <code>TE_HERO_DENY = 3;</code>
     */
    TE_HERO_DENY(3, 3),
    /**
     * <code>TE_AEGIS_DENY = 4;</code>
     */
    TE_AEGIS_DENY(4, 4),
    /**
     * <code>TE_AEGIS_STOLEN = 5;</code>
     */
    TE_AEGIS_STOLEN(5, 5),
    /**
     * <code>TE_GODLIKE = 6;</code>
     */
    TE_GODLIKE(6, 6),
    /**
     * <code>TE_COURIER_KILL = 7;</code>
     */
    TE_COURIER_KILL(7, 7),
    /**
     * <code>TE_ECHOSLAM = 8;</code>
     */
    TE_ECHOSLAM(8, 8),
    /**
     * <code>TE_RAPIER = 9;</code>
     */
    TE_RAPIER(9, 9),
    /**
     * <code>TE_EARLY_ROSHAN = 10;</code>
     */
    TE_EARLY_ROSHAN(10, 10),
    /**
     * <code>TE_BLACK_HOLE = 11;</code>
     */
    TE_BLACK_HOLE(11, 11),
    ;

    /**
     * <code>TE_FIRST_BLOOD = 0;</code>
     */
    public static final int TE_FIRST_BLOOD_VALUE = 0;
    /**
     * <code>TE_GAME_END = 1;</code>
     */
    public static final int TE_GAME_END_VALUE = 1;
    /**
     * <code>TE_MULTI_KILL = 2;</code>
     */
    public static final int TE_MULTI_KILL_VALUE = 2;
    /**
     * <code>TE_HERO_DENY = 3;</code>
     */
    public static final int TE_HERO_DENY_VALUE = 3;
    /**
     * <code>TE_AEGIS_DENY = 4;</code>
     */
    public static final int TE_AEGIS_DENY_VALUE = 4;
    /**
     * <code>TE_AEGIS_STOLEN = 5;</code>
     */
    public static final int TE_AEGIS_STOLEN_VALUE = 5;
    /**
     * <code>TE_GODLIKE = 6;</code>
     */
    public static final int TE_GODLIKE_VALUE = 6;
    /**
     * <code>TE_COURIER_KILL = 7;</code>
     */
    public static final int TE_COURIER_KILL_VALUE = 7;
    /**
     * <code>TE_ECHOSLAM = 8;</code>
     */
    public static final int TE_ECHOSLAM_VALUE = 8;
    /**
     * <code>TE_RAPIER = 9;</code>
     */
    public static final int TE_RAPIER_VALUE = 9;
    /**
     * <code>TE_EARLY_ROSHAN = 10;</code>
     */
    public static final int TE_EARLY_ROSHAN_VALUE = 10;
    /**
     * <code>TE_BLACK_HOLE = 11;</code>
     */
    public static final int TE_BLACK_HOLE_VALUE = 11;


    public final int getNumber() { return value; }

    public static DOTA_TournamentEvents valueOf(int value) {
      switch (value) {
        case 0: return TE_FIRST_BLOOD;
        case 1: return TE_GAME_END;
        case 2: return TE_MULTI_KILL;
        case 3: return TE_HERO_DENY;
        case 4: return TE_AEGIS_DENY;
        case 5: return TE_AEGIS_STOLEN;
        case 6: return TE_GODLIKE;
        case 7: return TE_COURIER_KILL;
        case 8: return TE_ECHOSLAM;
        case 9: return TE_RAPIER;
        case 10: return TE_EARLY_ROSHAN;
        case 11: return TE_BLACK_HOLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_TournamentEvents>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_TournamentEvents>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_TournamentEvents>() {
            public DOTA_TournamentEvents findValueByNumber(int number) {
              return DOTA_TournamentEvents.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(26);
    }

    private static final DOTA_TournamentEvents[] VALUES = values();

    public static DOTA_TournamentEvents valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_TournamentEvents(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_TournamentEvents)
  }

  /**
   * Protobuf enum {@code DOTA_COMBATLOG_TYPES}
   */
  public enum DOTA_COMBATLOG_TYPES
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_COMBATLOG_DAMAGE = 0;</code>
     */
    DOTA_COMBATLOG_DAMAGE(0, 0),
    /**
     * <code>DOTA_COMBATLOG_HEAL = 1;</code>
     */
    DOTA_COMBATLOG_HEAL(1, 1),
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_ADD = 2;</code>
     */
    DOTA_COMBATLOG_MODIFIER_ADD(2, 2),
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_REMOVE = 3;</code>
     */
    DOTA_COMBATLOG_MODIFIER_REMOVE(3, 3),
    /**
     * <code>DOTA_COMBATLOG_DEATH = 4;</code>
     */
    DOTA_COMBATLOG_DEATH(4, 4),
    /**
     * <code>DOTA_COMBATLOG_ABILITY = 5;</code>
     */
    DOTA_COMBATLOG_ABILITY(5, 5),
    /**
     * <code>DOTA_COMBATLOG_ITEM = 6;</code>
     */
    DOTA_COMBATLOG_ITEM(6, 6),
    /**
     * <code>DOTA_COMBATLOG_LOCATION = 7;</code>
     */
    DOTA_COMBATLOG_LOCATION(7, 7),
    /**
     * <code>DOTA_COMBATLOG_GOLD = 8;</code>
     */
    DOTA_COMBATLOG_GOLD(8, 8),
    /**
     * <code>DOTA_COMBATLOG_GAME_STATE = 9;</code>
     */
    DOTA_COMBATLOG_GAME_STATE(9, 9),
    /**
     * <code>DOTA_COMBATLOG_XP = 10;</code>
     */
    DOTA_COMBATLOG_XP(10, 10),
    /**
     * <code>DOTA_COMBATLOG_PURCHASE = 11;</code>
     */
    DOTA_COMBATLOG_PURCHASE(11, 11),
    /**
     * <code>DOTA_COMBATLOG_BUYBACK = 12;</code>
     */
    DOTA_COMBATLOG_BUYBACK(12, 12),
    /**
     * <code>DOTA_COMBATLOG_ABILITY_TRIGGER = 13;</code>
     */
    DOTA_COMBATLOG_ABILITY_TRIGGER(13, 13),
    /**
     * <code>DOTA_COMBATLOG_PLAYERSTATS = 14;</code>
     */
    DOTA_COMBATLOG_PLAYERSTATS(14, 14),
    /**
     * <code>DOTA_COMBATLOG_MULTIKILL = 15;</code>
     */
    DOTA_COMBATLOG_MULTIKILL(15, 15),
    /**
     * <code>DOTA_COMBATLOG_KILLSTREAK = 16;</code>
     */
    DOTA_COMBATLOG_KILLSTREAK(16, 16),
    /**
     * <code>DOTA_COMBATLOG_TEAM_BUILDING_KILL = 17;</code>
     */
    DOTA_COMBATLOG_TEAM_BUILDING_KILL(17, 17),
    /**
     * <code>DOTA_COMBATLOG_FIRST_BLOOD = 18;</code>
     */
    DOTA_COMBATLOG_FIRST_BLOOD(18, 18),
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_REFRESH = 19;</code>
     */
    DOTA_COMBATLOG_MODIFIER_REFRESH(19, 19),
    ;

    /**
     * <code>DOTA_COMBATLOG_DAMAGE = 0;</code>
     */
    public static final int DOTA_COMBATLOG_DAMAGE_VALUE = 0;
    /**
     * <code>DOTA_COMBATLOG_HEAL = 1;</code>
     */
    public static final int DOTA_COMBATLOG_HEAL_VALUE = 1;
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_ADD = 2;</code>
     */
    public static final int DOTA_COMBATLOG_MODIFIER_ADD_VALUE = 2;
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_REMOVE = 3;</code>
     */
    public static final int DOTA_COMBATLOG_MODIFIER_REMOVE_VALUE = 3;
    /**
     * <code>DOTA_COMBATLOG_DEATH = 4;</code>
     */
    public static final int DOTA_COMBATLOG_DEATH_VALUE = 4;
    /**
     * <code>DOTA_COMBATLOG_ABILITY = 5;</code>
     */
    public static final int DOTA_COMBATLOG_ABILITY_VALUE = 5;
    /**
     * <code>DOTA_COMBATLOG_ITEM = 6;</code>
     */
    public static final int DOTA_COMBATLOG_ITEM_VALUE = 6;
    /**
     * <code>DOTA_COMBATLOG_LOCATION = 7;</code>
     */
    public static final int DOTA_COMBATLOG_LOCATION_VALUE = 7;
    /**
     * <code>DOTA_COMBATLOG_GOLD = 8;</code>
     */
    public static final int DOTA_COMBATLOG_GOLD_VALUE = 8;
    /**
     * <code>DOTA_COMBATLOG_GAME_STATE = 9;</code>
     */
    public static final int DOTA_COMBATLOG_GAME_STATE_VALUE = 9;
    /**
     * <code>DOTA_COMBATLOG_XP = 10;</code>
     */
    public static final int DOTA_COMBATLOG_XP_VALUE = 10;
    /**
     * <code>DOTA_COMBATLOG_PURCHASE = 11;</code>
     */
    public static final int DOTA_COMBATLOG_PURCHASE_VALUE = 11;
    /**
     * <code>DOTA_COMBATLOG_BUYBACK = 12;</code>
     */
    public static final int DOTA_COMBATLOG_BUYBACK_VALUE = 12;
    /**
     * <code>DOTA_COMBATLOG_ABILITY_TRIGGER = 13;</code>
     */
    public static final int DOTA_COMBATLOG_ABILITY_TRIGGER_VALUE = 13;
    /**
     * <code>DOTA_COMBATLOG_PLAYERSTATS = 14;</code>
     */
    public static final int DOTA_COMBATLOG_PLAYERSTATS_VALUE = 14;
    /**
     * <code>DOTA_COMBATLOG_MULTIKILL = 15;</code>
     */
    public static final int DOTA_COMBATLOG_MULTIKILL_VALUE = 15;
    /**
     * <code>DOTA_COMBATLOG_KILLSTREAK = 16;</code>
     */
    public static final int DOTA_COMBATLOG_KILLSTREAK_VALUE = 16;
    /**
     * <code>DOTA_COMBATLOG_TEAM_BUILDING_KILL = 17;</code>
     */
    public static final int DOTA_COMBATLOG_TEAM_BUILDING_KILL_VALUE = 17;
    /**
     * <code>DOTA_COMBATLOG_FIRST_BLOOD = 18;</code>
     */
    public static final int DOTA_COMBATLOG_FIRST_BLOOD_VALUE = 18;
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_REFRESH = 19;</code>
     */
    public static final int DOTA_COMBATLOG_MODIFIER_REFRESH_VALUE = 19;


    public final int getNumber() { return value; }

    public static DOTA_COMBATLOG_TYPES valueOf(int value) {
      switch (value) {
        case 0: return DOTA_COMBATLOG_DAMAGE;
        case 1: return DOTA_COMBATLOG_HEAL;
        case 2: return DOTA_COMBATLOG_MODIFIER_ADD;
        case 3: return DOTA_COMBATLOG_MODIFIER_REMOVE;
        case 4: return DOTA_COMBATLOG_DEATH;
        case 5: return DOTA_COMBATLOG_ABILITY;
        case 6: return DOTA_COMBATLOG_ITEM;
        case 7: return DOTA_COMBATLOG_LOCATION;
        case 8: return DOTA_COMBATLOG_GOLD;
        case 9: return DOTA_COMBATLOG_GAME_STATE;
        case 10: return DOTA_COMBATLOG_XP;
        case 11: return DOTA_COMBATLOG_PURCHASE;
        case 12: return DOTA_COMBATLOG_BUYBACK;
        case 13: return DOTA_COMBATLOG_ABILITY_TRIGGER;
        case 14: return DOTA_COMBATLOG_PLAYERSTATS;
        case 15: return DOTA_COMBATLOG_MULTIKILL;
        case 16: return DOTA_COMBATLOG_KILLSTREAK;
        case 17: return DOTA_COMBATLOG_TEAM_BUILDING_KILL;
        case 18: return DOTA_COMBATLOG_FIRST_BLOOD;
        case 19: return DOTA_COMBATLOG_MODIFIER_REFRESH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>() {
            public DOTA_COMBATLOG_TYPES findValueByNumber(int number) {
              return DOTA_COMBATLOG_TYPES.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.getDescriptor().getEnumTypes().get(27);
    }

    private static final DOTA_COMBATLOG_TYPES[] VALUES = values();

    public static DOTA_COMBATLOG_TYPES valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_COMBATLOG_TYPES(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_COMBATLOG_TYPES)
  }

  public interface CSODOTAGameAccountClientOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 account_id = 1;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    // optional uint32 wins = 3;
    /**
     * <code>optional uint32 wins = 3;</code>
     */
    boolean hasWins();
    /**
     * <code>optional uint32 wins = 3;</code>
     */
    int getWins();

    // optional uint32 losses = 4;
    /**
     * <code>optional uint32 losses = 4;</code>
     */
    boolean hasLosses();
    /**
     * <code>optional uint32 losses = 4;</code>
     */
    int getLosses();

    // optional uint32 xp = 12;
    /**
     * <code>optional uint32 xp = 12;</code>
     */
    boolean hasXp();
    /**
     * <code>optional uint32 xp = 12;</code>
     */
    int getXp();

    // optional uint32 level = 13;
    /**
     * <code>optional uint32 level = 13;</code>
     */
    boolean hasLevel();
    /**
     * <code>optional uint32 level = 13;</code>
     */
    int getLevel();

    // optional uint32 initial_skill = 14;
    /**
     * <code>optional uint32 initial_skill = 14;</code>
     */
    boolean hasInitialSkill();
    /**
     * <code>optional uint32 initial_skill = 14;</code>
     */
    int getInitialSkill();

    // optional uint32 leaver_count = 15;
    /**
     * <code>optional uint32 leaver_count = 15;</code>
     */
    boolean hasLeaverCount();
    /**
     * <code>optional uint32 leaver_count = 15;</code>
     */
    int getLeaverCount();

    // optional uint32 secondary_leaver_count = 58;
    /**
     * <code>optional uint32 secondary_leaver_count = 58;</code>
     */
    boolean hasSecondaryLeaverCount();
    /**
     * <code>optional uint32 secondary_leaver_count = 58;</code>
     */
    int getSecondaryLeaverCount();

    // optional uint32 low_priority_until_date = 18;
    /**
     * <code>optional uint32 low_priority_until_date = 18;</code>
     */
    boolean hasLowPriorityUntilDate();
    /**
     * <code>optional uint32 low_priority_until_date = 18;</code>
     */
    int getLowPriorityUntilDate();

    // optional uint32 prevent_text_chat_until_date = 20;
    /**
     * <code>optional uint32 prevent_text_chat_until_date = 20;</code>
     */
    boolean hasPreventTextChatUntilDate();
    /**
     * <code>optional uint32 prevent_text_chat_until_date = 20;</code>
     */
    int getPreventTextChatUntilDate();

    // optional uint32 prevent_voice_until_date = 21;
    /**
     * <code>optional uint32 prevent_voice_until_date = 21;</code>
     */
    boolean hasPreventVoiceUntilDate();
    /**
     * <code>optional uint32 prevent_voice_until_date = 21;</code>
     */
    int getPreventVoiceUntilDate();

    // optional uint32 last_abandoned_game_date = 22;
    /**
     * <code>optional uint32 last_abandoned_game_date = 22;</code>
     */
    boolean hasLastAbandonedGameDate();
    /**
     * <code>optional uint32 last_abandoned_game_date = 22;</code>
     */
    int getLastAbandonedGameDate();

    // optional uint32 last_secondary_abandoned_game_date = 59;
    /**
     * <code>optional uint32 last_secondary_abandoned_game_date = 59;</code>
     */
    boolean hasLastSecondaryAbandonedGameDate();
    /**
     * <code>optional uint32 last_secondary_abandoned_game_date = 59;</code>
     */
    int getLastSecondaryAbandonedGameDate();

    // optional uint32 leaver_penalty_count = 23;
    /**
     * <code>optional uint32 leaver_penalty_count = 23;</code>
     */
    boolean hasLeaverPenaltyCount();
    /**
     * <code>optional uint32 leaver_penalty_count = 23;</code>
     */
    int getLeaverPenaltyCount();

    // optional uint32 completed_game_streak = 24;
    /**
     * <code>optional uint32 completed_game_streak = 24;</code>
     */
    boolean hasCompletedGameStreak();
    /**
     * <code>optional uint32 completed_game_streak = 24;</code>
     */
    int getCompletedGameStreak();

    // optional uint32 teaching = 28;
    /**
     * <code>optional uint32 teaching = 28;</code>
     */
    boolean hasTeaching();
    /**
     * <code>optional uint32 teaching = 28;</code>
     */
    int getTeaching();

    // optional uint32 leadership = 29;
    /**
     * <code>optional uint32 leadership = 29;</code>
     */
    boolean hasLeadership();
    /**
     * <code>optional uint32 leadership = 29;</code>
     */
    int getLeadership();

    // optional uint32 friendly = 30;
    /**
     * <code>optional uint32 friendly = 30;</code>
     */
    boolean hasFriendly();
    /**
     * <code>optional uint32 friendly = 30;</code>
     */
    int getFriendly();

    // optional uint32 forgiving = 31;
    /**
     * <code>optional uint32 forgiving = 31;</code>
     */
    boolean hasForgiving();
    /**
     * <code>optional uint32 forgiving = 31;</code>
     */
    int getForgiving();

    // optional uint32 account_disabled_until_date = 38;
    /**
     * <code>optional uint32 account_disabled_until_date = 38;</code>
     */
    boolean hasAccountDisabledUntilDate();
    /**
     * <code>optional uint32 account_disabled_until_date = 38;</code>
     */
    int getAccountDisabledUntilDate();

    // optional uint32 account_disabled_count = 39;
    /**
     * <code>optional uint32 account_disabled_count = 39;</code>
     */
    boolean hasAccountDisabledCount();
    /**
     * <code>optional uint32 account_disabled_count = 39;</code>
     */
    int getAccountDisabledCount();

    // optional uint32 showcase_hero_id = 40;
    /**
     * <code>optional uint32 showcase_hero_id = 40;</code>
     */
    boolean hasShowcaseHeroId();
    /**
     * <code>optional uint32 showcase_hero_id = 40;</code>
     */
    int getShowcaseHeroId();

    // optional uint32 match_disabled_until_date = 41;
    /**
     * <code>optional uint32 match_disabled_until_date = 41;</code>
     */
    boolean hasMatchDisabledUntilDate();
    /**
     * <code>optional uint32 match_disabled_until_date = 41;</code>
     */
    int getMatchDisabledUntilDate();

    // optional uint32 match_disabled_count = 42;
    /**
     * <code>optional uint32 match_disabled_count = 42;</code>
     */
    boolean hasMatchDisabledCount();
    /**
     * <code>optional uint32 match_disabled_count = 42;</code>
     */
    int getMatchDisabledCount();

    // optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];
    /**
     * <code>optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];</code>
     */
    boolean hasPartnerAccountType();
    /**
     * <code>optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];</code>
     */
    skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerAccountType();

    // optional uint32 partner_account_state = 45;
    /**
     * <code>optional uint32 partner_account_state = 45;</code>
     */
    boolean hasPartnerAccountState();
    /**
     * <code>optional uint32 partner_account_state = 45;</code>
     */
    int getPartnerAccountState();

    // optional uint32 shutdownlawterminatetimestamp = 47;
    /**
     * <code>optional uint32 shutdownlawterminatetimestamp = 47;</code>
     */
    boolean hasShutdownlawterminatetimestamp();
    /**
     * <code>optional uint32 shutdownlawterminatetimestamp = 47;</code>
     */
    int getShutdownlawterminatetimestamp();

    // optional uint32 low_priority_games_remaining = 48;
    /**
     * <code>optional uint32 low_priority_games_remaining = 48;</code>
     */
    boolean hasLowPriorityGamesRemaining();
    /**
     * <code>optional uint32 low_priority_games_remaining = 48;</code>
     */
    int getLowPriorityGamesRemaining();

    // optional uint32 competitive_rank = 49;
    /**
     * <code>optional uint32 competitive_rank = 49;</code>
     */
    boolean hasCompetitiveRank();
    /**
     * <code>optional uint32 competitive_rank = 49;</code>
     */
    int getCompetitiveRank();

    // optional uint32 calibration_games_remaining = 51;
    /**
     * <code>optional uint32 calibration_games_remaining = 51;</code>
     */
    boolean hasCalibrationGamesRemaining();
    /**
     * <code>optional uint32 calibration_games_remaining = 51;</code>
     */
    int getCalibrationGamesRemaining();

    // optional uint32 solo_competitive_rank = 52;
    /**
     * <code>optional uint32 solo_competitive_rank = 52;</code>
     */
    boolean hasSoloCompetitiveRank();
    /**
     * <code>optional uint32 solo_competitive_rank = 52;</code>
     */
    int getSoloCompetitiveRank();

    // optional uint32 solo_calibration_games_remaining = 54;
    /**
     * <code>optional uint32 solo_calibration_games_remaining = 54;</code>
     */
    boolean hasSoloCalibrationGamesRemaining();
    /**
     * <code>optional uint32 solo_calibration_games_remaining = 54;</code>
     */
    int getSoloCalibrationGamesRemaining();

    // optional uint32 competitive_1v1_rank = 63;
    /**
     * <code>optional uint32 competitive_1v1_rank = 63;</code>
     */
    boolean hasCompetitive1V1Rank();
    /**
     * <code>optional uint32 competitive_1v1_rank = 63;</code>
     */
    int getCompetitive1V1Rank();

    // optional uint32 competitive_1v1_calibration_games_remaining = 64;
    /**
     * <code>optional uint32 competitive_1v1_calibration_games_remaining = 64;</code>
     */
    boolean hasCompetitive1V1CalibrationGamesRemaining();
    /**
     * <code>optional uint32 competitive_1v1_calibration_games_remaining = 64;</code>
     */
    int getCompetitive1V1CalibrationGamesRemaining();

    // optional uint32 recruitment_level = 55;
    /**
     * <code>optional uint32 recruitment_level = 55;</code>
     */
    boolean hasRecruitmentLevel();
    /**
     * <code>optional uint32 recruitment_level = 55;</code>
     */
    int getRecruitmentLevel();

    // optional bool has_new_notifications = 56;
    /**
     * <code>optional bool has_new_notifications = 56;</code>
     */
    boolean hasHasNewNotifications();
    /**
     * <code>optional bool has_new_notifications = 56;</code>
     */
    boolean getHasNewNotifications();

    // optional bool is_league_admin = 57;
    /**
     * <code>optional bool is_league_admin = 57;</code>
     */
    boolean hasIsLeagueAdmin();
    /**
     * <code>optional bool is_league_admin = 57;</code>
     */
    boolean getIsLeagueAdmin();

    // optional uint32 casual_games_played = 60;
    /**
     * <code>optional uint32 casual_games_played = 60;</code>
     */
    boolean hasCasualGamesPlayed();
    /**
     * <code>optional uint32 casual_games_played = 60;</code>
     */
    int getCasualGamesPlayed();

    // optional uint32 solo_competitive_games_played = 61;
    /**
     * <code>optional uint32 solo_competitive_games_played = 61;</code>
     */
    boolean hasSoloCompetitiveGamesPlayed();
    /**
     * <code>optional uint32 solo_competitive_games_played = 61;</code>
     */
    int getSoloCompetitiveGamesPlayed();

    // optional uint32 party_competitive_games_played = 62;
    /**
     * <code>optional uint32 party_competitive_games_played = 62;</code>
     */
    boolean hasPartyCompetitiveGamesPlayed();
    /**
     * <code>optional uint32 party_competitive_games_played = 62;</code>
     */
    int getPartyCompetitiveGamesPlayed();

    // optional uint32 casual_1v1_games_played = 65;
    /**
     * <code>optional uint32 casual_1v1_games_played = 65;</code>
     */
    boolean hasCasual1V1GamesPlayed();
    /**
     * <code>optional uint32 casual_1v1_games_played = 65;</code>
     */
    int getCasual1V1GamesPlayed();

    // optional uint32 competitive_team_games_played = 66;
    /**
     * <code>optional uint32 competitive_team_games_played = 66;</code>
     */
    boolean hasCompetitiveTeamGamesPlayed();
    /**
     * <code>optional uint32 competitive_team_games_played = 66;</code>
     */
    int getCompetitiveTeamGamesPlayed();

    // optional uint32 curr_all_hero_challenge_id = 67;
    /**
     * <code>optional uint32 curr_all_hero_challenge_id = 67;</code>
     */
    boolean hasCurrAllHeroChallengeId();
    /**
     * <code>optional uint32 curr_all_hero_challenge_id = 67;</code>
     */
    int getCurrAllHeroChallengeId();
  }
  /**
   * Protobuf type {@code CSODOTAGameAccountClient}
   */
  public static final class CSODOTAGameAccountClient extends
      com.google.protobuf.GeneratedMessage
      implements CSODOTAGameAccountClientOrBuilder {
    // Use CSODOTAGameAccountClient.newBuilder() to construct.
    private CSODOTAGameAccountClient(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSODOTAGameAccountClient(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSODOTAGameAccountClient defaultInstance;
    public static CSODOTAGameAccountClient getDefaultInstance() {
      return defaultInstance;
    }

    public CSODOTAGameAccountClient getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSODOTAGameAccountClient(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              wins_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              losses_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000008;
              xp_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000010;
              level_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000020;
              initialSkill_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000040;
              leaverCount_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000100;
              lowPriorityUntilDate_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000200;
              preventTextChatUntilDate_ = input.readUInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00000400;
              preventVoiceUntilDate_ = input.readUInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00000800;
              lastAbandonedGameDate_ = input.readUInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00002000;
              leaverPenaltyCount_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00004000;
              completedGameStreak_ = input.readUInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x00008000;
              teaching_ = input.readUInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x00010000;
              leadership_ = input.readUInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x00020000;
              friendly_ = input.readUInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x00040000;
              forgiving_ = input.readUInt32();
              break;
            }
            case 304: {
              bitField0_ |= 0x00080000;
              accountDisabledUntilDate_ = input.readUInt32();
              break;
            }
            case 312: {
              bitField0_ |= 0x00100000;
              accountDisabledCount_ = input.readUInt32();
              break;
            }
            case 320: {
              bitField0_ |= 0x00200000;
              showcaseHeroId_ = input.readUInt32();
              break;
            }
            case 328: {
              bitField0_ |= 0x00400000;
              matchDisabledUntilDate_ = input.readUInt32();
              break;
            }
            case 336: {
              bitField0_ |= 0x00800000;
              matchDisabledCount_ = input.readUInt32();
              break;
            }
            case 352: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType value = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(44, rawValue);
              } else {
                bitField0_ |= 0x01000000;
                partnerAccountType_ = value;
              }
              break;
            }
            case 360: {
              bitField0_ |= 0x02000000;
              partnerAccountState_ = input.readUInt32();
              break;
            }
            case 376: {
              bitField0_ |= 0x04000000;
              shutdownlawterminatetimestamp_ = input.readUInt32();
              break;
            }
            case 384: {
              bitField0_ |= 0x08000000;
              lowPriorityGamesRemaining_ = input.readUInt32();
              break;
            }
            case 392: {
              bitField0_ |= 0x10000000;
              competitiveRank_ = input.readUInt32();
              break;
            }
            case 408: {
              bitField0_ |= 0x20000000;
              calibrationGamesRemaining_ = input.readUInt32();
              break;
            }
            case 416: {
              bitField0_ |= 0x40000000;
              soloCompetitiveRank_ = input.readUInt32();
              break;
            }
            case 432: {
              bitField0_ |= 0x80000000;
              soloCalibrationGamesRemaining_ = input.readUInt32();
              break;
            }
            case 440: {
              bitField1_ |= 0x00000004;
              recruitmentLevel_ = input.readUInt32();
              break;
            }
            case 448: {
              bitField1_ |= 0x00000008;
              hasNewNotifications_ = input.readBool();
              break;
            }
            case 456: {
              bitField1_ |= 0x00000010;
              isLeagueAdmin_ = input.readBool();
              break;
            }
            case 464: {
              bitField0_ |= 0x00000080;
              secondaryLeaverCount_ = input.readUInt32();
              break;
            }
            case 472: {
              bitField0_ |= 0x00001000;
              lastSecondaryAbandonedGameDate_ = input.readUInt32();
              break;
            }
            case 480: {
              bitField1_ |= 0x00000020;
              casualGamesPlayed_ = input.readUInt32();
              break;
            }
            case 488: {
              bitField1_ |= 0x00000040;
              soloCompetitiveGamesPlayed_ = input.readUInt32();
              break;
            }
            case 496: {
              bitField1_ |= 0x00000080;
              partyCompetitiveGamesPlayed_ = input.readUInt32();
              break;
            }
            case 504: {
              bitField1_ |= 0x00000001;
              competitive1V1Rank_ = input.readUInt32();
              break;
            }
            case 512: {
              bitField1_ |= 0x00000002;
              competitive1V1CalibrationGamesRemaining_ = input.readUInt32();
              break;
            }
            case 520: {
              bitField1_ |= 0x00000100;
              casual1V1GamesPlayed_ = input.readUInt32();
              break;
            }
            case 528: {
              bitField1_ |= 0x00000200;
              competitiveTeamGamesPlayed_ = input.readUInt32();
              break;
            }
            case 536: {
              bitField1_ |= 0x00000400;
              currAllHeroChallengeId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAGameAccountClient_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAGameAccountClient_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient.Builder.class);
    }

    public static com.google.protobuf.Parser<CSODOTAGameAccountClient> PARSER =
        new com.google.protobuf.AbstractParser<CSODOTAGameAccountClient>() {
      public CSODOTAGameAccountClient parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSODOTAGameAccountClient(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTAGameAccountClient> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    // optional uint32 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    // optional uint32 wins = 3;
    public static final int WINS_FIELD_NUMBER = 3;
    private int wins_;
    /**
     * <code>optional uint32 wins = 3;</code>
     */
    public boolean hasWins() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 wins = 3;</code>
     */
    public int getWins() {
      return wins_;
    }

    // optional uint32 losses = 4;
    public static final int LOSSES_FIELD_NUMBER = 4;
    private int losses_;
    /**
     * <code>optional uint32 losses = 4;</code>
     */
    public boolean hasLosses() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 losses = 4;</code>
     */
    public int getLosses() {
      return losses_;
    }

    // optional uint32 xp = 12;
    public static final int XP_FIELD_NUMBER = 12;
    private int xp_;
    /**
     * <code>optional uint32 xp = 12;</code>
     */
    public boolean hasXp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 xp = 12;</code>
     */
    public int getXp() {
      return xp_;
    }

    // optional uint32 level = 13;
    public static final int LEVEL_FIELD_NUMBER = 13;
    private int level_;
    /**
     * <code>optional uint32 level = 13;</code>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 level = 13;</code>
     */
    public int getLevel() {
      return level_;
    }

    // optional uint32 initial_skill = 14;
    public static final int INITIAL_SKILL_FIELD_NUMBER = 14;
    private int initialSkill_;
    /**
     * <code>optional uint32 initial_skill = 14;</code>
     */
    public boolean hasInitialSkill() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 initial_skill = 14;</code>
     */
    public int getInitialSkill() {
      return initialSkill_;
    }

    // optional uint32 leaver_count = 15;
    public static final int LEAVER_COUNT_FIELD_NUMBER = 15;
    private int leaverCount_;
    /**
     * <code>optional uint32 leaver_count = 15;</code>
     */
    public boolean hasLeaverCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 leaver_count = 15;</code>
     */
    public int getLeaverCount() {
      return leaverCount_;
    }

    // optional uint32 secondary_leaver_count = 58;
    public static final int SECONDARY_LEAVER_COUNT_FIELD_NUMBER = 58;
    private int secondaryLeaverCount_;
    /**
     * <code>optional uint32 secondary_leaver_count = 58;</code>
     */
    public boolean hasSecondaryLeaverCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 secondary_leaver_count = 58;</code>
     */
    public int getSecondaryLeaverCount() {
      return secondaryLeaverCount_;
    }

    // optional uint32 low_priority_until_date = 18;
    public static final int LOW_PRIORITY_UNTIL_DATE_FIELD_NUMBER = 18;
    private int lowPriorityUntilDate_;
    /**
     * <code>optional uint32 low_priority_until_date = 18;</code>
     */
    public boolean hasLowPriorityUntilDate() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 low_priority_until_date = 18;</code>
     */
    public int getLowPriorityUntilDate() {
      return lowPriorityUntilDate_;
    }

    // optional uint32 prevent_text_chat_until_date = 20;
    public static final int PREVENT_TEXT_CHAT_UNTIL_DATE_FIELD_NUMBER = 20;
    private int preventTextChatUntilDate_;
    /**
     * <code>optional uint32 prevent_text_chat_until_date = 20;</code>
     */
    public boolean hasPreventTextChatUntilDate() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 prevent_text_chat_until_date = 20;</code>
     */
    public int getPreventTextChatUntilDate() {
      return preventTextChatUntilDate_;
    }

    // optional uint32 prevent_voice_until_date = 21;
    public static final int PREVENT_VOICE_UNTIL_DATE_FIELD_NUMBER = 21;
    private int preventVoiceUntilDate_;
    /**
     * <code>optional uint32 prevent_voice_until_date = 21;</code>
     */
    public boolean hasPreventVoiceUntilDate() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 prevent_voice_until_date = 21;</code>
     */
    public int getPreventVoiceUntilDate() {
      return preventVoiceUntilDate_;
    }

    // optional uint32 last_abandoned_game_date = 22;
    public static final int LAST_ABANDONED_GAME_DATE_FIELD_NUMBER = 22;
    private int lastAbandonedGameDate_;
    /**
     * <code>optional uint32 last_abandoned_game_date = 22;</code>
     */
    public boolean hasLastAbandonedGameDate() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 last_abandoned_game_date = 22;</code>
     */
    public int getLastAbandonedGameDate() {
      return lastAbandonedGameDate_;
    }

    // optional uint32 last_secondary_abandoned_game_date = 59;
    public static final int LAST_SECONDARY_ABANDONED_GAME_DATE_FIELD_NUMBER = 59;
    private int lastSecondaryAbandonedGameDate_;
    /**
     * <code>optional uint32 last_secondary_abandoned_game_date = 59;</code>
     */
    public boolean hasLastSecondaryAbandonedGameDate() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 last_secondary_abandoned_game_date = 59;</code>
     */
    public int getLastSecondaryAbandonedGameDate() {
      return lastSecondaryAbandonedGameDate_;
    }

    // optional uint32 leaver_penalty_count = 23;
    public static final int LEAVER_PENALTY_COUNT_FIELD_NUMBER = 23;
    private int leaverPenaltyCount_;
    /**
     * <code>optional uint32 leaver_penalty_count = 23;</code>
     */
    public boolean hasLeaverPenaltyCount() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 leaver_penalty_count = 23;</code>
     */
    public int getLeaverPenaltyCount() {
      return leaverPenaltyCount_;
    }

    // optional uint32 completed_game_streak = 24;
    public static final int COMPLETED_GAME_STREAK_FIELD_NUMBER = 24;
    private int completedGameStreak_;
    /**
     * <code>optional uint32 completed_game_streak = 24;</code>
     */
    public boolean hasCompletedGameStreak() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 completed_game_streak = 24;</code>
     */
    public int getCompletedGameStreak() {
      return completedGameStreak_;
    }

    // optional uint32 teaching = 28;
    public static final int TEACHING_FIELD_NUMBER = 28;
    private int teaching_;
    /**
     * <code>optional uint32 teaching = 28;</code>
     */
    public boolean hasTeaching() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 teaching = 28;</code>
     */
    public int getTeaching() {
      return teaching_;
    }

    // optional uint32 leadership = 29;
    public static final int LEADERSHIP_FIELD_NUMBER = 29;
    private int leadership_;
    /**
     * <code>optional uint32 leadership = 29;</code>
     */
    public boolean hasLeadership() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 leadership = 29;</code>
     */
    public int getLeadership() {
      return leadership_;
    }

    // optional uint32 friendly = 30;
    public static final int FRIENDLY_FIELD_NUMBER = 30;
    private int friendly_;
    /**
     * <code>optional uint32 friendly = 30;</code>
     */
    public boolean hasFriendly() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 friendly = 30;</code>
     */
    public int getFriendly() {
      return friendly_;
    }

    // optional uint32 forgiving = 31;
    public static final int FORGIVING_FIELD_NUMBER = 31;
    private int forgiving_;
    /**
     * <code>optional uint32 forgiving = 31;</code>
     */
    public boolean hasForgiving() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 forgiving = 31;</code>
     */
    public int getForgiving() {
      return forgiving_;
    }

    // optional uint32 account_disabled_until_date = 38;
    public static final int ACCOUNT_DISABLED_UNTIL_DATE_FIELD_NUMBER = 38;
    private int accountDisabledUntilDate_;
    /**
     * <code>optional uint32 account_disabled_until_date = 38;</code>
     */
    public boolean hasAccountDisabledUntilDate() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint32 account_disabled_until_date = 38;</code>
     */
    public int getAccountDisabledUntilDate() {
      return accountDisabledUntilDate_;
    }

    // optional uint32 account_disabled_count = 39;
    public static final int ACCOUNT_DISABLED_COUNT_FIELD_NUMBER = 39;
    private int accountDisabledCount_;
    /**
     * <code>optional uint32 account_disabled_count = 39;</code>
     */
    public boolean hasAccountDisabledCount() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint32 account_disabled_count = 39;</code>
     */
    public int getAccountDisabledCount() {
      return accountDisabledCount_;
    }

    // optional uint32 showcase_hero_id = 40;
    public static final int SHOWCASE_HERO_ID_FIELD_NUMBER = 40;
    private int showcaseHeroId_;
    /**
     * <code>optional uint32 showcase_hero_id = 40;</code>
     */
    public boolean hasShowcaseHeroId() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint32 showcase_hero_id = 40;</code>
     */
    public int getShowcaseHeroId() {
      return showcaseHeroId_;
    }

    // optional uint32 match_disabled_until_date = 41;
    public static final int MATCH_DISABLED_UNTIL_DATE_FIELD_NUMBER = 41;
    private int matchDisabledUntilDate_;
    /**
     * <code>optional uint32 match_disabled_until_date = 41;</code>
     */
    public boolean hasMatchDisabledUntilDate() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional uint32 match_disabled_until_date = 41;</code>
     */
    public int getMatchDisabledUntilDate() {
      return matchDisabledUntilDate_;
    }

    // optional uint32 match_disabled_count = 42;
    public static final int MATCH_DISABLED_COUNT_FIELD_NUMBER = 42;
    private int matchDisabledCount_;
    /**
     * <code>optional uint32 match_disabled_count = 42;</code>
     */
    public boolean hasMatchDisabledCount() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional uint32 match_disabled_count = 42;</code>
     */
    public int getMatchDisabledCount() {
      return matchDisabledCount_;
    }

    // optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];
    public static final int PARTNER_ACCOUNT_TYPE_FIELD_NUMBER = 44;
    private skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType partnerAccountType_;
    /**
     * <code>optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];</code>
     */
    public boolean hasPartnerAccountType() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];</code>
     */
    public skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerAccountType() {
      return partnerAccountType_;
    }

    // optional uint32 partner_account_state = 45;
    public static final int PARTNER_ACCOUNT_STATE_FIELD_NUMBER = 45;
    private int partnerAccountState_;
    /**
     * <code>optional uint32 partner_account_state = 45;</code>
     */
    public boolean hasPartnerAccountState() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional uint32 partner_account_state = 45;</code>
     */
    public int getPartnerAccountState() {
      return partnerAccountState_;
    }

    // optional uint32 shutdownlawterminatetimestamp = 47;
    public static final int SHUTDOWNLAWTERMINATETIMESTAMP_FIELD_NUMBER = 47;
    private int shutdownlawterminatetimestamp_;
    /**
     * <code>optional uint32 shutdownlawterminatetimestamp = 47;</code>
     */
    public boolean hasShutdownlawterminatetimestamp() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional uint32 shutdownlawterminatetimestamp = 47;</code>
     */
    public int getShutdownlawterminatetimestamp() {
      return shutdownlawterminatetimestamp_;
    }

    // optional uint32 low_priority_games_remaining = 48;
    public static final int LOW_PRIORITY_GAMES_REMAINING_FIELD_NUMBER = 48;
    private int lowPriorityGamesRemaining_;
    /**
     * <code>optional uint32 low_priority_games_remaining = 48;</code>
     */
    public boolean hasLowPriorityGamesRemaining() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional uint32 low_priority_games_remaining = 48;</code>
     */
    public int getLowPriorityGamesRemaining() {
      return lowPriorityGamesRemaining_;
    }

    // optional uint32 competitive_rank = 49;
    public static final int COMPETITIVE_RANK_FIELD_NUMBER = 49;
    private int competitiveRank_;
    /**
     * <code>optional uint32 competitive_rank = 49;</code>
     */
    public boolean hasCompetitiveRank() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional uint32 competitive_rank = 49;</code>
     */
    public int getCompetitiveRank() {
      return competitiveRank_;
    }

    // optional uint32 calibration_games_remaining = 51;
    public static final int CALIBRATION_GAMES_REMAINING_FIELD_NUMBER = 51;
    private int calibrationGamesRemaining_;
    /**
     * <code>optional uint32 calibration_games_remaining = 51;</code>
     */
    public boolean hasCalibrationGamesRemaining() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional uint32 calibration_games_remaining = 51;</code>
     */
    public int getCalibrationGamesRemaining() {
      return calibrationGamesRemaining_;
    }

    // optional uint32 solo_competitive_rank = 52;
    public static final int SOLO_COMPETITIVE_RANK_FIELD_NUMBER = 52;
    private int soloCompetitiveRank_;
    /**
     * <code>optional uint32 solo_competitive_rank = 52;</code>
     */
    public boolean hasSoloCompetitiveRank() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional uint32 solo_competitive_rank = 52;</code>
     */
    public int getSoloCompetitiveRank() {
      return soloCompetitiveRank_;
    }

    // optional uint32 solo_calibration_games_remaining = 54;
    public static final int SOLO_CALIBRATION_GAMES_REMAINING_FIELD_NUMBER = 54;
    private int soloCalibrationGamesRemaining_;
    /**
     * <code>optional uint32 solo_calibration_games_remaining = 54;</code>
     */
    public boolean hasSoloCalibrationGamesRemaining() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional uint32 solo_calibration_games_remaining = 54;</code>
     */
    public int getSoloCalibrationGamesRemaining() {
      return soloCalibrationGamesRemaining_;
    }

    // optional uint32 competitive_1v1_rank = 63;
    public static final int COMPETITIVE_1V1_RANK_FIELD_NUMBER = 63;
    private int competitive1V1Rank_;
    /**
     * <code>optional uint32 competitive_1v1_rank = 63;</code>
     */
    public boolean hasCompetitive1V1Rank() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 competitive_1v1_rank = 63;</code>
     */
    public int getCompetitive1V1Rank() {
      return competitive1V1Rank_;
    }

    // optional uint32 competitive_1v1_calibration_games_remaining = 64;
    public static final int COMPETITIVE_1V1_CALIBRATION_GAMES_REMAINING_FIELD_NUMBER = 64;
    private int competitive1V1CalibrationGamesRemaining_;
    /**
     * <code>optional uint32 competitive_1v1_calibration_games_remaining = 64;</code>
     */
    public boolean hasCompetitive1V1CalibrationGamesRemaining() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 competitive_1v1_calibration_games_remaining = 64;</code>
     */
    public int getCompetitive1V1CalibrationGamesRemaining() {
      return competitive1V1CalibrationGamesRemaining_;
    }

    // optional uint32 recruitment_level = 55;
    public static final int RECRUITMENT_LEVEL_FIELD_NUMBER = 55;
    private int recruitmentLevel_;
    /**
     * <code>optional uint32 recruitment_level = 55;</code>
     */
    public boolean hasRecruitmentLevel() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 recruitment_level = 55;</code>
     */
    public int getRecruitmentLevel() {
      return recruitmentLevel_;
    }

    // optional bool has_new_notifications = 56;
    public static final int HAS_NEW_NOTIFICATIONS_FIELD_NUMBER = 56;
    private boolean hasNewNotifications_;
    /**
     * <code>optional bool has_new_notifications = 56;</code>
     */
    public boolean hasHasNewNotifications() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool has_new_notifications = 56;</code>
     */
    public boolean getHasNewNotifications() {
      return hasNewNotifications_;
    }

    // optional bool is_league_admin = 57;
    public static final int IS_LEAGUE_ADMIN_FIELD_NUMBER = 57;
    private boolean isLeagueAdmin_;
    /**
     * <code>optional bool is_league_admin = 57;</code>
     */
    public boolean hasIsLeagueAdmin() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool is_league_admin = 57;</code>
     */
    public boolean getIsLeagueAdmin() {
      return isLeagueAdmin_;
    }

    // optional uint32 casual_games_played = 60;
    public static final int CASUAL_GAMES_PLAYED_FIELD_NUMBER = 60;
    private int casualGamesPlayed_;
    /**
     * <code>optional uint32 casual_games_played = 60;</code>
     */
    public boolean hasCasualGamesPlayed() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 casual_games_played = 60;</code>
     */
    public int getCasualGamesPlayed() {
      return casualGamesPlayed_;
    }

    // optional uint32 solo_competitive_games_played = 61;
    public static final int SOLO_COMPETITIVE_GAMES_PLAYED_FIELD_NUMBER = 61;
    private int soloCompetitiveGamesPlayed_;
    /**
     * <code>optional uint32 solo_competitive_games_played = 61;</code>
     */
    public boolean hasSoloCompetitiveGamesPlayed() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 solo_competitive_games_played = 61;</code>
     */
    public int getSoloCompetitiveGamesPlayed() {
      return soloCompetitiveGamesPlayed_;
    }

    // optional uint32 party_competitive_games_played = 62;
    public static final int PARTY_COMPETITIVE_GAMES_PLAYED_FIELD_NUMBER = 62;
    private int partyCompetitiveGamesPlayed_;
    /**
     * <code>optional uint32 party_competitive_games_played = 62;</code>
     */
    public boolean hasPartyCompetitiveGamesPlayed() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 party_competitive_games_played = 62;</code>
     */
    public int getPartyCompetitiveGamesPlayed() {
      return partyCompetitiveGamesPlayed_;
    }

    // optional uint32 casual_1v1_games_played = 65;
    public static final int CASUAL_1V1_GAMES_PLAYED_FIELD_NUMBER = 65;
    private int casual1V1GamesPlayed_;
    /**
     * <code>optional uint32 casual_1v1_games_played = 65;</code>
     */
    public boolean hasCasual1V1GamesPlayed() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 casual_1v1_games_played = 65;</code>
     */
    public int getCasual1V1GamesPlayed() {
      return casual1V1GamesPlayed_;
    }

    // optional uint32 competitive_team_games_played = 66;
    public static final int COMPETITIVE_TEAM_GAMES_PLAYED_FIELD_NUMBER = 66;
    private int competitiveTeamGamesPlayed_;
    /**
     * <code>optional uint32 competitive_team_games_played = 66;</code>
     */
    public boolean hasCompetitiveTeamGamesPlayed() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 competitive_team_games_played = 66;</code>
     */
    public int getCompetitiveTeamGamesPlayed() {
      return competitiveTeamGamesPlayed_;
    }

    // optional uint32 curr_all_hero_challenge_id = 67;
    public static final int CURR_ALL_HERO_CHALLENGE_ID_FIELD_NUMBER = 67;
    private int currAllHeroChallengeId_;
    /**
     * <code>optional uint32 curr_all_hero_challenge_id = 67;</code>
     */
    public boolean hasCurrAllHeroChallengeId() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 curr_all_hero_challenge_id = 67;</code>
     */
    public int getCurrAllHeroChallengeId() {
      return currAllHeroChallengeId_;
    }

    private void initFields() {
      accountId_ = 0;
      wins_ = 0;
      losses_ = 0;
      xp_ = 0;
      level_ = 0;
      initialSkill_ = 0;
      leaverCount_ = 0;
      secondaryLeaverCount_ = 0;
      lowPriorityUntilDate_ = 0;
      preventTextChatUntilDate_ = 0;
      preventVoiceUntilDate_ = 0;
      lastAbandonedGameDate_ = 0;
      lastSecondaryAbandonedGameDate_ = 0;
      leaverPenaltyCount_ = 0;
      completedGameStreak_ = 0;
      teaching_ = 0;
      leadership_ = 0;
      friendly_ = 0;
      forgiving_ = 0;
      accountDisabledUntilDate_ = 0;
      accountDisabledCount_ = 0;
      showcaseHeroId_ = 0;
      matchDisabledUntilDate_ = 0;
      matchDisabledCount_ = 0;
      partnerAccountType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
      partnerAccountState_ = 0;
      shutdownlawterminatetimestamp_ = 0;
      lowPriorityGamesRemaining_ = 0;
      competitiveRank_ = 0;
      calibrationGamesRemaining_ = 0;
      soloCompetitiveRank_ = 0;
      soloCalibrationGamesRemaining_ = 0;
      competitive1V1Rank_ = 0;
      competitive1V1CalibrationGamesRemaining_ = 0;
      recruitmentLevel_ = 0;
      hasNewNotifications_ = false;
      isLeagueAdmin_ = false;
      casualGamesPlayed_ = 0;
      soloCompetitiveGamesPlayed_ = 0;
      partyCompetitiveGamesPlayed_ = 0;
      casual1V1GamesPlayed_ = 0;
      competitiveTeamGamesPlayed_ = 0;
      currAllHeroChallengeId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, wins_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, losses_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(12, xp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(13, level_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(14, initialSkill_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(15, leaverCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(18, lowPriorityUntilDate_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(20, preventTextChatUntilDate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(21, preventVoiceUntilDate_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(22, lastAbandonedGameDate_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(23, leaverPenaltyCount_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(24, completedGameStreak_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(28, teaching_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(29, leadership_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(30, friendly_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(31, forgiving_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(38, accountDisabledUntilDate_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(39, accountDisabledCount_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(40, showcaseHeroId_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(41, matchDisabledUntilDate_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt32(42, matchDisabledCount_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeEnum(44, partnerAccountType_.getNumber());
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeUInt32(45, partnerAccountState_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeUInt32(47, shutdownlawterminatetimestamp_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeUInt32(48, lowPriorityGamesRemaining_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeUInt32(49, competitiveRank_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeUInt32(51, calibrationGamesRemaining_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeUInt32(52, soloCompetitiveRank_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeUInt32(54, soloCalibrationGamesRemaining_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(55, recruitmentLevel_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeBool(56, hasNewNotifications_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeBool(57, isLeagueAdmin_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(58, secondaryLeaverCount_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(59, lastSecondaryAbandonedGameDate_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(60, casualGamesPlayed_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(61, soloCompetitiveGamesPlayed_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(62, partyCompetitiveGamesPlayed_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(63, competitive1V1Rank_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(64, competitive1V1CalibrationGamesRemaining_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(65, casual1V1GamesPlayed_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(66, competitiveTeamGamesPlayed_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(67, currAllHeroChallengeId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, wins_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, losses_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, xp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, level_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, initialSkill_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, leaverCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, lowPriorityUntilDate_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, preventTextChatUntilDate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, preventVoiceUntilDate_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, lastAbandonedGameDate_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, leaverPenaltyCount_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, completedGameStreak_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, teaching_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, leadership_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, friendly_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(31, forgiving_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(38, accountDisabledUntilDate_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(39, accountDisabledCount_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(40, showcaseHeroId_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(41, matchDisabledUntilDate_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(42, matchDisabledCount_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(44, partnerAccountType_.getNumber());
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(45, partnerAccountState_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(47, shutdownlawterminatetimestamp_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(48, lowPriorityGamesRemaining_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(49, competitiveRank_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(51, calibrationGamesRemaining_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(52, soloCompetitiveRank_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(54, soloCalibrationGamesRemaining_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(55, recruitmentLevel_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(56, hasNewNotifications_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(57, isLeagueAdmin_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(58, secondaryLeaverCount_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(59, lastSecondaryAbandonedGameDate_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(60, casualGamesPlayed_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(61, soloCompetitiveGamesPlayed_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(62, partyCompetitiveGamesPlayed_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(63, competitive1V1Rank_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(64, competitive1V1CalibrationGamesRemaining_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(65, casual1V1GamesPlayed_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(66, competitiveTeamGamesPlayed_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(67, currAllHeroChallengeId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTAGameAccountClient}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClientOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAGameAccountClient_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAGameAccountClient_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        wins_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        losses_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        xp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        initialSkill_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        leaverCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        secondaryLeaverCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        lowPriorityUntilDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        preventTextChatUntilDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        preventVoiceUntilDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        lastAbandonedGameDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        lastSecondaryAbandonedGameDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        leaverPenaltyCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        completedGameStreak_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        teaching_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        leadership_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        friendly_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        forgiving_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        accountDisabledUntilDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        accountDisabledCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        showcaseHeroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        matchDisabledUntilDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        matchDisabledCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        partnerAccountType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
        bitField0_ = (bitField0_ & ~0x01000000);
        partnerAccountState_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        shutdownlawterminatetimestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        lowPriorityGamesRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        competitiveRank_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        calibrationGamesRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        soloCompetitiveRank_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        soloCalibrationGamesRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        competitive1V1Rank_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        competitive1V1CalibrationGamesRemaining_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        recruitmentLevel_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        hasNewNotifications_ = false;
        bitField1_ = (bitField1_ & ~0x00000008);
        isLeagueAdmin_ = false;
        bitField1_ = (bitField1_ & ~0x00000010);
        casualGamesPlayed_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        soloCompetitiveGamesPlayed_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        partyCompetitiveGamesPlayed_ = 0;
        bitField1_ = (bitField1_ & ~0x00000080);
        casual1V1GamesPlayed_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        competitiveTeamGamesPlayed_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        currAllHeroChallengeId_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAGameAccountClient_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.wins_ = wins_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.losses_ = losses_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.xp_ = xp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.initialSkill_ = initialSkill_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.leaverCount_ = leaverCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.secondaryLeaverCount_ = secondaryLeaverCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.lowPriorityUntilDate_ = lowPriorityUntilDate_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.preventTextChatUntilDate_ = preventTextChatUntilDate_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.preventVoiceUntilDate_ = preventVoiceUntilDate_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.lastAbandonedGameDate_ = lastAbandonedGameDate_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.lastSecondaryAbandonedGameDate_ = lastSecondaryAbandonedGameDate_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.leaverPenaltyCount_ = leaverPenaltyCount_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.completedGameStreak_ = completedGameStreak_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.teaching_ = teaching_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.leadership_ = leadership_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.friendly_ = friendly_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.forgiving_ = forgiving_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.accountDisabledUntilDate_ = accountDisabledUntilDate_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.accountDisabledCount_ = accountDisabledCount_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.showcaseHeroId_ = showcaseHeroId_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.matchDisabledUntilDate_ = matchDisabledUntilDate_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.matchDisabledCount_ = matchDisabledCount_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.partnerAccountType_ = partnerAccountType_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.partnerAccountState_ = partnerAccountState_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.shutdownlawterminatetimestamp_ = shutdownlawterminatetimestamp_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.lowPriorityGamesRemaining_ = lowPriorityGamesRemaining_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.competitiveRank_ = competitiveRank_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.calibrationGamesRemaining_ = calibrationGamesRemaining_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.soloCompetitiveRank_ = soloCompetitiveRank_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.soloCalibrationGamesRemaining_ = soloCalibrationGamesRemaining_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.competitive1V1Rank_ = competitive1V1Rank_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.competitive1V1CalibrationGamesRemaining_ = competitive1V1CalibrationGamesRemaining_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.recruitmentLevel_ = recruitmentLevel_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.hasNewNotifications_ = hasNewNotifications_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000010;
        }
        result.isLeagueAdmin_ = isLeagueAdmin_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000020;
        }
        result.casualGamesPlayed_ = casualGamesPlayed_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000040;
        }
        result.soloCompetitiveGamesPlayed_ = soloCompetitiveGamesPlayed_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000080;
        }
        result.partyCompetitiveGamesPlayed_ = partyCompetitiveGamesPlayed_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000100;
        }
        result.casual1V1GamesPlayed_ = casual1V1GamesPlayed_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000200;
        }
        result.competitiveTeamGamesPlayed_ = competitiveTeamGamesPlayed_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000400;
        }
        result.currAllHeroChallengeId_ = currAllHeroChallengeId_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasWins()) {
          setWins(other.getWins());
        }
        if (other.hasLosses()) {
          setLosses(other.getLosses());
        }
        if (other.hasXp()) {
          setXp(other.getXp());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasInitialSkill()) {
          setInitialSkill(other.getInitialSkill());
        }
        if (other.hasLeaverCount()) {
          setLeaverCount(other.getLeaverCount());
        }
        if (other.hasSecondaryLeaverCount()) {
          setSecondaryLeaverCount(other.getSecondaryLeaverCount());
        }
        if (other.hasLowPriorityUntilDate()) {
          setLowPriorityUntilDate(other.getLowPriorityUntilDate());
        }
        if (other.hasPreventTextChatUntilDate()) {
          setPreventTextChatUntilDate(other.getPreventTextChatUntilDate());
        }
        if (other.hasPreventVoiceUntilDate()) {
          setPreventVoiceUntilDate(other.getPreventVoiceUntilDate());
        }
        if (other.hasLastAbandonedGameDate()) {
          setLastAbandonedGameDate(other.getLastAbandonedGameDate());
        }
        if (other.hasLastSecondaryAbandonedGameDate()) {
          setLastSecondaryAbandonedGameDate(other.getLastSecondaryAbandonedGameDate());
        }
        if (other.hasLeaverPenaltyCount()) {
          setLeaverPenaltyCount(other.getLeaverPenaltyCount());
        }
        if (other.hasCompletedGameStreak()) {
          setCompletedGameStreak(other.getCompletedGameStreak());
        }
        if (other.hasTeaching()) {
          setTeaching(other.getTeaching());
        }
        if (other.hasLeadership()) {
          setLeadership(other.getLeadership());
        }
        if (other.hasFriendly()) {
          setFriendly(other.getFriendly());
        }
        if (other.hasForgiving()) {
          setForgiving(other.getForgiving());
        }
        if (other.hasAccountDisabledUntilDate()) {
          setAccountDisabledUntilDate(other.getAccountDisabledUntilDate());
        }
        if (other.hasAccountDisabledCount()) {
          setAccountDisabledCount(other.getAccountDisabledCount());
        }
        if (other.hasShowcaseHeroId()) {
          setShowcaseHeroId(other.getShowcaseHeroId());
        }
        if (other.hasMatchDisabledUntilDate()) {
          setMatchDisabledUntilDate(other.getMatchDisabledUntilDate());
        }
        if (other.hasMatchDisabledCount()) {
          setMatchDisabledCount(other.getMatchDisabledCount());
        }
        if (other.hasPartnerAccountType()) {
          setPartnerAccountType(other.getPartnerAccountType());
        }
        if (other.hasPartnerAccountState()) {
          setPartnerAccountState(other.getPartnerAccountState());
        }
        if (other.hasShutdownlawterminatetimestamp()) {
          setShutdownlawterminatetimestamp(other.getShutdownlawterminatetimestamp());
        }
        if (other.hasLowPriorityGamesRemaining()) {
          setLowPriorityGamesRemaining(other.getLowPriorityGamesRemaining());
        }
        if (other.hasCompetitiveRank()) {
          setCompetitiveRank(other.getCompetitiveRank());
        }
        if (other.hasCalibrationGamesRemaining()) {
          setCalibrationGamesRemaining(other.getCalibrationGamesRemaining());
        }
        if (other.hasSoloCompetitiveRank()) {
          setSoloCompetitiveRank(other.getSoloCompetitiveRank());
        }
        if (other.hasSoloCalibrationGamesRemaining()) {
          setSoloCalibrationGamesRemaining(other.getSoloCalibrationGamesRemaining());
        }
        if (other.hasCompetitive1V1Rank()) {
          setCompetitive1V1Rank(other.getCompetitive1V1Rank());
        }
        if (other.hasCompetitive1V1CalibrationGamesRemaining()) {
          setCompetitive1V1CalibrationGamesRemaining(other.getCompetitive1V1CalibrationGamesRemaining());
        }
        if (other.hasRecruitmentLevel()) {
          setRecruitmentLevel(other.getRecruitmentLevel());
        }
        if (other.hasHasNewNotifications()) {
          setHasNewNotifications(other.getHasNewNotifications());
        }
        if (other.hasIsLeagueAdmin()) {
          setIsLeagueAdmin(other.getIsLeagueAdmin());
        }
        if (other.hasCasualGamesPlayed()) {
          setCasualGamesPlayed(other.getCasualGamesPlayed());
        }
        if (other.hasSoloCompetitiveGamesPlayed()) {
          setSoloCompetitiveGamesPlayed(other.getSoloCompetitiveGamesPlayed());
        }
        if (other.hasPartyCompetitiveGamesPlayed()) {
          setPartyCompetitiveGamesPlayed(other.getPartyCompetitiveGamesPlayed());
        }
        if (other.hasCasual1V1GamesPlayed()) {
          setCasual1V1GamesPlayed(other.getCasual1V1GamesPlayed());
        }
        if (other.hasCompetitiveTeamGamesPlayed()) {
          setCompetitiveTeamGamesPlayed(other.getCompetitiveTeamGamesPlayed());
        }
        if (other.hasCurrAllHeroChallengeId()) {
          setCurrAllHeroChallengeId(other.getCurrAllHeroChallengeId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAGameAccountClient) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // optional uint32 account_id = 1;
      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 wins = 3;
      private int wins_ ;
      /**
       * <code>optional uint32 wins = 3;</code>
       */
      public boolean hasWins() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 wins = 3;</code>
       */
      public int getWins() {
        return wins_;
      }
      /**
       * <code>optional uint32 wins = 3;</code>
       */
      public Builder setWins(int value) {
        bitField0_ |= 0x00000002;
        wins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 wins = 3;</code>
       */
      public Builder clearWins() {
        bitField0_ = (bitField0_ & ~0x00000002);
        wins_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 losses = 4;
      private int losses_ ;
      /**
       * <code>optional uint32 losses = 4;</code>
       */
      public boolean hasLosses() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 losses = 4;</code>
       */
      public int getLosses() {
        return losses_;
      }
      /**
       * <code>optional uint32 losses = 4;</code>
       */
      public Builder setLosses(int value) {
        bitField0_ |= 0x00000004;
        losses_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 losses = 4;</code>
       */
      public Builder clearLosses() {
        bitField0_ = (bitField0_ & ~0x00000004);
        losses_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 xp = 12;
      private int xp_ ;
      /**
       * <code>optional uint32 xp = 12;</code>
       */
      public boolean hasXp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 xp = 12;</code>
       */
      public int getXp() {
        return xp_;
      }
      /**
       * <code>optional uint32 xp = 12;</code>
       */
      public Builder setXp(int value) {
        bitField0_ |= 0x00000008;
        xp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 xp = 12;</code>
       */
      public Builder clearXp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        xp_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 level = 13;
      private int level_ ;
      /**
       * <code>optional uint32 level = 13;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 level = 13;</code>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional uint32 level = 13;</code>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000010;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 level = 13;</code>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        level_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 initial_skill = 14;
      private int initialSkill_ ;
      /**
       * <code>optional uint32 initial_skill = 14;</code>
       */
      public boolean hasInitialSkill() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 initial_skill = 14;</code>
       */
      public int getInitialSkill() {
        return initialSkill_;
      }
      /**
       * <code>optional uint32 initial_skill = 14;</code>
       */
      public Builder setInitialSkill(int value) {
        bitField0_ |= 0x00000020;
        initialSkill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 initial_skill = 14;</code>
       */
      public Builder clearInitialSkill() {
        bitField0_ = (bitField0_ & ~0x00000020);
        initialSkill_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 leaver_count = 15;
      private int leaverCount_ ;
      /**
       * <code>optional uint32 leaver_count = 15;</code>
       */
      public boolean hasLeaverCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 leaver_count = 15;</code>
       */
      public int getLeaverCount() {
        return leaverCount_;
      }
      /**
       * <code>optional uint32 leaver_count = 15;</code>
       */
      public Builder setLeaverCount(int value) {
        bitField0_ |= 0x00000040;
        leaverCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 leaver_count = 15;</code>
       */
      public Builder clearLeaverCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        leaverCount_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 secondary_leaver_count = 58;
      private int secondaryLeaverCount_ ;
      /**
       * <code>optional uint32 secondary_leaver_count = 58;</code>
       */
      public boolean hasSecondaryLeaverCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 secondary_leaver_count = 58;</code>
       */
      public int getSecondaryLeaverCount() {
        return secondaryLeaverCount_;
      }
      /**
       * <code>optional uint32 secondary_leaver_count = 58;</code>
       */
      public Builder setSecondaryLeaverCount(int value) {
        bitField0_ |= 0x00000080;
        secondaryLeaverCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 secondary_leaver_count = 58;</code>
       */
      public Builder clearSecondaryLeaverCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        secondaryLeaverCount_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 low_priority_until_date = 18;
      private int lowPriorityUntilDate_ ;
      /**
       * <code>optional uint32 low_priority_until_date = 18;</code>
       */
      public boolean hasLowPriorityUntilDate() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 low_priority_until_date = 18;</code>
       */
      public int getLowPriorityUntilDate() {
        return lowPriorityUntilDate_;
      }
      /**
       * <code>optional uint32 low_priority_until_date = 18;</code>
       */
      public Builder setLowPriorityUntilDate(int value) {
        bitField0_ |= 0x00000100;
        lowPriorityUntilDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 low_priority_until_date = 18;</code>
       */
      public Builder clearLowPriorityUntilDate() {
        bitField0_ = (bitField0_ & ~0x00000100);
        lowPriorityUntilDate_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 prevent_text_chat_until_date = 20;
      private int preventTextChatUntilDate_ ;
      /**
       * <code>optional uint32 prevent_text_chat_until_date = 20;</code>
       */
      public boolean hasPreventTextChatUntilDate() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 prevent_text_chat_until_date = 20;</code>
       */
      public int getPreventTextChatUntilDate() {
        return preventTextChatUntilDate_;
      }
      /**
       * <code>optional uint32 prevent_text_chat_until_date = 20;</code>
       */
      public Builder setPreventTextChatUntilDate(int value) {
        bitField0_ |= 0x00000200;
        preventTextChatUntilDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 prevent_text_chat_until_date = 20;</code>
       */
      public Builder clearPreventTextChatUntilDate() {
        bitField0_ = (bitField0_ & ~0x00000200);
        preventTextChatUntilDate_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 prevent_voice_until_date = 21;
      private int preventVoiceUntilDate_ ;
      /**
       * <code>optional uint32 prevent_voice_until_date = 21;</code>
       */
      public boolean hasPreventVoiceUntilDate() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 prevent_voice_until_date = 21;</code>
       */
      public int getPreventVoiceUntilDate() {
        return preventVoiceUntilDate_;
      }
      /**
       * <code>optional uint32 prevent_voice_until_date = 21;</code>
       */
      public Builder setPreventVoiceUntilDate(int value) {
        bitField0_ |= 0x00000400;
        preventVoiceUntilDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 prevent_voice_until_date = 21;</code>
       */
      public Builder clearPreventVoiceUntilDate() {
        bitField0_ = (bitField0_ & ~0x00000400);
        preventVoiceUntilDate_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 last_abandoned_game_date = 22;
      private int lastAbandonedGameDate_ ;
      /**
       * <code>optional uint32 last_abandoned_game_date = 22;</code>
       */
      public boolean hasLastAbandonedGameDate() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 last_abandoned_game_date = 22;</code>
       */
      public int getLastAbandonedGameDate() {
        return lastAbandonedGameDate_;
      }
      /**
       * <code>optional uint32 last_abandoned_game_date = 22;</code>
       */
      public Builder setLastAbandonedGameDate(int value) {
        bitField0_ |= 0x00000800;
        lastAbandonedGameDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 last_abandoned_game_date = 22;</code>
       */
      public Builder clearLastAbandonedGameDate() {
        bitField0_ = (bitField0_ & ~0x00000800);
        lastAbandonedGameDate_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 last_secondary_abandoned_game_date = 59;
      private int lastSecondaryAbandonedGameDate_ ;
      /**
       * <code>optional uint32 last_secondary_abandoned_game_date = 59;</code>
       */
      public boolean hasLastSecondaryAbandonedGameDate() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 last_secondary_abandoned_game_date = 59;</code>
       */
      public int getLastSecondaryAbandonedGameDate() {
        return lastSecondaryAbandonedGameDate_;
      }
      /**
       * <code>optional uint32 last_secondary_abandoned_game_date = 59;</code>
       */
      public Builder setLastSecondaryAbandonedGameDate(int value) {
        bitField0_ |= 0x00001000;
        lastSecondaryAbandonedGameDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 last_secondary_abandoned_game_date = 59;</code>
       */
      public Builder clearLastSecondaryAbandonedGameDate() {
        bitField0_ = (bitField0_ & ~0x00001000);
        lastSecondaryAbandonedGameDate_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 leaver_penalty_count = 23;
      private int leaverPenaltyCount_ ;
      /**
       * <code>optional uint32 leaver_penalty_count = 23;</code>
       */
      public boolean hasLeaverPenaltyCount() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 leaver_penalty_count = 23;</code>
       */
      public int getLeaverPenaltyCount() {
        return leaverPenaltyCount_;
      }
      /**
       * <code>optional uint32 leaver_penalty_count = 23;</code>
       */
      public Builder setLeaverPenaltyCount(int value) {
        bitField0_ |= 0x00002000;
        leaverPenaltyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 leaver_penalty_count = 23;</code>
       */
      public Builder clearLeaverPenaltyCount() {
        bitField0_ = (bitField0_ & ~0x00002000);
        leaverPenaltyCount_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 completed_game_streak = 24;
      private int completedGameStreak_ ;
      /**
       * <code>optional uint32 completed_game_streak = 24;</code>
       */
      public boolean hasCompletedGameStreak() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 completed_game_streak = 24;</code>
       */
      public int getCompletedGameStreak() {
        return completedGameStreak_;
      }
      /**
       * <code>optional uint32 completed_game_streak = 24;</code>
       */
      public Builder setCompletedGameStreak(int value) {
        bitField0_ |= 0x00004000;
        completedGameStreak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 completed_game_streak = 24;</code>
       */
      public Builder clearCompletedGameStreak() {
        bitField0_ = (bitField0_ & ~0x00004000);
        completedGameStreak_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 teaching = 28;
      private int teaching_ ;
      /**
       * <code>optional uint32 teaching = 28;</code>
       */
      public boolean hasTeaching() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 teaching = 28;</code>
       */
      public int getTeaching() {
        return teaching_;
      }
      /**
       * <code>optional uint32 teaching = 28;</code>
       */
      public Builder setTeaching(int value) {
        bitField0_ |= 0x00008000;
        teaching_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 teaching = 28;</code>
       */
      public Builder clearTeaching() {
        bitField0_ = (bitField0_ & ~0x00008000);
        teaching_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 leadership = 29;
      private int leadership_ ;
      /**
       * <code>optional uint32 leadership = 29;</code>
       */
      public boolean hasLeadership() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 leadership = 29;</code>
       */
      public int getLeadership() {
        return leadership_;
      }
      /**
       * <code>optional uint32 leadership = 29;</code>
       */
      public Builder setLeadership(int value) {
        bitField0_ |= 0x00010000;
        leadership_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 leadership = 29;</code>
       */
      public Builder clearLeadership() {
        bitField0_ = (bitField0_ & ~0x00010000);
        leadership_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 friendly = 30;
      private int friendly_ ;
      /**
       * <code>optional uint32 friendly = 30;</code>
       */
      public boolean hasFriendly() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 friendly = 30;</code>
       */
      public int getFriendly() {
        return friendly_;
      }
      /**
       * <code>optional uint32 friendly = 30;</code>
       */
      public Builder setFriendly(int value) {
        bitField0_ |= 0x00020000;
        friendly_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 friendly = 30;</code>
       */
      public Builder clearFriendly() {
        bitField0_ = (bitField0_ & ~0x00020000);
        friendly_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 forgiving = 31;
      private int forgiving_ ;
      /**
       * <code>optional uint32 forgiving = 31;</code>
       */
      public boolean hasForgiving() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 forgiving = 31;</code>
       */
      public int getForgiving() {
        return forgiving_;
      }
      /**
       * <code>optional uint32 forgiving = 31;</code>
       */
      public Builder setForgiving(int value) {
        bitField0_ |= 0x00040000;
        forgiving_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 forgiving = 31;</code>
       */
      public Builder clearForgiving() {
        bitField0_ = (bitField0_ & ~0x00040000);
        forgiving_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 account_disabled_until_date = 38;
      private int accountDisabledUntilDate_ ;
      /**
       * <code>optional uint32 account_disabled_until_date = 38;</code>
       */
      public boolean hasAccountDisabledUntilDate() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 account_disabled_until_date = 38;</code>
       */
      public int getAccountDisabledUntilDate() {
        return accountDisabledUntilDate_;
      }
      /**
       * <code>optional uint32 account_disabled_until_date = 38;</code>
       */
      public Builder setAccountDisabledUntilDate(int value) {
        bitField0_ |= 0x00080000;
        accountDisabledUntilDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_disabled_until_date = 38;</code>
       */
      public Builder clearAccountDisabledUntilDate() {
        bitField0_ = (bitField0_ & ~0x00080000);
        accountDisabledUntilDate_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 account_disabled_count = 39;
      private int accountDisabledCount_ ;
      /**
       * <code>optional uint32 account_disabled_count = 39;</code>
       */
      public boolean hasAccountDisabledCount() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint32 account_disabled_count = 39;</code>
       */
      public int getAccountDisabledCount() {
        return accountDisabledCount_;
      }
      /**
       * <code>optional uint32 account_disabled_count = 39;</code>
       */
      public Builder setAccountDisabledCount(int value) {
        bitField0_ |= 0x00100000;
        accountDisabledCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_disabled_count = 39;</code>
       */
      public Builder clearAccountDisabledCount() {
        bitField0_ = (bitField0_ & ~0x00100000);
        accountDisabledCount_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 showcase_hero_id = 40;
      private int showcaseHeroId_ ;
      /**
       * <code>optional uint32 showcase_hero_id = 40;</code>
       */
      public boolean hasShowcaseHeroId() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 showcase_hero_id = 40;</code>
       */
      public int getShowcaseHeroId() {
        return showcaseHeroId_;
      }
      /**
       * <code>optional uint32 showcase_hero_id = 40;</code>
       */
      public Builder setShowcaseHeroId(int value) {
        bitField0_ |= 0x00200000;
        showcaseHeroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 showcase_hero_id = 40;</code>
       */
      public Builder clearShowcaseHeroId() {
        bitField0_ = (bitField0_ & ~0x00200000);
        showcaseHeroId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 match_disabled_until_date = 41;
      private int matchDisabledUntilDate_ ;
      /**
       * <code>optional uint32 match_disabled_until_date = 41;</code>
       */
      public boolean hasMatchDisabledUntilDate() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 match_disabled_until_date = 41;</code>
       */
      public int getMatchDisabledUntilDate() {
        return matchDisabledUntilDate_;
      }
      /**
       * <code>optional uint32 match_disabled_until_date = 41;</code>
       */
      public Builder setMatchDisabledUntilDate(int value) {
        bitField0_ |= 0x00400000;
        matchDisabledUntilDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_disabled_until_date = 41;</code>
       */
      public Builder clearMatchDisabledUntilDate() {
        bitField0_ = (bitField0_ & ~0x00400000);
        matchDisabledUntilDate_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 match_disabled_count = 42;
      private int matchDisabledCount_ ;
      /**
       * <code>optional uint32 match_disabled_count = 42;</code>
       */
      public boolean hasMatchDisabledCount() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 match_disabled_count = 42;</code>
       */
      public int getMatchDisabledCount() {
        return matchDisabledCount_;
      }
      /**
       * <code>optional uint32 match_disabled_count = 42;</code>
       */
      public Builder setMatchDisabledCount(int value) {
        bitField0_ |= 0x00800000;
        matchDisabledCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_disabled_count = 42;</code>
       */
      public Builder clearMatchDisabledCount() {
        bitField0_ = (bitField0_ & ~0x00800000);
        matchDisabledCount_ = 0;
        onChanged();
        return this;
      }

      // optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];
      private skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType partnerAccountType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
      /**
       * <code>optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];</code>
       */
      public boolean hasPartnerAccountType() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];</code>
       */
      public skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerAccountType() {
        return partnerAccountType_;
      }
      /**
       * <code>optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];</code>
       */
      public Builder setPartnerAccountType(skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x01000000;
        partnerAccountType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .PartnerAccountType partner_account_type = 44 [default = PARTNER_NONE];</code>
       */
      public Builder clearPartnerAccountType() {
        bitField0_ = (bitField0_ & ~0x01000000);
        partnerAccountType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
        onChanged();
        return this;
      }

      // optional uint32 partner_account_state = 45;
      private int partnerAccountState_ ;
      /**
       * <code>optional uint32 partner_account_state = 45;</code>
       */
      public boolean hasPartnerAccountState() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 partner_account_state = 45;</code>
       */
      public int getPartnerAccountState() {
        return partnerAccountState_;
      }
      /**
       * <code>optional uint32 partner_account_state = 45;</code>
       */
      public Builder setPartnerAccountState(int value) {
        bitField0_ |= 0x02000000;
        partnerAccountState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 partner_account_state = 45;</code>
       */
      public Builder clearPartnerAccountState() {
        bitField0_ = (bitField0_ & ~0x02000000);
        partnerAccountState_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 shutdownlawterminatetimestamp = 47;
      private int shutdownlawterminatetimestamp_ ;
      /**
       * <code>optional uint32 shutdownlawterminatetimestamp = 47;</code>
       */
      public boolean hasShutdownlawterminatetimestamp() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional uint32 shutdownlawterminatetimestamp = 47;</code>
       */
      public int getShutdownlawterminatetimestamp() {
        return shutdownlawterminatetimestamp_;
      }
      /**
       * <code>optional uint32 shutdownlawterminatetimestamp = 47;</code>
       */
      public Builder setShutdownlawterminatetimestamp(int value) {
        bitField0_ |= 0x04000000;
        shutdownlawterminatetimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 shutdownlawterminatetimestamp = 47;</code>
       */
      public Builder clearShutdownlawterminatetimestamp() {
        bitField0_ = (bitField0_ & ~0x04000000);
        shutdownlawterminatetimestamp_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 low_priority_games_remaining = 48;
      private int lowPriorityGamesRemaining_ ;
      /**
       * <code>optional uint32 low_priority_games_remaining = 48;</code>
       */
      public boolean hasLowPriorityGamesRemaining() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional uint32 low_priority_games_remaining = 48;</code>
       */
      public int getLowPriorityGamesRemaining() {
        return lowPriorityGamesRemaining_;
      }
      /**
       * <code>optional uint32 low_priority_games_remaining = 48;</code>
       */
      public Builder setLowPriorityGamesRemaining(int value) {
        bitField0_ |= 0x08000000;
        lowPriorityGamesRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 low_priority_games_remaining = 48;</code>
       */
      public Builder clearLowPriorityGamesRemaining() {
        bitField0_ = (bitField0_ & ~0x08000000);
        lowPriorityGamesRemaining_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 competitive_rank = 49;
      private int competitiveRank_ ;
      /**
       * <code>optional uint32 competitive_rank = 49;</code>
       */
      public boolean hasCompetitiveRank() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional uint32 competitive_rank = 49;</code>
       */
      public int getCompetitiveRank() {
        return competitiveRank_;
      }
      /**
       * <code>optional uint32 competitive_rank = 49;</code>
       */
      public Builder setCompetitiveRank(int value) {
        bitField0_ |= 0x10000000;
        competitiveRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 competitive_rank = 49;</code>
       */
      public Builder clearCompetitiveRank() {
        bitField0_ = (bitField0_ & ~0x10000000);
        competitiveRank_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 calibration_games_remaining = 51;
      private int calibrationGamesRemaining_ ;
      /**
       * <code>optional uint32 calibration_games_remaining = 51;</code>
       */
      public boolean hasCalibrationGamesRemaining() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional uint32 calibration_games_remaining = 51;</code>
       */
      public int getCalibrationGamesRemaining() {
        return calibrationGamesRemaining_;
      }
      /**
       * <code>optional uint32 calibration_games_remaining = 51;</code>
       */
      public Builder setCalibrationGamesRemaining(int value) {
        bitField0_ |= 0x20000000;
        calibrationGamesRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 calibration_games_remaining = 51;</code>
       */
      public Builder clearCalibrationGamesRemaining() {
        bitField0_ = (bitField0_ & ~0x20000000);
        calibrationGamesRemaining_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 solo_competitive_rank = 52;
      private int soloCompetitiveRank_ ;
      /**
       * <code>optional uint32 solo_competitive_rank = 52;</code>
       */
      public boolean hasSoloCompetitiveRank() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional uint32 solo_competitive_rank = 52;</code>
       */
      public int getSoloCompetitiveRank() {
        return soloCompetitiveRank_;
      }
      /**
       * <code>optional uint32 solo_competitive_rank = 52;</code>
       */
      public Builder setSoloCompetitiveRank(int value) {
        bitField0_ |= 0x40000000;
        soloCompetitiveRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 solo_competitive_rank = 52;</code>
       */
      public Builder clearSoloCompetitiveRank() {
        bitField0_ = (bitField0_ & ~0x40000000);
        soloCompetitiveRank_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 solo_calibration_games_remaining = 54;
      private int soloCalibrationGamesRemaining_ ;
      /**
       * <code>optional uint32 solo_calibration_games_remaining = 54;</code>
       */
      public boolean hasSoloCalibrationGamesRemaining() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional uint32 solo_calibration_games_remaining = 54;</code>
       */
      public int getSoloCalibrationGamesRemaining() {
        return soloCalibrationGamesRemaining_;
      }
      /**
       * <code>optional uint32 solo_calibration_games_remaining = 54;</code>
       */
      public Builder setSoloCalibrationGamesRemaining(int value) {
        bitField0_ |= 0x80000000;
        soloCalibrationGamesRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 solo_calibration_games_remaining = 54;</code>
       */
      public Builder clearSoloCalibrationGamesRemaining() {
        bitField0_ = (bitField0_ & ~0x80000000);
        soloCalibrationGamesRemaining_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 competitive_1v1_rank = 63;
      private int competitive1V1Rank_ ;
      /**
       * <code>optional uint32 competitive_1v1_rank = 63;</code>
       */
      public boolean hasCompetitive1V1Rank() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 competitive_1v1_rank = 63;</code>
       */
      public int getCompetitive1V1Rank() {
        return competitive1V1Rank_;
      }
      /**
       * <code>optional uint32 competitive_1v1_rank = 63;</code>
       */
      public Builder setCompetitive1V1Rank(int value) {
        bitField1_ |= 0x00000001;
        competitive1V1Rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 competitive_1v1_rank = 63;</code>
       */
      public Builder clearCompetitive1V1Rank() {
        bitField1_ = (bitField1_ & ~0x00000001);
        competitive1V1Rank_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 competitive_1v1_calibration_games_remaining = 64;
      private int competitive1V1CalibrationGamesRemaining_ ;
      /**
       * <code>optional uint32 competitive_1v1_calibration_games_remaining = 64;</code>
       */
      public boolean hasCompetitive1V1CalibrationGamesRemaining() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 competitive_1v1_calibration_games_remaining = 64;</code>
       */
      public int getCompetitive1V1CalibrationGamesRemaining() {
        return competitive1V1CalibrationGamesRemaining_;
      }
      /**
       * <code>optional uint32 competitive_1v1_calibration_games_remaining = 64;</code>
       */
      public Builder setCompetitive1V1CalibrationGamesRemaining(int value) {
        bitField1_ |= 0x00000002;
        competitive1V1CalibrationGamesRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 competitive_1v1_calibration_games_remaining = 64;</code>
       */
      public Builder clearCompetitive1V1CalibrationGamesRemaining() {
        bitField1_ = (bitField1_ & ~0x00000002);
        competitive1V1CalibrationGamesRemaining_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 recruitment_level = 55;
      private int recruitmentLevel_ ;
      /**
       * <code>optional uint32 recruitment_level = 55;</code>
       */
      public boolean hasRecruitmentLevel() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 recruitment_level = 55;</code>
       */
      public int getRecruitmentLevel() {
        return recruitmentLevel_;
      }
      /**
       * <code>optional uint32 recruitment_level = 55;</code>
       */
      public Builder setRecruitmentLevel(int value) {
        bitField1_ |= 0x00000004;
        recruitmentLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 recruitment_level = 55;</code>
       */
      public Builder clearRecruitmentLevel() {
        bitField1_ = (bitField1_ & ~0x00000004);
        recruitmentLevel_ = 0;
        onChanged();
        return this;
      }

      // optional bool has_new_notifications = 56;
      private boolean hasNewNotifications_ ;
      /**
       * <code>optional bool has_new_notifications = 56;</code>
       */
      public boolean hasHasNewNotifications() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool has_new_notifications = 56;</code>
       */
      public boolean getHasNewNotifications() {
        return hasNewNotifications_;
      }
      /**
       * <code>optional bool has_new_notifications = 56;</code>
       */
      public Builder setHasNewNotifications(boolean value) {
        bitField1_ |= 0x00000008;
        hasNewNotifications_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool has_new_notifications = 56;</code>
       */
      public Builder clearHasNewNotifications() {
        bitField1_ = (bitField1_ & ~0x00000008);
        hasNewNotifications_ = false;
        onChanged();
        return this;
      }

      // optional bool is_league_admin = 57;
      private boolean isLeagueAdmin_ ;
      /**
       * <code>optional bool is_league_admin = 57;</code>
       */
      public boolean hasIsLeagueAdmin() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool is_league_admin = 57;</code>
       */
      public boolean getIsLeagueAdmin() {
        return isLeagueAdmin_;
      }
      /**
       * <code>optional bool is_league_admin = 57;</code>
       */
      public Builder setIsLeagueAdmin(boolean value) {
        bitField1_ |= 0x00000010;
        isLeagueAdmin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_league_admin = 57;</code>
       */
      public Builder clearIsLeagueAdmin() {
        bitField1_ = (bitField1_ & ~0x00000010);
        isLeagueAdmin_ = false;
        onChanged();
        return this;
      }

      // optional uint32 casual_games_played = 60;
      private int casualGamesPlayed_ ;
      /**
       * <code>optional uint32 casual_games_played = 60;</code>
       */
      public boolean hasCasualGamesPlayed() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 casual_games_played = 60;</code>
       */
      public int getCasualGamesPlayed() {
        return casualGamesPlayed_;
      }
      /**
       * <code>optional uint32 casual_games_played = 60;</code>
       */
      public Builder setCasualGamesPlayed(int value) {
        bitField1_ |= 0x00000020;
        casualGamesPlayed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 casual_games_played = 60;</code>
       */
      public Builder clearCasualGamesPlayed() {
        bitField1_ = (bitField1_ & ~0x00000020);
        casualGamesPlayed_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 solo_competitive_games_played = 61;
      private int soloCompetitiveGamesPlayed_ ;
      /**
       * <code>optional uint32 solo_competitive_games_played = 61;</code>
       */
      public boolean hasSoloCompetitiveGamesPlayed() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 solo_competitive_games_played = 61;</code>
       */
      public int getSoloCompetitiveGamesPlayed() {
        return soloCompetitiveGamesPlayed_;
      }
      /**
       * <code>optional uint32 solo_competitive_games_played = 61;</code>
       */
      public Builder setSoloCompetitiveGamesPlayed(int value) {
        bitField1_ |= 0x00000040;
        soloCompetitiveGamesPlayed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 solo_competitive_games_played = 61;</code>
       */
      public Builder clearSoloCompetitiveGamesPlayed() {
        bitField1_ = (bitField1_ & ~0x00000040);
        soloCompetitiveGamesPlayed_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 party_competitive_games_played = 62;
      private int partyCompetitiveGamesPlayed_ ;
      /**
       * <code>optional uint32 party_competitive_games_played = 62;</code>
       */
      public boolean hasPartyCompetitiveGamesPlayed() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 party_competitive_games_played = 62;</code>
       */
      public int getPartyCompetitiveGamesPlayed() {
        return partyCompetitiveGamesPlayed_;
      }
      /**
       * <code>optional uint32 party_competitive_games_played = 62;</code>
       */
      public Builder setPartyCompetitiveGamesPlayed(int value) {
        bitField1_ |= 0x00000080;
        partyCompetitiveGamesPlayed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 party_competitive_games_played = 62;</code>
       */
      public Builder clearPartyCompetitiveGamesPlayed() {
        bitField1_ = (bitField1_ & ~0x00000080);
        partyCompetitiveGamesPlayed_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 casual_1v1_games_played = 65;
      private int casual1V1GamesPlayed_ ;
      /**
       * <code>optional uint32 casual_1v1_games_played = 65;</code>
       */
      public boolean hasCasual1V1GamesPlayed() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 casual_1v1_games_played = 65;</code>
       */
      public int getCasual1V1GamesPlayed() {
        return casual1V1GamesPlayed_;
      }
      /**
       * <code>optional uint32 casual_1v1_games_played = 65;</code>
       */
      public Builder setCasual1V1GamesPlayed(int value) {
        bitField1_ |= 0x00000100;
        casual1V1GamesPlayed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 casual_1v1_games_played = 65;</code>
       */
      public Builder clearCasual1V1GamesPlayed() {
        bitField1_ = (bitField1_ & ~0x00000100);
        casual1V1GamesPlayed_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 competitive_team_games_played = 66;
      private int competitiveTeamGamesPlayed_ ;
      /**
       * <code>optional uint32 competitive_team_games_played = 66;</code>
       */
      public boolean hasCompetitiveTeamGamesPlayed() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 competitive_team_games_played = 66;</code>
       */
      public int getCompetitiveTeamGamesPlayed() {
        return competitiveTeamGamesPlayed_;
      }
      /**
       * <code>optional uint32 competitive_team_games_played = 66;</code>
       */
      public Builder setCompetitiveTeamGamesPlayed(int value) {
        bitField1_ |= 0x00000200;
        competitiveTeamGamesPlayed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 competitive_team_games_played = 66;</code>
       */
      public Builder clearCompetitiveTeamGamesPlayed() {
        bitField1_ = (bitField1_ & ~0x00000200);
        competitiveTeamGamesPlayed_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 curr_all_hero_challenge_id = 67;
      private int currAllHeroChallengeId_ ;
      /**
       * <code>optional uint32 curr_all_hero_challenge_id = 67;</code>
       */
      public boolean hasCurrAllHeroChallengeId() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 curr_all_hero_challenge_id = 67;</code>
       */
      public int getCurrAllHeroChallengeId() {
        return currAllHeroChallengeId_;
      }
      /**
       * <code>optional uint32 curr_all_hero_challenge_id = 67;</code>
       */
      public Builder setCurrAllHeroChallengeId(int value) {
        bitField1_ |= 0x00000400;
        currAllHeroChallengeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 curr_all_hero_challenge_id = 67;</code>
       */
      public Builder clearCurrAllHeroChallengeId() {
        bitField1_ = (bitField1_ & ~0x00000400);
        currAllHeroChallengeId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTAGameAccountClient)
    }

    static {
      defaultInstance = new CSODOTAGameAccountClient(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSODOTAGameAccountClient)
  }

  public interface CSODOTAPartyMemberOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];
    /**
     * <code>optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];</code>
     */
    boolean hasPartnerType();
    /**
     * <code>optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];</code>
     */
    skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerType();

    // optional bool is_coach = 2;
    /**
     * <code>optional bool is_coach = 2;</code>
     */
    boolean hasIsCoach();
    /**
     * <code>optional bool is_coach = 2;</code>
     */
    boolean getIsCoach();
  }
  /**
   * Protobuf type {@code CSODOTAPartyMember}
   */
  public static final class CSODOTAPartyMember extends
      com.google.protobuf.GeneratedMessage
      implements CSODOTAPartyMemberOrBuilder {
    // Use CSODOTAPartyMember.newBuilder() to construct.
    private CSODOTAPartyMember(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSODOTAPartyMember(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSODOTAPartyMember defaultInstance;
    public static CSODOTAPartyMember getDefaultInstance() {
      return defaultInstance;
    }

    public CSODOTAPartyMember getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSODOTAPartyMember(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType value = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                partnerType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isCoach_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyMember_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyMember_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder.class);
    }

    public static com.google.protobuf.Parser<CSODOTAPartyMember> PARSER =
        new com.google.protobuf.AbstractParser<CSODOTAPartyMember>() {
      public CSODOTAPartyMember parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSODOTAPartyMember(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTAPartyMember> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];
    public static final int PARTNER_TYPE_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType partnerType_;
    /**
     * <code>optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];</code>
     */
    public boolean hasPartnerType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];</code>
     */
    public skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerType() {
      return partnerType_;
    }

    // optional bool is_coach = 2;
    public static final int IS_COACH_FIELD_NUMBER = 2;
    private boolean isCoach_;
    /**
     * <code>optional bool is_coach = 2;</code>
     */
    public boolean hasIsCoach() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool is_coach = 2;</code>
     */
    public boolean getIsCoach() {
      return isCoach_;
    }

    private void initFields() {
      partnerType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
      isCoach_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, partnerType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isCoach_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, partnerType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isCoach_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTAPartyMember}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMemberOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyMember_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyMember_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        partnerType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        isCoach_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyMember_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.partnerType_ = partnerType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isCoach_ = isCoach_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.getDefaultInstance()) return this;
        if (other.hasPartnerType()) {
          setPartnerType(other.getPartnerType());
        }
        if (other.hasIsCoach()) {
          setIsCoach(other.getIsCoach());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];
      private skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType partnerType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
      /**
       * <code>optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];</code>
       */
      public boolean hasPartnerType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];</code>
       */
      public skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerType() {
        return partnerType_;
      }
      /**
       * <code>optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];</code>
       */
      public Builder setPartnerType(skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        partnerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .PartnerAccountType partner_type = 1 [default = PARTNER_NONE];</code>
       */
      public Builder clearPartnerType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        partnerType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
        onChanged();
        return this;
      }

      // optional bool is_coach = 2;
      private boolean isCoach_ ;
      /**
       * <code>optional bool is_coach = 2;</code>
       */
      public boolean hasIsCoach() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool is_coach = 2;</code>
       */
      public boolean getIsCoach() {
        return isCoach_;
      }
      /**
       * <code>optional bool is_coach = 2;</code>
       */
      public Builder setIsCoach(boolean value) {
        bitField0_ |= 0x00000002;
        isCoach_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_coach = 2;</code>
       */
      public Builder clearIsCoach() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isCoach_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTAPartyMember)
    }

    static {
      defaultInstance = new CSODOTAPartyMember(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSODOTAPartyMember)
  }

  public interface CSODOTAPartyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 party_id = 1;
    /**
     * <code>optional uint64 party_id = 1;</code>
     */
    boolean hasPartyId();
    /**
     * <code>optional uint64 party_id = 1;</code>
     */
    long getPartyId();

    // optional fixed64 leader_id = 2;
    /**
     * <code>optional fixed64 leader_id = 2;</code>
     */
    boolean hasLeaderId();
    /**
     * <code>optional fixed64 leader_id = 2;</code>
     */
    long getLeaderId();

    // repeated fixed64 member_ids = 3;
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     */
    java.util.List<java.lang.Long> getMemberIdsList();
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     */
    int getMemberIdsCount();
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     */
    long getMemberIds(int index);

    // optional uint32 game_modes = 4;
    /**
     * <code>optional uint32 game_modes = 4;</code>
     */
    boolean hasGameModes();
    /**
     * <code>optional uint32 game_modes = 4;</code>
     */
    int getGameModes();

    // optional .CSODOTAParty.State state = 6 [default = UI];
    /**
     * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
     */
    boolean hasState();
    /**
     * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State getState();

    // optional uint32 effective_started_matchmaking_time = 7;
    /**
     * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
     */
    boolean hasEffectiveStartedMatchmakingTime();
    /**
     * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
     */
    int getEffectiveStartedMatchmakingTime();

    // optional uint32 raw_started_matchmaking_time = 32;
    /**
     * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
     */
    boolean hasRawStartedMatchmakingTime();
    /**
     * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
     */
    int getRawStartedMatchmakingTime();

    // optional uint32 attempt_start_time = 33;
    /**
     * <code>optional uint32 attempt_start_time = 33;</code>
     */
    boolean hasAttemptStartTime();
    /**
     * <code>optional uint32 attempt_start_time = 33;</code>
     */
    int getAttemptStartTime();

    // optional uint32 attempt_num = 34;
    /**
     * <code>optional uint32 attempt_num = 34;</code>
     */
    boolean hasAttemptNum();
    /**
     * <code>optional uint32 attempt_num = 34;</code>
     */
    int getAttemptNum();

    // optional uint32 matchgroups = 11;
    /**
     * <code>optional uint32 matchgroups = 11;</code>
     */
    boolean hasMatchgroups();
    /**
     * <code>optional uint32 matchgroups = 11;</code>
     */
    int getMatchgroups();

    // optional uint32 low_priority_account_id = 19;
    /**
     * <code>optional uint32 low_priority_account_id = 19;</code>
     */
    boolean hasLowPriorityAccountId();
    /**
     * <code>optional uint32 low_priority_account_id = 19;</code>
     */
    int getLowPriorityAccountId();

    // optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];
    /**
     * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
     */
    boolean hasMatchType();
    /**
     * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType getMatchType();

    // optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];
    /**
     * <code>optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];</code>
     */
    boolean hasBotDifficulty();
    /**
     * <code>optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty getBotDifficulty();

    // optional uint32 team_id = 23;
    /**
     * <code>optional uint32 team_id = 23;</code>
     */
    boolean hasTeamId();
    /**
     * <code>optional uint32 team_id = 23;</code>
     */
    int getTeamId();

    // optional uint32 match_disabled_until_date = 24;
    /**
     * <code>optional uint32 match_disabled_until_date = 24;</code>
     */
    boolean hasMatchDisabledUntilDate();
    /**
     * <code>optional uint32 match_disabled_until_date = 24;</code>
     */
    int getMatchDisabledUntilDate();

    // optional uint32 match_disabled_account_id = 25;
    /**
     * <code>optional uint32 match_disabled_account_id = 25;</code>
     */
    boolean hasMatchDisabledAccountId();
    /**
     * <code>optional uint32 match_disabled_account_id = 25;</code>
     */
    int getMatchDisabledAccountId();

    // optional uint32 matchmaking_max_range_minutes = 26;
    /**
     * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
     */
    boolean hasMatchmakingMaxRangeMinutes();
    /**
     * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
     */
    int getMatchmakingMaxRangeMinutes();

    // optional uint32 matchlanguages = 27;
    /**
     * <code>optional uint32 matchlanguages = 27;</code>
     */
    boolean hasMatchlanguages();
    /**
     * <code>optional uint32 matchlanguages = 27;</code>
     */
    int getMatchlanguages();

    // optional uint32 map_preference = 38;
    /**
     * <code>optional uint32 map_preference = 38;</code>
     */
    boolean hasMapPreference();
    /**
     * <code>optional uint32 map_preference = 38;</code>
     */
    int getMapPreference();

    // repeated .CSODOTAPartyMember members = 29;
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember> 
        getMembersList();
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember getMembers(int index);
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    int getMembersCount();
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMemberOrBuilder> 
        getMembersOrBuilderList();
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMemberOrBuilder getMembersOrBuilder(
        int index);

    // optional uint32 open_guild_id = 30;
    /**
     * <code>optional uint32 open_guild_id = 30;</code>
     */
    boolean hasOpenGuildId();
    /**
     * <code>optional uint32 open_guild_id = 30;</code>
     */
    int getOpenGuildId();

    // repeated uint32 common_guilds = 31;
    /**
     * <code>repeated uint32 common_guilds = 31;</code>
     */
    java.util.List<java.lang.Integer> getCommonGuildsList();
    /**
     * <code>repeated uint32 common_guilds = 31;</code>
     */
    int getCommonGuildsCount();
    /**
     * <code>repeated uint32 common_guilds = 31;</code>
     */
    int getCommonGuilds(int index);

    // optional uint32 low_priority_games_remaining = 35;
    /**
     * <code>optional uint32 low_priority_games_remaining = 35;</code>
     */
    boolean hasLowPriorityGamesRemaining();
    /**
     * <code>optional uint32 low_priority_games_remaining = 35;</code>
     */
    int getLowPriorityGamesRemaining();

    // optional uint32 min_level = 36;
    /**
     * <code>optional uint32 min_level = 36;</code>
     */
    boolean hasMinLevel();
    /**
     * <code>optional uint32 min_level = 36;</code>
     */
    int getMinLevel();

    // optional uint32 max_level = 37;
    /**
     * <code>optional uint32 max_level = 37;</code>
     */
    boolean hasMaxLevel();
    /**
     * <code>optional uint32 max_level = 37;</code>
     */
    int getMaxLevel();

    // repeated .EIngameEvent active_ingame_events = 39;
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> getActiveIngameEventsList();
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
     */
    int getActiveIngameEventsCount();
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent getActiveIngameEvents(int index);

    // optional bool open_for_join_requests = 40;
    /**
     * <code>optional bool open_for_join_requests = 40;</code>
     */
    boolean hasOpenForJoinRequests();
    /**
     * <code>optional bool open_for_join_requests = 40;</code>
     */
    boolean getOpenForJoinRequests();

    // repeated .CSODOTAPartyInvite sent_invites = 41;
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> 
        getSentInvitesList();
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite getSentInvites(int index);
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    int getSentInvitesCount();
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder> 
        getSentInvitesOrBuilderList();
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder getSentInvitesOrBuilder(
        int index);

    // repeated .CSODOTAPartyInvite recv_invites = 42;
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> 
        getRecvInvitesList();
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite getRecvInvites(int index);
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    int getRecvInvitesCount();
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder> 
        getRecvInvitesOrBuilderList();
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder getRecvInvitesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CSODOTAParty}
   */
  public static final class CSODOTAParty extends
      com.google.protobuf.GeneratedMessage
      implements CSODOTAPartyOrBuilder {
    // Use CSODOTAParty.newBuilder() to construct.
    private CSODOTAParty(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSODOTAParty(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSODOTAParty defaultInstance;
    public static CSODOTAParty getDefaultInstance() {
      return defaultInstance;
    }

    public CSODOTAParty getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSODOTAParty(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              partyId_ = input.readUInt64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              leaderId_ = input.readFixed64();
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                memberIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              memberIds_.add(input.readFixed64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                memberIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                memberIds_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              gameModes_ = input.readUInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                state_ = value;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              effectiveStartedMatchmakingTime_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              matchgroups_ = input.readUInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00000200;
              lowPriorityAccountId_ = input.readUInt32();
              break;
            }
            case 168: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(21, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                matchType_ = value;
              }
              break;
            }
            case 176: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(22, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                botDifficulty_ = value;
              }
              break;
            }
            case 184: {
              bitField0_ |= 0x00001000;
              teamId_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00002000;
              matchDisabledUntilDate_ = input.readUInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00004000;
              matchDisabledAccountId_ = input.readUInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x00008000;
              matchmakingMaxRangeMinutes_ = input.readUInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x00010000;
              matchlanguages_ = input.readUInt32();
              break;
            }
            case 234: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                members_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember>();
                mutable_bitField0_ |= 0x00080000;
              }
              members_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.PARSER, extensionRegistry));
              break;
            }
            case 240: {
              bitField0_ |= 0x00040000;
              openGuildId_ = input.readUInt32();
              break;
            }
            case 248: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                commonGuilds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00200000;
              }
              commonGuilds_.add(input.readUInt32());
              break;
            }
            case 250: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
                commonGuilds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00200000;
              }
              while (input.getBytesUntilLimit() > 0) {
                commonGuilds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 256: {
              bitField0_ |= 0x00000020;
              rawStartedMatchmakingTime_ = input.readUInt32();
              break;
            }
            case 264: {
              bitField0_ |= 0x00000040;
              attemptStartTime_ = input.readUInt32();
              break;
            }
            case 272: {
              bitField0_ |= 0x00000080;
              attemptNum_ = input.readUInt32();
              break;
            }
            case 280: {
              bitField0_ |= 0x00080000;
              lowPriorityGamesRemaining_ = input.readUInt32();
              break;
            }
            case 288: {
              bitField0_ |= 0x00100000;
              minLevel_ = input.readUInt32();
              break;
            }
            case 296: {
              bitField0_ |= 0x00200000;
              maxLevel_ = input.readUInt32();
              break;
            }
            case 304: {
              bitField0_ |= 0x00020000;
              mapPreference_ = input.readUInt32();
              break;
            }
            case 312: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(39, rawValue);
              } else {
                if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                  activeIngameEvents_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent>();
                  mutable_bitField0_ |= 0x02000000;
                }
                activeIngameEvents_.add(value);
              }
              break;
            }
            case 314: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(39, rawValue);
                } else {
                  if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                    activeIngameEvents_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent>();
                    mutable_bitField0_ |= 0x02000000;
                  }
                  activeIngameEvents_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 320: {
              bitField0_ |= 0x00400000;
              openForJoinRequests_ = input.readBool();
              break;
            }
            case 330: {
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                sentInvites_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite>();
                mutable_bitField0_ |= 0x08000000;
              }
              sentInvites_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PARSER, extensionRegistry));
              break;
            }
            case 338: {
              if (!((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
                recvInvites_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite>();
                mutable_bitField0_ |= 0x10000000;
              }
              recvInvites_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          memberIds_ = java.util.Collections.unmodifiableList(memberIds_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          members_ = java.util.Collections.unmodifiableList(members_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          commonGuilds_ = java.util.Collections.unmodifiableList(commonGuilds_);
        }
        if (((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
          activeIngameEvents_ = java.util.Collections.unmodifiableList(activeIngameEvents_);
        }
        if (((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
          sentInvites_ = java.util.Collections.unmodifiableList(sentInvites_);
        }
        if (((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
          recvInvites_ = java.util.Collections.unmodifiableList(recvInvites_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAParty_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAParty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.Builder.class);
    }

    public static com.google.protobuf.Parser<CSODOTAParty> PARSER =
        new com.google.protobuf.AbstractParser<CSODOTAParty>() {
      public CSODOTAParty parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSODOTAParty(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTAParty> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CSODOTAParty.State}
     */
    public enum State
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UI = 0;</code>
       */
      UI(0, 0),
      /**
       * <code>FINDING_MATCH = 1;</code>
       */
      FINDING_MATCH(1, 1),
      /**
       * <code>IN_MATCH = 2;</code>
       */
      IN_MATCH(2, 2),
      ;

      /**
       * <code>UI = 0;</code>
       */
      public static final int UI_VALUE = 0;
      /**
       * <code>FINDING_MATCH = 1;</code>
       */
      public static final int FINDING_MATCH_VALUE = 1;
      /**
       * <code>IN_MATCH = 2;</code>
       */
      public static final int IN_MATCH_VALUE = 2;


      public final int getNumber() { return value; }

      public static State valueOf(int value) {
        switch (value) {
          case 0: return UI;
          case 1: return FINDING_MATCH;
          case 2: return IN_MATCH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<State>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<State>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<State>() {
              public State findValueByNumber(int number) {
                return State.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.getDescriptor().getEnumTypes().get(0);
      }

      private static final State[] VALUES = values();

      public static State valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private State(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CSODOTAParty.State)
    }

    private int bitField0_;
    // optional uint64 party_id = 1;
    public static final int PARTY_ID_FIELD_NUMBER = 1;
    private long partyId_;
    /**
     * <code>optional uint64 party_id = 1;</code>
     */
    public boolean hasPartyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 party_id = 1;</code>
     */
    public long getPartyId() {
      return partyId_;
    }

    // optional fixed64 leader_id = 2;
    public static final int LEADER_ID_FIELD_NUMBER = 2;
    private long leaderId_;
    /**
     * <code>optional fixed64 leader_id = 2;</code>
     */
    public boolean hasLeaderId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 leader_id = 2;</code>
     */
    public long getLeaderId() {
      return leaderId_;
    }

    // repeated fixed64 member_ids = 3;
    public static final int MEMBER_IDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> memberIds_;
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     */
    public java.util.List<java.lang.Long>
        getMemberIdsList() {
      return memberIds_;
    }
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     */
    public int getMemberIdsCount() {
      return memberIds_.size();
    }
    /**
     * <code>repeated fixed64 member_ids = 3;</code>
     */
    public long getMemberIds(int index) {
      return memberIds_.get(index);
    }

    // optional uint32 game_modes = 4;
    public static final int GAME_MODES_FIELD_NUMBER = 4;
    private int gameModes_;
    /**
     * <code>optional uint32 game_modes = 4;</code>
     */
    public boolean hasGameModes() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 game_modes = 4;</code>
     */
    public int getGameModes() {
      return gameModes_;
    }

    // optional .CSODOTAParty.State state = 6 [default = UI];
    public static final int STATE_FIELD_NUMBER = 6;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State state_;
    /**
     * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State getState() {
      return state_;
    }

    // optional uint32 effective_started_matchmaking_time = 7;
    public static final int EFFECTIVE_STARTED_MATCHMAKING_TIME_FIELD_NUMBER = 7;
    private int effectiveStartedMatchmakingTime_;
    /**
     * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
     */
    public boolean hasEffectiveStartedMatchmakingTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
     */
    public int getEffectiveStartedMatchmakingTime() {
      return effectiveStartedMatchmakingTime_;
    }

    // optional uint32 raw_started_matchmaking_time = 32;
    public static final int RAW_STARTED_MATCHMAKING_TIME_FIELD_NUMBER = 32;
    private int rawStartedMatchmakingTime_;
    /**
     * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
     */
    public boolean hasRawStartedMatchmakingTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
     */
    public int getRawStartedMatchmakingTime() {
      return rawStartedMatchmakingTime_;
    }

    // optional uint32 attempt_start_time = 33;
    public static final int ATTEMPT_START_TIME_FIELD_NUMBER = 33;
    private int attemptStartTime_;
    /**
     * <code>optional uint32 attempt_start_time = 33;</code>
     */
    public boolean hasAttemptStartTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 attempt_start_time = 33;</code>
     */
    public int getAttemptStartTime() {
      return attemptStartTime_;
    }

    // optional uint32 attempt_num = 34;
    public static final int ATTEMPT_NUM_FIELD_NUMBER = 34;
    private int attemptNum_;
    /**
     * <code>optional uint32 attempt_num = 34;</code>
     */
    public boolean hasAttemptNum() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 attempt_num = 34;</code>
     */
    public int getAttemptNum() {
      return attemptNum_;
    }

    // optional uint32 matchgroups = 11;
    public static final int MATCHGROUPS_FIELD_NUMBER = 11;
    private int matchgroups_;
    /**
     * <code>optional uint32 matchgroups = 11;</code>
     */
    public boolean hasMatchgroups() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 matchgroups = 11;</code>
     */
    public int getMatchgroups() {
      return matchgroups_;
    }

    // optional uint32 low_priority_account_id = 19;
    public static final int LOW_PRIORITY_ACCOUNT_ID_FIELD_NUMBER = 19;
    private int lowPriorityAccountId_;
    /**
     * <code>optional uint32 low_priority_account_id = 19;</code>
     */
    public boolean hasLowPriorityAccountId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 low_priority_account_id = 19;</code>
     */
    public int getLowPriorityAccountId() {
      return lowPriorityAccountId_;
    }

    // optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];
    public static final int MATCH_TYPE_FIELD_NUMBER = 21;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType matchType_;
    /**
     * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
     */
    public boolean hasMatchType() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType getMatchType() {
      return matchType_;
    }

    // optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];
    public static final int BOT_DIFFICULTY_FIELD_NUMBER = 22;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty botDifficulty_;
    /**
     * <code>optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];</code>
     */
    public boolean hasBotDifficulty() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty getBotDifficulty() {
      return botDifficulty_;
    }

    // optional uint32 team_id = 23;
    public static final int TEAM_ID_FIELD_NUMBER = 23;
    private int teamId_;
    /**
     * <code>optional uint32 team_id = 23;</code>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 team_id = 23;</code>
     */
    public int getTeamId() {
      return teamId_;
    }

    // optional uint32 match_disabled_until_date = 24;
    public static final int MATCH_DISABLED_UNTIL_DATE_FIELD_NUMBER = 24;
    private int matchDisabledUntilDate_;
    /**
     * <code>optional uint32 match_disabled_until_date = 24;</code>
     */
    public boolean hasMatchDisabledUntilDate() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 match_disabled_until_date = 24;</code>
     */
    public int getMatchDisabledUntilDate() {
      return matchDisabledUntilDate_;
    }

    // optional uint32 match_disabled_account_id = 25;
    public static final int MATCH_DISABLED_ACCOUNT_ID_FIELD_NUMBER = 25;
    private int matchDisabledAccountId_;
    /**
     * <code>optional uint32 match_disabled_account_id = 25;</code>
     */
    public boolean hasMatchDisabledAccountId() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 match_disabled_account_id = 25;</code>
     */
    public int getMatchDisabledAccountId() {
      return matchDisabledAccountId_;
    }

    // optional uint32 matchmaking_max_range_minutes = 26;
    public static final int MATCHMAKING_MAX_RANGE_MINUTES_FIELD_NUMBER = 26;
    private int matchmakingMaxRangeMinutes_;
    /**
     * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
     */
    public boolean hasMatchmakingMaxRangeMinutes() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
     */
    public int getMatchmakingMaxRangeMinutes() {
      return matchmakingMaxRangeMinutes_;
    }

    // optional uint32 matchlanguages = 27;
    public static final int MATCHLANGUAGES_FIELD_NUMBER = 27;
    private int matchlanguages_;
    /**
     * <code>optional uint32 matchlanguages = 27;</code>
     */
    public boolean hasMatchlanguages() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 matchlanguages = 27;</code>
     */
    public int getMatchlanguages() {
      return matchlanguages_;
    }

    // optional uint32 map_preference = 38;
    public static final int MAP_PREFERENCE_FIELD_NUMBER = 38;
    private int mapPreference_;
    /**
     * <code>optional uint32 map_preference = 38;</code>
     */
    public boolean hasMapPreference() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 map_preference = 38;</code>
     */
    public int getMapPreference() {
      return mapPreference_;
    }

    // repeated .CSODOTAPartyMember members = 29;
    public static final int MEMBERS_FIELD_NUMBER = 29;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember> members_;
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember> getMembersList() {
      return members_;
    }
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMemberOrBuilder> 
        getMembersOrBuilderList() {
      return members_;
    }
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    public int getMembersCount() {
      return members_.size();
    }
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember getMembers(int index) {
      return members_.get(index);
    }
    /**
     * <code>repeated .CSODOTAPartyMember members = 29;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMemberOrBuilder getMembersOrBuilder(
        int index) {
      return members_.get(index);
    }

    // optional uint32 open_guild_id = 30;
    public static final int OPEN_GUILD_ID_FIELD_NUMBER = 30;
    private int openGuildId_;
    /**
     * <code>optional uint32 open_guild_id = 30;</code>
     */
    public boolean hasOpenGuildId() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 open_guild_id = 30;</code>
     */
    public int getOpenGuildId() {
      return openGuildId_;
    }

    // repeated uint32 common_guilds = 31;
    public static final int COMMON_GUILDS_FIELD_NUMBER = 31;
    private java.util.List<java.lang.Integer> commonGuilds_;
    /**
     * <code>repeated uint32 common_guilds = 31;</code>
     */
    public java.util.List<java.lang.Integer>
        getCommonGuildsList() {
      return commonGuilds_;
    }
    /**
     * <code>repeated uint32 common_guilds = 31;</code>
     */
    public int getCommonGuildsCount() {
      return commonGuilds_.size();
    }
    /**
     * <code>repeated uint32 common_guilds = 31;</code>
     */
    public int getCommonGuilds(int index) {
      return commonGuilds_.get(index);
    }

    // optional uint32 low_priority_games_remaining = 35;
    public static final int LOW_PRIORITY_GAMES_REMAINING_FIELD_NUMBER = 35;
    private int lowPriorityGamesRemaining_;
    /**
     * <code>optional uint32 low_priority_games_remaining = 35;</code>
     */
    public boolean hasLowPriorityGamesRemaining() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint32 low_priority_games_remaining = 35;</code>
     */
    public int getLowPriorityGamesRemaining() {
      return lowPriorityGamesRemaining_;
    }

    // optional uint32 min_level = 36;
    public static final int MIN_LEVEL_FIELD_NUMBER = 36;
    private int minLevel_;
    /**
     * <code>optional uint32 min_level = 36;</code>
     */
    public boolean hasMinLevel() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint32 min_level = 36;</code>
     */
    public int getMinLevel() {
      return minLevel_;
    }

    // optional uint32 max_level = 37;
    public static final int MAX_LEVEL_FIELD_NUMBER = 37;
    private int maxLevel_;
    /**
     * <code>optional uint32 max_level = 37;</code>
     */
    public boolean hasMaxLevel() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint32 max_level = 37;</code>
     */
    public int getMaxLevel() {
      return maxLevel_;
    }

    // repeated .EIngameEvent active_ingame_events = 39;
    public static final int ACTIVE_INGAME_EVENTS_FIELD_NUMBER = 39;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> activeIngameEvents_;
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> getActiveIngameEventsList() {
      return activeIngameEvents_;
    }
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
     */
    public int getActiveIngameEventsCount() {
      return activeIngameEvents_.size();
    }
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent getActiveIngameEvents(int index) {
      return activeIngameEvents_.get(index);
    }

    // optional bool open_for_join_requests = 40;
    public static final int OPEN_FOR_JOIN_REQUESTS_FIELD_NUMBER = 40;
    private boolean openForJoinRequests_;
    /**
     * <code>optional bool open_for_join_requests = 40;</code>
     */
    public boolean hasOpenForJoinRequests() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional bool open_for_join_requests = 40;</code>
     */
    public boolean getOpenForJoinRequests() {
      return openForJoinRequests_;
    }

    // repeated .CSODOTAPartyInvite sent_invites = 41;
    public static final int SENT_INVITES_FIELD_NUMBER = 41;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> sentInvites_;
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> getSentInvitesList() {
      return sentInvites_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder> 
        getSentInvitesOrBuilderList() {
      return sentInvites_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    public int getSentInvitesCount() {
      return sentInvites_.size();
    }
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite getSentInvites(int index) {
      return sentInvites_.get(index);
    }
    /**
     * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder getSentInvitesOrBuilder(
        int index) {
      return sentInvites_.get(index);
    }

    // repeated .CSODOTAPartyInvite recv_invites = 42;
    public static final int RECV_INVITES_FIELD_NUMBER = 42;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> recvInvites_;
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> getRecvInvitesList() {
      return recvInvites_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder> 
        getRecvInvitesOrBuilderList() {
      return recvInvites_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    public int getRecvInvitesCount() {
      return recvInvites_.size();
    }
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite getRecvInvites(int index) {
      return recvInvites_.get(index);
    }
    /**
     * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder getRecvInvitesOrBuilder(
        int index) {
      return recvInvites_.get(index);
    }

    private void initFields() {
      partyId_ = 0L;
      leaderId_ = 0L;
      memberIds_ = java.util.Collections.emptyList();
      gameModes_ = 0;
      state_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State.UI;
      effectiveStartedMatchmakingTime_ = 0;
      rawStartedMatchmakingTime_ = 0;
      attemptStartTime_ = 0;
      attemptNum_ = 0;
      matchgroups_ = 0;
      lowPriorityAccountId_ = 0;
      matchType_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType.MATCH_TYPE_CASUAL;
      botDifficulty_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.BOT_DIFFICULTY_PASSIVE;
      teamId_ = 0;
      matchDisabledUntilDate_ = 0;
      matchDisabledAccountId_ = 0;
      matchmakingMaxRangeMinutes_ = 0;
      matchlanguages_ = 0;
      mapPreference_ = 0;
      members_ = java.util.Collections.emptyList();
      openGuildId_ = 0;
      commonGuilds_ = java.util.Collections.emptyList();
      lowPriorityGamesRemaining_ = 0;
      minLevel_ = 0;
      maxLevel_ = 0;
      activeIngameEvents_ = java.util.Collections.emptyList();
      openForJoinRequests_ = false;
      sentInvites_ = java.util.Collections.emptyList();
      recvInvites_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, partyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, leaderId_);
      }
      for (int i = 0; i < memberIds_.size(); i++) {
        output.writeFixed64(3, memberIds_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, gameModes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(6, state_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(7, effectiveStartedMatchmakingTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(11, matchgroups_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(19, lowPriorityAccountId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(21, matchType_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(22, botDifficulty_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(23, teamId_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(24, matchDisabledUntilDate_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(25, matchDisabledAccountId_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(26, matchmakingMaxRangeMinutes_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(27, matchlanguages_);
      }
      for (int i = 0; i < members_.size(); i++) {
        output.writeMessage(29, members_.get(i));
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(30, openGuildId_);
      }
      for (int i = 0; i < commonGuilds_.size(); i++) {
        output.writeUInt32(31, commonGuilds_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(32, rawStartedMatchmakingTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(33, attemptStartTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(34, attemptNum_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(35, lowPriorityGamesRemaining_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(36, minLevel_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(37, maxLevel_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(38, mapPreference_);
      }
      for (int i = 0; i < activeIngameEvents_.size(); i++) {
        output.writeEnum(39, activeIngameEvents_.get(i).getNumber());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBool(40, openForJoinRequests_);
      }
      for (int i = 0; i < sentInvites_.size(); i++) {
        output.writeMessage(41, sentInvites_.get(i));
      }
      for (int i = 0; i < recvInvites_.size(); i++) {
        output.writeMessage(42, recvInvites_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, partyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, leaderId_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getMemberIdsList().size();
        size += dataSize;
        size += 1 * getMemberIdsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, gameModes_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, state_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, effectiveStartedMatchmakingTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, matchgroups_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, lowPriorityAccountId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, matchType_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(22, botDifficulty_.getNumber());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, teamId_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, matchDisabledUntilDate_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(25, matchDisabledAccountId_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, matchmakingMaxRangeMinutes_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, matchlanguages_);
      }
      for (int i = 0; i < members_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, members_.get(i));
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, openGuildId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < commonGuilds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(commonGuilds_.get(i));
        }
        size += dataSize;
        size += 2 * getCommonGuildsList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, rawStartedMatchmakingTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(33, attemptStartTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(34, attemptNum_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(35, lowPriorityGamesRemaining_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(36, minLevel_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(37, maxLevel_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(38, mapPreference_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < activeIngameEvents_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(activeIngameEvents_.get(i).getNumber());
        }
        size += dataSize;
        size += 2 * activeIngameEvents_.size();
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(40, openForJoinRequests_);
      }
      for (int i = 0; i < sentInvites_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, sentInvites_.get(i));
      }
      for (int i = 0; i < recvInvites_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(42, recvInvites_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTAParty}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAParty_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAParty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMembersFieldBuilder();
          getSentInvitesFieldBuilder();
          getRecvInvitesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        partyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        leaderId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        memberIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        gameModes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        state_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State.UI;
        bitField0_ = (bitField0_ & ~0x00000010);
        effectiveStartedMatchmakingTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        rawStartedMatchmakingTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        attemptStartTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        attemptNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        matchgroups_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        lowPriorityAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        matchType_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType.MATCH_TYPE_CASUAL;
        bitField0_ = (bitField0_ & ~0x00000800);
        botDifficulty_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.BOT_DIFFICULTY_PASSIVE;
        bitField0_ = (bitField0_ & ~0x00001000);
        teamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        matchDisabledUntilDate_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        matchDisabledAccountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        matchmakingMaxRangeMinutes_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        matchlanguages_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        mapPreference_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          membersBuilder_.clear();
        }
        openGuildId_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        commonGuilds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        lowPriorityGamesRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        minLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        maxLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        activeIngameEvents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        openForJoinRequests_ = false;
        bitField0_ = (bitField0_ & ~0x04000000);
        if (sentInvitesBuilder_ == null) {
          sentInvites_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x08000000);
        } else {
          sentInvitesBuilder_.clear();
        }
        if (recvInvitesBuilder_ == null) {
          recvInvites_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x10000000);
        } else {
          recvInvitesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAParty_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.partyId_ = partyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.leaderId_ = leaderId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          memberIds_ = java.util.Collections.unmodifiableList(memberIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.memberIds_ = memberIds_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameModes_ = gameModes_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.effectiveStartedMatchmakingTime_ = effectiveStartedMatchmakingTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rawStartedMatchmakingTime_ = rawStartedMatchmakingTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.attemptStartTime_ = attemptStartTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.attemptNum_ = attemptNum_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.matchgroups_ = matchgroups_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.lowPriorityAccountId_ = lowPriorityAccountId_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.matchType_ = matchType_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.botDifficulty_ = botDifficulty_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.matchDisabledUntilDate_ = matchDisabledUntilDate_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.matchDisabledAccountId_ = matchDisabledAccountId_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.matchmakingMaxRangeMinutes_ = matchmakingMaxRangeMinutes_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.matchlanguages_ = matchlanguages_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.mapPreference_ = mapPreference_;
        if (membersBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            members_ = java.util.Collections.unmodifiableList(members_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.members_ = members_;
        } else {
          result.members_ = membersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.openGuildId_ = openGuildId_;
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          commonGuilds_ = java.util.Collections.unmodifiableList(commonGuilds_);
          bitField0_ = (bitField0_ & ~0x00200000);
        }
        result.commonGuilds_ = commonGuilds_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.lowPriorityGamesRemaining_ = lowPriorityGamesRemaining_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.minLevel_ = minLevel_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.maxLevel_ = maxLevel_;
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          activeIngameEvents_ = java.util.Collections.unmodifiableList(activeIngameEvents_);
          bitField0_ = (bitField0_ & ~0x02000000);
        }
        result.activeIngameEvents_ = activeIngameEvents_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.openForJoinRequests_ = openForJoinRequests_;
        if (sentInvitesBuilder_ == null) {
          if (((bitField0_ & 0x08000000) == 0x08000000)) {
            sentInvites_ = java.util.Collections.unmodifiableList(sentInvites_);
            bitField0_ = (bitField0_ & ~0x08000000);
          }
          result.sentInvites_ = sentInvites_;
        } else {
          result.sentInvites_ = sentInvitesBuilder_.build();
        }
        if (recvInvitesBuilder_ == null) {
          if (((bitField0_ & 0x10000000) == 0x10000000)) {
            recvInvites_ = java.util.Collections.unmodifiableList(recvInvites_);
            bitField0_ = (bitField0_ & ~0x10000000);
          }
          result.recvInvites_ = recvInvites_;
        } else {
          result.recvInvites_ = recvInvitesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.getDefaultInstance()) return this;
        if (other.hasPartyId()) {
          setPartyId(other.getPartyId());
        }
        if (other.hasLeaderId()) {
          setLeaderId(other.getLeaderId());
        }
        if (!other.memberIds_.isEmpty()) {
          if (memberIds_.isEmpty()) {
            memberIds_ = other.memberIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMemberIdsIsMutable();
            memberIds_.addAll(other.memberIds_);
          }
          onChanged();
        }
        if (other.hasGameModes()) {
          setGameModes(other.getGameModes());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasEffectiveStartedMatchmakingTime()) {
          setEffectiveStartedMatchmakingTime(other.getEffectiveStartedMatchmakingTime());
        }
        if (other.hasRawStartedMatchmakingTime()) {
          setRawStartedMatchmakingTime(other.getRawStartedMatchmakingTime());
        }
        if (other.hasAttemptStartTime()) {
          setAttemptStartTime(other.getAttemptStartTime());
        }
        if (other.hasAttemptNum()) {
          setAttemptNum(other.getAttemptNum());
        }
        if (other.hasMatchgroups()) {
          setMatchgroups(other.getMatchgroups());
        }
        if (other.hasLowPriorityAccountId()) {
          setLowPriorityAccountId(other.getLowPriorityAccountId());
        }
        if (other.hasMatchType()) {
          setMatchType(other.getMatchType());
        }
        if (other.hasBotDifficulty()) {
          setBotDifficulty(other.getBotDifficulty());
        }
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        if (other.hasMatchDisabledUntilDate()) {
          setMatchDisabledUntilDate(other.getMatchDisabledUntilDate());
        }
        if (other.hasMatchDisabledAccountId()) {
          setMatchDisabledAccountId(other.getMatchDisabledAccountId());
        }
        if (other.hasMatchmakingMaxRangeMinutes()) {
          setMatchmakingMaxRangeMinutes(other.getMatchmakingMaxRangeMinutes());
        }
        if (other.hasMatchlanguages()) {
          setMatchlanguages(other.getMatchlanguages());
        }
        if (other.hasMapPreference()) {
          setMapPreference(other.getMapPreference());
        }
        if (membersBuilder_ == null) {
          if (!other.members_.isEmpty()) {
            if (members_.isEmpty()) {
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureMembersIsMutable();
              members_.addAll(other.members_);
            }
            onChanged();
          }
        } else {
          if (!other.members_.isEmpty()) {
            if (membersBuilder_.isEmpty()) {
              membersBuilder_.dispose();
              membersBuilder_ = null;
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00080000);
              membersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMembersFieldBuilder() : null;
            } else {
              membersBuilder_.addAllMessages(other.members_);
            }
          }
        }
        if (other.hasOpenGuildId()) {
          setOpenGuildId(other.getOpenGuildId());
        }
        if (!other.commonGuilds_.isEmpty()) {
          if (commonGuilds_.isEmpty()) {
            commonGuilds_ = other.commonGuilds_;
            bitField0_ = (bitField0_ & ~0x00200000);
          } else {
            ensureCommonGuildsIsMutable();
            commonGuilds_.addAll(other.commonGuilds_);
          }
          onChanged();
        }
        if (other.hasLowPriorityGamesRemaining()) {
          setLowPriorityGamesRemaining(other.getLowPriorityGamesRemaining());
        }
        if (other.hasMinLevel()) {
          setMinLevel(other.getMinLevel());
        }
        if (other.hasMaxLevel()) {
          setMaxLevel(other.getMaxLevel());
        }
        if (!other.activeIngameEvents_.isEmpty()) {
          if (activeIngameEvents_.isEmpty()) {
            activeIngameEvents_ = other.activeIngameEvents_;
            bitField0_ = (bitField0_ & ~0x02000000);
          } else {
            ensureActiveIngameEventsIsMutable();
            activeIngameEvents_.addAll(other.activeIngameEvents_);
          }
          onChanged();
        }
        if (other.hasOpenForJoinRequests()) {
          setOpenForJoinRequests(other.getOpenForJoinRequests());
        }
        if (sentInvitesBuilder_ == null) {
          if (!other.sentInvites_.isEmpty()) {
            if (sentInvites_.isEmpty()) {
              sentInvites_ = other.sentInvites_;
              bitField0_ = (bitField0_ & ~0x08000000);
            } else {
              ensureSentInvitesIsMutable();
              sentInvites_.addAll(other.sentInvites_);
            }
            onChanged();
          }
        } else {
          if (!other.sentInvites_.isEmpty()) {
            if (sentInvitesBuilder_.isEmpty()) {
              sentInvitesBuilder_.dispose();
              sentInvitesBuilder_ = null;
              sentInvites_ = other.sentInvites_;
              bitField0_ = (bitField0_ & ~0x08000000);
              sentInvitesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSentInvitesFieldBuilder() : null;
            } else {
              sentInvitesBuilder_.addAllMessages(other.sentInvites_);
            }
          }
        }
        if (recvInvitesBuilder_ == null) {
          if (!other.recvInvites_.isEmpty()) {
            if (recvInvites_.isEmpty()) {
              recvInvites_ = other.recvInvites_;
              bitField0_ = (bitField0_ & ~0x10000000);
            } else {
              ensureRecvInvitesIsMutable();
              recvInvites_.addAll(other.recvInvites_);
            }
            onChanged();
          }
        } else {
          if (!other.recvInvites_.isEmpty()) {
            if (recvInvitesBuilder_.isEmpty()) {
              recvInvitesBuilder_.dispose();
              recvInvitesBuilder_ = null;
              recvInvites_ = other.recvInvites_;
              bitField0_ = (bitField0_ & ~0x10000000);
              recvInvitesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRecvInvitesFieldBuilder() : null;
            } else {
              recvInvitesBuilder_.addAllMessages(other.recvInvites_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 party_id = 1;
      private long partyId_ ;
      /**
       * <code>optional uint64 party_id = 1;</code>
       */
      public boolean hasPartyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 party_id = 1;</code>
       */
      public long getPartyId() {
        return partyId_;
      }
      /**
       * <code>optional uint64 party_id = 1;</code>
       */
      public Builder setPartyId(long value) {
        bitField0_ |= 0x00000001;
        partyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 party_id = 1;</code>
       */
      public Builder clearPartyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        partyId_ = 0L;
        onChanged();
        return this;
      }

      // optional fixed64 leader_id = 2;
      private long leaderId_ ;
      /**
       * <code>optional fixed64 leader_id = 2;</code>
       */
      public boolean hasLeaderId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 leader_id = 2;</code>
       */
      public long getLeaderId() {
        return leaderId_;
      }
      /**
       * <code>optional fixed64 leader_id = 2;</code>
       */
      public Builder setLeaderId(long value) {
        bitField0_ |= 0x00000002;
        leaderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 leader_id = 2;</code>
       */
      public Builder clearLeaderId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        leaderId_ = 0L;
        onChanged();
        return this;
      }

      // repeated fixed64 member_ids = 3;
      private java.util.List<java.lang.Long> memberIds_ = java.util.Collections.emptyList();
      private void ensureMemberIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          memberIds_ = new java.util.ArrayList<java.lang.Long>(memberIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       */
      public java.util.List<java.lang.Long>
          getMemberIdsList() {
        return java.util.Collections.unmodifiableList(memberIds_);
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       */
      public int getMemberIdsCount() {
        return memberIds_.size();
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       */
      public long getMemberIds(int index) {
        return memberIds_.get(index);
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       */
      public Builder setMemberIds(
          int index, long value) {
        ensureMemberIdsIsMutable();
        memberIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       */
      public Builder addMemberIds(long value) {
        ensureMemberIdsIsMutable();
        memberIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       */
      public Builder addAllMemberIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureMemberIdsIsMutable();
        super.addAll(values, memberIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 member_ids = 3;</code>
       */
      public Builder clearMemberIds() {
        memberIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional uint32 game_modes = 4;
      private int gameModes_ ;
      /**
       * <code>optional uint32 game_modes = 4;</code>
       */
      public boolean hasGameModes() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 game_modes = 4;</code>
       */
      public int getGameModes() {
        return gameModes_;
      }
      /**
       * <code>optional uint32 game_modes = 4;</code>
       */
      public Builder setGameModes(int value) {
        bitField0_ |= 0x00000008;
        gameModes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 game_modes = 4;</code>
       */
      public Builder clearGameModes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gameModes_ = 0;
        onChanged();
        return this;
      }

      // optional .CSODOTAParty.State state = 6 [default = UI];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State state_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State.UI;
      /**
       * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State getState() {
        return state_;
      }
      /**
       * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
       */
      public Builder setState(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CSODOTAParty.State state = 6 [default = UI];</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000010);
        state_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAParty.State.UI;
        onChanged();
        return this;
      }

      // optional uint32 effective_started_matchmaking_time = 7;
      private int effectiveStartedMatchmakingTime_ ;
      /**
       * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
       */
      public boolean hasEffectiveStartedMatchmakingTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
       */
      public int getEffectiveStartedMatchmakingTime() {
        return effectiveStartedMatchmakingTime_;
      }
      /**
       * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
       */
      public Builder setEffectiveStartedMatchmakingTime(int value) {
        bitField0_ |= 0x00000020;
        effectiveStartedMatchmakingTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 effective_started_matchmaking_time = 7;</code>
       */
      public Builder clearEffectiveStartedMatchmakingTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        effectiveStartedMatchmakingTime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 raw_started_matchmaking_time = 32;
      private int rawStartedMatchmakingTime_ ;
      /**
       * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
       */
      public boolean hasRawStartedMatchmakingTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
       */
      public int getRawStartedMatchmakingTime() {
        return rawStartedMatchmakingTime_;
      }
      /**
       * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
       */
      public Builder setRawStartedMatchmakingTime(int value) {
        bitField0_ |= 0x00000040;
        rawStartedMatchmakingTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 raw_started_matchmaking_time = 32;</code>
       */
      public Builder clearRawStartedMatchmakingTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rawStartedMatchmakingTime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 attempt_start_time = 33;
      private int attemptStartTime_ ;
      /**
       * <code>optional uint32 attempt_start_time = 33;</code>
       */
      public boolean hasAttemptStartTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 attempt_start_time = 33;</code>
       */
      public int getAttemptStartTime() {
        return attemptStartTime_;
      }
      /**
       * <code>optional uint32 attempt_start_time = 33;</code>
       */
      public Builder setAttemptStartTime(int value) {
        bitField0_ |= 0x00000080;
        attemptStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attempt_start_time = 33;</code>
       */
      public Builder clearAttemptStartTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        attemptStartTime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 attempt_num = 34;
      private int attemptNum_ ;
      /**
       * <code>optional uint32 attempt_num = 34;</code>
       */
      public boolean hasAttemptNum() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 attempt_num = 34;</code>
       */
      public int getAttemptNum() {
        return attemptNum_;
      }
      /**
       * <code>optional uint32 attempt_num = 34;</code>
       */
      public Builder setAttemptNum(int value) {
        bitField0_ |= 0x00000100;
        attemptNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attempt_num = 34;</code>
       */
      public Builder clearAttemptNum() {
        bitField0_ = (bitField0_ & ~0x00000100);
        attemptNum_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 matchgroups = 11;
      private int matchgroups_ ;
      /**
       * <code>optional uint32 matchgroups = 11;</code>
       */
      public boolean hasMatchgroups() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 matchgroups = 11;</code>
       */
      public int getMatchgroups() {
        return matchgroups_;
      }
      /**
       * <code>optional uint32 matchgroups = 11;</code>
       */
      public Builder setMatchgroups(int value) {
        bitField0_ |= 0x00000200;
        matchgroups_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 matchgroups = 11;</code>
       */
      public Builder clearMatchgroups() {
        bitField0_ = (bitField0_ & ~0x00000200);
        matchgroups_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 low_priority_account_id = 19;
      private int lowPriorityAccountId_ ;
      /**
       * <code>optional uint32 low_priority_account_id = 19;</code>
       */
      public boolean hasLowPriorityAccountId() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 low_priority_account_id = 19;</code>
       */
      public int getLowPriorityAccountId() {
        return lowPriorityAccountId_;
      }
      /**
       * <code>optional uint32 low_priority_account_id = 19;</code>
       */
      public Builder setLowPriorityAccountId(int value) {
        bitField0_ |= 0x00000400;
        lowPriorityAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 low_priority_account_id = 19;</code>
       */
      public Builder clearLowPriorityAccountId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        lowPriorityAccountId_ = 0;
        onChanged();
        return this;
      }

      // optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType matchType_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType.MATCH_TYPE_CASUAL;
      /**
       * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
       */
      public boolean hasMatchType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType getMatchType() {
        return matchType_;
      }
      /**
       * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
       */
      public Builder setMatchType(skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        matchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MatchType match_type = 21 [default = MATCH_TYPE_CASUAL];</code>
       */
      public Builder clearMatchType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        matchType_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.MatchType.MATCH_TYPE_CASUAL;
        onChanged();
        return this;
      }

      // optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty botDifficulty_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.BOT_DIFFICULTY_PASSIVE;
      /**
       * <code>optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];</code>
       */
      public boolean hasBotDifficulty() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty getBotDifficulty() {
        return botDifficulty_;
      }
      /**
       * <code>optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];</code>
       */
      public Builder setBotDifficulty(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        botDifficulty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTABotDifficulty bot_difficulty = 22 [default = BOT_DIFFICULTY_PASSIVE];</code>
       */
      public Builder clearBotDifficulty() {
        bitField0_ = (bitField0_ & ~0x00001000);
        botDifficulty_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.BOT_DIFFICULTY_PASSIVE;
        onChanged();
        return this;
      }

      // optional uint32 team_id = 23;
      private int teamId_ ;
      /**
       * <code>optional uint32 team_id = 23;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 team_id = 23;</code>
       */
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional uint32 team_id = 23;</code>
       */
      public Builder setTeamId(int value) {
        bitField0_ |= 0x00002000;
        teamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_id = 23;</code>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        teamId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 match_disabled_until_date = 24;
      private int matchDisabledUntilDate_ ;
      /**
       * <code>optional uint32 match_disabled_until_date = 24;</code>
       */
      public boolean hasMatchDisabledUntilDate() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 match_disabled_until_date = 24;</code>
       */
      public int getMatchDisabledUntilDate() {
        return matchDisabledUntilDate_;
      }
      /**
       * <code>optional uint32 match_disabled_until_date = 24;</code>
       */
      public Builder setMatchDisabledUntilDate(int value) {
        bitField0_ |= 0x00004000;
        matchDisabledUntilDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_disabled_until_date = 24;</code>
       */
      public Builder clearMatchDisabledUntilDate() {
        bitField0_ = (bitField0_ & ~0x00004000);
        matchDisabledUntilDate_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 match_disabled_account_id = 25;
      private int matchDisabledAccountId_ ;
      /**
       * <code>optional uint32 match_disabled_account_id = 25;</code>
       */
      public boolean hasMatchDisabledAccountId() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 match_disabled_account_id = 25;</code>
       */
      public int getMatchDisabledAccountId() {
        return matchDisabledAccountId_;
      }
      /**
       * <code>optional uint32 match_disabled_account_id = 25;</code>
       */
      public Builder setMatchDisabledAccountId(int value) {
        bitField0_ |= 0x00008000;
        matchDisabledAccountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_disabled_account_id = 25;</code>
       */
      public Builder clearMatchDisabledAccountId() {
        bitField0_ = (bitField0_ & ~0x00008000);
        matchDisabledAccountId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 matchmaking_max_range_minutes = 26;
      private int matchmakingMaxRangeMinutes_ ;
      /**
       * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
       */
      public boolean hasMatchmakingMaxRangeMinutes() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
       */
      public int getMatchmakingMaxRangeMinutes() {
        return matchmakingMaxRangeMinutes_;
      }
      /**
       * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
       */
      public Builder setMatchmakingMaxRangeMinutes(int value) {
        bitField0_ |= 0x00010000;
        matchmakingMaxRangeMinutes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 matchmaking_max_range_minutes = 26;</code>
       */
      public Builder clearMatchmakingMaxRangeMinutes() {
        bitField0_ = (bitField0_ & ~0x00010000);
        matchmakingMaxRangeMinutes_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 matchlanguages = 27;
      private int matchlanguages_ ;
      /**
       * <code>optional uint32 matchlanguages = 27;</code>
       */
      public boolean hasMatchlanguages() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 matchlanguages = 27;</code>
       */
      public int getMatchlanguages() {
        return matchlanguages_;
      }
      /**
       * <code>optional uint32 matchlanguages = 27;</code>
       */
      public Builder setMatchlanguages(int value) {
        bitField0_ |= 0x00020000;
        matchlanguages_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 matchlanguages = 27;</code>
       */
      public Builder clearMatchlanguages() {
        bitField0_ = (bitField0_ & ~0x00020000);
        matchlanguages_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 map_preference = 38;
      private int mapPreference_ ;
      /**
       * <code>optional uint32 map_preference = 38;</code>
       */
      public boolean hasMapPreference() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 map_preference = 38;</code>
       */
      public int getMapPreference() {
        return mapPreference_;
      }
      /**
       * <code>optional uint32 map_preference = 38;</code>
       */
      public Builder setMapPreference(int value) {
        bitField0_ |= 0x00040000;
        mapPreference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 map_preference = 38;</code>
       */
      public Builder clearMapPreference() {
        bitField0_ = (bitField0_ & ~0x00040000);
        mapPreference_ = 0;
        onChanged();
        return this;
      }

      // repeated .CSODOTAPartyMember members = 29;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember> members_ =
        java.util.Collections.emptyList();
      private void ensureMembersIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          members_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember>(members_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMemberOrBuilder> membersBuilder_;

      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember> getMembersList() {
        if (membersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(members_);
        } else {
          return membersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public int getMembersCount() {
        if (membersBuilder_ == null) {
          return members_.size();
        } else {
          return membersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember getMembers(int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);
        } else {
          return membersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder setMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.set(index, value);
          onChanged();
        } else {
          membersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder setMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.set(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder addMembers(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(value);
          onChanged();
        } else {
          membersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder addMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(index, value);
          onChanged();
        } else {
          membersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder addMembers(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder addMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder addAllMembers(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember> values) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          super.addAll(values, members_);
          onChanged();
        } else {
          membersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder clearMembers() {
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          membersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public Builder removeMembers(int index) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.remove(index);
          onChanged();
        } else {
          membersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder getMembersBuilder(
          int index) {
        return getMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMemberOrBuilder getMembersOrBuilder(
          int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);  } else {
          return membersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMemberOrBuilder> 
           getMembersOrBuilderList() {
        if (membersBuilder_ != null) {
          return membersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(members_);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder addMembersBuilder() {
        return getMembersFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder addMembersBuilder(
          int index) {
        return getMembersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyMember members = 29;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder> 
           getMembersBuilderList() {
        return getMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMemberOrBuilder> 
          getMembersFieldBuilder() {
        if (membersBuilder_ == null) {
          membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyMemberOrBuilder>(
                  members_,
                  ((bitField0_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          members_ = null;
        }
        return membersBuilder_;
      }

      // optional uint32 open_guild_id = 30;
      private int openGuildId_ ;
      /**
       * <code>optional uint32 open_guild_id = 30;</code>
       */
      public boolean hasOpenGuildId() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint32 open_guild_id = 30;</code>
       */
      public int getOpenGuildId() {
        return openGuildId_;
      }
      /**
       * <code>optional uint32 open_guild_id = 30;</code>
       */
      public Builder setOpenGuildId(int value) {
        bitField0_ |= 0x00100000;
        openGuildId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 open_guild_id = 30;</code>
       */
      public Builder clearOpenGuildId() {
        bitField0_ = (bitField0_ & ~0x00100000);
        openGuildId_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 common_guilds = 31;
      private java.util.List<java.lang.Integer> commonGuilds_ = java.util.Collections.emptyList();
      private void ensureCommonGuildsIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          commonGuilds_ = new java.util.ArrayList<java.lang.Integer>(commonGuilds_);
          bitField0_ |= 0x00200000;
         }
      }
      /**
       * <code>repeated uint32 common_guilds = 31;</code>
       */
      public java.util.List<java.lang.Integer>
          getCommonGuildsList() {
        return java.util.Collections.unmodifiableList(commonGuilds_);
      }
      /**
       * <code>repeated uint32 common_guilds = 31;</code>
       */
      public int getCommonGuildsCount() {
        return commonGuilds_.size();
      }
      /**
       * <code>repeated uint32 common_guilds = 31;</code>
       */
      public int getCommonGuilds(int index) {
        return commonGuilds_.get(index);
      }
      /**
       * <code>repeated uint32 common_guilds = 31;</code>
       */
      public Builder setCommonGuilds(
          int index, int value) {
        ensureCommonGuildsIsMutable();
        commonGuilds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 common_guilds = 31;</code>
       */
      public Builder addCommonGuilds(int value) {
        ensureCommonGuildsIsMutable();
        commonGuilds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 common_guilds = 31;</code>
       */
      public Builder addAllCommonGuilds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCommonGuildsIsMutable();
        super.addAll(values, commonGuilds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 common_guilds = 31;</code>
       */
      public Builder clearCommonGuilds() {
        commonGuilds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        onChanged();
        return this;
      }

      // optional uint32 low_priority_games_remaining = 35;
      private int lowPriorityGamesRemaining_ ;
      /**
       * <code>optional uint32 low_priority_games_remaining = 35;</code>
       */
      public boolean hasLowPriorityGamesRemaining() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 low_priority_games_remaining = 35;</code>
       */
      public int getLowPriorityGamesRemaining() {
        return lowPriorityGamesRemaining_;
      }
      /**
       * <code>optional uint32 low_priority_games_remaining = 35;</code>
       */
      public Builder setLowPriorityGamesRemaining(int value) {
        bitField0_ |= 0x00400000;
        lowPriorityGamesRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 low_priority_games_remaining = 35;</code>
       */
      public Builder clearLowPriorityGamesRemaining() {
        bitField0_ = (bitField0_ & ~0x00400000);
        lowPriorityGamesRemaining_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 min_level = 36;
      private int minLevel_ ;
      /**
       * <code>optional uint32 min_level = 36;</code>
       */
      public boolean hasMinLevel() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 min_level = 36;</code>
       */
      public int getMinLevel() {
        return minLevel_;
      }
      /**
       * <code>optional uint32 min_level = 36;</code>
       */
      public Builder setMinLevel(int value) {
        bitField0_ |= 0x00800000;
        minLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 min_level = 36;</code>
       */
      public Builder clearMinLevel() {
        bitField0_ = (bitField0_ & ~0x00800000);
        minLevel_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 max_level = 37;
      private int maxLevel_ ;
      /**
       * <code>optional uint32 max_level = 37;</code>
       */
      public boolean hasMaxLevel() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional uint32 max_level = 37;</code>
       */
      public int getMaxLevel() {
        return maxLevel_;
      }
      /**
       * <code>optional uint32 max_level = 37;</code>
       */
      public Builder setMaxLevel(int value) {
        bitField0_ |= 0x01000000;
        maxLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 max_level = 37;</code>
       */
      public Builder clearMaxLevel() {
        bitField0_ = (bitField0_ & ~0x01000000);
        maxLevel_ = 0;
        onChanged();
        return this;
      }

      // repeated .EIngameEvent active_ingame_events = 39;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> activeIngameEvents_ =
        java.util.Collections.emptyList();
      private void ensureActiveIngameEventsIsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          activeIngameEvents_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent>(activeIngameEvents_);
          bitField0_ |= 0x02000000;
        }
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> getActiveIngameEventsList() {
        return java.util.Collections.unmodifiableList(activeIngameEvents_);
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
       */
      public int getActiveIngameEventsCount() {
        return activeIngameEvents_.size();
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent getActiveIngameEvents(int index) {
        return activeIngameEvents_.get(index);
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
       */
      public Builder setActiveIngameEvents(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActiveIngameEventsIsMutable();
        activeIngameEvents_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
       */
      public Builder addActiveIngameEvents(skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActiveIngameEventsIsMutable();
        activeIngameEvents_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
       */
      public Builder addAllActiveIngameEvents(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> values) {
        ensureActiveIngameEventsIsMutable();
        super.addAll(values, activeIngameEvents_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 39;</code>
       */
      public Builder clearActiveIngameEvents() {
        activeIngameEvents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }

      // optional bool open_for_join_requests = 40;
      private boolean openForJoinRequests_ ;
      /**
       * <code>optional bool open_for_join_requests = 40;</code>
       */
      public boolean hasOpenForJoinRequests() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool open_for_join_requests = 40;</code>
       */
      public boolean getOpenForJoinRequests() {
        return openForJoinRequests_;
      }
      /**
       * <code>optional bool open_for_join_requests = 40;</code>
       */
      public Builder setOpenForJoinRequests(boolean value) {
        bitField0_ |= 0x04000000;
        openForJoinRequests_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool open_for_join_requests = 40;</code>
       */
      public Builder clearOpenForJoinRequests() {
        bitField0_ = (bitField0_ & ~0x04000000);
        openForJoinRequests_ = false;
        onChanged();
        return this;
      }

      // repeated .CSODOTAPartyInvite sent_invites = 41;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> sentInvites_ =
        java.util.Collections.emptyList();
      private void ensureSentInvitesIsMutable() {
        if (!((bitField0_ & 0x08000000) == 0x08000000)) {
          sentInvites_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite>(sentInvites_);
          bitField0_ |= 0x08000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder> sentInvitesBuilder_;

      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> getSentInvitesList() {
        if (sentInvitesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sentInvites_);
        } else {
          return sentInvitesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public int getSentInvitesCount() {
        if (sentInvitesBuilder_ == null) {
          return sentInvites_.size();
        } else {
          return sentInvitesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite getSentInvites(int index) {
        if (sentInvitesBuilder_ == null) {
          return sentInvites_.get(index);
        } else {
          return sentInvitesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder setSentInvites(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite value) {
        if (sentInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentInvitesIsMutable();
          sentInvites_.set(index, value);
          onChanged();
        } else {
          sentInvitesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder setSentInvites(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder builderForValue) {
        if (sentInvitesBuilder_ == null) {
          ensureSentInvitesIsMutable();
          sentInvites_.set(index, builderForValue.build());
          onChanged();
        } else {
          sentInvitesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder addSentInvites(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite value) {
        if (sentInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentInvitesIsMutable();
          sentInvites_.add(value);
          onChanged();
        } else {
          sentInvitesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder addSentInvites(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite value) {
        if (sentInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentInvitesIsMutable();
          sentInvites_.add(index, value);
          onChanged();
        } else {
          sentInvitesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder addSentInvites(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder builderForValue) {
        if (sentInvitesBuilder_ == null) {
          ensureSentInvitesIsMutable();
          sentInvites_.add(builderForValue.build());
          onChanged();
        } else {
          sentInvitesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder addSentInvites(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder builderForValue) {
        if (sentInvitesBuilder_ == null) {
          ensureSentInvitesIsMutable();
          sentInvites_.add(index, builderForValue.build());
          onChanged();
        } else {
          sentInvitesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder addAllSentInvites(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> values) {
        if (sentInvitesBuilder_ == null) {
          ensureSentInvitesIsMutable();
          super.addAll(values, sentInvites_);
          onChanged();
        } else {
          sentInvitesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder clearSentInvites() {
        if (sentInvitesBuilder_ == null) {
          sentInvites_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x08000000);
          onChanged();
        } else {
          sentInvitesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public Builder removeSentInvites(int index) {
        if (sentInvitesBuilder_ == null) {
          ensureSentInvitesIsMutable();
          sentInvites_.remove(index);
          onChanged();
        } else {
          sentInvitesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder getSentInvitesBuilder(
          int index) {
        return getSentInvitesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder getSentInvitesOrBuilder(
          int index) {
        if (sentInvitesBuilder_ == null) {
          return sentInvites_.get(index);  } else {
          return sentInvitesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder> 
           getSentInvitesOrBuilderList() {
        if (sentInvitesBuilder_ != null) {
          return sentInvitesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sentInvites_);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder addSentInvitesBuilder() {
        return getSentInvitesFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder addSentInvitesBuilder(
          int index) {
        return getSentInvitesFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite sent_invites = 41;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder> 
           getSentInvitesBuilderList() {
        return getSentInvitesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder> 
          getSentInvitesFieldBuilder() {
        if (sentInvitesBuilder_ == null) {
          sentInvitesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder>(
                  sentInvites_,
                  ((bitField0_ & 0x08000000) == 0x08000000),
                  getParentForChildren(),
                  isClean());
          sentInvites_ = null;
        }
        return sentInvitesBuilder_;
      }

      // repeated .CSODOTAPartyInvite recv_invites = 42;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> recvInvites_ =
        java.util.Collections.emptyList();
      private void ensureRecvInvitesIsMutable() {
        if (!((bitField0_ & 0x10000000) == 0x10000000)) {
          recvInvites_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite>(recvInvites_);
          bitField0_ |= 0x10000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder> recvInvitesBuilder_;

      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> getRecvInvitesList() {
        if (recvInvitesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(recvInvites_);
        } else {
          return recvInvitesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public int getRecvInvitesCount() {
        if (recvInvitesBuilder_ == null) {
          return recvInvites_.size();
        } else {
          return recvInvitesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite getRecvInvites(int index) {
        if (recvInvitesBuilder_ == null) {
          return recvInvites_.get(index);
        } else {
          return recvInvitesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder setRecvInvites(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite value) {
        if (recvInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecvInvitesIsMutable();
          recvInvites_.set(index, value);
          onChanged();
        } else {
          recvInvitesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder setRecvInvites(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder builderForValue) {
        if (recvInvitesBuilder_ == null) {
          ensureRecvInvitesIsMutable();
          recvInvites_.set(index, builderForValue.build());
          onChanged();
        } else {
          recvInvitesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder addRecvInvites(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite value) {
        if (recvInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecvInvitesIsMutable();
          recvInvites_.add(value);
          onChanged();
        } else {
          recvInvitesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder addRecvInvites(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite value) {
        if (recvInvitesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecvInvitesIsMutable();
          recvInvites_.add(index, value);
          onChanged();
        } else {
          recvInvitesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder addRecvInvites(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder builderForValue) {
        if (recvInvitesBuilder_ == null) {
          ensureRecvInvitesIsMutable();
          recvInvites_.add(builderForValue.build());
          onChanged();
        } else {
          recvInvitesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder addRecvInvites(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder builderForValue) {
        if (recvInvitesBuilder_ == null) {
          ensureRecvInvitesIsMutable();
          recvInvites_.add(index, builderForValue.build());
          onChanged();
        } else {
          recvInvitesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder addAllRecvInvites(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite> values) {
        if (recvInvitesBuilder_ == null) {
          ensureRecvInvitesIsMutable();
          super.addAll(values, recvInvites_);
          onChanged();
        } else {
          recvInvitesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder clearRecvInvites() {
        if (recvInvitesBuilder_ == null) {
          recvInvites_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x10000000);
          onChanged();
        } else {
          recvInvitesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public Builder removeRecvInvites(int index) {
        if (recvInvitesBuilder_ == null) {
          ensureRecvInvitesIsMutable();
          recvInvites_.remove(index);
          onChanged();
        } else {
          recvInvitesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder getRecvInvitesBuilder(
          int index) {
        return getRecvInvitesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder getRecvInvitesOrBuilder(
          int index) {
        if (recvInvitesBuilder_ == null) {
          return recvInvites_.get(index);  } else {
          return recvInvitesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder> 
           getRecvInvitesOrBuilderList() {
        if (recvInvitesBuilder_ != null) {
          return recvInvitesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(recvInvites_);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder addRecvInvitesBuilder() {
        return getRecvInvitesFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder addRecvInvitesBuilder(
          int index) {
        return getRecvInvitesFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite recv_invites = 42;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder> 
           getRecvInvitesBuilderList() {
        return getRecvInvitesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder> 
          getRecvInvitesFieldBuilder() {
        if (recvInvitesBuilder_ == null) {
          recvInvitesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder>(
                  recvInvites_,
                  ((bitField0_ & 0x10000000) == 0x10000000),
                  getParentForChildren(),
                  isClean());
          recvInvites_ = null;
        }
        return recvInvitesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTAParty)
    }

    static {
      defaultInstance = new CSODOTAParty(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSODOTAParty)
  }

  public interface CSODOTAPartyInviteOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 group_id = 1;
    /**
     * <code>optional uint64 group_id = 1;</code>
     */
    boolean hasGroupId();
    /**
     * <code>optional uint64 group_id = 1;</code>
     */
    long getGroupId();

    // optional fixed64 sender_id = 2;
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     */
    boolean hasSenderId();
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     */
    long getSenderId();

    // optional string sender_name = 3;
    /**
     * <code>optional string sender_name = 3;</code>
     */
    boolean hasSenderName();
    /**
     * <code>optional string sender_name = 3;</code>
     */
    java.lang.String getSenderName();
    /**
     * <code>optional string sender_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getSenderNameBytes();

    // repeated .CSODOTAPartyInvite.PartyMember members = 4;
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember> 
        getMembersList();
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember getMembers(int index);
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    int getMembersCount();
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMemberOrBuilder> 
        getMembersOrBuilderList();
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMemberOrBuilder getMembersOrBuilder(
        int index);

    // optional uint32 team_id = 5;
    /**
     * <code>optional uint32 team_id = 5;</code>
     */
    boolean hasTeamId();
    /**
     * <code>optional uint32 team_id = 5;</code>
     */
    int getTeamId();

    // optional bool low_priority_status = 6;
    /**
     * <code>optional bool low_priority_status = 6;</code>
     */
    boolean hasLowPriorityStatus();
    /**
     * <code>optional bool low_priority_status = 6;</code>
     */
    boolean getLowPriorityStatus();

    // optional bool as_coach = 7;
    /**
     * <code>optional bool as_coach = 7;</code>
     */
    boolean hasAsCoach();
    /**
     * <code>optional bool as_coach = 7;</code>
     */
    boolean getAsCoach();

    // optional fixed64 invite_gid = 8;
    /**
     * <code>optional fixed64 invite_gid = 8;</code>
     */
    boolean hasInviteGid();
    /**
     * <code>optional fixed64 invite_gid = 8;</code>
     */
    long getInviteGid();
  }
  /**
   * Protobuf type {@code CSODOTAPartyInvite}
   */
  public static final class CSODOTAPartyInvite extends
      com.google.protobuf.GeneratedMessage
      implements CSODOTAPartyInviteOrBuilder {
    // Use CSODOTAPartyInvite.newBuilder() to construct.
    private CSODOTAPartyInvite(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSODOTAPartyInvite(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSODOTAPartyInvite defaultInstance;
    public static CSODOTAPartyInvite getDefaultInstance() {
      return defaultInstance;
    }

    public CSODOTAPartyInvite getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSODOTAPartyInvite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              groupId_ = input.readUInt64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              senderId_ = input.readFixed64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              senderName_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                members_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember>();
                mutable_bitField0_ |= 0x00000008;
              }
              members_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              teamId_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              lowPriorityStatus_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              asCoach_ = input.readBool();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000040;
              inviteGid_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          members_ = java.util.Collections.unmodifiableList(members_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyInvite_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyInvite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder.class);
    }

    public static com.google.protobuf.Parser<CSODOTAPartyInvite> PARSER =
        new com.google.protobuf.AbstractParser<CSODOTAPartyInvite>() {
      public CSODOTAPartyInvite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSODOTAPartyInvite(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTAPartyInvite> getParserForType() {
      return PARSER;
    }

    public interface PartyMemberOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string name = 1;
      /**
       * <code>optional string name = 1;</code>
       */
      boolean hasName();
      /**
       * <code>optional string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // optional fixed64 steam_id = 2;
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       */
      boolean hasSteamId();
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       */
      long getSteamId();

      // optional bool is_coach = 4;
      /**
       * <code>optional bool is_coach = 4;</code>
       */
      boolean hasIsCoach();
      /**
       * <code>optional bool is_coach = 4;</code>
       */
      boolean getIsCoach();
    }
    /**
     * Protobuf type {@code CSODOTAPartyInvite.PartyMember}
     */
    public static final class PartyMember extends
        com.google.protobuf.GeneratedMessage
        implements PartyMemberOrBuilder {
      // Use PartyMember.newBuilder() to construct.
      private PartyMember(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PartyMember(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PartyMember defaultInstance;
      public static PartyMember getDefaultInstance() {
        return defaultInstance;
      }

      public PartyMember getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PartyMember(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                steamId_ = input.readFixed64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000004;
                isCoach_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyInvite_PartyMember_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyInvite_PartyMember_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder.class);
      }

      public static com.google.protobuf.Parser<PartyMember> PARSER =
          new com.google.protobuf.AbstractParser<PartyMember>() {
        public PartyMember parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PartyMember(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PartyMember> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional fixed64 steam_id = 2;
      public static final int STEAM_ID_FIELD_NUMBER = 2;
      private long steamId_;
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       */
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       */
      public long getSteamId() {
        return steamId_;
      }

      // optional bool is_coach = 4;
      public static final int IS_COACH_FIELD_NUMBER = 4;
      private boolean isCoach_;
      /**
       * <code>optional bool is_coach = 4;</code>
       */
      public boolean hasIsCoach() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_coach = 4;</code>
       */
      public boolean getIsCoach() {
        return isCoach_;
      }

      private void initFields() {
        name_ = "";
        steamId_ = 0L;
        isCoach_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFixed64(2, steamId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(4, isCoach_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(2, steamId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, isCoach_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CSODOTAPartyInvite.PartyMember}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMemberOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyInvite_PartyMember_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyInvite_PartyMember_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          steamId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          isCoach_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyInvite_PartyMember_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.steamId_ = steamId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.isCoach_ = isCoach_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasSteamId()) {
            setSteamId(other.getSteamId());
          }
          if (other.hasIsCoach()) {
            setIsCoach(other.getIsCoach());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string name = 1;
        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // optional fixed64 steam_id = 2;
        private long steamId_ ;
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         */
        public boolean hasSteamId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         */
        public long getSteamId() {
          return steamId_;
        }
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         */
        public Builder setSteamId(long value) {
          bitField0_ |= 0x00000002;
          steamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         */
        public Builder clearSteamId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          steamId_ = 0L;
          onChanged();
          return this;
        }

        // optional bool is_coach = 4;
        private boolean isCoach_ ;
        /**
         * <code>optional bool is_coach = 4;</code>
         */
        public boolean hasIsCoach() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool is_coach = 4;</code>
         */
        public boolean getIsCoach() {
          return isCoach_;
        }
        /**
         * <code>optional bool is_coach = 4;</code>
         */
        public Builder setIsCoach(boolean value) {
          bitField0_ |= 0x00000004;
          isCoach_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_coach = 4;</code>
         */
        public Builder clearIsCoach() {
          bitField0_ = (bitField0_ & ~0x00000004);
          isCoach_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CSODOTAPartyInvite.PartyMember)
      }

      static {
        defaultInstance = new PartyMember(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CSODOTAPartyInvite.PartyMember)
    }

    private int bitField0_;
    // optional uint64 group_id = 1;
    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private long groupId_;
    /**
     * <code>optional uint64 group_id = 1;</code>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 group_id = 1;</code>
     */
    public long getGroupId() {
      return groupId_;
    }

    // optional fixed64 sender_id = 2;
    public static final int SENDER_ID_FIELD_NUMBER = 2;
    private long senderId_;
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     */
    public boolean hasSenderId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     */
    public long getSenderId() {
      return senderId_;
    }

    // optional string sender_name = 3;
    public static final int SENDER_NAME_FIELD_NUMBER = 3;
    private java.lang.Object senderName_;
    /**
     * <code>optional string sender_name = 3;</code>
     */
    public boolean hasSenderName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string sender_name = 3;</code>
     */
    public java.lang.String getSenderName() {
      java.lang.Object ref = senderName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          senderName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sender_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSenderNameBytes() {
      java.lang.Object ref = senderName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        senderName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .CSODOTAPartyInvite.PartyMember members = 4;
    public static final int MEMBERS_FIELD_NUMBER = 4;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember> members_;
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember> getMembersList() {
      return members_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMemberOrBuilder> 
        getMembersOrBuilderList() {
      return members_;
    }
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    public int getMembersCount() {
      return members_.size();
    }
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember getMembers(int index) {
      return members_.get(index);
    }
    /**
     * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMemberOrBuilder getMembersOrBuilder(
        int index) {
      return members_.get(index);
    }

    // optional uint32 team_id = 5;
    public static final int TEAM_ID_FIELD_NUMBER = 5;
    private int teamId_;
    /**
     * <code>optional uint32 team_id = 5;</code>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 team_id = 5;</code>
     */
    public int getTeamId() {
      return teamId_;
    }

    // optional bool low_priority_status = 6;
    public static final int LOW_PRIORITY_STATUS_FIELD_NUMBER = 6;
    private boolean lowPriorityStatus_;
    /**
     * <code>optional bool low_priority_status = 6;</code>
     */
    public boolean hasLowPriorityStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool low_priority_status = 6;</code>
     */
    public boolean getLowPriorityStatus() {
      return lowPriorityStatus_;
    }

    // optional bool as_coach = 7;
    public static final int AS_COACH_FIELD_NUMBER = 7;
    private boolean asCoach_;
    /**
     * <code>optional bool as_coach = 7;</code>
     */
    public boolean hasAsCoach() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool as_coach = 7;</code>
     */
    public boolean getAsCoach() {
      return asCoach_;
    }

    // optional fixed64 invite_gid = 8;
    public static final int INVITE_GID_FIELD_NUMBER = 8;
    private long inviteGid_;
    /**
     * <code>optional fixed64 invite_gid = 8;</code>
     */
    public boolean hasInviteGid() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional fixed64 invite_gid = 8;</code>
     */
    public long getInviteGid() {
      return inviteGid_;
    }

    private void initFields() {
      groupId_ = 0L;
      senderId_ = 0L;
      senderName_ = "";
      members_ = java.util.Collections.emptyList();
      teamId_ = 0;
      lowPriorityStatus_ = false;
      asCoach_ = false;
      inviteGid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, groupId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, senderId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSenderNameBytes());
      }
      for (int i = 0; i < members_.size(); i++) {
        output.writeMessage(4, members_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, teamId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, lowPriorityStatus_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(7, asCoach_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFixed64(8, inviteGid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, groupId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, senderId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSenderNameBytes());
      }
      for (int i = 0; i < members_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, members_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, teamId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, lowPriorityStatus_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, asCoach_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(8, inviteGid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTAPartyInvite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInviteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyInvite_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyInvite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMembersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        groupId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        senderId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        senderName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          membersBuilder_.clear();
        }
        teamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        lowPriorityStatus_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        asCoach_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        inviteGid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPartyInvite_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.senderId_ = senderId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.senderName_ = senderName_;
        if (membersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            members_ = java.util.Collections.unmodifiableList(members_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.members_ = members_;
        } else {
          result.members_ = membersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lowPriorityStatus_ = lowPriorityStatus_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.asCoach_ = asCoach_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.inviteGid_ = inviteGid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.getDefaultInstance()) return this;
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasSenderId()) {
          setSenderId(other.getSenderId());
        }
        if (other.hasSenderName()) {
          bitField0_ |= 0x00000004;
          senderName_ = other.senderName_;
          onChanged();
        }
        if (membersBuilder_ == null) {
          if (!other.members_.isEmpty()) {
            if (members_.isEmpty()) {
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMembersIsMutable();
              members_.addAll(other.members_);
            }
            onChanged();
          }
        } else {
          if (!other.members_.isEmpty()) {
            if (membersBuilder_.isEmpty()) {
              membersBuilder_.dispose();
              membersBuilder_ = null;
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000008);
              membersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMembersFieldBuilder() : null;
            } else {
              membersBuilder_.addAllMessages(other.members_);
            }
          }
        }
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        if (other.hasLowPriorityStatus()) {
          setLowPriorityStatus(other.getLowPriorityStatus());
        }
        if (other.hasAsCoach()) {
          setAsCoach(other.getAsCoach());
        }
        if (other.hasInviteGid()) {
          setInviteGid(other.getInviteGid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 group_id = 1;
      private long groupId_ ;
      /**
       * <code>optional uint64 group_id = 1;</code>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 group_id = 1;</code>
       */
      public long getGroupId() {
        return groupId_;
      }
      /**
       * <code>optional uint64 group_id = 1;</code>
       */
      public Builder setGroupId(long value) {
        bitField0_ |= 0x00000001;
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 group_id = 1;</code>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        groupId_ = 0L;
        onChanged();
        return this;
      }

      // optional fixed64 sender_id = 2;
      private long senderId_ ;
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       */
      public boolean hasSenderId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       */
      public long getSenderId() {
        return senderId_;
      }
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       */
      public Builder setSenderId(long value) {
        bitField0_ |= 0x00000002;
        senderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       */
      public Builder clearSenderId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        senderId_ = 0L;
        onChanged();
        return this;
      }

      // optional string sender_name = 3;
      private java.lang.Object senderName_ = "";
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public boolean hasSenderName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public java.lang.String getSenderName() {
        java.lang.Object ref = senderName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          senderName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSenderNameBytes() {
        java.lang.Object ref = senderName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          senderName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public Builder setSenderName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        senderName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public Builder clearSenderName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        senderName_ = getDefaultInstance().getSenderName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public Builder setSenderNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        senderName_ = value;
        onChanged();
        return this;
      }

      // repeated .CSODOTAPartyInvite.PartyMember members = 4;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember> members_ =
        java.util.Collections.emptyList();
      private void ensureMembersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          members_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember>(members_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMemberOrBuilder> membersBuilder_;

      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember> getMembersList() {
        if (membersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(members_);
        } else {
          return membersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public int getMembersCount() {
        if (membersBuilder_ == null) {
          return members_.size();
        } else {
          return membersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember getMembers(int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);
        } else {
          return membersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder setMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.set(index, value);
          onChanged();
        } else {
          membersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder setMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.set(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder addMembers(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(value);
          onChanged();
        } else {
          membersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder addMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(index, value);
          onChanged();
        } else {
          membersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder addMembers(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder addMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder addAllMembers(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember> values) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          super.addAll(values, members_);
          onChanged();
        } else {
          membersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder clearMembers() {
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          membersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public Builder removeMembers(int index) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.remove(index);
          onChanged();
        } else {
          membersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder getMembersBuilder(
          int index) {
        return getMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMemberOrBuilder getMembersOrBuilder(
          int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);  } else {
          return membersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMemberOrBuilder> 
           getMembersOrBuilderList() {
        if (membersBuilder_ != null) {
          return membersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(members_);
        }
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder addMembersBuilder() {
        return getMembersFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder addMembersBuilder(
          int index) {
        return getMembersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTAPartyInvite.PartyMember members = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder> 
           getMembersBuilderList() {
        return getMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMemberOrBuilder> 
          getMembersFieldBuilder() {
        if (membersBuilder_ == null) {
          membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPartyInvite.PartyMemberOrBuilder>(
                  members_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          members_ = null;
        }
        return membersBuilder_;
      }

      // optional uint32 team_id = 5;
      private int teamId_ ;
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public Builder setTeamId(int value) {
        bitField0_ |= 0x00000010;
        teamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teamId_ = 0;
        onChanged();
        return this;
      }

      // optional bool low_priority_status = 6;
      private boolean lowPriorityStatus_ ;
      /**
       * <code>optional bool low_priority_status = 6;</code>
       */
      public boolean hasLowPriorityStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool low_priority_status = 6;</code>
       */
      public boolean getLowPriorityStatus() {
        return lowPriorityStatus_;
      }
      /**
       * <code>optional bool low_priority_status = 6;</code>
       */
      public Builder setLowPriorityStatus(boolean value) {
        bitField0_ |= 0x00000020;
        lowPriorityStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool low_priority_status = 6;</code>
       */
      public Builder clearLowPriorityStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lowPriorityStatus_ = false;
        onChanged();
        return this;
      }

      // optional bool as_coach = 7;
      private boolean asCoach_ ;
      /**
       * <code>optional bool as_coach = 7;</code>
       */
      public boolean hasAsCoach() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool as_coach = 7;</code>
       */
      public boolean getAsCoach() {
        return asCoach_;
      }
      /**
       * <code>optional bool as_coach = 7;</code>
       */
      public Builder setAsCoach(boolean value) {
        bitField0_ |= 0x00000040;
        asCoach_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool as_coach = 7;</code>
       */
      public Builder clearAsCoach() {
        bitField0_ = (bitField0_ & ~0x00000040);
        asCoach_ = false;
        onChanged();
        return this;
      }

      // optional fixed64 invite_gid = 8;
      private long inviteGid_ ;
      /**
       * <code>optional fixed64 invite_gid = 8;</code>
       */
      public boolean hasInviteGid() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional fixed64 invite_gid = 8;</code>
       */
      public long getInviteGid() {
        return inviteGid_;
      }
      /**
       * <code>optional fixed64 invite_gid = 8;</code>
       */
      public Builder setInviteGid(long value) {
        bitField0_ |= 0x00000080;
        inviteGid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 invite_gid = 8;</code>
       */
      public Builder clearInviteGid() {
        bitField0_ = (bitField0_ & ~0x00000080);
        inviteGid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTAPartyInvite)
    }

    static {
      defaultInstance = new CSODOTAPartyInvite(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSODOTAPartyInvite)
  }

  public interface CSODOTALobbyInviteOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 group_id = 1;
    /**
     * <code>optional uint64 group_id = 1;</code>
     */
    boolean hasGroupId();
    /**
     * <code>optional uint64 group_id = 1;</code>
     */
    long getGroupId();

    // optional fixed64 sender_id = 2;
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     */
    boolean hasSenderId();
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     */
    long getSenderId();

    // optional string sender_name = 3;
    /**
     * <code>optional string sender_name = 3;</code>
     */
    boolean hasSenderName();
    /**
     * <code>optional string sender_name = 3;</code>
     */
    java.lang.String getSenderName();
    /**
     * <code>optional string sender_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getSenderNameBytes();

    // repeated .CSODOTALobbyInvite.LobbyMember members = 4;
    /**
     * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember> 
        getMembersList();
    /**
     * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember getMembers(int index);
    /**
     * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
     */
    int getMembersCount();
    /**
     * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMemberOrBuilder> 
        getMembersOrBuilderList();
    /**
     * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMemberOrBuilder getMembersOrBuilder(
        int index);

    // optional uint64 custom_game_id = 5;
    /**
     * <code>optional uint64 custom_game_id = 5;</code>
     */
    boolean hasCustomGameId();
    /**
     * <code>optional uint64 custom_game_id = 5;</code>
     */
    long getCustomGameId();

    // optional fixed64 invite_gid = 6;
    /**
     * <code>optional fixed64 invite_gid = 6;</code>
     */
    boolean hasInviteGid();
    /**
     * <code>optional fixed64 invite_gid = 6;</code>
     */
    long getInviteGid();
  }
  /**
   * Protobuf type {@code CSODOTALobbyInvite}
   */
  public static final class CSODOTALobbyInvite extends
      com.google.protobuf.GeneratedMessage
      implements CSODOTALobbyInviteOrBuilder {
    // Use CSODOTALobbyInvite.newBuilder() to construct.
    private CSODOTALobbyInvite(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSODOTALobbyInvite(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSODOTALobbyInvite defaultInstance;
    public static CSODOTALobbyInvite getDefaultInstance() {
      return defaultInstance;
    }

    public CSODOTALobbyInvite getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSODOTALobbyInvite(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              groupId_ = input.readUInt64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              senderId_ = input.readFixed64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              senderName_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                members_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember>();
                mutable_bitField0_ |= 0x00000008;
              }
              members_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              customGameId_ = input.readUInt64();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000010;
              inviteGid_ = input.readFixed64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          members_ = java.util.Collections.unmodifiableList(members_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobbyInvite_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobbyInvite_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.Builder.class);
    }

    public static com.google.protobuf.Parser<CSODOTALobbyInvite> PARSER =
        new com.google.protobuf.AbstractParser<CSODOTALobbyInvite>() {
      public CSODOTALobbyInvite parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSODOTALobbyInvite(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTALobbyInvite> getParserForType() {
      return PARSER;
    }

    public interface LobbyMemberOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional string name = 1;
      /**
       * <code>optional string name = 1;</code>
       */
      boolean hasName();
      /**
       * <code>optional string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // optional fixed64 steam_id = 2;
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       */
      boolean hasSteamId();
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       */
      long getSteamId();
    }
    /**
     * Protobuf type {@code CSODOTALobbyInvite.LobbyMember}
     */
    public static final class LobbyMember extends
        com.google.protobuf.GeneratedMessage
        implements LobbyMemberOrBuilder {
      // Use LobbyMember.newBuilder() to construct.
      private LobbyMember(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private LobbyMember(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final LobbyMember defaultInstance;
      public static LobbyMember getDefaultInstance() {
        return defaultInstance;
      }

      public LobbyMember getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private LobbyMember(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                steamId_ = input.readFixed64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobbyInvite_LobbyMember_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobbyInvite_LobbyMember_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder.class);
      }

      public static com.google.protobuf.Parser<LobbyMember> PARSER =
          new com.google.protobuf.AbstractParser<LobbyMember>() {
        public LobbyMember parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new LobbyMember(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<LobbyMember> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional string name = 1;
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional fixed64 steam_id = 2;
      public static final int STEAM_ID_FIELD_NUMBER = 2;
      private long steamId_;
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       */
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 steam_id = 2;</code>
       */
      public long getSteamId() {
        return steamId_;
      }

      private void initFields() {
        name_ = "";
        steamId_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFixed64(2, steamId_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(2, steamId_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CSODOTALobbyInvite.LobbyMember}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMemberOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobbyInvite_LobbyMember_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobbyInvite_LobbyMember_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          steamId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobbyInvite_LobbyMember_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.steamId_ = steamId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasSteamId()) {
            setSteamId(other.getSteamId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional string name = 1;
        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 1;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // optional fixed64 steam_id = 2;
        private long steamId_ ;
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         */
        public boolean hasSteamId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         */
        public long getSteamId() {
          return steamId_;
        }
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         */
        public Builder setSteamId(long value) {
          bitField0_ |= 0x00000002;
          steamId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 steam_id = 2;</code>
         */
        public Builder clearSteamId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          steamId_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CSODOTALobbyInvite.LobbyMember)
      }

      static {
        defaultInstance = new LobbyMember(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CSODOTALobbyInvite.LobbyMember)
    }

    private int bitField0_;
    // optional uint64 group_id = 1;
    public static final int GROUP_ID_FIELD_NUMBER = 1;
    private long groupId_;
    /**
     * <code>optional uint64 group_id = 1;</code>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 group_id = 1;</code>
     */
    public long getGroupId() {
      return groupId_;
    }

    // optional fixed64 sender_id = 2;
    public static final int SENDER_ID_FIELD_NUMBER = 2;
    private long senderId_;
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     */
    public boolean hasSenderId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 sender_id = 2;</code>
     */
    public long getSenderId() {
      return senderId_;
    }

    // optional string sender_name = 3;
    public static final int SENDER_NAME_FIELD_NUMBER = 3;
    private java.lang.Object senderName_;
    /**
     * <code>optional string sender_name = 3;</code>
     */
    public boolean hasSenderName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string sender_name = 3;</code>
     */
    public java.lang.String getSenderName() {
      java.lang.Object ref = senderName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          senderName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sender_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSenderNameBytes() {
      java.lang.Object ref = senderName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        senderName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .CSODOTALobbyInvite.LobbyMember members = 4;
    public static final int MEMBERS_FIELD_NUMBER = 4;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember> members_;
    /**
     * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember> getMembersList() {
      return members_;
    }
    /**
     * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMemberOrBuilder> 
        getMembersOrBuilderList() {
      return members_;
    }
    /**
     * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
     */
    public int getMembersCount() {
      return members_.size();
    }
    /**
     * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember getMembers(int index) {
      return members_.get(index);
    }
    /**
     * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMemberOrBuilder getMembersOrBuilder(
        int index) {
      return members_.get(index);
    }

    // optional uint64 custom_game_id = 5;
    public static final int CUSTOM_GAME_ID_FIELD_NUMBER = 5;
    private long customGameId_;
    /**
     * <code>optional uint64 custom_game_id = 5;</code>
     */
    public boolean hasCustomGameId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 custom_game_id = 5;</code>
     */
    public long getCustomGameId() {
      return customGameId_;
    }

    // optional fixed64 invite_gid = 6;
    public static final int INVITE_GID_FIELD_NUMBER = 6;
    private long inviteGid_;
    /**
     * <code>optional fixed64 invite_gid = 6;</code>
     */
    public boolean hasInviteGid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional fixed64 invite_gid = 6;</code>
     */
    public long getInviteGid() {
      return inviteGid_;
    }

    private void initFields() {
      groupId_ = 0L;
      senderId_ = 0L;
      senderName_ = "";
      members_ = java.util.Collections.emptyList();
      customGameId_ = 0L;
      inviteGid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, groupId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, senderId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSenderNameBytes());
      }
      for (int i = 0; i < members_.size(); i++) {
        output.writeMessage(4, members_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(5, customGameId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFixed64(6, inviteGid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, groupId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, senderId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSenderNameBytes());
      }
      for (int i = 0; i < members_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, members_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, customGameId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(6, inviteGid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTALobbyInvite}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInviteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobbyInvite_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobbyInvite_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMembersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        groupId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        senderId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        senderName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          membersBuilder_.clear();
        }
        customGameId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        inviteGid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobbyInvite_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.senderId_ = senderId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.senderName_ = senderName_;
        if (membersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            members_ = java.util.Collections.unmodifiableList(members_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.members_ = members_;
        } else {
          result.members_ = membersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.customGameId_ = customGameId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.inviteGid_ = inviteGid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.getDefaultInstance()) return this;
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasSenderId()) {
          setSenderId(other.getSenderId());
        }
        if (other.hasSenderName()) {
          bitField0_ |= 0x00000004;
          senderName_ = other.senderName_;
          onChanged();
        }
        if (membersBuilder_ == null) {
          if (!other.members_.isEmpty()) {
            if (members_.isEmpty()) {
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMembersIsMutable();
              members_.addAll(other.members_);
            }
            onChanged();
          }
        } else {
          if (!other.members_.isEmpty()) {
            if (membersBuilder_.isEmpty()) {
              membersBuilder_.dispose();
              membersBuilder_ = null;
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000008);
              membersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMembersFieldBuilder() : null;
            } else {
              membersBuilder_.addAllMessages(other.members_);
            }
          }
        }
        if (other.hasCustomGameId()) {
          setCustomGameId(other.getCustomGameId());
        }
        if (other.hasInviteGid()) {
          setInviteGid(other.getInviteGid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 group_id = 1;
      private long groupId_ ;
      /**
       * <code>optional uint64 group_id = 1;</code>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 group_id = 1;</code>
       */
      public long getGroupId() {
        return groupId_;
      }
      /**
       * <code>optional uint64 group_id = 1;</code>
       */
      public Builder setGroupId(long value) {
        bitField0_ |= 0x00000001;
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 group_id = 1;</code>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        groupId_ = 0L;
        onChanged();
        return this;
      }

      // optional fixed64 sender_id = 2;
      private long senderId_ ;
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       */
      public boolean hasSenderId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       */
      public long getSenderId() {
        return senderId_;
      }
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       */
      public Builder setSenderId(long value) {
        bitField0_ |= 0x00000002;
        senderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 sender_id = 2;</code>
       */
      public Builder clearSenderId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        senderId_ = 0L;
        onChanged();
        return this;
      }

      // optional string sender_name = 3;
      private java.lang.Object senderName_ = "";
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public boolean hasSenderName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public java.lang.String getSenderName() {
        java.lang.Object ref = senderName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          senderName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSenderNameBytes() {
        java.lang.Object ref = senderName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          senderName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public Builder setSenderName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        senderName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public Builder clearSenderName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        senderName_ = getDefaultInstance().getSenderName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sender_name = 3;</code>
       */
      public Builder setSenderNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        senderName_ = value;
        onChanged();
        return this;
      }

      // repeated .CSODOTALobbyInvite.LobbyMember members = 4;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember> members_ =
        java.util.Collections.emptyList();
      private void ensureMembersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          members_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember>(members_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMemberOrBuilder> membersBuilder_;

      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember> getMembersList() {
        if (membersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(members_);
        } else {
          return membersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public int getMembersCount() {
        if (membersBuilder_ == null) {
          return members_.size();
        } else {
          return membersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember getMembers(int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);
        } else {
          return membersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public Builder setMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.set(index, value);
          onChanged();
        } else {
          membersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public Builder setMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.set(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public Builder addMembers(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(value);
          onChanged();
        } else {
          membersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public Builder addMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(index, value);
          onChanged();
        } else {
          membersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public Builder addMembers(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public Builder addMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public Builder addAllMembers(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember> values) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          super.addAll(values, members_);
          onChanged();
        } else {
          membersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public Builder clearMembers() {
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          membersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public Builder removeMembers(int index) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.remove(index);
          onChanged();
        } else {
          membersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder getMembersBuilder(
          int index) {
        return getMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMemberOrBuilder getMembersOrBuilder(
          int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);  } else {
          return membersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMemberOrBuilder> 
           getMembersOrBuilderList() {
        if (membersBuilder_ != null) {
          return membersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(members_);
        }
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder addMembersBuilder() {
        return getMembersFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder addMembersBuilder(
          int index) {
        return getMembersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTALobbyInvite.LobbyMember members = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder> 
           getMembersBuilderList() {
        return getMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMemberOrBuilder> 
          getMembersFieldBuilder() {
        if (membersBuilder_ == null) {
          membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyInvite.LobbyMemberOrBuilder>(
                  members_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          members_ = null;
        }
        return membersBuilder_;
      }

      // optional uint64 custom_game_id = 5;
      private long customGameId_ ;
      /**
       * <code>optional uint64 custom_game_id = 5;</code>
       */
      public boolean hasCustomGameId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 custom_game_id = 5;</code>
       */
      public long getCustomGameId() {
        return customGameId_;
      }
      /**
       * <code>optional uint64 custom_game_id = 5;</code>
       */
      public Builder setCustomGameId(long value) {
        bitField0_ |= 0x00000010;
        customGameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 custom_game_id = 5;</code>
       */
      public Builder clearCustomGameId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        customGameId_ = 0L;
        onChanged();
        return this;
      }

      // optional fixed64 invite_gid = 6;
      private long inviteGid_ ;
      /**
       * <code>optional fixed64 invite_gid = 6;</code>
       */
      public boolean hasInviteGid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional fixed64 invite_gid = 6;</code>
       */
      public long getInviteGid() {
        return inviteGid_;
      }
      /**
       * <code>optional fixed64 invite_gid = 6;</code>
       */
      public Builder setInviteGid(long value) {
        bitField0_ |= 0x00000020;
        inviteGid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 invite_gid = 6;</code>
       */
      public Builder clearInviteGid() {
        bitField0_ = (bitField0_ & ~0x00000020);
        inviteGid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTALobbyInvite)
    }

    static {
      defaultInstance = new CSODOTALobbyInvite(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSODOTALobbyInvite)
  }

  public interface CDOTASaveGameOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 match_id = 5;
    /**
     * <code>optional uint64 match_id = 5;</code>
     */
    boolean hasMatchId();
    /**
     * <code>optional uint64 match_id = 5;</code>
     */
    long getMatchId();

    // optional uint32 save_time = 2;
    /**
     * <code>optional uint32 save_time = 2;</code>
     */
    boolean hasSaveTime();
    /**
     * <code>optional uint32 save_time = 2;</code>
     */
    int getSaveTime();

    // repeated .CDOTASaveGame.Player players = 3;
    /**
     * <code>repeated .CDOTASaveGame.Player players = 3;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player> 
        getPlayersList();
    /**
     * <code>repeated .CDOTASaveGame.Player players = 3;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player getPlayers(int index);
    /**
     * <code>repeated .CDOTASaveGame.Player players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .CDOTASaveGame.Player players = 3;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .CDOTASaveGame.Player players = 3;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PlayerOrBuilder getPlayersOrBuilder(
        int index);

    // repeated .CDOTASaveGame.SaveInstance save_instances = 4;
    /**
     * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance> 
        getSaveInstancesList();
    /**
     * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance getSaveInstances(int index);
    /**
     * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    int getSaveInstancesCount();
    /**
     * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstanceOrBuilder> 
        getSaveInstancesOrBuilderList();
    /**
     * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstanceOrBuilder getSaveInstancesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDOTASaveGame}
   */
  public static final class CDOTASaveGame extends
      com.google.protobuf.GeneratedMessage
      implements CDOTASaveGameOrBuilder {
    // Use CDOTASaveGame.newBuilder() to construct.
    private CDOTASaveGame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTASaveGame(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTASaveGame defaultInstance;
    public static CDOTASaveGame getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTASaveGame getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTASaveGame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              saveTime_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                players_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player>();
                mutable_bitField0_ |= 0x00000004;
              }
              players_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                saveInstances_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance>();
                mutable_bitField0_ |= 0x00000008;
              }
              saveInstances_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000001;
              matchId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          saveInstances_ = java.util.Collections.unmodifiableList(saveInstances_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTASaveGame> PARSER =
        new com.google.protobuf.AbstractParser<CDOTASaveGame>() {
      public CDOTASaveGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTASaveGame(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTASaveGame> getParserForType() {
      return PARSER;
    }

    public interface PlayerOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];
      /**
       * <code>optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      boolean hasTeam();
      /**
       * <code>optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM getTeam();

      // optional string name = 2;
      /**
       * <code>optional string name = 2;</code>
       */
      boolean hasName();
      /**
       * <code>optional string name = 2;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // optional string hero = 3;
      /**
       * <code>optional string hero = 3;</code>
       */
      boolean hasHero();
      /**
       * <code>optional string hero = 3;</code>
       */
      java.lang.String getHero();
      /**
       * <code>optional string hero = 3;</code>
       */
      com.google.protobuf.ByteString
          getHeroBytes();
    }
    /**
     * Protobuf type {@code CDOTASaveGame.Player}
     */
    public static final class Player extends
        com.google.protobuf.GeneratedMessage
        implements PlayerOrBuilder {
      // Use Player.newBuilder() to construct.
      private Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Player(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Player defaultInstance;
      public static Player getDefaultInstance() {
        return defaultInstance;
      }

      public Player getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Player(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  team_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                name_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                hero_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_Player_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_Player_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder.class);
      }

      public static com.google.protobuf.Parser<Player> PARSER =
          new com.google.protobuf.AbstractParser<Player>() {
        public Player parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Player(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Player> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];
      public static final int TEAM_FIELD_NUMBER = 1;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM team_;
      /**
       * <code>optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM getTeam() {
        return team_;
      }

      // optional string name = 2;
      public static final int NAME_FIELD_NUMBER = 2;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string hero = 3;
      public static final int HERO_FIELD_NUMBER = 3;
      private java.lang.Object hero_;
      /**
       * <code>optional string hero = 3;</code>
       */
      public boolean hasHero() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string hero = 3;</code>
       */
      public java.lang.String getHero() {
        java.lang.Object ref = hero_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hero_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string hero = 3;</code>
       */
      public com.google.protobuf.ByteString
          getHeroBytes() {
        java.lang.Object ref = hero_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hero_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        team_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
        name_ = "";
        hero_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, team_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getHeroBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, team_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getHeroBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTASaveGame.Player}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PlayerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_Player_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_Player_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          team_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          hero_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_Player_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.team_ = team_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.hero_ = hero_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.getDefaultInstance()) return this;
          if (other.hasTeam()) {
            setTeam(other.getTeam());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000002;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasHero()) {
            bitField0_ |= 0x00000004;
            hero_ = other.hero_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];
        private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM team_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
        /**
         * <code>optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
         */
        public boolean hasTeam() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM getTeam() {
          return team_;
        }
        /**
         * <code>optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
         */
        public Builder setTeam(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          team_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
         */
        public Builder clearTeam() {
          bitField0_ = (bitField0_ & ~0x00000001);
          team_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
          onChanged();
          return this;
        }

        // optional string name = 2;
        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }

        // optional string hero = 3;
        private java.lang.Object hero_ = "";
        /**
         * <code>optional string hero = 3;</code>
         */
        public boolean hasHero() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string hero = 3;</code>
         */
        public java.lang.String getHero() {
          java.lang.Object ref = hero_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            hero_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string hero = 3;</code>
         */
        public com.google.protobuf.ByteString
            getHeroBytes() {
          java.lang.Object ref = hero_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            hero_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string hero = 3;</code>
         */
        public Builder setHero(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          hero_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string hero = 3;</code>
         */
        public Builder clearHero() {
          bitField0_ = (bitField0_ & ~0x00000004);
          hero_ = getDefaultInstance().getHero();
          onChanged();
          return this;
        }
        /**
         * <code>optional string hero = 3;</code>
         */
        public Builder setHeroBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          hero_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTASaveGame.Player)
      }

      static {
        defaultInstance = new Player(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTASaveGame.Player)
    }

    public interface SaveInstanceOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 game_time = 2;
      /**
       * <code>optional uint32 game_time = 2;</code>
       */
      boolean hasGameTime();
      /**
       * <code>optional uint32 game_time = 2;</code>
       */
      int getGameTime();

      // optional uint32 team1_score = 3;
      /**
       * <code>optional uint32 team1_score = 3;</code>
       */
      boolean hasTeam1Score();
      /**
       * <code>optional uint32 team1_score = 3;</code>
       */
      int getTeam1Score();

      // optional uint32 team2_score = 4;
      /**
       * <code>optional uint32 team2_score = 4;</code>
       */
      boolean hasTeam2Score();
      /**
       * <code>optional uint32 team2_score = 4;</code>
       */
      int getTeam2Score();

      // repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions> 
          getPlayerPositionsList();
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions getPlayerPositions(int index);
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      int getPlayerPositionsCount();
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder> 
          getPlayerPositionsOrBuilderList();
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder getPlayerPositionsOrBuilder(
          int index);

      // optional uint32 save_id = 6;
      /**
       * <code>optional uint32 save_id = 6;</code>
       */
      boolean hasSaveId();
      /**
       * <code>optional uint32 save_id = 6;</code>
       */
      int getSaveId();

      // optional uint32 save_time = 7;
      /**
       * <code>optional uint32 save_time = 7;</code>
       */
      boolean hasSaveTime();
      /**
       * <code>optional uint32 save_time = 7;</code>
       */
      int getSaveTime();
    }
    /**
     * Protobuf type {@code CDOTASaveGame.SaveInstance}
     */
    public static final class SaveInstance extends
        com.google.protobuf.GeneratedMessage
        implements SaveInstanceOrBuilder {
      // Use SaveInstance.newBuilder() to construct.
      private SaveInstance(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SaveInstance(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SaveInstance defaultInstance;
      public static SaveInstance getDefaultInstance() {
        return defaultInstance;
      }

      public SaveInstance getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SaveInstance(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 16: {
                bitField0_ |= 0x00000001;
                gameTime_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                team1Score_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000004;
                team2Score_ = input.readUInt32();
                break;
              }
              case 42: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  playerPositions_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions>();
                  mutable_bitField0_ |= 0x00000008;
                }
                playerPositions_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.PARSER, extensionRegistry));
                break;
              }
              case 48: {
                bitField0_ |= 0x00000008;
                saveId_ = input.readUInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000010;
                saveTime_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            playerPositions_ = java.util.Collections.unmodifiableList(playerPositions_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_SaveInstance_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_SaveInstance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder.class);
      }

      public static com.google.protobuf.Parser<SaveInstance> PARSER =
          new com.google.protobuf.AbstractParser<SaveInstance>() {
        public SaveInstance parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SaveInstance(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SaveInstance> getParserForType() {
        return PARSER;
      }

      public interface PlayerPositionsOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional float x = 1;
        /**
         * <code>optional float x = 1;</code>
         */
        boolean hasX();
        /**
         * <code>optional float x = 1;</code>
         */
        float getX();

        // optional float y = 2;
        /**
         * <code>optional float y = 2;</code>
         */
        boolean hasY();
        /**
         * <code>optional float y = 2;</code>
         */
        float getY();
      }
      /**
       * Protobuf type {@code CDOTASaveGame.SaveInstance.PlayerPositions}
       */
      public static final class PlayerPositions extends
          com.google.protobuf.GeneratedMessage
          implements PlayerPositionsOrBuilder {
        // Use PlayerPositions.newBuilder() to construct.
        private PlayerPositions(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private PlayerPositions(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final PlayerPositions defaultInstance;
        public static PlayerPositions getDefaultInstance() {
          return defaultInstance;
        }

        public PlayerPositions getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private PlayerPositions(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {
                  bitField0_ |= 0x00000001;
                  x_ = input.readFloat();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  y_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_SaveInstance_PlayerPositions_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder.class);
        }

        public static com.google.protobuf.Parser<PlayerPositions> PARSER =
            new com.google.protobuf.AbstractParser<PlayerPositions>() {
          public PlayerPositions parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new PlayerPositions(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<PlayerPositions> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional float x = 1;
        public static final int X_FIELD_NUMBER = 1;
        private float x_;
        /**
         * <code>optional float x = 1;</code>
         */
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional float x = 1;</code>
         */
        public float getX() {
          return x_;
        }

        // optional float y = 2;
        public static final int Y_FIELD_NUMBER = 2;
        private float y_;
        /**
         * <code>optional float y = 2;</code>
         */
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float y = 2;</code>
         */
        public float getY() {
          return y_;
        }

        private void initFields() {
          x_ = 0F;
          y_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeFloat(1, x_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, y_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, x_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, y_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CDOTASaveGame.SaveInstance.PlayerPositions}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_SaveInstance_PlayerPositions_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder.class);
          }

          // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            x_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000001);
            y_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions getDefaultInstanceForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.getDefaultInstance();
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions build() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions buildPartial() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.x_ = x_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.y_ = y_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions) {
              return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions other) {
            if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.getDefaultInstance()) return this;
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional float x = 1;
          private float x_ ;
          /**
           * <code>optional float x = 1;</code>
           */
          public boolean hasX() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional float x = 1;</code>
           */
          public float getX() {
            return x_;
          }
          /**
           * <code>optional float x = 1;</code>
           */
          public Builder setX(float value) {
            bitField0_ |= 0x00000001;
            x_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float x = 1;</code>
           */
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0F;
            onChanged();
            return this;
          }

          // optional float y = 2;
          private float y_ ;
          /**
           * <code>optional float y = 2;</code>
           */
          public boolean hasY() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional float y = 2;</code>
           */
          public float getY() {
            return y_;
          }
          /**
           * <code>optional float y = 2;</code>
           */
          public Builder setY(float value) {
            bitField0_ |= 0x00000002;
            y_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float y = 2;</code>
           */
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CDOTASaveGame.SaveInstance.PlayerPositions)
        }

        static {
          defaultInstance = new PlayerPositions(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CDOTASaveGame.SaveInstance.PlayerPositions)
      }

      private int bitField0_;
      // optional uint32 game_time = 2;
      public static final int GAME_TIME_FIELD_NUMBER = 2;
      private int gameTime_;
      /**
       * <code>optional uint32 game_time = 2;</code>
       */
      public boolean hasGameTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 game_time = 2;</code>
       */
      public int getGameTime() {
        return gameTime_;
      }

      // optional uint32 team1_score = 3;
      public static final int TEAM1_SCORE_FIELD_NUMBER = 3;
      private int team1Score_;
      /**
       * <code>optional uint32 team1_score = 3;</code>
       */
      public boolean hasTeam1Score() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team1_score = 3;</code>
       */
      public int getTeam1Score() {
        return team1Score_;
      }

      // optional uint32 team2_score = 4;
      public static final int TEAM2_SCORE_FIELD_NUMBER = 4;
      private int team2Score_;
      /**
       * <code>optional uint32 team2_score = 4;</code>
       */
      public boolean hasTeam2Score() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 team2_score = 4;</code>
       */
      public int getTeam2Score() {
        return team2Score_;
      }

      // repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;
      public static final int PLAYER_POSITIONS_FIELD_NUMBER = 5;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions> playerPositions_;
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions> getPlayerPositionsList() {
        return playerPositions_;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder> 
          getPlayerPositionsOrBuilderList() {
        return playerPositions_;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      public int getPlayerPositionsCount() {
        return playerPositions_.size();
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions getPlayerPositions(int index) {
        return playerPositions_.get(index);
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder getPlayerPositionsOrBuilder(
          int index) {
        return playerPositions_.get(index);
      }

      // optional uint32 save_id = 6;
      public static final int SAVE_ID_FIELD_NUMBER = 6;
      private int saveId_;
      /**
       * <code>optional uint32 save_id = 6;</code>
       */
      public boolean hasSaveId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 save_id = 6;</code>
       */
      public int getSaveId() {
        return saveId_;
      }

      // optional uint32 save_time = 7;
      public static final int SAVE_TIME_FIELD_NUMBER = 7;
      private int saveTime_;
      /**
       * <code>optional uint32 save_time = 7;</code>
       */
      public boolean hasSaveTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 save_time = 7;</code>
       */
      public int getSaveTime() {
        return saveTime_;
      }

      private void initFields() {
        gameTime_ = 0;
        team1Score_ = 0;
        team2Score_ = 0;
        playerPositions_ = java.util.Collections.emptyList();
        saveId_ = 0;
        saveTime_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(2, gameTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(3, team1Score_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(4, team2Score_);
        }
        for (int i = 0; i < playerPositions_.size(); i++) {
          output.writeMessage(5, playerPositions_.get(i));
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(6, saveId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(7, saveTime_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, gameTime_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, team1Score_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, team2Score_);
        }
        for (int i = 0; i < playerPositions_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, playerPositions_.get(i));
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, saveId_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, saveTime_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTASaveGame.SaveInstance}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstanceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_SaveInstance_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_SaveInstance_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPlayerPositionsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          gameTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          team1Score_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          team2Score_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          if (playerPositionsBuilder_ == null) {
            playerPositions_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            playerPositionsBuilder_.clear();
          }
          saveId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          saveTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_SaveInstance_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.gameTime_ = gameTime_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.team1Score_ = team1Score_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.team2Score_ = team2Score_;
          if (playerPositionsBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              playerPositions_ = java.util.Collections.unmodifiableList(playerPositions_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.playerPositions_ = playerPositions_;
          } else {
            result.playerPositions_ = playerPositionsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000008;
          }
          result.saveId_ = saveId_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000010;
          }
          result.saveTime_ = saveTime_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.getDefaultInstance()) return this;
          if (other.hasGameTime()) {
            setGameTime(other.getGameTime());
          }
          if (other.hasTeam1Score()) {
            setTeam1Score(other.getTeam1Score());
          }
          if (other.hasTeam2Score()) {
            setTeam2Score(other.getTeam2Score());
          }
          if (playerPositionsBuilder_ == null) {
            if (!other.playerPositions_.isEmpty()) {
              if (playerPositions_.isEmpty()) {
                playerPositions_ = other.playerPositions_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensurePlayerPositionsIsMutable();
                playerPositions_.addAll(other.playerPositions_);
              }
              onChanged();
            }
          } else {
            if (!other.playerPositions_.isEmpty()) {
              if (playerPositionsBuilder_.isEmpty()) {
                playerPositionsBuilder_.dispose();
                playerPositionsBuilder_ = null;
                playerPositions_ = other.playerPositions_;
                bitField0_ = (bitField0_ & ~0x00000008);
                playerPositionsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPlayerPositionsFieldBuilder() : null;
              } else {
                playerPositionsBuilder_.addAllMessages(other.playerPositions_);
              }
            }
          }
          if (other.hasSaveId()) {
            setSaveId(other.getSaveId());
          }
          if (other.hasSaveTime()) {
            setSaveTime(other.getSaveTime());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 game_time = 2;
        private int gameTime_ ;
        /**
         * <code>optional uint32 game_time = 2;</code>
         */
        public boolean hasGameTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 game_time = 2;</code>
         */
        public int getGameTime() {
          return gameTime_;
        }
        /**
         * <code>optional uint32 game_time = 2;</code>
         */
        public Builder setGameTime(int value) {
          bitField0_ |= 0x00000001;
          gameTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 game_time = 2;</code>
         */
        public Builder clearGameTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          gameTime_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 team1_score = 3;
        private int team1Score_ ;
        /**
         * <code>optional uint32 team1_score = 3;</code>
         */
        public boolean hasTeam1Score() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 team1_score = 3;</code>
         */
        public int getTeam1Score() {
          return team1Score_;
        }
        /**
         * <code>optional uint32 team1_score = 3;</code>
         */
        public Builder setTeam1Score(int value) {
          bitField0_ |= 0x00000002;
          team1Score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team1_score = 3;</code>
         */
        public Builder clearTeam1Score() {
          bitField0_ = (bitField0_ & ~0x00000002);
          team1Score_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 team2_score = 4;
        private int team2Score_ ;
        /**
         * <code>optional uint32 team2_score = 4;</code>
         */
        public boolean hasTeam2Score() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 team2_score = 4;</code>
         */
        public int getTeam2Score() {
          return team2Score_;
        }
        /**
         * <code>optional uint32 team2_score = 4;</code>
         */
        public Builder setTeam2Score(int value) {
          bitField0_ |= 0x00000004;
          team2Score_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team2_score = 4;</code>
         */
        public Builder clearTeam2Score() {
          bitField0_ = (bitField0_ & ~0x00000004);
          team2Score_ = 0;
          onChanged();
          return this;
        }

        // repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;
        private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions> playerPositions_ =
          java.util.Collections.emptyList();
        private void ensurePlayerPositionsIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            playerPositions_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions>(playerPositions_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder> playerPositionsBuilder_;

        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions> getPlayerPositionsList() {
          if (playerPositionsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(playerPositions_);
          } else {
            return playerPositionsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public int getPlayerPositionsCount() {
          if (playerPositionsBuilder_ == null) {
            return playerPositions_.size();
          } else {
            return playerPositionsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions getPlayerPositions(int index) {
          if (playerPositionsBuilder_ == null) {
            return playerPositions_.get(index);
          } else {
            return playerPositionsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder setPlayerPositions(
            int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions value) {
          if (playerPositionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayerPositionsIsMutable();
            playerPositions_.set(index, value);
            onChanged();
          } else {
            playerPositionsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder setPlayerPositions(
            int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder builderForValue) {
          if (playerPositionsBuilder_ == null) {
            ensurePlayerPositionsIsMutable();
            playerPositions_.set(index, builderForValue.build());
            onChanged();
          } else {
            playerPositionsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder addPlayerPositions(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions value) {
          if (playerPositionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayerPositionsIsMutable();
            playerPositions_.add(value);
            onChanged();
          } else {
            playerPositionsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder addPlayerPositions(
            int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions value) {
          if (playerPositionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayerPositionsIsMutable();
            playerPositions_.add(index, value);
            onChanged();
          } else {
            playerPositionsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder addPlayerPositions(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder builderForValue) {
          if (playerPositionsBuilder_ == null) {
            ensurePlayerPositionsIsMutable();
            playerPositions_.add(builderForValue.build());
            onChanged();
          } else {
            playerPositionsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder addPlayerPositions(
            int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder builderForValue) {
          if (playerPositionsBuilder_ == null) {
            ensurePlayerPositionsIsMutable();
            playerPositions_.add(index, builderForValue.build());
            onChanged();
          } else {
            playerPositionsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder addAllPlayerPositions(
            java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions> values) {
          if (playerPositionsBuilder_ == null) {
            ensurePlayerPositionsIsMutable();
            super.addAll(values, playerPositions_);
            onChanged();
          } else {
            playerPositionsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder clearPlayerPositions() {
          if (playerPositionsBuilder_ == null) {
            playerPositions_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            playerPositionsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder removePlayerPositions(int index) {
          if (playerPositionsBuilder_ == null) {
            ensurePlayerPositionsIsMutable();
            playerPositions_.remove(index);
            onChanged();
          } else {
            playerPositionsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder getPlayerPositionsBuilder(
            int index) {
          return getPlayerPositionsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder getPlayerPositionsOrBuilder(
            int index) {
          if (playerPositionsBuilder_ == null) {
            return playerPositions_.get(index);  } else {
            return playerPositionsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder> 
             getPlayerPositionsOrBuilderList() {
          if (playerPositionsBuilder_ != null) {
            return playerPositionsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(playerPositions_);
          }
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder addPlayerPositionsBuilder() {
          return getPlayerPositionsFieldBuilder().addBuilder(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder addPlayerPositionsBuilder(
            int index) {
          return getPlayerPositionsFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.getDefaultInstance());
        }
        /**
         * <code>repeated .CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder> 
             getPlayerPositionsBuilderList() {
          return getPlayerPositionsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder> 
            getPlayerPositionsFieldBuilder() {
          if (playerPositionsBuilder_ == null) {
            playerPositionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositions.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder>(
                    playerPositions_,
                    ((bitField0_ & 0x00000008) == 0x00000008),
                    getParentForChildren(),
                    isClean());
            playerPositions_ = null;
          }
          return playerPositionsBuilder_;
        }

        // optional uint32 save_id = 6;
        private int saveId_ ;
        /**
         * <code>optional uint32 save_id = 6;</code>
         */
        public boolean hasSaveId() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 save_id = 6;</code>
         */
        public int getSaveId() {
          return saveId_;
        }
        /**
         * <code>optional uint32 save_id = 6;</code>
         */
        public Builder setSaveId(int value) {
          bitField0_ |= 0x00000010;
          saveId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 save_id = 6;</code>
         */
        public Builder clearSaveId() {
          bitField0_ = (bitField0_ & ~0x00000010);
          saveId_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 save_time = 7;
        private int saveTime_ ;
        /**
         * <code>optional uint32 save_time = 7;</code>
         */
        public boolean hasSaveTime() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 save_time = 7;</code>
         */
        public int getSaveTime() {
          return saveTime_;
        }
        /**
         * <code>optional uint32 save_time = 7;</code>
         */
        public Builder setSaveTime(int value) {
          bitField0_ |= 0x00000020;
          saveTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 save_time = 7;</code>
         */
        public Builder clearSaveTime() {
          bitField0_ = (bitField0_ & ~0x00000020);
          saveTime_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTASaveGame.SaveInstance)
      }

      static {
        defaultInstance = new SaveInstance(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTASaveGame.SaveInstance)
    }

    private int bitField0_;
    // optional uint64 match_id = 5;
    public static final int MATCH_ID_FIELD_NUMBER = 5;
    private long matchId_;
    /**
     * <code>optional uint64 match_id = 5;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 match_id = 5;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    // optional uint32 save_time = 2;
    public static final int SAVE_TIME_FIELD_NUMBER = 2;
    private int saveTime_;
    /**
     * <code>optional uint32 save_time = 2;</code>
     */
    public boolean hasSaveTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 save_time = 2;</code>
     */
    public int getSaveTime() {
      return saveTime_;
    }

    // repeated .CDOTASaveGame.Player players = 3;
    public static final int PLAYERS_FIELD_NUMBER = 3;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player> players_;
    /**
     * <code>repeated .CDOTASaveGame.Player players = 3;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .CDOTASaveGame.Player players = 3;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .CDOTASaveGame.Player players = 3;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .CDOTASaveGame.Player players = 3;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .CDOTASaveGame.Player players = 3;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated .CDOTASaveGame.SaveInstance save_instances = 4;
    public static final int SAVE_INSTANCES_FIELD_NUMBER = 4;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance> saveInstances_;
    /**
     * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance> getSaveInstancesList() {
      return saveInstances_;
    }
    /**
     * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstanceOrBuilder> 
        getSaveInstancesOrBuilderList() {
      return saveInstances_;
    }
    /**
     * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    public int getSaveInstancesCount() {
      return saveInstances_.size();
    }
    /**
     * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance getSaveInstances(int index) {
      return saveInstances_.get(index);
    }
    /**
     * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstanceOrBuilder getSaveInstancesOrBuilder(
        int index) {
      return saveInstances_.get(index);
    }

    private void initFields() {
      matchId_ = 0L;
      saveTime_ = 0;
      players_ = java.util.Collections.emptyList();
      saveInstances_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, saveTime_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      for (int i = 0; i < saveInstances_.size(); i++) {
        output.writeMessage(4, saveInstances_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(5, matchId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, saveTime_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      for (int i = 0; i < saveInstances_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, saveInstances_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, matchId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTASaveGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
          getSaveInstancesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        saveTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          playersBuilder_.clear();
        }
        if (saveInstancesBuilder_ == null) {
          saveInstances_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          saveInstancesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTASaveGame_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.saveTime_ = saveTime_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (saveInstancesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            saveInstances_ = java.util.Collections.unmodifiableList(saveInstances_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.saveInstances_ = saveInstances_;
        } else {
          result.saveInstances_ = saveInstancesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.getDefaultInstance()) return this;
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasSaveTime()) {
          setSaveTime(other.getSaveTime());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (saveInstancesBuilder_ == null) {
          if (!other.saveInstances_.isEmpty()) {
            if (saveInstances_.isEmpty()) {
              saveInstances_ = other.saveInstances_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSaveInstancesIsMutable();
              saveInstances_.addAll(other.saveInstances_);
            }
            onChanged();
          }
        } else {
          if (!other.saveInstances_.isEmpty()) {
            if (saveInstancesBuilder_.isEmpty()) {
              saveInstancesBuilder_.dispose();
              saveInstancesBuilder_ = null;
              saveInstances_ = other.saveInstances_;
              bitField0_ = (bitField0_ & ~0x00000008);
              saveInstancesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSaveInstancesFieldBuilder() : null;
            } else {
              saveInstancesBuilder_.addAllMessages(other.saveInstances_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 match_id = 5;
      private long matchId_ ;
      /**
       * <code>optional uint64 match_id = 5;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 match_id = 5;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint64 match_id = 5;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00000001;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_id = 5;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 save_time = 2;
      private int saveTime_ ;
      /**
       * <code>optional uint32 save_time = 2;</code>
       */
      public boolean hasSaveTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 save_time = 2;</code>
       */
      public int getSaveTime() {
        return saveTime_;
      }
      /**
       * <code>optional uint32 save_time = 2;</code>
       */
      public Builder setSaveTime(int value) {
        bitField0_ |= 0x00000002;
        saveTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 save_time = 2;</code>
       */
      public Builder clearSaveTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        saveTime_ = 0;
        onChanged();
        return this;
      }

      // repeated .CDOTASaveGame.Player players = 3;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          players_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public Builder setPlayers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public Builder setPlayers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public Builder addPlayers(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public Builder addPlayers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public Builder addPlayers(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public Builder addPlayers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTASaveGame.Player players = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Player.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated .CDOTASaveGame.SaveInstance save_instances = 4;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance> saveInstances_ =
        java.util.Collections.emptyList();
      private void ensureSaveInstancesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          saveInstances_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance>(saveInstances_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstanceOrBuilder> saveInstancesBuilder_;

      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance> getSaveInstancesList() {
        if (saveInstancesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(saveInstances_);
        } else {
          return saveInstancesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public int getSaveInstancesCount() {
        if (saveInstancesBuilder_ == null) {
          return saveInstances_.size();
        } else {
          return saveInstancesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance getSaveInstances(int index) {
        if (saveInstancesBuilder_ == null) {
          return saveInstances_.get(index);
        } else {
          return saveInstancesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder setSaveInstances(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance value) {
        if (saveInstancesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSaveInstancesIsMutable();
          saveInstances_.set(index, value);
          onChanged();
        } else {
          saveInstancesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder setSaveInstances(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder builderForValue) {
        if (saveInstancesBuilder_ == null) {
          ensureSaveInstancesIsMutable();
          saveInstances_.set(index, builderForValue.build());
          onChanged();
        } else {
          saveInstancesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder addSaveInstances(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance value) {
        if (saveInstancesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSaveInstancesIsMutable();
          saveInstances_.add(value);
          onChanged();
        } else {
          saveInstancesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder addSaveInstances(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance value) {
        if (saveInstancesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSaveInstancesIsMutable();
          saveInstances_.add(index, value);
          onChanged();
        } else {
          saveInstancesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder addSaveInstances(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder builderForValue) {
        if (saveInstancesBuilder_ == null) {
          ensureSaveInstancesIsMutable();
          saveInstances_.add(builderForValue.build());
          onChanged();
        } else {
          saveInstancesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder addSaveInstances(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder builderForValue) {
        if (saveInstancesBuilder_ == null) {
          ensureSaveInstancesIsMutable();
          saveInstances_.add(index, builderForValue.build());
          onChanged();
        } else {
          saveInstancesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder addAllSaveInstances(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance> values) {
        if (saveInstancesBuilder_ == null) {
          ensureSaveInstancesIsMutable();
          super.addAll(values, saveInstances_);
          onChanged();
        } else {
          saveInstancesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder clearSaveInstances() {
        if (saveInstancesBuilder_ == null) {
          saveInstances_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          saveInstancesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder removeSaveInstances(int index) {
        if (saveInstancesBuilder_ == null) {
          ensureSaveInstancesIsMutable();
          saveInstances_.remove(index);
          onChanged();
        } else {
          saveInstancesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder getSaveInstancesBuilder(
          int index) {
        return getSaveInstancesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstanceOrBuilder getSaveInstancesOrBuilder(
          int index) {
        if (saveInstancesBuilder_ == null) {
          return saveInstances_.get(index);  } else {
          return saveInstancesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstanceOrBuilder> 
           getSaveInstancesOrBuilderList() {
        if (saveInstancesBuilder_ != null) {
          return saveInstancesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(saveInstances_);
        }
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder addSaveInstancesBuilder() {
        return getSaveInstancesFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder addSaveInstancesBuilder(
          int index) {
        return getSaveInstancesFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder> 
           getSaveInstancesBuilderList() {
        return getSaveInstancesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstanceOrBuilder> 
          getSaveInstancesFieldBuilder() {
        if (saveInstancesBuilder_ == null) {
          saveInstancesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstance.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.SaveInstanceOrBuilder>(
                  saveInstances_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          saveInstances_ = null;
        }
        return saveInstancesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDOTASaveGame)
    }

    static {
      defaultInstance = new CDOTASaveGame(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTASaveGame)
  }

  public interface CMsgLeaverStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 lobby_state = 1;
    /**
     * <code>optional uint32 lobby_state = 1;</code>
     */
    boolean hasLobbyState();
    /**
     * <code>optional uint32 lobby_state = 1;</code>
     */
    int getLobbyState();

    // optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];
    /**
     * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
     */
    boolean hasGameState();
    /**
     * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState getGameState();

    // optional bool leaver_detected = 3;
    /**
     * <code>optional bool leaver_detected = 3;</code>
     */
    boolean hasLeaverDetected();
    /**
     * <code>optional bool leaver_detected = 3;</code>
     */
    boolean getLeaverDetected();

    // optional bool first_blood_happened = 4;
    /**
     * <code>optional bool first_blood_happened = 4;</code>
     */
    boolean hasFirstBloodHappened();
    /**
     * <code>optional bool first_blood_happened = 4;</code>
     */
    boolean getFirstBloodHappened();

    // optional bool discard_match_results = 5;
    /**
     * <code>optional bool discard_match_results = 5;</code>
     */
    boolean hasDiscardMatchResults();
    /**
     * <code>optional bool discard_match_results = 5;</code>
     */
    boolean getDiscardMatchResults();

    // optional bool mass_disconnect = 6;
    /**
     * <code>optional bool mass_disconnect = 6;</code>
     */
    boolean hasMassDisconnect();
    /**
     * <code>optional bool mass_disconnect = 6;</code>
     */
    boolean getMassDisconnect();
  }
  /**
   * Protobuf type {@code CMsgLeaverState}
   */
  public static final class CMsgLeaverState extends
      com.google.protobuf.GeneratedMessage
      implements CMsgLeaverStateOrBuilder {
    // Use CMsgLeaverState.newBuilder() to construct.
    private CMsgLeaverState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgLeaverState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgLeaverState defaultInstance;
    public static CMsgLeaverState getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgLeaverState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgLeaverState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lobbyState_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                gameState_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              leaverDetected_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              firstBloodHappened_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              discardMatchResults_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              massDisconnect_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLeaverState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLeaverState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgLeaverState> PARSER =
        new com.google.protobuf.AbstractParser<CMsgLeaverState>() {
      public CMsgLeaverState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgLeaverState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgLeaverState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 lobby_state = 1;
    public static final int LOBBY_STATE_FIELD_NUMBER = 1;
    private int lobbyState_;
    /**
     * <code>optional uint32 lobby_state = 1;</code>
     */
    public boolean hasLobbyState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 lobby_state = 1;</code>
     */
    public int getLobbyState() {
      return lobbyState_;
    }

    // optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];
    public static final int GAME_STATE_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState gameState_;
    /**
     * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
     */
    public boolean hasGameState() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState getGameState() {
      return gameState_;
    }

    // optional bool leaver_detected = 3;
    public static final int LEAVER_DETECTED_FIELD_NUMBER = 3;
    private boolean leaverDetected_;
    /**
     * <code>optional bool leaver_detected = 3;</code>
     */
    public boolean hasLeaverDetected() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool leaver_detected = 3;</code>
     */
    public boolean getLeaverDetected() {
      return leaverDetected_;
    }

    // optional bool first_blood_happened = 4;
    public static final int FIRST_BLOOD_HAPPENED_FIELD_NUMBER = 4;
    private boolean firstBloodHappened_;
    /**
     * <code>optional bool first_blood_happened = 4;</code>
     */
    public boolean hasFirstBloodHappened() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool first_blood_happened = 4;</code>
     */
    public boolean getFirstBloodHappened() {
      return firstBloodHappened_;
    }

    // optional bool discard_match_results = 5;
    public static final int DISCARD_MATCH_RESULTS_FIELD_NUMBER = 5;
    private boolean discardMatchResults_;
    /**
     * <code>optional bool discard_match_results = 5;</code>
     */
    public boolean hasDiscardMatchResults() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool discard_match_results = 5;</code>
     */
    public boolean getDiscardMatchResults() {
      return discardMatchResults_;
    }

    // optional bool mass_disconnect = 6;
    public static final int MASS_DISCONNECT_FIELD_NUMBER = 6;
    private boolean massDisconnect_;
    /**
     * <code>optional bool mass_disconnect = 6;</code>
     */
    public boolean hasMassDisconnect() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool mass_disconnect = 6;</code>
     */
    public boolean getMassDisconnect() {
      return massDisconnect_;
    }

    private void initFields() {
      lobbyState_ = 0;
      gameState_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState.DOTA_GAMERULES_STATE_INIT;
      leaverDetected_ = false;
      firstBloodHappened_ = false;
      discardMatchResults_ = false;
      massDisconnect_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, lobbyState_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, gameState_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, leaverDetected_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, firstBloodHappened_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, discardMatchResults_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, massDisconnect_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, lobbyState_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, gameState_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, leaverDetected_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, firstBloodHappened_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, discardMatchResults_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, massDisconnect_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgLeaverState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLeaverState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLeaverState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lobbyState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gameState_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState.DOTA_GAMERULES_STATE_INIT;
        bitField0_ = (bitField0_ & ~0x00000002);
        leaverDetected_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        firstBloodHappened_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        discardMatchResults_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        massDisconnect_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLeaverState_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lobbyState_ = lobbyState_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameState_ = gameState_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.leaverDetected_ = leaverDetected_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.firstBloodHappened_ = firstBloodHappened_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.discardMatchResults_ = discardMatchResults_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.massDisconnect_ = massDisconnect_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState.getDefaultInstance()) return this;
        if (other.hasLobbyState()) {
          setLobbyState(other.getLobbyState());
        }
        if (other.hasGameState()) {
          setGameState(other.getGameState());
        }
        if (other.hasLeaverDetected()) {
          setLeaverDetected(other.getLeaverDetected());
        }
        if (other.hasFirstBloodHappened()) {
          setFirstBloodHappened(other.getFirstBloodHappened());
        }
        if (other.hasDiscardMatchResults()) {
          setDiscardMatchResults(other.getDiscardMatchResults());
        }
        if (other.hasMassDisconnect()) {
          setMassDisconnect(other.getMassDisconnect());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeaverState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 lobby_state = 1;
      private int lobbyState_ ;
      /**
       * <code>optional uint32 lobby_state = 1;</code>
       */
      public boolean hasLobbyState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 lobby_state = 1;</code>
       */
      public int getLobbyState() {
        return lobbyState_;
      }
      /**
       * <code>optional uint32 lobby_state = 1;</code>
       */
      public Builder setLobbyState(int value) {
        bitField0_ |= 0x00000001;
        lobbyState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lobby_state = 1;</code>
       */
      public Builder clearLobbyState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lobbyState_ = 0;
        onChanged();
        return this;
      }

      // optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState gameState_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState.DOTA_GAMERULES_STATE_INIT;
      /**
       * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
       */
      public boolean hasGameState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState getGameState() {
        return gameState_;
      }
      /**
       * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
       */
      public Builder setGameState(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        gameState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_GameState game_state = 2 [default = DOTA_GAMERULES_STATE_INIT];</code>
       */
      public Builder clearGameState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameState_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState.DOTA_GAMERULES_STATE_INIT;
        onChanged();
        return this;
      }

      // optional bool leaver_detected = 3;
      private boolean leaverDetected_ ;
      /**
       * <code>optional bool leaver_detected = 3;</code>
       */
      public boolean hasLeaverDetected() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool leaver_detected = 3;</code>
       */
      public boolean getLeaverDetected() {
        return leaverDetected_;
      }
      /**
       * <code>optional bool leaver_detected = 3;</code>
       */
      public Builder setLeaverDetected(boolean value) {
        bitField0_ |= 0x00000004;
        leaverDetected_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool leaver_detected = 3;</code>
       */
      public Builder clearLeaverDetected() {
        bitField0_ = (bitField0_ & ~0x00000004);
        leaverDetected_ = false;
        onChanged();
        return this;
      }

      // optional bool first_blood_happened = 4;
      private boolean firstBloodHappened_ ;
      /**
       * <code>optional bool first_blood_happened = 4;</code>
       */
      public boolean hasFirstBloodHappened() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool first_blood_happened = 4;</code>
       */
      public boolean getFirstBloodHappened() {
        return firstBloodHappened_;
      }
      /**
       * <code>optional bool first_blood_happened = 4;</code>
       */
      public Builder setFirstBloodHappened(boolean value) {
        bitField0_ |= 0x00000008;
        firstBloodHappened_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool first_blood_happened = 4;</code>
       */
      public Builder clearFirstBloodHappened() {
        bitField0_ = (bitField0_ & ~0x00000008);
        firstBloodHappened_ = false;
        onChanged();
        return this;
      }

      // optional bool discard_match_results = 5;
      private boolean discardMatchResults_ ;
      /**
       * <code>optional bool discard_match_results = 5;</code>
       */
      public boolean hasDiscardMatchResults() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool discard_match_results = 5;</code>
       */
      public boolean getDiscardMatchResults() {
        return discardMatchResults_;
      }
      /**
       * <code>optional bool discard_match_results = 5;</code>
       */
      public Builder setDiscardMatchResults(boolean value) {
        bitField0_ |= 0x00000010;
        discardMatchResults_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool discard_match_results = 5;</code>
       */
      public Builder clearDiscardMatchResults() {
        bitField0_ = (bitField0_ & ~0x00000010);
        discardMatchResults_ = false;
        onChanged();
        return this;
      }

      // optional bool mass_disconnect = 6;
      private boolean massDisconnect_ ;
      /**
       * <code>optional bool mass_disconnect = 6;</code>
       */
      public boolean hasMassDisconnect() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool mass_disconnect = 6;</code>
       */
      public boolean getMassDisconnect() {
        return massDisconnect_;
      }
      /**
       * <code>optional bool mass_disconnect = 6;</code>
       */
      public Builder setMassDisconnect(boolean value) {
        bitField0_ |= 0x00000020;
        massDisconnect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool mass_disconnect = 6;</code>
       */
      public Builder clearMassDisconnect() {
        bitField0_ = (bitField0_ & ~0x00000020);
        massDisconnect_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgLeaverState)
    }

    static {
      defaultInstance = new CMsgLeaverState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgLeaverState)
  }

  public interface CDOTALobbyMemberOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional fixed64 id = 1;
    /**
     * <code>optional fixed64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>optional fixed64 id = 1;</code>
     */
    long getId();

    // optional uint32 hero_id = 2;
    /**
     * <code>optional uint32 hero_id = 2;</code>
     */
    boolean hasHeroId();
    /**
     * <code>optional uint32 hero_id = 2;</code>
     */
    int getHeroId();

    // optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];
    /**
     * <code>optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
     */
    boolean hasTeam();
    /**
     * <code>optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM getTeam();

    // optional string name = 6;
    /**
     * <code>optional string name = 6;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 6;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 6;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional uint32 slot = 7;
    /**
     * <code>optional uint32 slot = 7;</code>
     */
    boolean hasSlot();
    /**
     * <code>optional uint32 slot = 7;</code>
     */
    int getSlot();

    // optional uint64 party_id = 12;
    /**
     * <code>optional uint64 party_id = 12;</code>
     */
    boolean hasPartyId();
    /**
     * <code>optional uint64 party_id = 12;</code>
     */
    long getPartyId();

    // optional uint32 meta_level = 13;
    /**
     * <code>optional uint32 meta_level = 13;</code>
     */
    boolean hasMetaLevel();
    /**
     * <code>optional uint32 meta_level = 13;</code>
     */
    int getMetaLevel();

    // optional uint32 meta_xp = 14;
    /**
     * <code>optional uint32 meta_xp = 14;</code>
     */
    boolean hasMetaXp();
    /**
     * <code>optional uint32 meta_xp = 14;</code>
     */
    int getMetaXp();

    // optional uint32 meta_xp_awarded = 15;
    /**
     * <code>optional uint32 meta_xp_awarded = 15;</code>
     */
    boolean hasMetaXpAwarded();
    /**
     * <code>optional uint32 meta_xp_awarded = 15;</code>
     */
    int getMetaXpAwarded();

    // optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];
    /**
     * <code>optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];</code>
     */
    boolean hasLeaverStatus();
    /**
     * <code>optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t getLeaverStatus();

    // optional uint32 leaver_actions = 28;
    /**
     * <code>optional uint32 leaver_actions = 28;</code>
     */
    boolean hasLeaverActions();
    /**
     * <code>optional uint32 leaver_actions = 28;</code>
     */
    int getLeaverActions();

    // optional uint32 channel = 17;
    /**
     * <code>optional uint32 channel = 17;</code>
     */
    boolean hasChannel();
    /**
     * <code>optional uint32 channel = 17;</code>
     */
    int getChannel();

    // optional uint32 prize_def_index = 18;
    /**
     * <code>optional uint32 prize_def_index = 18;</code>
     */
    boolean hasPrizeDefIndex();
    /**
     * <code>optional uint32 prize_def_index = 18;</code>
     */
    int getPrizeDefIndex();

    // repeated uint32 disabled_hero_id = 20;
    /**
     * <code>repeated uint32 disabled_hero_id = 20;</code>
     */
    java.util.List<java.lang.Integer> getDisabledHeroIdList();
    /**
     * <code>repeated uint32 disabled_hero_id = 20;</code>
     */
    int getDisabledHeroIdCount();
    /**
     * <code>repeated uint32 disabled_hero_id = 20;</code>
     */
    int getDisabledHeroId(int index);

    // optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];
    /**
     * <code>optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];</code>
     */
    boolean hasPartnerAccountType();
    /**
     * <code>optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];</code>
     */
    skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerAccountType();

    // repeated uint32 enabled_hero_id = 22;
    /**
     * <code>repeated uint32 enabled_hero_id = 22;</code>
     */
    java.util.List<java.lang.Integer> getEnabledHeroIdList();
    /**
     * <code>repeated uint32 enabled_hero_id = 22;</code>
     */
    int getEnabledHeroIdCount();
    /**
     * <code>repeated uint32 enabled_hero_id = 22;</code>
     */
    int getEnabledHeroId(int index);

    // optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];
    /**
     * <code>optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
     */
    boolean hasCoachTeam();
    /**
     * <code>optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM getCoachTeam();

    // optional uint32 nexon_pc_bang_no = 24;
    /**
     * <code>optional uint32 nexon_pc_bang_no = 24;</code>
     */
    boolean hasNexonPcBangNo();
    /**
     * <code>optional uint32 nexon_pc_bang_no = 24;</code>
     */
    int getNexonPcBangNo();

    // optional string nexon_pc_bang_name = 25;
    /**
     * <code>optional string nexon_pc_bang_name = 25;</code>
     */
    boolean hasNexonPcBangName();
    /**
     * <code>optional string nexon_pc_bang_name = 25;</code>
     */
    java.lang.String getNexonPcBangName();
    /**
     * <code>optional string nexon_pc_bang_name = 25;</code>
     */
    com.google.protobuf.ByteString
        getNexonPcBangNameBytes();

    // repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;
    /**
     * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus> 
        getXpBonusesList();
    /**
     * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus getXpBonuses(int index);
    /**
     * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
     */
    int getXpBonusesCount();
    /**
     * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonusOrBuilder> 
        getXpBonusesOrBuilderList();
    /**
     * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonusOrBuilder getXpBonusesOrBuilder(
        int index);

    // optional sint32 rank_change = 29;
    /**
     * <code>optional sint32 rank_change = 29;</code>
     */
    boolean hasRankChange();
    /**
     * <code>optional sint32 rank_change = 29;</code>
     */
    int getRankChange();

    // optional bool cameraman = 30;
    /**
     * <code>optional bool cameraman = 30;</code>
     */
    boolean hasCameraman();
    /**
     * <code>optional bool cameraman = 30;</code>
     */
    boolean getCameraman();

    // repeated uint32 custom_game_product_ids = 31;
    /**
     * <code>repeated uint32 custom_game_product_ids = 31;</code>
     */
    java.util.List<java.lang.Integer> getCustomGameProductIdsList();
    /**
     * <code>repeated uint32 custom_game_product_ids = 31;</code>
     */
    int getCustomGameProductIdsCount();
    /**
     * <code>repeated uint32 custom_game_product_ids = 31;</code>
     */
    int getCustomGameProductIds(int index);
  }
  /**
   * Protobuf type {@code CDOTALobbyMember}
   */
  public static final class CDOTALobbyMember extends
      com.google.protobuf.GeneratedMessage
      implements CDOTALobbyMemberOrBuilder {
    // Use CDOTALobbyMember.newBuilder() to construct.
    private CDOTALobbyMember(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDOTALobbyMember(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDOTALobbyMember defaultInstance;
    public static CDOTALobbyMember getDefaultInstance() {
      return defaultInstance;
    }

    public CDOTALobbyMember getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDOTALobbyMember(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              id_ = input.readFixed64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              heroId_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                team_ = value;
              }
              break;
            }
            case 50: {
              bitField0_ |= 0x00000008;
              name_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              slot_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000020;
              partyId_ = input.readUInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000040;
              metaLevel_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000080;
              metaXp_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000100;
              metaXpAwarded_ = input.readUInt32();
              break;
            }
            case 128: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(16, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                leaverStatus_ = value;
              }
              break;
            }
            case 136: {
              bitField0_ |= 0x00000800;
              channel_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00001000;
              prizeDefIndex_ = input.readUInt32();
              break;
            }
            case 160: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                disabledHeroId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              disabledHeroId_.add(input.readUInt32());
              break;
            }
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                disabledHeroId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                disabledHeroId_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 168: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType value = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(21, rawValue);
              } else {
                bitField0_ |= 0x00002000;
                partnerAccountType_ = value;
              }
              break;
            }
            case 176: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                enabledHeroId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              enabledHeroId_.add(input.readUInt32());
              break;
            }
            case 178: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                enabledHeroId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                enabledHeroId_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 184: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(23, rawValue);
              } else {
                bitField0_ |= 0x00004000;
                coachTeam_ = value;
              }
              break;
            }
            case 192: {
              bitField0_ |= 0x00008000;
              nexonPcBangNo_ = input.readUInt32();
              break;
            }
            case 202: {
              bitField0_ |= 0x00010000;
              nexonPcBangName_ = input.readBytes();
              break;
            }
            case 218: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                xpBonuses_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus>();
                mutable_bitField0_ |= 0x00080000;
              }
              xpBonuses_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.PARSER, extensionRegistry));
              break;
            }
            case 224: {
              bitField0_ |= 0x00000400;
              leaverActions_ = input.readUInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x00020000;
              rankChange_ = input.readSInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x00040000;
              cameraman_ = input.readBool();
              break;
            }
            case 248: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                customGameProductIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00400000;
              }
              customGameProductIds_.add(input.readUInt32());
              break;
            }
            case 250: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000) && input.getBytesUntilLimit() > 0) {
                customGameProductIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00400000;
              }
              while (input.getBytesUntilLimit() > 0) {
                customGameProductIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          disabledHeroId_ = java.util.Collections.unmodifiableList(disabledHeroId_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          enabledHeroId_ = java.util.Collections.unmodifiableList(enabledHeroId_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          xpBonuses_ = java.util.Collections.unmodifiableList(xpBonuses_);
        }
        if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
          customGameProductIds_ = java.util.Collections.unmodifiableList(customGameProductIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTALobbyMember_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTALobbyMember_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder.class);
    }

    public static com.google.protobuf.Parser<CDOTALobbyMember> PARSER =
        new com.google.protobuf.AbstractParser<CDOTALobbyMember>() {
      public CDOTALobbyMember parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDOTALobbyMember(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTALobbyMember> getParserForType() {
      return PARSER;
    }

    public interface CDOTALobbyMemberXPBonusOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 type = 1;
      /**
       * <code>optional uint32 type = 1;</code>
       */
      boolean hasType();
      /**
       * <code>optional uint32 type = 1;</code>
       */
      int getType();

      // optional float xp_bonus = 2;
      /**
       * <code>optional float xp_bonus = 2;</code>
       */
      boolean hasXpBonus();
      /**
       * <code>optional float xp_bonus = 2;</code>
       */
      float getXpBonus();

      // optional uint64 source_key = 3;
      /**
       * <code>optional uint64 source_key = 3;</code>
       */
      boolean hasSourceKey();
      /**
       * <code>optional uint64 source_key = 3;</code>
       */
      long getSourceKey();
    }
    /**
     * Protobuf type {@code CDOTALobbyMember.CDOTALobbyMemberXPBonus}
     */
    public static final class CDOTALobbyMemberXPBonus extends
        com.google.protobuf.GeneratedMessage
        implements CDOTALobbyMemberXPBonusOrBuilder {
      // Use CDOTALobbyMemberXPBonus.newBuilder() to construct.
      private CDOTALobbyMemberXPBonus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CDOTALobbyMemberXPBonus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CDOTALobbyMemberXPBonus defaultInstance;
      public static CDOTALobbyMemberXPBonus getDefaultInstance() {
        return defaultInstance;
      }

      public CDOTALobbyMemberXPBonus getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CDOTALobbyMemberXPBonus(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                type_ = input.readUInt32();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                xpBonus_ = input.readFloat();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                sourceKey_ = input.readUInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTALobbyMember_CDOTALobbyMemberXPBonus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTALobbyMember_CDOTALobbyMemberXPBonus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder.class);
      }

      public static com.google.protobuf.Parser<CDOTALobbyMemberXPBonus> PARSER =
          new com.google.protobuf.AbstractParser<CDOTALobbyMemberXPBonus>() {
        public CDOTALobbyMemberXPBonus parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CDOTALobbyMemberXPBonus(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CDOTALobbyMemberXPBonus> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 type = 1;
      public static final int TYPE_FIELD_NUMBER = 1;
      private int type_;
      /**
       * <code>optional uint32 type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }

      // optional float xp_bonus = 2;
      public static final int XP_BONUS_FIELD_NUMBER = 2;
      private float xpBonus_;
      /**
       * <code>optional float xp_bonus = 2;</code>
       */
      public boolean hasXpBonus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float xp_bonus = 2;</code>
       */
      public float getXpBonus() {
        return xpBonus_;
      }

      // optional uint64 source_key = 3;
      public static final int SOURCE_KEY_FIELD_NUMBER = 3;
      private long sourceKey_;
      /**
       * <code>optional uint64 source_key = 3;</code>
       */
      public boolean hasSourceKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 source_key = 3;</code>
       */
      public long getSourceKey() {
        return sourceKey_;
      }

      private void initFields() {
        type_ = 0;
        xpBonus_ = 0F;
        sourceKey_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, type_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, xpBonus_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt64(3, sourceKey_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, type_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, xpBonus_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, sourceKey_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDOTALobbyMember.CDOTALobbyMemberXPBonus}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonusOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTALobbyMember_CDOTALobbyMemberXPBonus_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTALobbyMember_CDOTALobbyMemberXPBonus_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          type_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          xpBonus_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          sourceKey_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTALobbyMember_CDOTALobbyMemberXPBonus_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.xpBonus_ = xpBonus_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.sourceKey_ = sourceKey_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.getDefaultInstance()) return this;
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasXpBonus()) {
            setXpBonus(other.getXpBonus());
          }
          if (other.hasSourceKey()) {
            setSourceKey(other.getSourceKey());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 type = 1;
        private int type_ ;
        /**
         * <code>optional uint32 type = 1;</code>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 type = 1;</code>
         */
        public int getType() {
          return type_;
        }
        /**
         * <code>optional uint32 type = 1;</code>
         */
        public Builder setType(int value) {
          bitField0_ |= 0x00000001;
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 type = 1;</code>
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000001);
          type_ = 0;
          onChanged();
          return this;
        }

        // optional float xp_bonus = 2;
        private float xpBonus_ ;
        /**
         * <code>optional float xp_bonus = 2;</code>
         */
        public boolean hasXpBonus() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float xp_bonus = 2;</code>
         */
        public float getXpBonus() {
          return xpBonus_;
        }
        /**
         * <code>optional float xp_bonus = 2;</code>
         */
        public Builder setXpBonus(float value) {
          bitField0_ |= 0x00000002;
          xpBonus_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float xp_bonus = 2;</code>
         */
        public Builder clearXpBonus() {
          bitField0_ = (bitField0_ & ~0x00000002);
          xpBonus_ = 0F;
          onChanged();
          return this;
        }

        // optional uint64 source_key = 3;
        private long sourceKey_ ;
        /**
         * <code>optional uint64 source_key = 3;</code>
         */
        public boolean hasSourceKey() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 source_key = 3;</code>
         */
        public long getSourceKey() {
          return sourceKey_;
        }
        /**
         * <code>optional uint64 source_key = 3;</code>
         */
        public Builder setSourceKey(long value) {
          bitField0_ |= 0x00000004;
          sourceKey_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 source_key = 3;</code>
         */
        public Builder clearSourceKey() {
          bitField0_ = (bitField0_ & ~0x00000004);
          sourceKey_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDOTALobbyMember.CDOTALobbyMemberXPBonus)
      }

      static {
        defaultInstance = new CDOTALobbyMemberXPBonus(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDOTALobbyMember.CDOTALobbyMemberXPBonus)
    }

    private int bitField0_;
    // optional fixed64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional fixed64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    // optional uint32 hero_id = 2;
    public static final int HERO_ID_FIELD_NUMBER = 2;
    private int heroId_;
    /**
     * <code>optional uint32 hero_id = 2;</code>
     */
    public boolean hasHeroId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 hero_id = 2;</code>
     */
    public int getHeroId() {
      return heroId_;
    }

    // optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];
    public static final int TEAM_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM team_;
    /**
     * <code>optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM getTeam() {
      return team_;
    }

    // optional string name = 6;
    public static final int NAME_FIELD_NUMBER = 6;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 6;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string name = 6;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 6;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 slot = 7;
    public static final int SLOT_FIELD_NUMBER = 7;
    private int slot_;
    /**
     * <code>optional uint32 slot = 7;</code>
     */
    public boolean hasSlot() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 slot = 7;</code>
     */
    public int getSlot() {
      return slot_;
    }

    // optional uint64 party_id = 12;
    public static final int PARTY_ID_FIELD_NUMBER = 12;
    private long partyId_;
    /**
     * <code>optional uint64 party_id = 12;</code>
     */
    public boolean hasPartyId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 party_id = 12;</code>
     */
    public long getPartyId() {
      return partyId_;
    }

    // optional uint32 meta_level = 13;
    public static final int META_LEVEL_FIELD_NUMBER = 13;
    private int metaLevel_;
    /**
     * <code>optional uint32 meta_level = 13;</code>
     */
    public boolean hasMetaLevel() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 meta_level = 13;</code>
     */
    public int getMetaLevel() {
      return metaLevel_;
    }

    // optional uint32 meta_xp = 14;
    public static final int META_XP_FIELD_NUMBER = 14;
    private int metaXp_;
    /**
     * <code>optional uint32 meta_xp = 14;</code>
     */
    public boolean hasMetaXp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 meta_xp = 14;</code>
     */
    public int getMetaXp() {
      return metaXp_;
    }

    // optional uint32 meta_xp_awarded = 15;
    public static final int META_XP_AWARDED_FIELD_NUMBER = 15;
    private int metaXpAwarded_;
    /**
     * <code>optional uint32 meta_xp_awarded = 15;</code>
     */
    public boolean hasMetaXpAwarded() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 meta_xp_awarded = 15;</code>
     */
    public int getMetaXpAwarded() {
      return metaXpAwarded_;
    }

    // optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];
    public static final int LEAVER_STATUS_FIELD_NUMBER = 16;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t leaverStatus_;
    /**
     * <code>optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];</code>
     */
    public boolean hasLeaverStatus() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t getLeaverStatus() {
      return leaverStatus_;
    }

    // optional uint32 leaver_actions = 28;
    public static final int LEAVER_ACTIONS_FIELD_NUMBER = 28;
    private int leaverActions_;
    /**
     * <code>optional uint32 leaver_actions = 28;</code>
     */
    public boolean hasLeaverActions() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 leaver_actions = 28;</code>
     */
    public int getLeaverActions() {
      return leaverActions_;
    }

    // optional uint32 channel = 17;
    public static final int CHANNEL_FIELD_NUMBER = 17;
    private int channel_;
    /**
     * <code>optional uint32 channel = 17;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 channel = 17;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional uint32 prize_def_index = 18;
    public static final int PRIZE_DEF_INDEX_FIELD_NUMBER = 18;
    private int prizeDefIndex_;
    /**
     * <code>optional uint32 prize_def_index = 18;</code>
     */
    public boolean hasPrizeDefIndex() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 prize_def_index = 18;</code>
     */
    public int getPrizeDefIndex() {
      return prizeDefIndex_;
    }

    // repeated uint32 disabled_hero_id = 20;
    public static final int DISABLED_HERO_ID_FIELD_NUMBER = 20;
    private java.util.List<java.lang.Integer> disabledHeroId_;
    /**
     * <code>repeated uint32 disabled_hero_id = 20;</code>
     */
    public java.util.List<java.lang.Integer>
        getDisabledHeroIdList() {
      return disabledHeroId_;
    }
    /**
     * <code>repeated uint32 disabled_hero_id = 20;</code>
     */
    public int getDisabledHeroIdCount() {
      return disabledHeroId_.size();
    }
    /**
     * <code>repeated uint32 disabled_hero_id = 20;</code>
     */
    public int getDisabledHeroId(int index) {
      return disabledHeroId_.get(index);
    }

    // optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];
    public static final int PARTNER_ACCOUNT_TYPE_FIELD_NUMBER = 21;
    private skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType partnerAccountType_;
    /**
     * <code>optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];</code>
     */
    public boolean hasPartnerAccountType() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];</code>
     */
    public skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerAccountType() {
      return partnerAccountType_;
    }

    // repeated uint32 enabled_hero_id = 22;
    public static final int ENABLED_HERO_ID_FIELD_NUMBER = 22;
    private java.util.List<java.lang.Integer> enabledHeroId_;
    /**
     * <code>repeated uint32 enabled_hero_id = 22;</code>
     */
    public java.util.List<java.lang.Integer>
        getEnabledHeroIdList() {
      return enabledHeroId_;
    }
    /**
     * <code>repeated uint32 enabled_hero_id = 22;</code>
     */
    public int getEnabledHeroIdCount() {
      return enabledHeroId_.size();
    }
    /**
     * <code>repeated uint32 enabled_hero_id = 22;</code>
     */
    public int getEnabledHeroId(int index) {
      return enabledHeroId_.get(index);
    }

    // optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];
    public static final int COACH_TEAM_FIELD_NUMBER = 23;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM coachTeam_;
    /**
     * <code>optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
     */
    public boolean hasCoachTeam() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM getCoachTeam() {
      return coachTeam_;
    }

    // optional uint32 nexon_pc_bang_no = 24;
    public static final int NEXON_PC_BANG_NO_FIELD_NUMBER = 24;
    private int nexonPcBangNo_;
    /**
     * <code>optional uint32 nexon_pc_bang_no = 24;</code>
     */
    public boolean hasNexonPcBangNo() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 nexon_pc_bang_no = 24;</code>
     */
    public int getNexonPcBangNo() {
      return nexonPcBangNo_;
    }

    // optional string nexon_pc_bang_name = 25;
    public static final int NEXON_PC_BANG_NAME_FIELD_NUMBER = 25;
    private java.lang.Object nexonPcBangName_;
    /**
     * <code>optional string nexon_pc_bang_name = 25;</code>
     */
    public boolean hasNexonPcBangName() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string nexon_pc_bang_name = 25;</code>
     */
    public java.lang.String getNexonPcBangName() {
      java.lang.Object ref = nexonPcBangName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nexonPcBangName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nexon_pc_bang_name = 25;</code>
     */
    public com.google.protobuf.ByteString
        getNexonPcBangNameBytes() {
      java.lang.Object ref = nexonPcBangName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nexonPcBangName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;
    public static final int XP_BONUSES_FIELD_NUMBER = 27;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus> xpBonuses_;
    /**
     * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus> getXpBonusesList() {
      return xpBonuses_;
    }
    /**
     * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonusOrBuilder> 
        getXpBonusesOrBuilderList() {
      return xpBonuses_;
    }
    /**
     * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
     */
    public int getXpBonusesCount() {
      return xpBonuses_.size();
    }
    /**
     * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus getXpBonuses(int index) {
      return xpBonuses_.get(index);
    }
    /**
     * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonusOrBuilder getXpBonusesOrBuilder(
        int index) {
      return xpBonuses_.get(index);
    }

    // optional sint32 rank_change = 29;
    public static final int RANK_CHANGE_FIELD_NUMBER = 29;
    private int rankChange_;
    /**
     * <code>optional sint32 rank_change = 29;</code>
     */
    public boolean hasRankChange() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional sint32 rank_change = 29;</code>
     */
    public int getRankChange() {
      return rankChange_;
    }

    // optional bool cameraman = 30;
    public static final int CAMERAMAN_FIELD_NUMBER = 30;
    private boolean cameraman_;
    /**
     * <code>optional bool cameraman = 30;</code>
     */
    public boolean hasCameraman() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool cameraman = 30;</code>
     */
    public boolean getCameraman() {
      return cameraman_;
    }

    // repeated uint32 custom_game_product_ids = 31;
    public static final int CUSTOM_GAME_PRODUCT_IDS_FIELD_NUMBER = 31;
    private java.util.List<java.lang.Integer> customGameProductIds_;
    /**
     * <code>repeated uint32 custom_game_product_ids = 31;</code>
     */
    public java.util.List<java.lang.Integer>
        getCustomGameProductIdsList() {
      return customGameProductIds_;
    }
    /**
     * <code>repeated uint32 custom_game_product_ids = 31;</code>
     */
    public int getCustomGameProductIdsCount() {
      return customGameProductIds_.size();
    }
    /**
     * <code>repeated uint32 custom_game_product_ids = 31;</code>
     */
    public int getCustomGameProductIds(int index) {
      return customGameProductIds_.get(index);
    }

    private void initFields() {
      id_ = 0L;
      heroId_ = 0;
      team_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
      name_ = "";
      slot_ = 0;
      partyId_ = 0L;
      metaLevel_ = 0;
      metaXp_ = 0;
      metaXpAwarded_ = 0;
      leaverStatus_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t.DOTA_LEAVER_NONE;
      leaverActions_ = 0;
      channel_ = 0;
      prizeDefIndex_ = 0;
      disabledHeroId_ = java.util.Collections.emptyList();
      partnerAccountType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
      enabledHeroId_ = java.util.Collections.emptyList();
      coachTeam_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
      nexonPcBangNo_ = 0;
      nexonPcBangName_ = "";
      xpBonuses_ = java.util.Collections.emptyList();
      rankChange_ = 0;
      cameraman_ = false;
      customGameProductIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, heroId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, team_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(6, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(7, slot_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(12, partyId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(13, metaLevel_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(14, metaXp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(15, metaXpAwarded_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(16, leaverStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(17, channel_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(18, prizeDefIndex_);
      }
      for (int i = 0; i < disabledHeroId_.size(); i++) {
        output.writeUInt32(20, disabledHeroId_.get(i));
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeEnum(21, partnerAccountType_.getNumber());
      }
      for (int i = 0; i < enabledHeroId_.size(); i++) {
        output.writeUInt32(22, enabledHeroId_.get(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeEnum(23, coachTeam_.getNumber());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(24, nexonPcBangNo_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(25, getNexonPcBangNameBytes());
      }
      for (int i = 0; i < xpBonuses_.size(); i++) {
        output.writeMessage(27, xpBonuses_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(28, leaverActions_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeSInt32(29, rankChange_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(30, cameraman_);
      }
      for (int i = 0; i < customGameProductIds_.size(); i++) {
        output.writeUInt32(31, customGameProductIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, heroId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, team_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, slot_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(12, partyId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, metaLevel_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, metaXp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, metaXpAwarded_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, leaverStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, channel_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, prizeDefIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < disabledHeroId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(disabledHeroId_.get(i));
        }
        size += dataSize;
        size += 2 * getDisabledHeroIdList().size();
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, partnerAccountType_.getNumber());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < enabledHeroId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(enabledHeroId_.get(i));
        }
        size += dataSize;
        size += 2 * getEnabledHeroIdList().size();
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(23, coachTeam_.getNumber());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, nexonPcBangNo_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(25, getNexonPcBangNameBytes());
      }
      for (int i = 0; i < xpBonuses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, xpBonuses_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, leaverActions_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(29, rankChange_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(30, cameraman_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < customGameProductIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(customGameProductIds_.get(i));
        }
        size += dataSize;
        size += 2 * getCustomGameProductIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDOTALobbyMember}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTALobbyMember_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTALobbyMember_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getXpBonusesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        heroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        team_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        slot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        partyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        metaLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        metaXp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        metaXpAwarded_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        leaverStatus_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t.DOTA_LEAVER_NONE;
        bitField0_ = (bitField0_ & ~0x00000200);
        leaverActions_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        prizeDefIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        disabledHeroId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        partnerAccountType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
        bitField0_ = (bitField0_ & ~0x00004000);
        enabledHeroId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        coachTeam_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
        bitField0_ = (bitField0_ & ~0x00010000);
        nexonPcBangNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        nexonPcBangName_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        if (xpBonusesBuilder_ == null) {
          xpBonuses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          xpBonusesBuilder_.clear();
        }
        rankChange_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        cameraman_ = false;
        bitField0_ = (bitField0_ & ~0x00200000);
        customGameProductIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CDOTALobbyMember_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.heroId_ = heroId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.team_ = team_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.slot_ = slot_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.partyId_ = partyId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.metaLevel_ = metaLevel_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.metaXp_ = metaXp_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.metaXpAwarded_ = metaXpAwarded_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.leaverStatus_ = leaverStatus_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.leaverActions_ = leaverActions_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.prizeDefIndex_ = prizeDefIndex_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          disabledHeroId_ = java.util.Collections.unmodifiableList(disabledHeroId_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.disabledHeroId_ = disabledHeroId_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.partnerAccountType_ = partnerAccountType_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          enabledHeroId_ = java.util.Collections.unmodifiableList(enabledHeroId_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.enabledHeroId_ = enabledHeroId_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.coachTeam_ = coachTeam_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.nexonPcBangNo_ = nexonPcBangNo_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.nexonPcBangName_ = nexonPcBangName_;
        if (xpBonusesBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            xpBonuses_ = java.util.Collections.unmodifiableList(xpBonuses_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.xpBonuses_ = xpBonuses_;
        } else {
          result.xpBonuses_ = xpBonusesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.rankChange_ = rankChange_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.cameraman_ = cameraman_;
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          customGameProductIds_ = java.util.Collections.unmodifiableList(customGameProductIds_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.customGameProductIds_ = customGameProductIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasHeroId()) {
          setHeroId(other.getHeroId());
        }
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000008;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasSlot()) {
          setSlot(other.getSlot());
        }
        if (other.hasPartyId()) {
          setPartyId(other.getPartyId());
        }
        if (other.hasMetaLevel()) {
          setMetaLevel(other.getMetaLevel());
        }
        if (other.hasMetaXp()) {
          setMetaXp(other.getMetaXp());
        }
        if (other.hasMetaXpAwarded()) {
          setMetaXpAwarded(other.getMetaXpAwarded());
        }
        if (other.hasLeaverStatus()) {
          setLeaverStatus(other.getLeaverStatus());
        }
        if (other.hasLeaverActions()) {
          setLeaverActions(other.getLeaverActions());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasPrizeDefIndex()) {
          setPrizeDefIndex(other.getPrizeDefIndex());
        }
        if (!other.disabledHeroId_.isEmpty()) {
          if (disabledHeroId_.isEmpty()) {
            disabledHeroId_ = other.disabledHeroId_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureDisabledHeroIdIsMutable();
            disabledHeroId_.addAll(other.disabledHeroId_);
          }
          onChanged();
        }
        if (other.hasPartnerAccountType()) {
          setPartnerAccountType(other.getPartnerAccountType());
        }
        if (!other.enabledHeroId_.isEmpty()) {
          if (enabledHeroId_.isEmpty()) {
            enabledHeroId_ = other.enabledHeroId_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureEnabledHeroIdIsMutable();
            enabledHeroId_.addAll(other.enabledHeroId_);
          }
          onChanged();
        }
        if (other.hasCoachTeam()) {
          setCoachTeam(other.getCoachTeam());
        }
        if (other.hasNexonPcBangNo()) {
          setNexonPcBangNo(other.getNexonPcBangNo());
        }
        if (other.hasNexonPcBangName()) {
          bitField0_ |= 0x00040000;
          nexonPcBangName_ = other.nexonPcBangName_;
          onChanged();
        }
        if (xpBonusesBuilder_ == null) {
          if (!other.xpBonuses_.isEmpty()) {
            if (xpBonuses_.isEmpty()) {
              xpBonuses_ = other.xpBonuses_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureXpBonusesIsMutable();
              xpBonuses_.addAll(other.xpBonuses_);
            }
            onChanged();
          }
        } else {
          if (!other.xpBonuses_.isEmpty()) {
            if (xpBonusesBuilder_.isEmpty()) {
              xpBonusesBuilder_.dispose();
              xpBonusesBuilder_ = null;
              xpBonuses_ = other.xpBonuses_;
              bitField0_ = (bitField0_ & ~0x00080000);
              xpBonusesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getXpBonusesFieldBuilder() : null;
            } else {
              xpBonusesBuilder_.addAllMessages(other.xpBonuses_);
            }
          }
        }
        if (other.hasRankChange()) {
          setRankChange(other.getRankChange());
        }
        if (other.hasCameraman()) {
          setCameraman(other.getCameraman());
        }
        if (!other.customGameProductIds_.isEmpty()) {
          if (customGameProductIds_.isEmpty()) {
            customGameProductIds_ = other.customGameProductIds_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureCustomGameProductIdsIsMutable();
            customGameProductIds_.addAll(other.customGameProductIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional fixed64 id = 1;
      private long id_ ;
      /**
       * <code>optional fixed64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional fixed64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 hero_id = 2;
      private int heroId_ ;
      /**
       * <code>optional uint32 hero_id = 2;</code>
       */
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 hero_id = 2;</code>
       */
      public int getHeroId() {
        return heroId_;
      }
      /**
       * <code>optional uint32 hero_id = 2;</code>
       */
      public Builder setHeroId(int value) {
        bitField0_ |= 0x00000002;
        heroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hero_id = 2;</code>
       */
      public Builder clearHeroId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        heroId_ = 0;
        onChanged();
        return this;
      }

      // optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM team_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
      /**
       * <code>optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM getTeam() {
        return team_;
      }
      /**
       * <code>optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      public Builder setTeam(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_GC_TEAM team = 3 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000004);
        team_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
        onChanged();
        return this;
      }

      // optional string name = 6;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 6;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string name = 6;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 6;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 6;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 6;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }

      // optional uint32 slot = 7;
      private int slot_ ;
      /**
       * <code>optional uint32 slot = 7;</code>
       */
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 slot = 7;</code>
       */
      public int getSlot() {
        return slot_;
      }
      /**
       * <code>optional uint32 slot = 7;</code>
       */
      public Builder setSlot(int value) {
        bitField0_ |= 0x00000010;
        slot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot = 7;</code>
       */
      public Builder clearSlot() {
        bitField0_ = (bitField0_ & ~0x00000010);
        slot_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 party_id = 12;
      private long partyId_ ;
      /**
       * <code>optional uint64 party_id = 12;</code>
       */
      public boolean hasPartyId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 party_id = 12;</code>
       */
      public long getPartyId() {
        return partyId_;
      }
      /**
       * <code>optional uint64 party_id = 12;</code>
       */
      public Builder setPartyId(long value) {
        bitField0_ |= 0x00000020;
        partyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 party_id = 12;</code>
       */
      public Builder clearPartyId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        partyId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 meta_level = 13;
      private int metaLevel_ ;
      /**
       * <code>optional uint32 meta_level = 13;</code>
       */
      public boolean hasMetaLevel() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 meta_level = 13;</code>
       */
      public int getMetaLevel() {
        return metaLevel_;
      }
      /**
       * <code>optional uint32 meta_level = 13;</code>
       */
      public Builder setMetaLevel(int value) {
        bitField0_ |= 0x00000040;
        metaLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 meta_level = 13;</code>
       */
      public Builder clearMetaLevel() {
        bitField0_ = (bitField0_ & ~0x00000040);
        metaLevel_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 meta_xp = 14;
      private int metaXp_ ;
      /**
       * <code>optional uint32 meta_xp = 14;</code>
       */
      public boolean hasMetaXp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 meta_xp = 14;</code>
       */
      public int getMetaXp() {
        return metaXp_;
      }
      /**
       * <code>optional uint32 meta_xp = 14;</code>
       */
      public Builder setMetaXp(int value) {
        bitField0_ |= 0x00000080;
        metaXp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 meta_xp = 14;</code>
       */
      public Builder clearMetaXp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        metaXp_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 meta_xp_awarded = 15;
      private int metaXpAwarded_ ;
      /**
       * <code>optional uint32 meta_xp_awarded = 15;</code>
       */
      public boolean hasMetaXpAwarded() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 meta_xp_awarded = 15;</code>
       */
      public int getMetaXpAwarded() {
        return metaXpAwarded_;
      }
      /**
       * <code>optional uint32 meta_xp_awarded = 15;</code>
       */
      public Builder setMetaXpAwarded(int value) {
        bitField0_ |= 0x00000100;
        metaXpAwarded_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 meta_xp_awarded = 15;</code>
       */
      public Builder clearMetaXpAwarded() {
        bitField0_ = (bitField0_ & ~0x00000100);
        metaXpAwarded_ = 0;
        onChanged();
        return this;
      }

      // optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t leaverStatus_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t.DOTA_LEAVER_NONE;
      /**
       * <code>optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];</code>
       */
      public boolean hasLeaverStatus() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t getLeaverStatus() {
        return leaverStatus_;
      }
      /**
       * <code>optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];</code>
       */
      public Builder setLeaverStatus(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        leaverStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTALeaverStatus_t leaver_status = 16 [default = DOTA_LEAVER_NONE];</code>
       */
      public Builder clearLeaverStatus() {
        bitField0_ = (bitField0_ & ~0x00000200);
        leaverStatus_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTALeaverStatus_t.DOTA_LEAVER_NONE;
        onChanged();
        return this;
      }

      // optional uint32 leaver_actions = 28;
      private int leaverActions_ ;
      /**
       * <code>optional uint32 leaver_actions = 28;</code>
       */
      public boolean hasLeaverActions() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 leaver_actions = 28;</code>
       */
      public int getLeaverActions() {
        return leaverActions_;
      }
      /**
       * <code>optional uint32 leaver_actions = 28;</code>
       */
      public Builder setLeaverActions(int value) {
        bitField0_ |= 0x00000400;
        leaverActions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 leaver_actions = 28;</code>
       */
      public Builder clearLeaverActions() {
        bitField0_ = (bitField0_ & ~0x00000400);
        leaverActions_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 channel = 17;
      private int channel_ ;
      /**
       * <code>optional uint32 channel = 17;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 channel = 17;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional uint32 channel = 17;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000800;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel = 17;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000800);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 prize_def_index = 18;
      private int prizeDefIndex_ ;
      /**
       * <code>optional uint32 prize_def_index = 18;</code>
       */
      public boolean hasPrizeDefIndex() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 prize_def_index = 18;</code>
       */
      public int getPrizeDefIndex() {
        return prizeDefIndex_;
      }
      /**
       * <code>optional uint32 prize_def_index = 18;</code>
       */
      public Builder setPrizeDefIndex(int value) {
        bitField0_ |= 0x00001000;
        prizeDefIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 prize_def_index = 18;</code>
       */
      public Builder clearPrizeDefIndex() {
        bitField0_ = (bitField0_ & ~0x00001000);
        prizeDefIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 disabled_hero_id = 20;
      private java.util.List<java.lang.Integer> disabledHeroId_ = java.util.Collections.emptyList();
      private void ensureDisabledHeroIdIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          disabledHeroId_ = new java.util.ArrayList<java.lang.Integer>(disabledHeroId_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated uint32 disabled_hero_id = 20;</code>
       */
      public java.util.List<java.lang.Integer>
          getDisabledHeroIdList() {
        return java.util.Collections.unmodifiableList(disabledHeroId_);
      }
      /**
       * <code>repeated uint32 disabled_hero_id = 20;</code>
       */
      public int getDisabledHeroIdCount() {
        return disabledHeroId_.size();
      }
      /**
       * <code>repeated uint32 disabled_hero_id = 20;</code>
       */
      public int getDisabledHeroId(int index) {
        return disabledHeroId_.get(index);
      }
      /**
       * <code>repeated uint32 disabled_hero_id = 20;</code>
       */
      public Builder setDisabledHeroId(
          int index, int value) {
        ensureDisabledHeroIdIsMutable();
        disabledHeroId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 disabled_hero_id = 20;</code>
       */
      public Builder addDisabledHeroId(int value) {
        ensureDisabledHeroIdIsMutable();
        disabledHeroId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 disabled_hero_id = 20;</code>
       */
      public Builder addAllDisabledHeroId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDisabledHeroIdIsMutable();
        super.addAll(values, disabledHeroId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 disabled_hero_id = 20;</code>
       */
      public Builder clearDisabledHeroId() {
        disabledHeroId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];
      private skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType partnerAccountType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
      /**
       * <code>optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];</code>
       */
      public boolean hasPartnerAccountType() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];</code>
       */
      public skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerAccountType() {
        return partnerAccountType_;
      }
      /**
       * <code>optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];</code>
       */
      public Builder setPartnerAccountType(skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00004000;
        partnerAccountType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .PartnerAccountType partner_account_type = 21 [default = PARTNER_NONE];</code>
       */
      public Builder clearPartnerAccountType() {
        bitField0_ = (bitField0_ & ~0x00004000);
        partnerAccountType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
        onChanged();
        return this;
      }

      // repeated uint32 enabled_hero_id = 22;
      private java.util.List<java.lang.Integer> enabledHeroId_ = java.util.Collections.emptyList();
      private void ensureEnabledHeroIdIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          enabledHeroId_ = new java.util.ArrayList<java.lang.Integer>(enabledHeroId_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated uint32 enabled_hero_id = 22;</code>
       */
      public java.util.List<java.lang.Integer>
          getEnabledHeroIdList() {
        return java.util.Collections.unmodifiableList(enabledHeroId_);
      }
      /**
       * <code>repeated uint32 enabled_hero_id = 22;</code>
       */
      public int getEnabledHeroIdCount() {
        return enabledHeroId_.size();
      }
      /**
       * <code>repeated uint32 enabled_hero_id = 22;</code>
       */
      public int getEnabledHeroId(int index) {
        return enabledHeroId_.get(index);
      }
      /**
       * <code>repeated uint32 enabled_hero_id = 22;</code>
       */
      public Builder setEnabledHeroId(
          int index, int value) {
        ensureEnabledHeroIdIsMutable();
        enabledHeroId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 enabled_hero_id = 22;</code>
       */
      public Builder addEnabledHeroId(int value) {
        ensureEnabledHeroIdIsMutable();
        enabledHeroId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 enabled_hero_id = 22;</code>
       */
      public Builder addAllEnabledHeroId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEnabledHeroIdIsMutable();
        super.addAll(values, enabledHeroId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 enabled_hero_id = 22;</code>
       */
      public Builder clearEnabledHeroId() {
        enabledHeroId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM coachTeam_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
      /**
       * <code>optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      public boolean hasCoachTeam() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM getCoachTeam() {
        return coachTeam_;
      }
      /**
       * <code>optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      public Builder setCoachTeam(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00010000;
        coachTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_GC_TEAM coach_team = 23 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       */
      public Builder clearCoachTeam() {
        bitField0_ = (bitField0_ & ~0x00010000);
        coachTeam_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS;
        onChanged();
        return this;
      }

      // optional uint32 nexon_pc_bang_no = 24;
      private int nexonPcBangNo_ ;
      /**
       * <code>optional uint32 nexon_pc_bang_no = 24;</code>
       */
      public boolean hasNexonPcBangNo() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 nexon_pc_bang_no = 24;</code>
       */
      public int getNexonPcBangNo() {
        return nexonPcBangNo_;
      }
      /**
       * <code>optional uint32 nexon_pc_bang_no = 24;</code>
       */
      public Builder setNexonPcBangNo(int value) {
        bitField0_ |= 0x00020000;
        nexonPcBangNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 nexon_pc_bang_no = 24;</code>
       */
      public Builder clearNexonPcBangNo() {
        bitField0_ = (bitField0_ & ~0x00020000);
        nexonPcBangNo_ = 0;
        onChanged();
        return this;
      }

      // optional string nexon_pc_bang_name = 25;
      private java.lang.Object nexonPcBangName_ = "";
      /**
       * <code>optional string nexon_pc_bang_name = 25;</code>
       */
      public boolean hasNexonPcBangName() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string nexon_pc_bang_name = 25;</code>
       */
      public java.lang.String getNexonPcBangName() {
        java.lang.Object ref = nexonPcBangName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nexonPcBangName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nexon_pc_bang_name = 25;</code>
       */
      public com.google.protobuf.ByteString
          getNexonPcBangNameBytes() {
        java.lang.Object ref = nexonPcBangName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nexonPcBangName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nexon_pc_bang_name = 25;</code>
       */
      public Builder setNexonPcBangName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        nexonPcBangName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nexon_pc_bang_name = 25;</code>
       */
      public Builder clearNexonPcBangName() {
        bitField0_ = (bitField0_ & ~0x00040000);
        nexonPcBangName_ = getDefaultInstance().getNexonPcBangName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nexon_pc_bang_name = 25;</code>
       */
      public Builder setNexonPcBangNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        nexonPcBangName_ = value;
        onChanged();
        return this;
      }

      // repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus> xpBonuses_ =
        java.util.Collections.emptyList();
      private void ensureXpBonusesIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          xpBonuses_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus>(xpBonuses_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonusOrBuilder> xpBonusesBuilder_;

      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus> getXpBonusesList() {
        if (xpBonusesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(xpBonuses_);
        } else {
          return xpBonusesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public int getXpBonusesCount() {
        if (xpBonusesBuilder_ == null) {
          return xpBonuses_.size();
        } else {
          return xpBonusesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus getXpBonuses(int index) {
        if (xpBonusesBuilder_ == null) {
          return xpBonuses_.get(index);
        } else {
          return xpBonusesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public Builder setXpBonuses(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus value) {
        if (xpBonusesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXpBonusesIsMutable();
          xpBonuses_.set(index, value);
          onChanged();
        } else {
          xpBonusesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public Builder setXpBonuses(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder builderForValue) {
        if (xpBonusesBuilder_ == null) {
          ensureXpBonusesIsMutable();
          xpBonuses_.set(index, builderForValue.build());
          onChanged();
        } else {
          xpBonusesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public Builder addXpBonuses(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus value) {
        if (xpBonusesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXpBonusesIsMutable();
          xpBonuses_.add(value);
          onChanged();
        } else {
          xpBonusesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public Builder addXpBonuses(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus value) {
        if (xpBonusesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXpBonusesIsMutable();
          xpBonuses_.add(index, value);
          onChanged();
        } else {
          xpBonusesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public Builder addXpBonuses(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder builderForValue) {
        if (xpBonusesBuilder_ == null) {
          ensureXpBonusesIsMutable();
          xpBonuses_.add(builderForValue.build());
          onChanged();
        } else {
          xpBonusesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public Builder addXpBonuses(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder builderForValue) {
        if (xpBonusesBuilder_ == null) {
          ensureXpBonusesIsMutable();
          xpBonuses_.add(index, builderForValue.build());
          onChanged();
        } else {
          xpBonusesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public Builder addAllXpBonuses(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus> values) {
        if (xpBonusesBuilder_ == null) {
          ensureXpBonusesIsMutable();
          super.addAll(values, xpBonuses_);
          onChanged();
        } else {
          xpBonusesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public Builder clearXpBonuses() {
        if (xpBonusesBuilder_ == null) {
          xpBonuses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          xpBonusesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public Builder removeXpBonuses(int index) {
        if (xpBonusesBuilder_ == null) {
          ensureXpBonusesIsMutable();
          xpBonuses_.remove(index);
          onChanged();
        } else {
          xpBonusesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder getXpBonusesBuilder(
          int index) {
        return getXpBonusesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonusOrBuilder getXpBonusesOrBuilder(
          int index) {
        if (xpBonusesBuilder_ == null) {
          return xpBonuses_.get(index);  } else {
          return xpBonusesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonusOrBuilder> 
           getXpBonusesOrBuilderList() {
        if (xpBonusesBuilder_ != null) {
          return xpBonusesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(xpBonuses_);
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder addXpBonusesBuilder() {
        return getXpBonusesFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder addXpBonusesBuilder(
          int index) {
        return getXpBonusesFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTALobbyMember.CDOTALobbyMemberXPBonus xp_bonuses = 27;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder> 
           getXpBonusesBuilderList() {
        return getXpBonusesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonusOrBuilder> 
          getXpBonusesFieldBuilder() {
        if (xpBonusesBuilder_ == null) {
          xpBonusesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonus.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.CDOTALobbyMemberXPBonusOrBuilder>(
                  xpBonuses_,
                  ((bitField0_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          xpBonuses_ = null;
        }
        return xpBonusesBuilder_;
      }

      // optional sint32 rank_change = 29;
      private int rankChange_ ;
      /**
       * <code>optional sint32 rank_change = 29;</code>
       */
      public boolean hasRankChange() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional sint32 rank_change = 29;</code>
       */
      public int getRankChange() {
        return rankChange_;
      }
      /**
       * <code>optional sint32 rank_change = 29;</code>
       */
      public Builder setRankChange(int value) {
        bitField0_ |= 0x00100000;
        rankChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 rank_change = 29;</code>
       */
      public Builder clearRankChange() {
        bitField0_ = (bitField0_ & ~0x00100000);
        rankChange_ = 0;
        onChanged();
        return this;
      }

      // optional bool cameraman = 30;
      private boolean cameraman_ ;
      /**
       * <code>optional bool cameraman = 30;</code>
       */
      public boolean hasCameraman() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool cameraman = 30;</code>
       */
      public boolean getCameraman() {
        return cameraman_;
      }
      /**
       * <code>optional bool cameraman = 30;</code>
       */
      public Builder setCameraman(boolean value) {
        bitField0_ |= 0x00200000;
        cameraman_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool cameraman = 30;</code>
       */
      public Builder clearCameraman() {
        bitField0_ = (bitField0_ & ~0x00200000);
        cameraman_ = false;
        onChanged();
        return this;
      }

      // repeated uint32 custom_game_product_ids = 31;
      private java.util.List<java.lang.Integer> customGameProductIds_ = java.util.Collections.emptyList();
      private void ensureCustomGameProductIdsIsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          customGameProductIds_ = new java.util.ArrayList<java.lang.Integer>(customGameProductIds_);
          bitField0_ |= 0x00400000;
         }
      }
      /**
       * <code>repeated uint32 custom_game_product_ids = 31;</code>
       */
      public java.util.List<java.lang.Integer>
          getCustomGameProductIdsList() {
        return java.util.Collections.unmodifiableList(customGameProductIds_);
      }
      /**
       * <code>repeated uint32 custom_game_product_ids = 31;</code>
       */
      public int getCustomGameProductIdsCount() {
        return customGameProductIds_.size();
      }
      /**
       * <code>repeated uint32 custom_game_product_ids = 31;</code>
       */
      public int getCustomGameProductIds(int index) {
        return customGameProductIds_.get(index);
      }
      /**
       * <code>repeated uint32 custom_game_product_ids = 31;</code>
       */
      public Builder setCustomGameProductIds(
          int index, int value) {
        ensureCustomGameProductIdsIsMutable();
        customGameProductIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 custom_game_product_ids = 31;</code>
       */
      public Builder addCustomGameProductIds(int value) {
        ensureCustomGameProductIdsIsMutable();
        customGameProductIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 custom_game_product_ids = 31;</code>
       */
      public Builder addAllCustomGameProductIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCustomGameProductIdsIsMutable();
        super.addAll(values, customGameProductIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 custom_game_product_ids = 31;</code>
       */
      public Builder clearCustomGameProductIds() {
        customGameProductIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CDOTALobbyMember)
    }

    static {
      defaultInstance = new CDOTALobbyMember(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDOTALobbyMember)
  }

  public interface CLobbyTeamDetailsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string team_name = 1;
    /**
     * <code>optional string team_name = 1;</code>
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 1;</code>
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    // optional string team_tag = 3;
    /**
     * <code>optional string team_tag = 3;</code>
     */
    boolean hasTeamTag();
    /**
     * <code>optional string team_tag = 3;</code>
     */
    java.lang.String getTeamTag();
    /**
     * <code>optional string team_tag = 3;</code>
     */
    com.google.protobuf.ByteString
        getTeamTagBytes();

    // optional uint32 team_id = 4;
    /**
     * <code>optional uint32 team_id = 4;</code>
     */
    boolean hasTeamId();
    /**
     * <code>optional uint32 team_id = 4;</code>
     */
    int getTeamId();

    // optional uint64 team_logo = 5;
    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    boolean hasTeamLogo();
    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    long getTeamLogo();

    // optional uint64 team_base_logo = 6;
    /**
     * <code>optional uint64 team_base_logo = 6;</code>
     */
    boolean hasTeamBaseLogo();
    /**
     * <code>optional uint64 team_base_logo = 6;</code>
     */
    long getTeamBaseLogo();

    // optional uint64 team_banner_logo = 7;
    /**
     * <code>optional uint64 team_banner_logo = 7;</code>
     */
    boolean hasTeamBannerLogo();
    /**
     * <code>optional uint64 team_banner_logo = 7;</code>
     */
    long getTeamBannerLogo();

    // optional bool team_complete = 8;
    /**
     * <code>optional bool team_complete = 8;</code>
     */
    boolean hasTeamComplete();
    /**
     * <code>optional bool team_complete = 8;</code>
     */
    boolean getTeamComplete();

    // optional string guild_name = 9;
    /**
     * <code>optional string guild_name = 9;</code>
     */
    boolean hasGuildName();
    /**
     * <code>optional string guild_name = 9;</code>
     */
    java.lang.String getGuildName();
    /**
     * <code>optional string guild_name = 9;</code>
     */
    com.google.protobuf.ByteString
        getGuildNameBytes();

    // optional string guild_tag = 10;
    /**
     * <code>optional string guild_tag = 10;</code>
     */
    boolean hasGuildTag();
    /**
     * <code>optional string guild_tag = 10;</code>
     */
    java.lang.String getGuildTag();
    /**
     * <code>optional string guild_tag = 10;</code>
     */
    com.google.protobuf.ByteString
        getGuildTagBytes();

    // optional uint32 guild_id = 11;
    /**
     * <code>optional uint32 guild_id = 11;</code>
     */
    boolean hasGuildId();
    /**
     * <code>optional uint32 guild_id = 11;</code>
     */
    int getGuildId();

    // optional uint64 guild_logo = 12;
    /**
     * <code>optional uint64 guild_logo = 12;</code>
     */
    boolean hasGuildLogo();
    /**
     * <code>optional uint64 guild_logo = 12;</code>
     */
    long getGuildLogo();

    // optional uint64 guild_base_logo = 13;
    /**
     * <code>optional uint64 guild_base_logo = 13;</code>
     */
    boolean hasGuildBaseLogo();
    /**
     * <code>optional uint64 guild_base_logo = 13;</code>
     */
    long getGuildBaseLogo();

    // optional uint64 guild_banner_logo = 14;
    /**
     * <code>optional uint64 guild_banner_logo = 14;</code>
     */
    boolean hasGuildBannerLogo();
    /**
     * <code>optional uint64 guild_banner_logo = 14;</code>
     */
    long getGuildBannerLogo();

    // optional uint32 rank = 15;
    /**
     * <code>optional uint32 rank = 15;</code>
     */
    boolean hasRank();
    /**
     * <code>optional uint32 rank = 15;</code>
     */
    int getRank();

    // optional sint32 rank_change = 16;
    /**
     * <code>optional sint32 rank_change = 16;</code>
     */
    boolean hasRankChange();
    /**
     * <code>optional sint32 rank_change = 16;</code>
     */
    int getRankChange();
  }
  /**
   * Protobuf type {@code CLobbyTeamDetails}
   */
  public static final class CLobbyTeamDetails extends
      com.google.protobuf.GeneratedMessage
      implements CLobbyTeamDetailsOrBuilder {
    // Use CLobbyTeamDetails.newBuilder() to construct.
    private CLobbyTeamDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CLobbyTeamDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CLobbyTeamDetails defaultInstance;
    public static CLobbyTeamDetails getDefaultInstance() {
      return defaultInstance;
    }

    public CLobbyTeamDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CLobbyTeamDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              teamName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              teamTag_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              teamId_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              teamLogo_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              teamBaseLogo_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              teamBannerLogo_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              teamComplete_ = input.readBool();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000080;
              guildName_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000100;
              guildTag_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              guildId_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              guildLogo_ = input.readUInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              guildBaseLogo_ = input.readUInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              guildBannerLogo_ = input.readUInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              rank_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              rankChange_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyTeamDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyTeamDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<CLobbyTeamDetails> PARSER =
        new com.google.protobuf.AbstractParser<CLobbyTeamDetails>() {
      public CLobbyTeamDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CLobbyTeamDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CLobbyTeamDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string team_name = 1;
    public static final int TEAM_NAME_FIELD_NUMBER = 1;
    private java.lang.Object teamName_;
    /**
     * <code>optional string team_name = 1;</code>
     */
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string team_name = 1;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string team_tag = 3;
    public static final int TEAM_TAG_FIELD_NUMBER = 3;
    private java.lang.Object teamTag_;
    /**
     * <code>optional string team_tag = 3;</code>
     */
    public boolean hasTeamTag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string team_tag = 3;</code>
     */
    public java.lang.String getTeamTag() {
      java.lang.Object ref = teamTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamTag_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_tag = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTeamTagBytes() {
      java.lang.Object ref = teamTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 team_id = 4;
    public static final int TEAM_ID_FIELD_NUMBER = 4;
    private int teamId_;
    /**
     * <code>optional uint32 team_id = 4;</code>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 team_id = 4;</code>
     */
    public int getTeamId() {
      return teamId_;
    }

    // optional uint64 team_logo = 5;
    public static final int TEAM_LOGO_FIELD_NUMBER = 5;
    private long teamLogo_;
    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    public boolean hasTeamLogo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 team_logo = 5;</code>
     */
    public long getTeamLogo() {
      return teamLogo_;
    }

    // optional uint64 team_base_logo = 6;
    public static final int TEAM_BASE_LOGO_FIELD_NUMBER = 6;
    private long teamBaseLogo_;
    /**
     * <code>optional uint64 team_base_logo = 6;</code>
     */
    public boolean hasTeamBaseLogo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 team_base_logo = 6;</code>
     */
    public long getTeamBaseLogo() {
      return teamBaseLogo_;
    }

    // optional uint64 team_banner_logo = 7;
    public static final int TEAM_BANNER_LOGO_FIELD_NUMBER = 7;
    private long teamBannerLogo_;
    /**
     * <code>optional uint64 team_banner_logo = 7;</code>
     */
    public boolean hasTeamBannerLogo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 team_banner_logo = 7;</code>
     */
    public long getTeamBannerLogo() {
      return teamBannerLogo_;
    }

    // optional bool team_complete = 8;
    public static final int TEAM_COMPLETE_FIELD_NUMBER = 8;
    private boolean teamComplete_;
    /**
     * <code>optional bool team_complete = 8;</code>
     */
    public boolean hasTeamComplete() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool team_complete = 8;</code>
     */
    public boolean getTeamComplete() {
      return teamComplete_;
    }

    // optional string guild_name = 9;
    public static final int GUILD_NAME_FIELD_NUMBER = 9;
    private java.lang.Object guildName_;
    /**
     * <code>optional string guild_name = 9;</code>
     */
    public boolean hasGuildName() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string guild_name = 9;</code>
     */
    public java.lang.String getGuildName() {
      java.lang.Object ref = guildName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          guildName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string guild_name = 9;</code>
     */
    public com.google.protobuf.ByteString
        getGuildNameBytes() {
      java.lang.Object ref = guildName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        guildName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string guild_tag = 10;
    public static final int GUILD_TAG_FIELD_NUMBER = 10;
    private java.lang.Object guildTag_;
    /**
     * <code>optional string guild_tag = 10;</code>
     */
    public boolean hasGuildTag() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string guild_tag = 10;</code>
     */
    public java.lang.String getGuildTag() {
      java.lang.Object ref = guildTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          guildTag_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string guild_tag = 10;</code>
     */
    public com.google.protobuf.ByteString
        getGuildTagBytes() {
      java.lang.Object ref = guildTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        guildTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 guild_id = 11;
    public static final int GUILD_ID_FIELD_NUMBER = 11;
    private int guildId_;
    /**
     * <code>optional uint32 guild_id = 11;</code>
     */
    public boolean hasGuildId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 guild_id = 11;</code>
     */
    public int getGuildId() {
      return guildId_;
    }

    // optional uint64 guild_logo = 12;
    public static final int GUILD_LOGO_FIELD_NUMBER = 12;
    private long guildLogo_;
    /**
     * <code>optional uint64 guild_logo = 12;</code>
     */
    public boolean hasGuildLogo() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint64 guild_logo = 12;</code>
     */
    public long getGuildLogo() {
      return guildLogo_;
    }

    // optional uint64 guild_base_logo = 13;
    public static final int GUILD_BASE_LOGO_FIELD_NUMBER = 13;
    private long guildBaseLogo_;
    /**
     * <code>optional uint64 guild_base_logo = 13;</code>
     */
    public boolean hasGuildBaseLogo() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint64 guild_base_logo = 13;</code>
     */
    public long getGuildBaseLogo() {
      return guildBaseLogo_;
    }

    // optional uint64 guild_banner_logo = 14;
    public static final int GUILD_BANNER_LOGO_FIELD_NUMBER = 14;
    private long guildBannerLogo_;
    /**
     * <code>optional uint64 guild_banner_logo = 14;</code>
     */
    public boolean hasGuildBannerLogo() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint64 guild_banner_logo = 14;</code>
     */
    public long getGuildBannerLogo() {
      return guildBannerLogo_;
    }

    // optional uint32 rank = 15;
    public static final int RANK_FIELD_NUMBER = 15;
    private int rank_;
    /**
     * <code>optional uint32 rank = 15;</code>
     */
    public boolean hasRank() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 rank = 15;</code>
     */
    public int getRank() {
      return rank_;
    }

    // optional sint32 rank_change = 16;
    public static final int RANK_CHANGE_FIELD_NUMBER = 16;
    private int rankChange_;
    /**
     * <code>optional sint32 rank_change = 16;</code>
     */
    public boolean hasRankChange() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional sint32 rank_change = 16;</code>
     */
    public int getRankChange() {
      return rankChange_;
    }

    private void initFields() {
      teamName_ = "";
      teamTag_ = "";
      teamId_ = 0;
      teamLogo_ = 0L;
      teamBaseLogo_ = 0L;
      teamBannerLogo_ = 0L;
      teamComplete_ = false;
      guildName_ = "";
      guildTag_ = "";
      guildId_ = 0;
      guildLogo_ = 0L;
      guildBaseLogo_ = 0L;
      guildBannerLogo_ = 0L;
      rank_ = 0;
      rankChange_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTeamNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getTeamTagBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, teamId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(5, teamLogo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(6, teamBaseLogo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(7, teamBannerLogo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, teamComplete_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getGuildNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getGuildTagBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(11, guildId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt64(12, guildLogo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt64(13, guildBaseLogo_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt64(14, guildBannerLogo_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(15, rank_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeSInt32(16, rankChange_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTeamNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTeamTagBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, teamId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, teamLogo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, teamBaseLogo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, teamBannerLogo_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, teamComplete_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getGuildNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getGuildTagBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, guildId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(12, guildLogo_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, guildBaseLogo_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(14, guildBannerLogo_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, rank_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(16, rankChange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLobbyTeamDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyTeamDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyTeamDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        teamTag_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        teamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        teamLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        teamBaseLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        teamBannerLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        teamComplete_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        guildName_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        guildTag_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        guildId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        guildLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        guildBaseLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        guildBannerLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        rank_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        rankChange_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyTeamDetails_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamName_ = teamName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamTag_ = teamTag_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamLogo_ = teamLogo_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.teamBaseLogo_ = teamBaseLogo_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.teamBannerLogo_ = teamBannerLogo_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.teamComplete_ = teamComplete_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.guildName_ = guildName_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.guildTag_ = guildTag_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.guildId_ = guildId_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.guildLogo_ = guildLogo_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.guildBaseLogo_ = guildBaseLogo_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.guildBannerLogo_ = guildBannerLogo_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.rank_ = rank_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.rankChange_ = rankChange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.getDefaultInstance()) return this;
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000001;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (other.hasTeamTag()) {
          bitField0_ |= 0x00000002;
          teamTag_ = other.teamTag_;
          onChanged();
        }
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        if (other.hasTeamLogo()) {
          setTeamLogo(other.getTeamLogo());
        }
        if (other.hasTeamBaseLogo()) {
          setTeamBaseLogo(other.getTeamBaseLogo());
        }
        if (other.hasTeamBannerLogo()) {
          setTeamBannerLogo(other.getTeamBannerLogo());
        }
        if (other.hasTeamComplete()) {
          setTeamComplete(other.getTeamComplete());
        }
        if (other.hasGuildName()) {
          bitField0_ |= 0x00000080;
          guildName_ = other.guildName_;
          onChanged();
        }
        if (other.hasGuildTag()) {
          bitField0_ |= 0x00000100;
          guildTag_ = other.guildTag_;
          onChanged();
        }
        if (other.hasGuildId()) {
          setGuildId(other.getGuildId());
        }
        if (other.hasGuildLogo()) {
          setGuildLogo(other.getGuildLogo());
        }
        if (other.hasGuildBaseLogo()) {
          setGuildBaseLogo(other.getGuildBaseLogo());
        }
        if (other.hasGuildBannerLogo()) {
          setGuildBannerLogo(other.getGuildBannerLogo());
        }
        if (other.hasRank()) {
          setRank(other.getRank());
        }
        if (other.hasRankChange()) {
          setRankChange(other.getRankChange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string team_name = 1;
      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 1;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string team_name = 1;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 1;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 1;</code>
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 1;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        teamName_ = value;
        onChanged();
        return this;
      }

      // optional string team_tag = 3;
      private java.lang.Object teamTag_ = "";
      /**
       * <code>optional string team_tag = 3;</code>
       */
      public boolean hasTeamTag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string team_tag = 3;</code>
       */
      public java.lang.String getTeamTag() {
        java.lang.Object ref = teamTag_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          teamTag_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_tag = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTeamTagBytes() {
        java.lang.Object ref = teamTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_tag = 3;</code>
       */
      public Builder setTeamTag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        teamTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_tag = 3;</code>
       */
      public Builder clearTeamTag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamTag_ = getDefaultInstance().getTeamTag();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_tag = 3;</code>
       */
      public Builder setTeamTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        teamTag_ = value;
        onChanged();
        return this;
      }

      // optional uint32 team_id = 4;
      private int teamId_ ;
      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      public Builder setTeamId(int value) {
        bitField0_ |= 0x00000004;
        teamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_id = 4;</code>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamId_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 team_logo = 5;
      private long teamLogo_ ;
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public boolean hasTeamLogo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public long getTeamLogo() {
        return teamLogo_;
      }
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public Builder setTeamLogo(long value) {
        bitField0_ |= 0x00000008;
        teamLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 team_logo = 5;</code>
       */
      public Builder clearTeamLogo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamLogo_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 team_base_logo = 6;
      private long teamBaseLogo_ ;
      /**
       * <code>optional uint64 team_base_logo = 6;</code>
       */
      public boolean hasTeamBaseLogo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 team_base_logo = 6;</code>
       */
      public long getTeamBaseLogo() {
        return teamBaseLogo_;
      }
      /**
       * <code>optional uint64 team_base_logo = 6;</code>
       */
      public Builder setTeamBaseLogo(long value) {
        bitField0_ |= 0x00000010;
        teamBaseLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 team_base_logo = 6;</code>
       */
      public Builder clearTeamBaseLogo() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teamBaseLogo_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 team_banner_logo = 7;
      private long teamBannerLogo_ ;
      /**
       * <code>optional uint64 team_banner_logo = 7;</code>
       */
      public boolean hasTeamBannerLogo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 team_banner_logo = 7;</code>
       */
      public long getTeamBannerLogo() {
        return teamBannerLogo_;
      }
      /**
       * <code>optional uint64 team_banner_logo = 7;</code>
       */
      public Builder setTeamBannerLogo(long value) {
        bitField0_ |= 0x00000020;
        teamBannerLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 team_banner_logo = 7;</code>
       */
      public Builder clearTeamBannerLogo() {
        bitField0_ = (bitField0_ & ~0x00000020);
        teamBannerLogo_ = 0L;
        onChanged();
        return this;
      }

      // optional bool team_complete = 8;
      private boolean teamComplete_ ;
      /**
       * <code>optional bool team_complete = 8;</code>
       */
      public boolean hasTeamComplete() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool team_complete = 8;</code>
       */
      public boolean getTeamComplete() {
        return teamComplete_;
      }
      /**
       * <code>optional bool team_complete = 8;</code>
       */
      public Builder setTeamComplete(boolean value) {
        bitField0_ |= 0x00000040;
        teamComplete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool team_complete = 8;</code>
       */
      public Builder clearTeamComplete() {
        bitField0_ = (bitField0_ & ~0x00000040);
        teamComplete_ = false;
        onChanged();
        return this;
      }

      // optional string guild_name = 9;
      private java.lang.Object guildName_ = "";
      /**
       * <code>optional string guild_name = 9;</code>
       */
      public boolean hasGuildName() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string guild_name = 9;</code>
       */
      public java.lang.String getGuildName() {
        java.lang.Object ref = guildName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          guildName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string guild_name = 9;</code>
       */
      public com.google.protobuf.ByteString
          getGuildNameBytes() {
        java.lang.Object ref = guildName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          guildName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string guild_name = 9;</code>
       */
      public Builder setGuildName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        guildName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string guild_name = 9;</code>
       */
      public Builder clearGuildName() {
        bitField0_ = (bitField0_ & ~0x00000080);
        guildName_ = getDefaultInstance().getGuildName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string guild_name = 9;</code>
       */
      public Builder setGuildNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        guildName_ = value;
        onChanged();
        return this;
      }

      // optional string guild_tag = 10;
      private java.lang.Object guildTag_ = "";
      /**
       * <code>optional string guild_tag = 10;</code>
       */
      public boolean hasGuildTag() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string guild_tag = 10;</code>
       */
      public java.lang.String getGuildTag() {
        java.lang.Object ref = guildTag_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          guildTag_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string guild_tag = 10;</code>
       */
      public com.google.protobuf.ByteString
          getGuildTagBytes() {
        java.lang.Object ref = guildTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          guildTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string guild_tag = 10;</code>
       */
      public Builder setGuildTag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        guildTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string guild_tag = 10;</code>
       */
      public Builder clearGuildTag() {
        bitField0_ = (bitField0_ & ~0x00000100);
        guildTag_ = getDefaultInstance().getGuildTag();
        onChanged();
        return this;
      }
      /**
       * <code>optional string guild_tag = 10;</code>
       */
      public Builder setGuildTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        guildTag_ = value;
        onChanged();
        return this;
      }

      // optional uint32 guild_id = 11;
      private int guildId_ ;
      /**
       * <code>optional uint32 guild_id = 11;</code>
       */
      public boolean hasGuildId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 guild_id = 11;</code>
       */
      public int getGuildId() {
        return guildId_;
      }
      /**
       * <code>optional uint32 guild_id = 11;</code>
       */
      public Builder setGuildId(int value) {
        bitField0_ |= 0x00000200;
        guildId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 guild_id = 11;</code>
       */
      public Builder clearGuildId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        guildId_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 guild_logo = 12;
      private long guildLogo_ ;
      /**
       * <code>optional uint64 guild_logo = 12;</code>
       */
      public boolean hasGuildLogo() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint64 guild_logo = 12;</code>
       */
      public long getGuildLogo() {
        return guildLogo_;
      }
      /**
       * <code>optional uint64 guild_logo = 12;</code>
       */
      public Builder setGuildLogo(long value) {
        bitField0_ |= 0x00000400;
        guildLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 guild_logo = 12;</code>
       */
      public Builder clearGuildLogo() {
        bitField0_ = (bitField0_ & ~0x00000400);
        guildLogo_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 guild_base_logo = 13;
      private long guildBaseLogo_ ;
      /**
       * <code>optional uint64 guild_base_logo = 13;</code>
       */
      public boolean hasGuildBaseLogo() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint64 guild_base_logo = 13;</code>
       */
      public long getGuildBaseLogo() {
        return guildBaseLogo_;
      }
      /**
       * <code>optional uint64 guild_base_logo = 13;</code>
       */
      public Builder setGuildBaseLogo(long value) {
        bitField0_ |= 0x00000800;
        guildBaseLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 guild_base_logo = 13;</code>
       */
      public Builder clearGuildBaseLogo() {
        bitField0_ = (bitField0_ & ~0x00000800);
        guildBaseLogo_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 guild_banner_logo = 14;
      private long guildBannerLogo_ ;
      /**
       * <code>optional uint64 guild_banner_logo = 14;</code>
       */
      public boolean hasGuildBannerLogo() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint64 guild_banner_logo = 14;</code>
       */
      public long getGuildBannerLogo() {
        return guildBannerLogo_;
      }
      /**
       * <code>optional uint64 guild_banner_logo = 14;</code>
       */
      public Builder setGuildBannerLogo(long value) {
        bitField0_ |= 0x00001000;
        guildBannerLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 guild_banner_logo = 14;</code>
       */
      public Builder clearGuildBannerLogo() {
        bitField0_ = (bitField0_ & ~0x00001000);
        guildBannerLogo_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 rank = 15;
      private int rank_ ;
      /**
       * <code>optional uint32 rank = 15;</code>
       */
      public boolean hasRank() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 rank = 15;</code>
       */
      public int getRank() {
        return rank_;
      }
      /**
       * <code>optional uint32 rank = 15;</code>
       */
      public Builder setRank(int value) {
        bitField0_ |= 0x00002000;
        rank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rank = 15;</code>
       */
      public Builder clearRank() {
        bitField0_ = (bitField0_ & ~0x00002000);
        rank_ = 0;
        onChanged();
        return this;
      }

      // optional sint32 rank_change = 16;
      private int rankChange_ ;
      /**
       * <code>optional sint32 rank_change = 16;</code>
       */
      public boolean hasRankChange() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional sint32 rank_change = 16;</code>
       */
      public int getRankChange() {
        return rankChange_;
      }
      /**
       * <code>optional sint32 rank_change = 16;</code>
       */
      public Builder setRankChange(int value) {
        bitField0_ |= 0x00004000;
        rankChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 rank_change = 16;</code>
       */
      public Builder clearRankChange() {
        bitField0_ = (bitField0_ & ~0x00004000);
        rankChange_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CLobbyTeamDetails)
    }

    static {
      defaultInstance = new CLobbyTeamDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CLobbyTeamDetails)
  }

  public interface CLobbyTimedRewardDetailsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 item_def_index = 2;
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    boolean hasItemDefIndex();
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    int getItemDefIndex();

    // optional bool is_supply_crate = 3;
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    boolean hasIsSupplyCrate();
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    boolean getIsSupplyCrate();

    // optional bool is_timed_drop = 4;
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    boolean hasIsTimedDrop();
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    boolean getIsTimedDrop();

    // optional uint32 account_id = 5;
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    int getAccountId();

    // optional uint32 origin = 6;
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    int getOrigin();
  }
  /**
   * Protobuf type {@code CLobbyTimedRewardDetails}
   */
  public static final class CLobbyTimedRewardDetails extends
      com.google.protobuf.GeneratedMessage
      implements CLobbyTimedRewardDetailsOrBuilder {
    // Use CLobbyTimedRewardDetails.newBuilder() to construct.
    private CLobbyTimedRewardDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CLobbyTimedRewardDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CLobbyTimedRewardDetails defaultInstance;
    public static CLobbyTimedRewardDetails getDefaultInstance() {
      return defaultInstance;
    }

    public CLobbyTimedRewardDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CLobbyTimedRewardDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              itemDefIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              isSupplyCrate_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              isTimedDrop_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              accountId_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              origin_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyTimedRewardDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyTimedRewardDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<CLobbyTimedRewardDetails> PARSER =
        new com.google.protobuf.AbstractParser<CLobbyTimedRewardDetails>() {
      public CLobbyTimedRewardDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CLobbyTimedRewardDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CLobbyTimedRewardDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 item_def_index = 2;
    public static final int ITEM_DEF_INDEX_FIELD_NUMBER = 2;
    private int itemDefIndex_;
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    public boolean hasItemDefIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    public int getItemDefIndex() {
      return itemDefIndex_;
    }

    // optional bool is_supply_crate = 3;
    public static final int IS_SUPPLY_CRATE_FIELD_NUMBER = 3;
    private boolean isSupplyCrate_;
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    public boolean hasIsSupplyCrate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    public boolean getIsSupplyCrate() {
      return isSupplyCrate_;
    }

    // optional bool is_timed_drop = 4;
    public static final int IS_TIMED_DROP_FIELD_NUMBER = 4;
    private boolean isTimedDrop_;
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    public boolean hasIsTimedDrop() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    public boolean getIsTimedDrop() {
      return isTimedDrop_;
    }

    // optional uint32 account_id = 5;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 5;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    // optional uint32 origin = 6;
    public static final int ORIGIN_FIELD_NUMBER = 6;
    private int origin_;
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    public int getOrigin() {
      return origin_;
    }

    private void initFields() {
      itemDefIndex_ = 0;
      isSupplyCrate_ = false;
      isTimedDrop_ = false;
      accountId_ = 0;
      origin_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, itemDefIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, isSupplyCrate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, isTimedDrop_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, accountId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, origin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, itemDefIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isSupplyCrate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isTimedDrop_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, accountId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, origin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLobbyTimedRewardDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyTimedRewardDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyTimedRewardDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemDefIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isSupplyCrate_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        isTimedDrop_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        origin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyTimedRewardDetails_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemDefIndex_ = itemDefIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isSupplyCrate_ = isSupplyCrate_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isTimedDrop_ = isTimedDrop_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.origin_ = origin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.getDefaultInstance()) return this;
        if (other.hasItemDefIndex()) {
          setItemDefIndex(other.getItemDefIndex());
        }
        if (other.hasIsSupplyCrate()) {
          setIsSupplyCrate(other.getIsSupplyCrate());
        }
        if (other.hasIsTimedDrop()) {
          setIsTimedDrop(other.getIsTimedDrop());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasOrigin()) {
          setOrigin(other.getOrigin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 item_def_index = 2;
      private int itemDefIndex_ ;
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public boolean hasItemDefIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public int getItemDefIndex() {
        return itemDefIndex_;
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public Builder setItemDefIndex(int value) {
        bitField0_ |= 0x00000001;
        itemDefIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public Builder clearItemDefIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemDefIndex_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_supply_crate = 3;
      private boolean isSupplyCrate_ ;
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public boolean hasIsSupplyCrate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public boolean getIsSupplyCrate() {
        return isSupplyCrate_;
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public Builder setIsSupplyCrate(boolean value) {
        bitField0_ |= 0x00000002;
        isSupplyCrate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public Builder clearIsSupplyCrate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isSupplyCrate_ = false;
        onChanged();
        return this;
      }

      // optional bool is_timed_drop = 4;
      private boolean isTimedDrop_ ;
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public boolean hasIsTimedDrop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public boolean getIsTimedDrop() {
        return isTimedDrop_;
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public Builder setIsTimedDrop(boolean value) {
        bitField0_ |= 0x00000004;
        isTimedDrop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public Builder clearIsTimedDrop() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isTimedDrop_ = false;
        onChanged();
        return this;
      }

      // optional uint32 account_id = 5;
      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000008;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 origin = 6;
      private int origin_ ;
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public int getOrigin() {
        return origin_;
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public Builder setOrigin(int value) {
        bitField0_ |= 0x00000010;
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public Builder clearOrigin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        origin_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CLobbyTimedRewardDetails)
    }

    static {
      defaultInstance = new CLobbyTimedRewardDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CLobbyTimedRewardDetails)
  }

  public interface CLobbyBroadcastChannelInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 channel_id = 1;
    /**
     * <code>optional uint32 channel_id = 1;</code>
     */
    boolean hasChannelId();
    /**
     * <code>optional uint32 channel_id = 1;</code>
     */
    int getChannelId();

    // optional string country_code = 2;
    /**
     * <code>optional string country_code = 2;</code>
     */
    boolean hasCountryCode();
    /**
     * <code>optional string country_code = 2;</code>
     */
    java.lang.String getCountryCode();
    /**
     * <code>optional string country_code = 2;</code>
     */
    com.google.protobuf.ByteString
        getCountryCodeBytes();

    // optional string description = 3;
    /**
     * <code>optional string description = 3;</code>
     */
    boolean hasDescription();
    /**
     * <code>optional string description = 3;</code>
     */
    java.lang.String getDescription();
    /**
     * <code>optional string description = 3;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    // optional string language_code = 4;
    /**
     * <code>optional string language_code = 4;</code>
     */
    boolean hasLanguageCode();
    /**
     * <code>optional string language_code = 4;</code>
     */
    java.lang.String getLanguageCode();
    /**
     * <code>optional string language_code = 4;</code>
     */
    com.google.protobuf.ByteString
        getLanguageCodeBytes();
  }
  /**
   * Protobuf type {@code CLobbyBroadcastChannelInfo}
   */
  public static final class CLobbyBroadcastChannelInfo extends
      com.google.protobuf.GeneratedMessage
      implements CLobbyBroadcastChannelInfoOrBuilder {
    // Use CLobbyBroadcastChannelInfo.newBuilder() to construct.
    private CLobbyBroadcastChannelInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CLobbyBroadcastChannelInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CLobbyBroadcastChannelInfo defaultInstance;
    public static CLobbyBroadcastChannelInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CLobbyBroadcastChannelInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CLobbyBroadcastChannelInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              channelId_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              countryCode_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              description_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              languageCode_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyBroadcastChannelInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyBroadcastChannelInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CLobbyBroadcastChannelInfo> PARSER =
        new com.google.protobuf.AbstractParser<CLobbyBroadcastChannelInfo>() {
      public CLobbyBroadcastChannelInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CLobbyBroadcastChannelInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CLobbyBroadcastChannelInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 channel_id = 1;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private int channelId_;
    /**
     * <code>optional uint32 channel_id = 1;</code>
     */
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 channel_id = 1;</code>
     */
    public int getChannelId() {
      return channelId_;
    }

    // optional string country_code = 2;
    public static final int COUNTRY_CODE_FIELD_NUMBER = 2;
    private java.lang.Object countryCode_;
    /**
     * <code>optional string country_code = 2;</code>
     */
    public boolean hasCountryCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string country_code = 2;</code>
     */
    public java.lang.String getCountryCode() {
      java.lang.Object ref = countryCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          countryCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string country_code = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCountryCodeBytes() {
      java.lang.Object ref = countryCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        countryCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string description = 3;
    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private java.lang.Object description_;
    /**
     * <code>optional string description = 3;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string description = 3;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string description = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string language_code = 4;
    public static final int LANGUAGE_CODE_FIELD_NUMBER = 4;
    private java.lang.Object languageCode_;
    /**
     * <code>optional string language_code = 4;</code>
     */
    public boolean hasLanguageCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string language_code = 4;</code>
     */
    public java.lang.String getLanguageCode() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          languageCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string language_code = 4;</code>
     */
    public com.google.protobuf.ByteString
        getLanguageCodeBytes() {
      java.lang.Object ref = languageCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        languageCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      channelId_ = 0;
      countryCode_ = "";
      description_ = "";
      languageCode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getCountryCodeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getLanguageCodeBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getCountryCodeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getLanguageCodeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLobbyBroadcastChannelInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyBroadcastChannelInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyBroadcastChannelInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        channelId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        countryCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        languageCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CLobbyBroadcastChannelInfo_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.channelId_ = channelId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.countryCode_ = countryCode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.languageCode_ = languageCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasCountryCode()) {
          bitField0_ |= 0x00000002;
          countryCode_ = other.countryCode_;
          onChanged();
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000004;
          description_ = other.description_;
          onChanged();
        }
        if (other.hasLanguageCode()) {
          bitField0_ |= 0x00000008;
          languageCode_ = other.languageCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 channel_id = 1;
      private int channelId_ ;
      /**
       * <code>optional uint32 channel_id = 1;</code>
       */
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       */
      public int getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       */
      public Builder setChannelId(int value) {
        bitField0_ |= 0x00000001;
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0;
        onChanged();
        return this;
      }

      // optional string country_code = 2;
      private java.lang.Object countryCode_ = "";
      /**
       * <code>optional string country_code = 2;</code>
       */
      public boolean hasCountryCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string country_code = 2;</code>
       */
      public java.lang.String getCountryCode() {
        java.lang.Object ref = countryCode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          countryCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string country_code = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCountryCodeBytes() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          countryCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string country_code = 2;</code>
       */
      public Builder setCountryCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        countryCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string country_code = 2;</code>
       */
      public Builder clearCountryCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        countryCode_ = getDefaultInstance().getCountryCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string country_code = 2;</code>
       */
      public Builder setCountryCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        countryCode_ = value;
        onChanged();
        return this;
      }

      // optional string description = 3;
      private java.lang.Object description_ = "";
      /**
       * <code>optional string description = 3;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000004);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string description = 3;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        description_ = value;
        onChanged();
        return this;
      }

      // optional string language_code = 4;
      private java.lang.Object languageCode_ = "";
      /**
       * <code>optional string language_code = 4;</code>
       */
      public boolean hasLanguageCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string language_code = 4;</code>
       */
      public java.lang.String getLanguageCode() {
        java.lang.Object ref = languageCode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          languageCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string language_code = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLanguageCodeBytes() {
        java.lang.Object ref = languageCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          languageCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string language_code = 4;</code>
       */
      public Builder setLanguageCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        languageCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string language_code = 4;</code>
       */
      public Builder clearLanguageCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        languageCode_ = getDefaultInstance().getLanguageCode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string language_code = 4;</code>
       */
      public Builder setLanguageCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        languageCode_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CLobbyBroadcastChannelInfo)
    }

    static {
      defaultInstance = new CLobbyBroadcastChannelInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CLobbyBroadcastChannelInfo)
  }

  public interface CSODOTALobbyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 lobby_id = 1;
    /**
     * <code>optional uint64 lobby_id = 1;</code>
     */
    boolean hasLobbyId();
    /**
     * <code>optional uint64 lobby_id = 1;</code>
     */
    long getLobbyId();

    // repeated .CDOTALobbyMember members = 2;
    /**
     * <code>repeated .CDOTALobbyMember members = 2;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> 
        getMembersList();
    /**
     * <code>repeated .CDOTALobbyMember members = 2;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember getMembers(int index);
    /**
     * <code>repeated .CDOTALobbyMember members = 2;</code>
     */
    int getMembersCount();
    /**
     * <code>repeated .CDOTALobbyMember members = 2;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder> 
        getMembersOrBuilderList();
    /**
     * <code>repeated .CDOTALobbyMember members = 2;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder getMembersOrBuilder(
        int index);

    // repeated .CDOTALobbyMember left_members = 7;
    /**
     * <code>repeated .CDOTALobbyMember left_members = 7;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> 
        getLeftMembersList();
    /**
     * <code>repeated .CDOTALobbyMember left_members = 7;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember getLeftMembers(int index);
    /**
     * <code>repeated .CDOTALobbyMember left_members = 7;</code>
     */
    int getLeftMembersCount();
    /**
     * <code>repeated .CDOTALobbyMember left_members = 7;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder> 
        getLeftMembersOrBuilderList();
    /**
     * <code>repeated .CDOTALobbyMember left_members = 7;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder getLeftMembersOrBuilder(
        int index);

    // optional fixed64 leader_id = 11;
    /**
     * <code>optional fixed64 leader_id = 11;</code>
     */
    boolean hasLeaderId();
    /**
     * <code>optional fixed64 leader_id = 11;</code>
     */
    long getLeaderId();

    // optional fixed64 server_id = 6 [default = 0];
    /**
     * <code>optional fixed64 server_id = 6 [default = 0];</code>
     */
    boolean hasServerId();
    /**
     * <code>optional fixed64 server_id = 6 [default = 0];</code>
     */
    long getServerId();

    // optional uint32 game_mode = 3;
    /**
     * <code>optional uint32 game_mode = 3;</code>
     */
    boolean hasGameMode();
    /**
     * <code>optional uint32 game_mode = 3;</code>
     */
    int getGameMode();

    // repeated fixed64 pending_invites = 10;
    /**
     * <code>repeated fixed64 pending_invites = 10;</code>
     */
    java.util.List<java.lang.Long> getPendingInvitesList();
    /**
     * <code>repeated fixed64 pending_invites = 10;</code>
     */
    int getPendingInvitesCount();
    /**
     * <code>repeated fixed64 pending_invites = 10;</code>
     */
    long getPendingInvites(int index);

    // optional .CSODOTALobby.State state = 4 [default = UI];
    /**
     * <code>optional .CSODOTALobby.State state = 4 [default = UI];</code>
     */
    boolean hasState();
    /**
     * <code>optional .CSODOTALobby.State state = 4 [default = UI];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State getState();

    // optional string connect = 5;
    /**
     * <code>optional string connect = 5;</code>
     */
    boolean hasConnect();
    /**
     * <code>optional string connect = 5;</code>
     */
    java.lang.String getConnect();
    /**
     * <code>optional string connect = 5;</code>
     */
    com.google.protobuf.ByteString
        getConnectBytes();

    // optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];
    /**
     * <code>optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];</code>
     */
    boolean hasLobbyType();
    /**
     * <code>optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType getLobbyType();

    // optional bool allow_cheats = 13;
    /**
     * <code>optional bool allow_cheats = 13;</code>
     */
    boolean hasAllowCheats();
    /**
     * <code>optional bool allow_cheats = 13;</code>
     */
    boolean getAllowCheats();

    // optional bool fill_with_bots = 14;
    /**
     * <code>optional bool fill_with_bots = 14;</code>
     */
    boolean hasFillWithBots();
    /**
     * <code>optional bool fill_with_bots = 14;</code>
     */
    boolean getFillWithBots();

    // optional bool intro_mode = 15;
    /**
     * <code>optional bool intro_mode = 15;</code>
     */
    boolean hasIntroMode();
    /**
     * <code>optional bool intro_mode = 15;</code>
     */
    boolean getIntroMode();

    // optional string game_name = 16;
    /**
     * <code>optional string game_name = 16;</code>
     */
    boolean hasGameName();
    /**
     * <code>optional string game_name = 16;</code>
     */
    java.lang.String getGameName();
    /**
     * <code>optional string game_name = 16;</code>
     */
    com.google.protobuf.ByteString
        getGameNameBytes();

    // repeated .CLobbyTeamDetails team_details = 17;
    /**
     * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails> 
        getTeamDetailsList();
    /**
     * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails getTeamDetails(int index);
    /**
     * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
     */
    int getTeamDetailsCount();
    /**
     * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetailsOrBuilder> 
        getTeamDetailsOrBuilderList();
    /**
     * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetailsOrBuilder getTeamDetailsOrBuilder(
        int index);

    // optional uint32 tutorial_lesson = 18;
    /**
     * <code>optional uint32 tutorial_lesson = 18;</code>
     */
    boolean hasTutorialLesson();
    /**
     * <code>optional uint32 tutorial_lesson = 18;</code>
     */
    int getTutorialLesson();

    // optional uint32 tournament_id = 19;
    /**
     * <code>optional uint32 tournament_id = 19;</code>
     */
    boolean hasTournamentId();
    /**
     * <code>optional uint32 tournament_id = 19;</code>
     */
    int getTournamentId();

    // optional uint32 tournament_game_id = 20;
    /**
     * <code>optional uint32 tournament_game_id = 20;</code>
     */
    boolean hasTournamentGameId();
    /**
     * <code>optional uint32 tournament_game_id = 20;</code>
     */
    int getTournamentGameId();

    // optional uint32 server_region = 21 [default = 0];
    /**
     * <code>optional uint32 server_region = 21 [default = 0];</code>
     */
    boolean hasServerRegion();
    /**
     * <code>optional uint32 server_region = 21 [default = 0];</code>
     */
    int getServerRegion();

    // optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];
    /**
     * <code>optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];</code>
     */
    boolean hasGameState();
    /**
     * <code>optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState getGameState();

    // optional uint32 num_spectators = 23;
    /**
     * <code>optional uint32 num_spectators = 23;</code>
     */
    boolean hasNumSpectators();
    /**
     * <code>optional uint32 num_spectators = 23;</code>
     */
    int getNumSpectators();

    // optional uint32 matchgroup = 25;
    /**
     * <code>optional uint32 matchgroup = 25;</code>
     */
    boolean hasMatchgroup();
    /**
     * <code>optional uint32 matchgroup = 25;</code>
     */
    int getMatchgroup();

    // optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];
    /**
     * <code>optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];</code>
     */
    boolean hasCmPick();
    /**
     * <code>optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK getCmPick();

    // optional uint64 match_id = 30;
    /**
     * <code>optional uint64 match_id = 30;</code>
     */
    boolean hasMatchId();
    /**
     * <code>optional uint64 match_id = 30;</code>
     */
    long getMatchId();

    // optional bool allow_spectating = 31 [default = true];
    /**
     * <code>optional bool allow_spectating = 31 [default = true];</code>
     */
    boolean hasAllowSpectating();
    /**
     * <code>optional bool allow_spectating = 31 [default = true];</code>
     */
    boolean getAllowSpectating();

    // optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];
    /**
     * <code>optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];</code>
     */
    boolean hasBotDifficulty();
    /**
     * <code>optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty getBotDifficulty();

    // optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];
    /**
     * <code>optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];</code>
     */
    boolean hasGameVersion();
    /**
     * <code>optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion getGameVersion();

    // repeated .CLobbyTimedRewardDetails timed_reward_details = 38;
    /**
     * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails> 
        getTimedRewardDetailsList();
    /**
     * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails getTimedRewardDetails(int index);
    /**
     * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
     */
    int getTimedRewardDetailsCount();
    /**
     * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetailsOrBuilder> 
        getTimedRewardDetailsOrBuilderList();
    /**
     * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetailsOrBuilder getTimedRewardDetailsOrBuilder(
        int index);

    // optional string pass_key = 39;
    /**
     * <code>optional string pass_key = 39;</code>
     */
    boolean hasPassKey();
    /**
     * <code>optional string pass_key = 39;</code>
     */
    java.lang.String getPassKey();
    /**
     * <code>optional string pass_key = 39;</code>
     */
    com.google.protobuf.ByteString
        getPassKeyBytes();

    // repeated .DOTABotDifficulty bot_slot_difficulty = 41;
    /**
     * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty> getBotSlotDifficultyList();
    /**
     * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
     */
    int getBotSlotDifficultyCount();
    /**
     * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty getBotSlotDifficulty(int index);

    // optional uint32 leagueid = 42;
    /**
     * <code>optional uint32 leagueid = 42;</code>
     */
    boolean hasLeagueid();
    /**
     * <code>optional uint32 leagueid = 42;</code>
     */
    int getLeagueid();

    // optional uint32 penalty_level_radiant = 43 [default = 0];
    /**
     * <code>optional uint32 penalty_level_radiant = 43 [default = 0];</code>
     */
    boolean hasPenaltyLevelRadiant();
    /**
     * <code>optional uint32 penalty_level_radiant = 43 [default = 0];</code>
     */
    int getPenaltyLevelRadiant();

    // optional uint32 penalty_level_dire = 44 [default = 0];
    /**
     * <code>optional uint32 penalty_level_dire = 44 [default = 0];</code>
     */
    boolean hasPenaltyLevelDire();
    /**
     * <code>optional uint32 penalty_level_dire = 44 [default = 0];</code>
     */
    int getPenaltyLevelDire();

    // optional uint32 load_game_id = 45;
    /**
     * <code>optional uint32 load_game_id = 45;</code>
     */
    boolean hasLoadGameId();
    /**
     * <code>optional uint32 load_game_id = 45;</code>
     */
    int getLoadGameId();

    // optional uint32 series_type = 46;
    /**
     * <code>optional uint32 series_type = 46;</code>
     */
    boolean hasSeriesType();
    /**
     * <code>optional uint32 series_type = 46;</code>
     */
    int getSeriesType();

    // optional uint32 radiant_series_wins = 47;
    /**
     * <code>optional uint32 radiant_series_wins = 47;</code>
     */
    boolean hasRadiantSeriesWins();
    /**
     * <code>optional uint32 radiant_series_wins = 47;</code>
     */
    int getRadiantSeriesWins();

    // optional uint32 dire_series_wins = 48;
    /**
     * <code>optional uint32 dire_series_wins = 48;</code>
     */
    boolean hasDireSeriesWins();
    /**
     * <code>optional uint32 dire_series_wins = 48;</code>
     */
    int getDireSeriesWins();

    // optional uint32 loot_generated = 49;
    /**
     * <code>optional uint32 loot_generated = 49;</code>
     */
    boolean hasLootGenerated();
    /**
     * <code>optional uint32 loot_generated = 49;</code>
     */
    int getLootGenerated();

    // optional uint32 loot_awarded = 50;
    /**
     * <code>optional uint32 loot_awarded = 50;</code>
     */
    boolean hasLootAwarded();
    /**
     * <code>optional uint32 loot_awarded = 50;</code>
     */
    int getLootAwarded();

    // optional bool allchat = 51 [default = false];
    /**
     * <code>optional bool allchat = 51 [default = false];</code>
     */
    boolean hasAllchat();
    /**
     * <code>optional bool allchat = 51 [default = false];</code>
     */
    boolean getAllchat();

    // optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];
    /**
     * <code>optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];</code>
     */
    boolean hasDotaTvDelay();
    /**
     * <code>optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay getDotaTvDelay();

    // optional string custom_game_mode = 54;
    /**
     * <code>optional string custom_game_mode = 54;</code>
     */
    boolean hasCustomGameMode();
    /**
     * <code>optional string custom_game_mode = 54;</code>
     */
    java.lang.String getCustomGameMode();
    /**
     * <code>optional string custom_game_mode = 54;</code>
     */
    com.google.protobuf.ByteString
        getCustomGameModeBytes();

    // optional string custom_map_name = 55;
    /**
     * <code>optional string custom_map_name = 55;</code>
     */
    boolean hasCustomMapName();
    /**
     * <code>optional string custom_map_name = 55;</code>
     */
    java.lang.String getCustomMapName();
    /**
     * <code>optional string custom_map_name = 55;</code>
     */
    com.google.protobuf.ByteString
        getCustomMapNameBytes();

    // optional uint32 custom_difficulty = 56;
    /**
     * <code>optional uint32 custom_difficulty = 56;</code>
     */
    boolean hasCustomDifficulty();
    /**
     * <code>optional uint32 custom_difficulty = 56;</code>
     */
    int getCustomDifficulty();

    // optional bool lan = 57;
    /**
     * <code>optional bool lan = 57;</code>
     */
    boolean hasLan();
    /**
     * <code>optional bool lan = 57;</code>
     */
    boolean getLan();

    // repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;
    /**
     * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo> 
        getBroadcastChannelInfoList();
    /**
     * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo getBroadcastChannelInfo(int index);
    /**
     * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
     */
    int getBroadcastChannelInfoCount();
    /**
     * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfoOrBuilder> 
        getBroadcastChannelInfoOrBuilderList();
    /**
     * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfoOrBuilder getBroadcastChannelInfoOrBuilder(
        int index);

    // optional uint32 first_leaver_accountid = 59;
    /**
     * <code>optional uint32 first_leaver_accountid = 59;</code>
     */
    boolean hasFirstLeaverAccountid();
    /**
     * <code>optional uint32 first_leaver_accountid = 59;</code>
     */
    int getFirstLeaverAccountid();

    // optional uint32 series_id = 60;
    /**
     * <code>optional uint32 series_id = 60;</code>
     */
    boolean hasSeriesId();
    /**
     * <code>optional uint32 series_id = 60;</code>
     */
    int getSeriesId();

    // optional bool low_priority = 61;
    /**
     * <code>optional bool low_priority = 61;</code>
     */
    boolean hasLowPriority();
    /**
     * <code>optional bool low_priority = 61;</code>
     */
    boolean getLowPriority();

    // repeated .CSODOTALobby.CExtraMsg extra_messages = 62;
    /**
     * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg> 
        getExtraMessagesList();
    /**
     * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg getExtraMessages(int index);
    /**
     * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
     */
    int getExtraMessagesCount();
    /**
     * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsgOrBuilder> 
        getExtraMessagesOrBuilderList();
    /**
     * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsgOrBuilder getExtraMessagesOrBuilder(
        int index);

    // optional .CDOTASaveGame save_game = 63;
    /**
     * <code>optional .CDOTASaveGame save_game = 63;</code>
     */
    boolean hasSaveGame();
    /**
     * <code>optional .CDOTASaveGame save_game = 63;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame getSaveGame();
    /**
     * <code>optional .CDOTASaveGame save_game = 63;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGameOrBuilder getSaveGameOrBuilder();

    // optional bool first_blood_happened = 65;
    /**
     * <code>optional bool first_blood_happened = 65;</code>
     */
    boolean hasFirstBloodHappened();
    /**
     * <code>optional bool first_blood_happened = 65;</code>
     */
    boolean getFirstBloodHappened();

    // optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];
    /**
     * <code>optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];</code>
     */
    boolean hasMatchOutcome();
    /**
     * <code>optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome getMatchOutcome();

    // optional bool mass_disconnect = 67;
    /**
     * <code>optional bool mass_disconnect = 67;</code>
     */
    boolean hasMassDisconnect();
    /**
     * <code>optional bool mass_disconnect = 67;</code>
     */
    boolean getMassDisconnect();

    // optional uint64 custom_game_id = 68;
    /**
     * <code>optional uint64 custom_game_id = 68;</code>
     */
    boolean hasCustomGameId();
    /**
     * <code>optional uint64 custom_game_id = 68;</code>
     */
    long getCustomGameId();

    // repeated .EIngameEvent active_ingame_events = 69;
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> getActiveIngameEventsList();
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
     */
    int getActiveIngameEventsCount();
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent getActiveIngameEvents(int index);

    // optional uint32 custom_min_players = 71;
    /**
     * <code>optional uint32 custom_min_players = 71;</code>
     */
    boolean hasCustomMinPlayers();
    /**
     * <code>optional uint32 custom_min_players = 71;</code>
     */
    int getCustomMinPlayers();

    // optional uint32 custom_max_players = 72;
    /**
     * <code>optional uint32 custom_max_players = 72;</code>
     */
    boolean hasCustomMaxPlayers();
    /**
     * <code>optional uint32 custom_max_players = 72;</code>
     */
    int getCustomMaxPlayers();

    // optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];
    /**
     * <code>optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];</code>
     */
    boolean hasPartnerType();
    /**
     * <code>optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];</code>
     */
    skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerType();

    // optional uint32 lan_host_ping_to_server_region = 74;
    /**
     * <code>optional uint32 lan_host_ping_to_server_region = 74;</code>
     */
    boolean hasLanHostPingToServerRegion();
    /**
     * <code>optional uint32 lan_host_ping_to_server_region = 74;</code>
     */
    int getLanHostPingToServerRegion();
  }
  /**
   * Protobuf type {@code CSODOTALobby}
   */
  public static final class CSODOTALobby extends
      com.google.protobuf.GeneratedMessage
      implements CSODOTALobbyOrBuilder {
    // Use CSODOTALobby.newBuilder() to construct.
    private CSODOTALobby(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSODOTALobby(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSODOTALobby defaultInstance;
    public static CSODOTALobby getDefaultInstance() {
      return defaultInstance;
    }

    public CSODOTALobby getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSODOTALobby(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              lobbyId_ = input.readUInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                members_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember>();
                mutable_bitField0_ |= 0x00000002;
              }
              members_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              gameMode_ = input.readUInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                state_ = value;
              }
              break;
            }
            case 42: {
              bitField0_ |= 0x00000020;
              connect_ = input.readBytes();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000004;
              serverId_ = input.readFixed64();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                leftMembers_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember>();
                mutable_bitField0_ |= 0x00000004;
              }
              leftMembers_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.PARSER, extensionRegistry));
              break;
            }
            case 81: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                pendingInvites_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              pendingInvites_.add(input.readFixed64());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                pendingInvites_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                pendingInvites_.add(input.readFixed64());
              }
              input.popLimit(limit);
              break;
            }
            case 89: {
              bitField0_ |= 0x00000002;
              leaderId_ = input.readFixed64();
              break;
            }
            case 96: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(12, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                lobbyType_ = value;
              }
              break;
            }
            case 104: {
              bitField0_ |= 0x00000080;
              allowCheats_ = input.readBool();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000100;
              fillWithBots_ = input.readBool();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000200;
              introMode_ = input.readBool();
              break;
            }
            case 130: {
              bitField0_ |= 0x00000400;
              gameName_ = input.readBytes();
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                teamDetails_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails>();
                mutable_bitField0_ |= 0x00004000;
              }
              teamDetails_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.PARSER, extensionRegistry));
              break;
            }
            case 144: {
              bitField0_ |= 0x00000800;
              tutorialLesson_ = input.readUInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00001000;
              tournamentId_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00002000;
              tournamentGameId_ = input.readUInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00004000;
              serverRegion_ = input.readUInt32();
              break;
            }
            case 176: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(22, rawValue);
              } else {
                bitField0_ |= 0x00008000;
                gameState_ = value;
              }
              break;
            }
            case 184: {
              bitField0_ |= 0x00010000;
              numSpectators_ = input.readUInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00020000;
              matchgroup_ = input.readUInt32();
              break;
            }
            case 224: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(28, rawValue);
              } else {
                bitField0_ |= 0x00040000;
                cmPick_ = value;
              }
              break;
            }
            case 240: {
              bitField0_ |= 0x00080000;
              matchId_ = input.readUInt64();
              break;
            }
            case 248: {
              bitField0_ |= 0x00100000;
              allowSpectating_ = input.readBool();
              break;
            }
            case 288: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(36, rawValue);
              } else {
                bitField0_ |= 0x00200000;
                botDifficulty_ = value;
              }
              break;
            }
            case 296: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(37, rawValue);
              } else {
                bitField0_ |= 0x00400000;
                gameVersion_ = value;
              }
              break;
            }
            case 306: {
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                timedRewardDetails_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails>();
                mutable_bitField0_ |= 0x08000000;
              }
              timedRewardDetails_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.PARSER, extensionRegistry));
              break;
            }
            case 314: {
              bitField0_ |= 0x00800000;
              passKey_ = input.readBytes();
              break;
            }
            case 328: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(41, rawValue);
              } else {
                if (!((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
                  botSlotDifficulty_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty>();
                  mutable_bitField0_ |= 0x20000000;
                }
                botSlotDifficulty_.add(value);
              }
              break;
            }
            case 330: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(41, rawValue);
                } else {
                  if (!((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
                    botSlotDifficulty_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty>();
                    mutable_bitField0_ |= 0x20000000;
                  }
                  botSlotDifficulty_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 336: {
              bitField0_ |= 0x01000000;
              leagueid_ = input.readUInt32();
              break;
            }
            case 344: {
              bitField0_ |= 0x02000000;
              penaltyLevelRadiant_ = input.readUInt32();
              break;
            }
            case 352: {
              bitField0_ |= 0x04000000;
              penaltyLevelDire_ = input.readUInt32();
              break;
            }
            case 360: {
              bitField0_ |= 0x08000000;
              loadGameId_ = input.readUInt32();
              break;
            }
            case 368: {
              bitField0_ |= 0x10000000;
              seriesType_ = input.readUInt32();
              break;
            }
            case 376: {
              bitField0_ |= 0x20000000;
              radiantSeriesWins_ = input.readUInt32();
              break;
            }
            case 384: {
              bitField0_ |= 0x40000000;
              direSeriesWins_ = input.readUInt32();
              break;
            }
            case 392: {
              bitField0_ |= 0x80000000;
              lootGenerated_ = input.readUInt32();
              break;
            }
            case 400: {
              bitField1_ |= 0x00000001;
              lootAwarded_ = input.readUInt32();
              break;
            }
            case 408: {
              bitField1_ |= 0x00000002;
              allchat_ = input.readBool();
              break;
            }
            case 424: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(53, rawValue);
              } else {
                bitField1_ |= 0x00000004;
                dotaTvDelay_ = value;
              }
              break;
            }
            case 434: {
              bitField1_ |= 0x00000008;
              customGameMode_ = input.readBytes();
              break;
            }
            case 442: {
              bitField1_ |= 0x00000010;
              customMapName_ = input.readBytes();
              break;
            }
            case 448: {
              bitField1_ |= 0x00000020;
              customDifficulty_ = input.readUInt32();
              break;
            }
            case 456: {
              bitField1_ |= 0x00000040;
              lan_ = input.readBool();
              break;
            }
            case 466: {
              if (!((mutable_bitField1_ & 0x00002000) == 0x00002000)) {
                broadcastChannelInfo_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo>();
                mutable_bitField1_ |= 0x00002000;
              }
              broadcastChannelInfo_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.PARSER, extensionRegistry));
              break;
            }
            case 472: {
              bitField1_ |= 0x00000080;
              firstLeaverAccountid_ = input.readUInt32();
              break;
            }
            case 480: {
              bitField1_ |= 0x00000100;
              seriesId_ = input.readUInt32();
              break;
            }
            case 488: {
              bitField1_ |= 0x00000200;
              lowPriority_ = input.readBool();
              break;
            }
            case 498: {
              if (!((mutable_bitField1_ & 0x00020000) == 0x00020000)) {
                extraMessages_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg>();
                mutable_bitField1_ |= 0x00020000;
              }
              extraMessages_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.PARSER, extensionRegistry));
              break;
            }
            case 506: {
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Builder subBuilder = null;
              if (((bitField1_ & 0x00000400) == 0x00000400)) {
                subBuilder = saveGame_.toBuilder();
              }
              saveGame_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(saveGame_);
                saveGame_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000400;
              break;
            }
            case 520: {
              bitField1_ |= 0x00000800;
              firstBloodHappened_ = input.readBool();
              break;
            }
            case 536: {
              bitField1_ |= 0x00002000;
              massDisconnect_ = input.readBool();
              break;
            }
            case 544: {
              bitField1_ |= 0x00004000;
              customGameId_ = input.readUInt64();
              break;
            }
            case 552: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(69, rawValue);
              } else {
                if (!((mutable_bitField1_ & 0x00800000) == 0x00800000)) {
                  activeIngameEvents_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent>();
                  mutable_bitField1_ |= 0x00800000;
                }
                activeIngameEvents_.add(value);
              }
              break;
            }
            case 554: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(69, rawValue);
                } else {
                  if (!((mutable_bitField1_ & 0x00800000) == 0x00800000)) {
                    activeIngameEvents_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent>();
                    mutable_bitField1_ |= 0x00800000;
                  }
                  activeIngameEvents_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 560: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(70, rawValue);
              } else {
                bitField1_ |= 0x00001000;
                matchOutcome_ = value;
              }
              break;
            }
            case 568: {
              bitField1_ |= 0x00008000;
              customMinPlayers_ = input.readUInt32();
              break;
            }
            case 576: {
              bitField1_ |= 0x00010000;
              customMaxPlayers_ = input.readUInt32();
              break;
            }
            case 584: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType value = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(73, rawValue);
              } else {
                bitField1_ |= 0x00020000;
                partnerType_ = value;
              }
              break;
            }
            case 592: {
              bitField1_ |= 0x00040000;
              lanHostPingToServerRegion_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          members_ = java.util.Collections.unmodifiableList(members_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          leftMembers_ = java.util.Collections.unmodifiableList(leftMembers_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          pendingInvites_ = java.util.Collections.unmodifiableList(pendingInvites_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          teamDetails_ = java.util.Collections.unmodifiableList(teamDetails_);
        }
        if (((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
          timedRewardDetails_ = java.util.Collections.unmodifiableList(timedRewardDetails_);
        }
        if (((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
          botSlotDifficulty_ = java.util.Collections.unmodifiableList(botSlotDifficulty_);
        }
        if (((mutable_bitField1_ & 0x00002000) == 0x00002000)) {
          broadcastChannelInfo_ = java.util.Collections.unmodifiableList(broadcastChannelInfo_);
        }
        if (((mutable_bitField1_ & 0x00020000) == 0x00020000)) {
          extraMessages_ = java.util.Collections.unmodifiableList(extraMessages_);
        }
        if (((mutable_bitField1_ & 0x00800000) == 0x00800000)) {
          activeIngameEvents_ = java.util.Collections.unmodifiableList(activeIngameEvents_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobby_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobby_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.Builder.class);
    }

    public static com.google.protobuf.Parser<CSODOTALobby> PARSER =
        new com.google.protobuf.AbstractParser<CSODOTALobby>() {
      public CSODOTALobby parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSODOTALobby(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTALobby> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CSODOTALobby.State}
     */
    public enum State
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UI = 0;</code>
       */
      UI(0, 0),
      /**
       * <code>READYUP = 4;</code>
       */
      READYUP(1, 4),
      /**
       * <code>SERVERSETUP = 1;</code>
       */
      SERVERSETUP(2, 1),
      /**
       * <code>RUN = 2;</code>
       */
      RUN(3, 2),
      /**
       * <code>POSTGAME = 3;</code>
       */
      POSTGAME(4, 3),
      /**
       * <code>NOTREADY = 5;</code>
       */
      NOTREADY(5, 5),
      /**
       * <code>SERVERASSIGN = 6;</code>
       */
      SERVERASSIGN(6, 6),
      ;

      /**
       * <code>UI = 0;</code>
       */
      public static final int UI_VALUE = 0;
      /**
       * <code>READYUP = 4;</code>
       */
      public static final int READYUP_VALUE = 4;
      /**
       * <code>SERVERSETUP = 1;</code>
       */
      public static final int SERVERSETUP_VALUE = 1;
      /**
       * <code>RUN = 2;</code>
       */
      public static final int RUN_VALUE = 2;
      /**
       * <code>POSTGAME = 3;</code>
       */
      public static final int POSTGAME_VALUE = 3;
      /**
       * <code>NOTREADY = 5;</code>
       */
      public static final int NOTREADY_VALUE = 5;
      /**
       * <code>SERVERASSIGN = 6;</code>
       */
      public static final int SERVERASSIGN_VALUE = 6;


      public final int getNumber() { return value; }

      public static State valueOf(int value) {
        switch (value) {
          case 0: return UI;
          case 4: return READYUP;
          case 1: return SERVERSETUP;
          case 2: return RUN;
          case 3: return POSTGAME;
          case 5: return NOTREADY;
          case 6: return SERVERASSIGN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<State>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<State>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<State>() {
              public State findValueByNumber(int number) {
                return State.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.getDescriptor().getEnumTypes().get(0);
      }

      private static final State[] VALUES = values();

      public static State valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private State(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CSODOTALobby.State)
    }

    /**
     * Protobuf enum {@code CSODOTALobby.LobbyType}
     */
    public enum LobbyType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INVALID = -1;</code>
       */
      INVALID(0, -1),
      /**
       * <code>CASUAL_MATCH = 0;</code>
       */
      CASUAL_MATCH(1, 0),
      /**
       * <code>PRACTICE = 1;</code>
       */
      PRACTICE(2, 1),
      /**
       * <code>TOURNAMENT = 2;</code>
       */
      TOURNAMENT(3, 2),
      /**
       * <code>COOP_BOT_MATCH = 4;</code>
       */
      COOP_BOT_MATCH(4, 4),
      /**
       * <code>LEGACY_TEAM_MATCH = 5;</code>
       */
      LEGACY_TEAM_MATCH(5, 5),
      /**
       * <code>LEGACY_SOLO_QUEUE_MATCH = 6;</code>
       */
      LEGACY_SOLO_QUEUE_MATCH(6, 6),
      /**
       * <code>COMPETITIVE_MATCH = 7;</code>
       */
      COMPETITIVE_MATCH(7, 7),
      /**
       * <code>CASUAL_1V1_MATCH = 8;</code>
       */
      CASUAL_1V1_MATCH(8, 8),
      /**
       * <code>WEEKEND_TOURNEY = 9;</code>
       */
      WEEKEND_TOURNEY(9, 9),
      /**
       * <code>LOCAL_BOT_MATCH = 10;</code>
       */
      LOCAL_BOT_MATCH(10, 10),
      ;

      /**
       * <code>INVALID = -1;</code>
       */
      public static final int INVALID_VALUE = -1;
      /**
       * <code>CASUAL_MATCH = 0;</code>
       */
      public static final int CASUAL_MATCH_VALUE = 0;
      /**
       * <code>PRACTICE = 1;</code>
       */
      public static final int PRACTICE_VALUE = 1;
      /**
       * <code>TOURNAMENT = 2;</code>
       */
      public static final int TOURNAMENT_VALUE = 2;
      /**
       * <code>COOP_BOT_MATCH = 4;</code>
       */
      public static final int COOP_BOT_MATCH_VALUE = 4;
      /**
       * <code>LEGACY_TEAM_MATCH = 5;</code>
       */
      public static final int LEGACY_TEAM_MATCH_VALUE = 5;
      /**
       * <code>LEGACY_SOLO_QUEUE_MATCH = 6;</code>
       */
      public static final int LEGACY_SOLO_QUEUE_MATCH_VALUE = 6;
      /**
       * <code>COMPETITIVE_MATCH = 7;</code>
       */
      public static final int COMPETITIVE_MATCH_VALUE = 7;
      /**
       * <code>CASUAL_1V1_MATCH = 8;</code>
       */
      public static final int CASUAL_1V1_MATCH_VALUE = 8;
      /**
       * <code>WEEKEND_TOURNEY = 9;</code>
       */
      public static final int WEEKEND_TOURNEY_VALUE = 9;
      /**
       * <code>LOCAL_BOT_MATCH = 10;</code>
       */
      public static final int LOCAL_BOT_MATCH_VALUE = 10;


      public final int getNumber() { return value; }

      public static LobbyType valueOf(int value) {
        switch (value) {
          case -1: return INVALID;
          case 0: return CASUAL_MATCH;
          case 1: return PRACTICE;
          case 2: return TOURNAMENT;
          case 4: return COOP_BOT_MATCH;
          case 5: return LEGACY_TEAM_MATCH;
          case 6: return LEGACY_SOLO_QUEUE_MATCH;
          case 7: return COMPETITIVE_MATCH;
          case 8: return CASUAL_1V1_MATCH;
          case 9: return WEEKEND_TOURNEY;
          case 10: return LOCAL_BOT_MATCH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<LobbyType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<LobbyType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LobbyType>() {
              public LobbyType findValueByNumber(int number) {
                return LobbyType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.getDescriptor().getEnumTypes().get(1);
      }

      private static final LobbyType[] VALUES = values();

      public static LobbyType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private LobbyType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CSODOTALobby.LobbyType)
    }

    public interface CExtraMsgOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 id = 1;
      /**
       * <code>optional uint32 id = 1;</code>
       */
      boolean hasId();
      /**
       * <code>optional uint32 id = 1;</code>
       */
      int getId();

      // optional bytes contents = 2;
      /**
       * <code>optional bytes contents = 2;</code>
       */
      boolean hasContents();
      /**
       * <code>optional bytes contents = 2;</code>
       */
      com.google.protobuf.ByteString getContents();
    }
    /**
     * Protobuf type {@code CSODOTALobby.CExtraMsg}
     */
    public static final class CExtraMsg extends
        com.google.protobuf.GeneratedMessage
        implements CExtraMsgOrBuilder {
      // Use CExtraMsg.newBuilder() to construct.
      private CExtraMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CExtraMsg(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CExtraMsg defaultInstance;
      public static CExtraMsg getDefaultInstance() {
        return defaultInstance;
      }

      public CExtraMsg getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CExtraMsg(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readUInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                contents_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobby_CExtraMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobby_CExtraMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder.class);
      }

      public static com.google.protobuf.Parser<CExtraMsg> PARSER =
          new com.google.protobuf.AbstractParser<CExtraMsg>() {
        public CExtraMsg parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CExtraMsg(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CExtraMsg> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }

      // optional bytes contents = 2;
      public static final int CONTENTS_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString contents_;
      /**
       * <code>optional bytes contents = 2;</code>
       */
      public boolean hasContents() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes contents = 2;</code>
       */
      public com.google.protobuf.ByteString getContents() {
        return contents_;
      }

      private void initFields() {
        id_ = 0;
        contents_ = com.google.protobuf.ByteString.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, contents_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, contents_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CSODOTALobby.CExtraMsg}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsgOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobby_CExtraMsg_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobby_CExtraMsg_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          contents_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobby_CExtraMsg_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.contents_ = contents_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasContents()) {
            setContents(other.getContents());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 id = 1;
        private int id_ ;
        /**
         * <code>optional uint32 id = 1;</code>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 id = 1;</code>
         */
        public int getId() {
          return id_;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 id = 1;</code>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        // optional bytes contents = 2;
        private com.google.protobuf.ByteString contents_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes contents = 2;</code>
         */
        public boolean hasContents() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bytes contents = 2;</code>
         */
        public com.google.protobuf.ByteString getContents() {
          return contents_;
        }
        /**
         * <code>optional bytes contents = 2;</code>
         */
        public Builder setContents(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          contents_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes contents = 2;</code>
         */
        public Builder clearContents() {
          bitField0_ = (bitField0_ & ~0x00000002);
          contents_ = getDefaultInstance().getContents();
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CSODOTALobby.CExtraMsg)
      }

      static {
        defaultInstance = new CExtraMsg(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CSODOTALobby.CExtraMsg)
    }

    private int bitField0_;
    private int bitField1_;
    // optional uint64 lobby_id = 1;
    public static final int LOBBY_ID_FIELD_NUMBER = 1;
    private long lobbyId_;
    /**
     * <code>optional uint64 lobby_id = 1;</code>
     */
    public boolean hasLobbyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 lobby_id = 1;</code>
     */
    public long getLobbyId() {
      return lobbyId_;
    }

    // repeated .CDOTALobbyMember members = 2;
    public static final int MEMBERS_FIELD_NUMBER = 2;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> members_;
    /**
     * <code>repeated .CDOTALobbyMember members = 2;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> getMembersList() {
      return members_;
    }
    /**
     * <code>repeated .CDOTALobbyMember members = 2;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder> 
        getMembersOrBuilderList() {
      return members_;
    }
    /**
     * <code>repeated .CDOTALobbyMember members = 2;</code>
     */
    public int getMembersCount() {
      return members_.size();
    }
    /**
     * <code>repeated .CDOTALobbyMember members = 2;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember getMembers(int index) {
      return members_.get(index);
    }
    /**
     * <code>repeated .CDOTALobbyMember members = 2;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder getMembersOrBuilder(
        int index) {
      return members_.get(index);
    }

    // repeated .CDOTALobbyMember left_members = 7;
    public static final int LEFT_MEMBERS_FIELD_NUMBER = 7;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> leftMembers_;
    /**
     * <code>repeated .CDOTALobbyMember left_members = 7;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> getLeftMembersList() {
      return leftMembers_;
    }
    /**
     * <code>repeated .CDOTALobbyMember left_members = 7;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder> 
        getLeftMembersOrBuilderList() {
      return leftMembers_;
    }
    /**
     * <code>repeated .CDOTALobbyMember left_members = 7;</code>
     */
    public int getLeftMembersCount() {
      return leftMembers_.size();
    }
    /**
     * <code>repeated .CDOTALobbyMember left_members = 7;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember getLeftMembers(int index) {
      return leftMembers_.get(index);
    }
    /**
     * <code>repeated .CDOTALobbyMember left_members = 7;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder getLeftMembersOrBuilder(
        int index) {
      return leftMembers_.get(index);
    }

    // optional fixed64 leader_id = 11;
    public static final int LEADER_ID_FIELD_NUMBER = 11;
    private long leaderId_;
    /**
     * <code>optional fixed64 leader_id = 11;</code>
     */
    public boolean hasLeaderId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 leader_id = 11;</code>
     */
    public long getLeaderId() {
      return leaderId_;
    }

    // optional fixed64 server_id = 6 [default = 0];
    public static final int SERVER_ID_FIELD_NUMBER = 6;
    private long serverId_;
    /**
     * <code>optional fixed64 server_id = 6 [default = 0];</code>
     */
    public boolean hasServerId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional fixed64 server_id = 6 [default = 0];</code>
     */
    public long getServerId() {
      return serverId_;
    }

    // optional uint32 game_mode = 3;
    public static final int GAME_MODE_FIELD_NUMBER = 3;
    private int gameMode_;
    /**
     * <code>optional uint32 game_mode = 3;</code>
     */
    public boolean hasGameMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 game_mode = 3;</code>
     */
    public int getGameMode() {
      return gameMode_;
    }

    // repeated fixed64 pending_invites = 10;
    public static final int PENDING_INVITES_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Long> pendingInvites_;
    /**
     * <code>repeated fixed64 pending_invites = 10;</code>
     */
    public java.util.List<java.lang.Long>
        getPendingInvitesList() {
      return pendingInvites_;
    }
    /**
     * <code>repeated fixed64 pending_invites = 10;</code>
     */
    public int getPendingInvitesCount() {
      return pendingInvites_.size();
    }
    /**
     * <code>repeated fixed64 pending_invites = 10;</code>
     */
    public long getPendingInvites(int index) {
      return pendingInvites_.get(index);
    }

    // optional .CSODOTALobby.State state = 4 [default = UI];
    public static final int STATE_FIELD_NUMBER = 4;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State state_;
    /**
     * <code>optional .CSODOTALobby.State state = 4 [default = UI];</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .CSODOTALobby.State state = 4 [default = UI];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State getState() {
      return state_;
    }

    // optional string connect = 5;
    public static final int CONNECT_FIELD_NUMBER = 5;
    private java.lang.Object connect_;
    /**
     * <code>optional string connect = 5;</code>
     */
    public boolean hasConnect() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string connect = 5;</code>
     */
    public java.lang.String getConnect() {
      java.lang.Object ref = connect_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          connect_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string connect = 5;</code>
     */
    public com.google.protobuf.ByteString
        getConnectBytes() {
      java.lang.Object ref = connect_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        connect_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];
    public static final int LOBBY_TYPE_FIELD_NUMBER = 12;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType lobbyType_;
    /**
     * <code>optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];</code>
     */
    public boolean hasLobbyType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType getLobbyType() {
      return lobbyType_;
    }

    // optional bool allow_cheats = 13;
    public static final int ALLOW_CHEATS_FIELD_NUMBER = 13;
    private boolean allowCheats_;
    /**
     * <code>optional bool allow_cheats = 13;</code>
     */
    public boolean hasAllowCheats() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool allow_cheats = 13;</code>
     */
    public boolean getAllowCheats() {
      return allowCheats_;
    }

    // optional bool fill_with_bots = 14;
    public static final int FILL_WITH_BOTS_FIELD_NUMBER = 14;
    private boolean fillWithBots_;
    /**
     * <code>optional bool fill_with_bots = 14;</code>
     */
    public boolean hasFillWithBots() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool fill_with_bots = 14;</code>
     */
    public boolean getFillWithBots() {
      return fillWithBots_;
    }

    // optional bool intro_mode = 15;
    public static final int INTRO_MODE_FIELD_NUMBER = 15;
    private boolean introMode_;
    /**
     * <code>optional bool intro_mode = 15;</code>
     */
    public boolean hasIntroMode() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool intro_mode = 15;</code>
     */
    public boolean getIntroMode() {
      return introMode_;
    }

    // optional string game_name = 16;
    public static final int GAME_NAME_FIELD_NUMBER = 16;
    private java.lang.Object gameName_;
    /**
     * <code>optional string game_name = 16;</code>
     */
    public boolean hasGameName() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string game_name = 16;</code>
     */
    public java.lang.String getGameName() {
      java.lang.Object ref = gameName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gameName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string game_name = 16;</code>
     */
    public com.google.protobuf.ByteString
        getGameNameBytes() {
      java.lang.Object ref = gameName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gameName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .CLobbyTeamDetails team_details = 17;
    public static final int TEAM_DETAILS_FIELD_NUMBER = 17;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails> teamDetails_;
    /**
     * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails> getTeamDetailsList() {
      return teamDetails_;
    }
    /**
     * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetailsOrBuilder> 
        getTeamDetailsOrBuilderList() {
      return teamDetails_;
    }
    /**
     * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
     */
    public int getTeamDetailsCount() {
      return teamDetails_.size();
    }
    /**
     * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails getTeamDetails(int index) {
      return teamDetails_.get(index);
    }
    /**
     * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetailsOrBuilder getTeamDetailsOrBuilder(
        int index) {
      return teamDetails_.get(index);
    }

    // optional uint32 tutorial_lesson = 18;
    public static final int TUTORIAL_LESSON_FIELD_NUMBER = 18;
    private int tutorialLesson_;
    /**
     * <code>optional uint32 tutorial_lesson = 18;</code>
     */
    public boolean hasTutorialLesson() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 tutorial_lesson = 18;</code>
     */
    public int getTutorialLesson() {
      return tutorialLesson_;
    }

    // optional uint32 tournament_id = 19;
    public static final int TOURNAMENT_ID_FIELD_NUMBER = 19;
    private int tournamentId_;
    /**
     * <code>optional uint32 tournament_id = 19;</code>
     */
    public boolean hasTournamentId() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 tournament_id = 19;</code>
     */
    public int getTournamentId() {
      return tournamentId_;
    }

    // optional uint32 tournament_game_id = 20;
    public static final int TOURNAMENT_GAME_ID_FIELD_NUMBER = 20;
    private int tournamentGameId_;
    /**
     * <code>optional uint32 tournament_game_id = 20;</code>
     */
    public boolean hasTournamentGameId() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 tournament_game_id = 20;</code>
     */
    public int getTournamentGameId() {
      return tournamentGameId_;
    }

    // optional uint32 server_region = 21 [default = 0];
    public static final int SERVER_REGION_FIELD_NUMBER = 21;
    private int serverRegion_;
    /**
     * <code>optional uint32 server_region = 21 [default = 0];</code>
     */
    public boolean hasServerRegion() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 server_region = 21 [default = 0];</code>
     */
    public int getServerRegion() {
      return serverRegion_;
    }

    // optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];
    public static final int GAME_STATE_FIELD_NUMBER = 22;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState gameState_;
    /**
     * <code>optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];</code>
     */
    public boolean hasGameState() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState getGameState() {
      return gameState_;
    }

    // optional uint32 num_spectators = 23;
    public static final int NUM_SPECTATORS_FIELD_NUMBER = 23;
    private int numSpectators_;
    /**
     * <code>optional uint32 num_spectators = 23;</code>
     */
    public boolean hasNumSpectators() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 num_spectators = 23;</code>
     */
    public int getNumSpectators() {
      return numSpectators_;
    }

    // optional uint32 matchgroup = 25;
    public static final int MATCHGROUP_FIELD_NUMBER = 25;
    private int matchgroup_;
    /**
     * <code>optional uint32 matchgroup = 25;</code>
     */
    public boolean hasMatchgroup() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 matchgroup = 25;</code>
     */
    public int getMatchgroup() {
      return matchgroup_;
    }

    // optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];
    public static final int CM_PICK_FIELD_NUMBER = 28;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK cmPick_;
    /**
     * <code>optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];</code>
     */
    public boolean hasCmPick() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK getCmPick() {
      return cmPick_;
    }

    // optional uint64 match_id = 30;
    public static final int MATCH_ID_FIELD_NUMBER = 30;
    private long matchId_;
    /**
     * <code>optional uint64 match_id = 30;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint64 match_id = 30;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    // optional bool allow_spectating = 31 [default = true];
    public static final int ALLOW_SPECTATING_FIELD_NUMBER = 31;
    private boolean allowSpectating_;
    /**
     * <code>optional bool allow_spectating = 31 [default = true];</code>
     */
    public boolean hasAllowSpectating() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional bool allow_spectating = 31 [default = true];</code>
     */
    public boolean getAllowSpectating() {
      return allowSpectating_;
    }

    // optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];
    public static final int BOT_DIFFICULTY_FIELD_NUMBER = 36;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty botDifficulty_;
    /**
     * <code>optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];</code>
     */
    public boolean hasBotDifficulty() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty getBotDifficulty() {
      return botDifficulty_;
    }

    // optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];
    public static final int GAME_VERSION_FIELD_NUMBER = 37;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion gameVersion_;
    /**
     * <code>optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];</code>
     */
    public boolean hasGameVersion() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion getGameVersion() {
      return gameVersion_;
    }

    // repeated .CLobbyTimedRewardDetails timed_reward_details = 38;
    public static final int TIMED_REWARD_DETAILS_FIELD_NUMBER = 38;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails> timedRewardDetails_;
    /**
     * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails> getTimedRewardDetailsList() {
      return timedRewardDetails_;
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetailsOrBuilder> 
        getTimedRewardDetailsOrBuilderList() {
      return timedRewardDetails_;
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
     */
    public int getTimedRewardDetailsCount() {
      return timedRewardDetails_.size();
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails getTimedRewardDetails(int index) {
      return timedRewardDetails_.get(index);
    }
    /**
     * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetailsOrBuilder getTimedRewardDetailsOrBuilder(
        int index) {
      return timedRewardDetails_.get(index);
    }

    // optional string pass_key = 39;
    public static final int PASS_KEY_FIELD_NUMBER = 39;
    private java.lang.Object passKey_;
    /**
     * <code>optional string pass_key = 39;</code>
     */
    public boolean hasPassKey() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional string pass_key = 39;</code>
     */
    public java.lang.String getPassKey() {
      java.lang.Object ref = passKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          passKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pass_key = 39;</code>
     */
    public com.google.protobuf.ByteString
        getPassKeyBytes() {
      java.lang.Object ref = passKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        passKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated .DOTABotDifficulty bot_slot_difficulty = 41;
    public static final int BOT_SLOT_DIFFICULTY_FIELD_NUMBER = 41;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty> botSlotDifficulty_;
    /**
     * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty> getBotSlotDifficultyList() {
      return botSlotDifficulty_;
    }
    /**
     * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
     */
    public int getBotSlotDifficultyCount() {
      return botSlotDifficulty_.size();
    }
    /**
     * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty getBotSlotDifficulty(int index) {
      return botSlotDifficulty_.get(index);
    }

    // optional uint32 leagueid = 42;
    public static final int LEAGUEID_FIELD_NUMBER = 42;
    private int leagueid_;
    /**
     * <code>optional uint32 leagueid = 42;</code>
     */
    public boolean hasLeagueid() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional uint32 leagueid = 42;</code>
     */
    public int getLeagueid() {
      return leagueid_;
    }

    // optional uint32 penalty_level_radiant = 43 [default = 0];
    public static final int PENALTY_LEVEL_RADIANT_FIELD_NUMBER = 43;
    private int penaltyLevelRadiant_;
    /**
     * <code>optional uint32 penalty_level_radiant = 43 [default = 0];</code>
     */
    public boolean hasPenaltyLevelRadiant() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional uint32 penalty_level_radiant = 43 [default = 0];</code>
     */
    public int getPenaltyLevelRadiant() {
      return penaltyLevelRadiant_;
    }

    // optional uint32 penalty_level_dire = 44 [default = 0];
    public static final int PENALTY_LEVEL_DIRE_FIELD_NUMBER = 44;
    private int penaltyLevelDire_;
    /**
     * <code>optional uint32 penalty_level_dire = 44 [default = 0];</code>
     */
    public boolean hasPenaltyLevelDire() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional uint32 penalty_level_dire = 44 [default = 0];</code>
     */
    public int getPenaltyLevelDire() {
      return penaltyLevelDire_;
    }

    // optional uint32 load_game_id = 45;
    public static final int LOAD_GAME_ID_FIELD_NUMBER = 45;
    private int loadGameId_;
    /**
     * <code>optional uint32 load_game_id = 45;</code>
     */
    public boolean hasLoadGameId() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional uint32 load_game_id = 45;</code>
     */
    public int getLoadGameId() {
      return loadGameId_;
    }

    // optional uint32 series_type = 46;
    public static final int SERIES_TYPE_FIELD_NUMBER = 46;
    private int seriesType_;
    /**
     * <code>optional uint32 series_type = 46;</code>
     */
    public boolean hasSeriesType() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional uint32 series_type = 46;</code>
     */
    public int getSeriesType() {
      return seriesType_;
    }

    // optional uint32 radiant_series_wins = 47;
    public static final int RADIANT_SERIES_WINS_FIELD_NUMBER = 47;
    private int radiantSeriesWins_;
    /**
     * <code>optional uint32 radiant_series_wins = 47;</code>
     */
    public boolean hasRadiantSeriesWins() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional uint32 radiant_series_wins = 47;</code>
     */
    public int getRadiantSeriesWins() {
      return radiantSeriesWins_;
    }

    // optional uint32 dire_series_wins = 48;
    public static final int DIRE_SERIES_WINS_FIELD_NUMBER = 48;
    private int direSeriesWins_;
    /**
     * <code>optional uint32 dire_series_wins = 48;</code>
     */
    public boolean hasDireSeriesWins() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional uint32 dire_series_wins = 48;</code>
     */
    public int getDireSeriesWins() {
      return direSeriesWins_;
    }

    // optional uint32 loot_generated = 49;
    public static final int LOOT_GENERATED_FIELD_NUMBER = 49;
    private int lootGenerated_;
    /**
     * <code>optional uint32 loot_generated = 49;</code>
     */
    public boolean hasLootGenerated() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional uint32 loot_generated = 49;</code>
     */
    public int getLootGenerated() {
      return lootGenerated_;
    }

    // optional uint32 loot_awarded = 50;
    public static final int LOOT_AWARDED_FIELD_NUMBER = 50;
    private int lootAwarded_;
    /**
     * <code>optional uint32 loot_awarded = 50;</code>
     */
    public boolean hasLootAwarded() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 loot_awarded = 50;</code>
     */
    public int getLootAwarded() {
      return lootAwarded_;
    }

    // optional bool allchat = 51 [default = false];
    public static final int ALLCHAT_FIELD_NUMBER = 51;
    private boolean allchat_;
    /**
     * <code>optional bool allchat = 51 [default = false];</code>
     */
    public boolean hasAllchat() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool allchat = 51 [default = false];</code>
     */
    public boolean getAllchat() {
      return allchat_;
    }

    // optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];
    public static final int DOTA_TV_DELAY_FIELD_NUMBER = 53;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay dotaTvDelay_;
    /**
     * <code>optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];</code>
     */
    public boolean hasDotaTvDelay() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay getDotaTvDelay() {
      return dotaTvDelay_;
    }

    // optional string custom_game_mode = 54;
    public static final int CUSTOM_GAME_MODE_FIELD_NUMBER = 54;
    private java.lang.Object customGameMode_;
    /**
     * <code>optional string custom_game_mode = 54;</code>
     */
    public boolean hasCustomGameMode() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string custom_game_mode = 54;</code>
     */
    public java.lang.String getCustomGameMode() {
      java.lang.Object ref = customGameMode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          customGameMode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string custom_game_mode = 54;</code>
     */
    public com.google.protobuf.ByteString
        getCustomGameModeBytes() {
      java.lang.Object ref = customGameMode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customGameMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string custom_map_name = 55;
    public static final int CUSTOM_MAP_NAME_FIELD_NUMBER = 55;
    private java.lang.Object customMapName_;
    /**
     * <code>optional string custom_map_name = 55;</code>
     */
    public boolean hasCustomMapName() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string custom_map_name = 55;</code>
     */
    public java.lang.String getCustomMapName() {
      java.lang.Object ref = customMapName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          customMapName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string custom_map_name = 55;</code>
     */
    public com.google.protobuf.ByteString
        getCustomMapNameBytes() {
      java.lang.Object ref = customMapName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customMapName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 custom_difficulty = 56;
    public static final int CUSTOM_DIFFICULTY_FIELD_NUMBER = 56;
    private int customDifficulty_;
    /**
     * <code>optional uint32 custom_difficulty = 56;</code>
     */
    public boolean hasCustomDifficulty() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 custom_difficulty = 56;</code>
     */
    public int getCustomDifficulty() {
      return customDifficulty_;
    }

    // optional bool lan = 57;
    public static final int LAN_FIELD_NUMBER = 57;
    private boolean lan_;
    /**
     * <code>optional bool lan = 57;</code>
     */
    public boolean hasLan() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool lan = 57;</code>
     */
    public boolean getLan() {
      return lan_;
    }

    // repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;
    public static final int BROADCAST_CHANNEL_INFO_FIELD_NUMBER = 58;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo> broadcastChannelInfo_;
    /**
     * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo> getBroadcastChannelInfoList() {
      return broadcastChannelInfo_;
    }
    /**
     * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfoOrBuilder> 
        getBroadcastChannelInfoOrBuilderList() {
      return broadcastChannelInfo_;
    }
    /**
     * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
     */
    public int getBroadcastChannelInfoCount() {
      return broadcastChannelInfo_.size();
    }
    /**
     * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo getBroadcastChannelInfo(int index) {
      return broadcastChannelInfo_.get(index);
    }
    /**
     * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfoOrBuilder getBroadcastChannelInfoOrBuilder(
        int index) {
      return broadcastChannelInfo_.get(index);
    }

    // optional uint32 first_leaver_accountid = 59;
    public static final int FIRST_LEAVER_ACCOUNTID_FIELD_NUMBER = 59;
    private int firstLeaverAccountid_;
    /**
     * <code>optional uint32 first_leaver_accountid = 59;</code>
     */
    public boolean hasFirstLeaverAccountid() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 first_leaver_accountid = 59;</code>
     */
    public int getFirstLeaverAccountid() {
      return firstLeaverAccountid_;
    }

    // optional uint32 series_id = 60;
    public static final int SERIES_ID_FIELD_NUMBER = 60;
    private int seriesId_;
    /**
     * <code>optional uint32 series_id = 60;</code>
     */
    public boolean hasSeriesId() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 series_id = 60;</code>
     */
    public int getSeriesId() {
      return seriesId_;
    }

    // optional bool low_priority = 61;
    public static final int LOW_PRIORITY_FIELD_NUMBER = 61;
    private boolean lowPriority_;
    /**
     * <code>optional bool low_priority = 61;</code>
     */
    public boolean hasLowPriority() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool low_priority = 61;</code>
     */
    public boolean getLowPriority() {
      return lowPriority_;
    }

    // repeated .CSODOTALobby.CExtraMsg extra_messages = 62;
    public static final int EXTRA_MESSAGES_FIELD_NUMBER = 62;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg> extraMessages_;
    /**
     * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg> getExtraMessagesList() {
      return extraMessages_;
    }
    /**
     * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsgOrBuilder> 
        getExtraMessagesOrBuilderList() {
      return extraMessages_;
    }
    /**
     * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
     */
    public int getExtraMessagesCount() {
      return extraMessages_.size();
    }
    /**
     * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg getExtraMessages(int index) {
      return extraMessages_.get(index);
    }
    /**
     * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsgOrBuilder getExtraMessagesOrBuilder(
        int index) {
      return extraMessages_.get(index);
    }

    // optional .CDOTASaveGame save_game = 63;
    public static final int SAVE_GAME_FIELD_NUMBER = 63;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame saveGame_;
    /**
     * <code>optional .CDOTASaveGame save_game = 63;</code>
     */
    public boolean hasSaveGame() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .CDOTASaveGame save_game = 63;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame getSaveGame() {
      return saveGame_;
    }
    /**
     * <code>optional .CDOTASaveGame save_game = 63;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGameOrBuilder getSaveGameOrBuilder() {
      return saveGame_;
    }

    // optional bool first_blood_happened = 65;
    public static final int FIRST_BLOOD_HAPPENED_FIELD_NUMBER = 65;
    private boolean firstBloodHappened_;
    /**
     * <code>optional bool first_blood_happened = 65;</code>
     */
    public boolean hasFirstBloodHappened() {
      return ((bitField1_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool first_blood_happened = 65;</code>
     */
    public boolean getFirstBloodHappened() {
      return firstBloodHappened_;
    }

    // optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];
    public static final int MATCH_OUTCOME_FIELD_NUMBER = 70;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome matchOutcome_;
    /**
     * <code>optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];</code>
     */
    public boolean hasMatchOutcome() {
      return ((bitField1_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome getMatchOutcome() {
      return matchOutcome_;
    }

    // optional bool mass_disconnect = 67;
    public static final int MASS_DISCONNECT_FIELD_NUMBER = 67;
    private boolean massDisconnect_;
    /**
     * <code>optional bool mass_disconnect = 67;</code>
     */
    public boolean hasMassDisconnect() {
      return ((bitField1_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool mass_disconnect = 67;</code>
     */
    public boolean getMassDisconnect() {
      return massDisconnect_;
    }

    // optional uint64 custom_game_id = 68;
    public static final int CUSTOM_GAME_ID_FIELD_NUMBER = 68;
    private long customGameId_;
    /**
     * <code>optional uint64 custom_game_id = 68;</code>
     */
    public boolean hasCustomGameId() {
      return ((bitField1_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint64 custom_game_id = 68;</code>
     */
    public long getCustomGameId() {
      return customGameId_;
    }

    // repeated .EIngameEvent active_ingame_events = 69;
    public static final int ACTIVE_INGAME_EVENTS_FIELD_NUMBER = 69;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> activeIngameEvents_;
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> getActiveIngameEventsList() {
      return activeIngameEvents_;
    }
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
     */
    public int getActiveIngameEventsCount() {
      return activeIngameEvents_.size();
    }
    /**
     * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent getActiveIngameEvents(int index) {
      return activeIngameEvents_.get(index);
    }

    // optional uint32 custom_min_players = 71;
    public static final int CUSTOM_MIN_PLAYERS_FIELD_NUMBER = 71;
    private int customMinPlayers_;
    /**
     * <code>optional uint32 custom_min_players = 71;</code>
     */
    public boolean hasCustomMinPlayers() {
      return ((bitField1_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 custom_min_players = 71;</code>
     */
    public int getCustomMinPlayers() {
      return customMinPlayers_;
    }

    // optional uint32 custom_max_players = 72;
    public static final int CUSTOM_MAX_PLAYERS_FIELD_NUMBER = 72;
    private int customMaxPlayers_;
    /**
     * <code>optional uint32 custom_max_players = 72;</code>
     */
    public boolean hasCustomMaxPlayers() {
      return ((bitField1_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 custom_max_players = 72;</code>
     */
    public int getCustomMaxPlayers() {
      return customMaxPlayers_;
    }

    // optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];
    public static final int PARTNER_TYPE_FIELD_NUMBER = 73;
    private skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType partnerType_;
    /**
     * <code>optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];</code>
     */
    public boolean hasPartnerType() {
      return ((bitField1_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];</code>
     */
    public skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerType() {
      return partnerType_;
    }

    // optional uint32 lan_host_ping_to_server_region = 74;
    public static final int LAN_HOST_PING_TO_SERVER_REGION_FIELD_NUMBER = 74;
    private int lanHostPingToServerRegion_;
    /**
     * <code>optional uint32 lan_host_ping_to_server_region = 74;</code>
     */
    public boolean hasLanHostPingToServerRegion() {
      return ((bitField1_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 lan_host_ping_to_server_region = 74;</code>
     */
    public int getLanHostPingToServerRegion() {
      return lanHostPingToServerRegion_;
    }

    private void initFields() {
      lobbyId_ = 0L;
      members_ = java.util.Collections.emptyList();
      leftMembers_ = java.util.Collections.emptyList();
      leaderId_ = 0L;
      serverId_ = 0L;
      gameMode_ = 0;
      pendingInvites_ = java.util.Collections.emptyList();
      state_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State.UI;
      connect_ = "";
      lobbyType_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType.INVALID;
      allowCheats_ = false;
      fillWithBots_ = false;
      introMode_ = false;
      gameName_ = "";
      teamDetails_ = java.util.Collections.emptyList();
      tutorialLesson_ = 0;
      tournamentId_ = 0;
      tournamentGameId_ = 0;
      serverRegion_ = 0;
      gameState_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState.DOTA_GAMERULES_STATE_INIT;
      numSpectators_ = 0;
      matchgroup_ = 0;
      cmPick_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK.DOTA_CM_RANDOM;
      matchId_ = 0L;
      allowSpectating_ = true;
      botDifficulty_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.BOT_DIFFICULTY_HARD;
      gameVersion_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion.GAME_VERSION_CURRENT;
      timedRewardDetails_ = java.util.Collections.emptyList();
      passKey_ = "";
      botSlotDifficulty_ = java.util.Collections.emptyList();
      leagueid_ = 0;
      penaltyLevelRadiant_ = 0;
      penaltyLevelDire_ = 0;
      loadGameId_ = 0;
      seriesType_ = 0;
      radiantSeriesWins_ = 0;
      direSeriesWins_ = 0;
      lootGenerated_ = 0;
      lootAwarded_ = 0;
      allchat_ = false;
      dotaTvDelay_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay.LobbyDotaTV_10;
      customGameMode_ = "";
      customMapName_ = "";
      customDifficulty_ = 0;
      lan_ = false;
      broadcastChannelInfo_ = java.util.Collections.emptyList();
      firstLeaverAccountid_ = 0;
      seriesId_ = 0;
      lowPriority_ = false;
      extraMessages_ = java.util.Collections.emptyList();
      saveGame_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.getDefaultInstance();
      firstBloodHappened_ = false;
      matchOutcome_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome.k_EMatchOutcome_Unknown;
      massDisconnect_ = false;
      customGameId_ = 0L;
      activeIngameEvents_ = java.util.Collections.emptyList();
      customMinPlayers_ = 0;
      customMaxPlayers_ = 0;
      partnerType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
      lanHostPingToServerRegion_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, lobbyId_);
      }
      for (int i = 0; i < members_.size(); i++) {
        output.writeMessage(2, members_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(3, gameMode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(4, state_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(5, getConnectBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed64(6, serverId_);
      }
      for (int i = 0; i < leftMembers_.size(); i++) {
        output.writeMessage(7, leftMembers_.get(i));
      }
      for (int i = 0; i < pendingInvites_.size(); i++) {
        output.writeFixed64(10, pendingInvites_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(11, leaderId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(12, lobbyType_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(13, allowCheats_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(14, fillWithBots_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(15, introMode_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(16, getGameNameBytes());
      }
      for (int i = 0; i < teamDetails_.size(); i++) {
        output.writeMessage(17, teamDetails_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(18, tutorialLesson_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(19, tournamentId_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(20, tournamentGameId_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(21, serverRegion_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeEnum(22, gameState_.getNumber());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(23, numSpectators_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(25, matchgroup_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeEnum(28, cmPick_.getNumber());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt64(30, matchId_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBool(31, allowSpectating_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeEnum(36, botDifficulty_.getNumber());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeEnum(37, gameVersion_.getNumber());
      }
      for (int i = 0; i < timedRewardDetails_.size(); i++) {
        output.writeMessage(38, timedRewardDetails_.get(i));
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeBytes(39, getPassKeyBytes());
      }
      for (int i = 0; i < botSlotDifficulty_.size(); i++) {
        output.writeEnum(41, botSlotDifficulty_.get(i).getNumber());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeUInt32(42, leagueid_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeUInt32(43, penaltyLevelRadiant_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeUInt32(44, penaltyLevelDire_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeUInt32(45, loadGameId_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeUInt32(46, seriesType_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeUInt32(47, radiantSeriesWins_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeUInt32(48, direSeriesWins_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeUInt32(49, lootGenerated_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(50, lootAwarded_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeBool(51, allchat_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(53, dotaTvDelay_.getNumber());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(54, getCustomGameModeBytes());
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(55, getCustomMapNameBytes());
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(56, customDifficulty_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeBool(57, lan_);
      }
      for (int i = 0; i < broadcastChannelInfo_.size(); i++) {
        output.writeMessage(58, broadcastChannelInfo_.get(i));
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(59, firstLeaverAccountid_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(60, seriesId_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeBool(61, lowPriority_);
      }
      for (int i = 0; i < extraMessages_.size(); i++) {
        output.writeMessage(62, extraMessages_.get(i));
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(63, saveGame_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        output.writeBool(65, firstBloodHappened_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        output.writeBool(67, massDisconnect_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        output.writeUInt64(68, customGameId_);
      }
      for (int i = 0; i < activeIngameEvents_.size(); i++) {
        output.writeEnum(69, activeIngameEvents_.get(i).getNumber());
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(70, matchOutcome_.getNumber());
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(71, customMinPlayers_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(72, customMaxPlayers_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        output.writeEnum(73, partnerType_.getNumber());
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(74, lanHostPingToServerRegion_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, lobbyId_);
      }
      for (int i = 0; i < members_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, members_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, gameMode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, state_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getConnectBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(6, serverId_);
      }
      for (int i = 0; i < leftMembers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, leftMembers_.get(i));
      }
      {
        int dataSize = 0;
        dataSize = 8 * getPendingInvitesList().size();
        size += dataSize;
        size += 1 * getPendingInvitesList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(11, leaderId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, lobbyType_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, allowCheats_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, fillWithBots_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, introMode_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getGameNameBytes());
      }
      for (int i = 0; i < teamDetails_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, teamDetails_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, tutorialLesson_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, tournamentId_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, tournamentGameId_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, serverRegion_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(22, gameState_.getNumber());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, numSpectators_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(25, matchgroup_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(28, cmPick_.getNumber());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(30, matchId_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(31, allowSpectating_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(36, botDifficulty_.getNumber());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(37, gameVersion_.getNumber());
      }
      for (int i = 0; i < timedRewardDetails_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(38, timedRewardDetails_.get(i));
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(39, getPassKeyBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < botSlotDifficulty_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(botSlotDifficulty_.get(i).getNumber());
        }
        size += dataSize;
        size += 2 * botSlotDifficulty_.size();
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(42, leagueid_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(43, penaltyLevelRadiant_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(44, penaltyLevelDire_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(45, loadGameId_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(46, seriesType_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(47, radiantSeriesWins_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(48, direSeriesWins_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(49, lootGenerated_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(50, lootAwarded_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(51, allchat_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(53, dotaTvDelay_.getNumber());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(54, getCustomGameModeBytes());
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(55, getCustomMapNameBytes());
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(56, customDifficulty_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(57, lan_);
      }
      for (int i = 0; i < broadcastChannelInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(58, broadcastChannelInfo_.get(i));
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(59, firstLeaverAccountid_);
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(60, seriesId_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(61, lowPriority_);
      }
      for (int i = 0; i < extraMessages_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(62, extraMessages_.get(i));
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(63, saveGame_);
      }
      if (((bitField1_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(65, firstBloodHappened_);
      }
      if (((bitField1_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(67, massDisconnect_);
      }
      if (((bitField1_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(68, customGameId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < activeIngameEvents_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(activeIngameEvents_.get(i).getNumber());
        }
        size += dataSize;
        size += 2 * activeIngameEvents_.size();
      }
      if (((bitField1_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(70, matchOutcome_.getNumber());
      }
      if (((bitField1_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(71, customMinPlayers_);
      }
      if (((bitField1_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(72, customMaxPlayers_);
      }
      if (((bitField1_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(73, partnerType_.getNumber());
      }
      if (((bitField1_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(74, lanHostPingToServerRegion_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTALobby}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobbyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobby_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobby_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMembersFieldBuilder();
          getLeftMembersFieldBuilder();
          getTeamDetailsFieldBuilder();
          getTimedRewardDetailsFieldBuilder();
          getBroadcastChannelInfoFieldBuilder();
          getExtraMessagesFieldBuilder();
          getSaveGameFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        lobbyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          membersBuilder_.clear();
        }
        if (leftMembersBuilder_ == null) {
          leftMembers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          leftMembersBuilder_.clear();
        }
        leaderId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        serverId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        gameMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        pendingInvites_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        state_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State.UI;
        bitField0_ = (bitField0_ & ~0x00000080);
        connect_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        lobbyType_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType.INVALID;
        bitField0_ = (bitField0_ & ~0x00000200);
        allowCheats_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        fillWithBots_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        introMode_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        gameName_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        if (teamDetailsBuilder_ == null) {
          teamDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          teamDetailsBuilder_.clear();
        }
        tutorialLesson_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        tournamentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        tournamentGameId_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        serverRegion_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        gameState_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState.DOTA_GAMERULES_STATE_INIT;
        bitField0_ = (bitField0_ & ~0x00080000);
        numSpectators_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        matchgroup_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        cmPick_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK.DOTA_CM_RANDOM;
        bitField0_ = (bitField0_ & ~0x00400000);
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        allowSpectating_ = true;
        bitField0_ = (bitField0_ & ~0x01000000);
        botDifficulty_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.BOT_DIFFICULTY_HARD;
        bitField0_ = (bitField0_ & ~0x02000000);
        gameVersion_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion.GAME_VERSION_CURRENT;
        bitField0_ = (bitField0_ & ~0x04000000);
        if (timedRewardDetailsBuilder_ == null) {
          timedRewardDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x08000000);
        } else {
          timedRewardDetailsBuilder_.clear();
        }
        passKey_ = "";
        bitField0_ = (bitField0_ & ~0x10000000);
        botSlotDifficulty_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x20000000);
        leagueid_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        penaltyLevelRadiant_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        penaltyLevelDire_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        loadGameId_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        seriesType_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        radiantSeriesWins_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        direSeriesWins_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        lootGenerated_ = 0;
        bitField1_ = (bitField1_ & ~0x00000020);
        lootAwarded_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        allchat_ = false;
        bitField1_ = (bitField1_ & ~0x00000080);
        dotaTvDelay_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay.LobbyDotaTV_10;
        bitField1_ = (bitField1_ & ~0x00000100);
        customGameMode_ = "";
        bitField1_ = (bitField1_ & ~0x00000200);
        customMapName_ = "";
        bitField1_ = (bitField1_ & ~0x00000400);
        customDifficulty_ = 0;
        bitField1_ = (bitField1_ & ~0x00000800);
        lan_ = false;
        bitField1_ = (bitField1_ & ~0x00001000);
        if (broadcastChannelInfoBuilder_ == null) {
          broadcastChannelInfo_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00002000);
        } else {
          broadcastChannelInfoBuilder_.clear();
        }
        firstLeaverAccountid_ = 0;
        bitField1_ = (bitField1_ & ~0x00004000);
        seriesId_ = 0;
        bitField1_ = (bitField1_ & ~0x00008000);
        lowPriority_ = false;
        bitField1_ = (bitField1_ & ~0x00010000);
        if (extraMessagesBuilder_ == null) {
          extraMessages_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00020000);
        } else {
          extraMessagesBuilder_.clear();
        }
        if (saveGameBuilder_ == null) {
          saveGame_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.getDefaultInstance();
        } else {
          saveGameBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00040000);
        firstBloodHappened_ = false;
        bitField1_ = (bitField1_ & ~0x00080000);
        matchOutcome_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome.k_EMatchOutcome_Unknown;
        bitField1_ = (bitField1_ & ~0x00100000);
        massDisconnect_ = false;
        bitField1_ = (bitField1_ & ~0x00200000);
        customGameId_ = 0L;
        bitField1_ = (bitField1_ & ~0x00400000);
        activeIngameEvents_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00800000);
        customMinPlayers_ = 0;
        bitField1_ = (bitField1_ & ~0x01000000);
        customMaxPlayers_ = 0;
        bitField1_ = (bitField1_ & ~0x02000000);
        partnerType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
        bitField1_ = (bitField1_ & ~0x04000000);
        lanHostPingToServerRegion_ = 0;
        bitField1_ = (bitField1_ & ~0x08000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTALobby_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lobbyId_ = lobbyId_;
        if (membersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            members_ = java.util.Collections.unmodifiableList(members_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.members_ = members_;
        } else {
          result.members_ = membersBuilder_.build();
        }
        if (leftMembersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            leftMembers_ = java.util.Collections.unmodifiableList(leftMembers_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.leftMembers_ = leftMembers_;
        } else {
          result.leftMembers_ = leftMembersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.leaderId_ = leaderId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serverId_ = serverId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gameMode_ = gameMode_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          pendingInvites_ = java.util.Collections.unmodifiableList(pendingInvites_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.pendingInvites_ = pendingInvites_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.connect_ = connect_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.lobbyType_ = lobbyType_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.allowCheats_ = allowCheats_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fillWithBots_ = fillWithBots_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.introMode_ = introMode_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.gameName_ = gameName_;
        if (teamDetailsBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000)) {
            teamDetails_ = java.util.Collections.unmodifiableList(teamDetails_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.teamDetails_ = teamDetails_;
        } else {
          result.teamDetails_ = teamDetailsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tutorialLesson_ = tutorialLesson_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.tournamentId_ = tournamentId_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tournamentGameId_ = tournamentGameId_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.serverRegion_ = serverRegion_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.gameState_ = gameState_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.numSpectators_ = numSpectators_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.matchgroup_ = matchgroup_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.cmPick_ = cmPick_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.allowSpectating_ = allowSpectating_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.botDifficulty_ = botDifficulty_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.gameVersion_ = gameVersion_;
        if (timedRewardDetailsBuilder_ == null) {
          if (((bitField0_ & 0x08000000) == 0x08000000)) {
            timedRewardDetails_ = java.util.Collections.unmodifiableList(timedRewardDetails_);
            bitField0_ = (bitField0_ & ~0x08000000);
          }
          result.timedRewardDetails_ = timedRewardDetails_;
        } else {
          result.timedRewardDetails_ = timedRewardDetailsBuilder_.build();
        }
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.passKey_ = passKey_;
        if (((bitField0_ & 0x20000000) == 0x20000000)) {
          botSlotDifficulty_ = java.util.Collections.unmodifiableList(botSlotDifficulty_);
          bitField0_ = (bitField0_ & ~0x20000000);
        }
        result.botSlotDifficulty_ = botSlotDifficulty_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.leagueid_ = leagueid_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.penaltyLevelRadiant_ = penaltyLevelRadiant_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x04000000;
        }
        result.penaltyLevelDire_ = penaltyLevelDire_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x08000000;
        }
        result.loadGameId_ = loadGameId_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x10000000;
        }
        result.seriesType_ = seriesType_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x20000000;
        }
        result.radiantSeriesWins_ = radiantSeriesWins_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x40000000;
        }
        result.direSeriesWins_ = direSeriesWins_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x80000000;
        }
        result.lootGenerated_ = lootGenerated_;
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000001;
        }
        result.lootAwarded_ = lootAwarded_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000002;
        }
        result.allchat_ = allchat_;
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000004;
        }
        result.dotaTvDelay_ = dotaTvDelay_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000008;
        }
        result.customGameMode_ = customGameMode_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000010;
        }
        result.customMapName_ = customMapName_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000020;
        }
        result.customDifficulty_ = customDifficulty_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00000040;
        }
        result.lan_ = lan_;
        if (broadcastChannelInfoBuilder_ == null) {
          if (((bitField1_ & 0x00002000) == 0x00002000)) {
            broadcastChannelInfo_ = java.util.Collections.unmodifiableList(broadcastChannelInfo_);
            bitField1_ = (bitField1_ & ~0x00002000);
          }
          result.broadcastChannelInfo_ = broadcastChannelInfo_;
        } else {
          result.broadcastChannelInfo_ = broadcastChannelInfoBuilder_.build();
        }
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00000080;
        }
        result.firstLeaverAccountid_ = firstLeaverAccountid_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00000100;
        }
        result.seriesId_ = seriesId_;
        if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
          to_bitField1_ |= 0x00000200;
        }
        result.lowPriority_ = lowPriority_;
        if (extraMessagesBuilder_ == null) {
          if (((bitField1_ & 0x00020000) == 0x00020000)) {
            extraMessages_ = java.util.Collections.unmodifiableList(extraMessages_);
            bitField1_ = (bitField1_ & ~0x00020000);
          }
          result.extraMessages_ = extraMessages_;
        } else {
          result.extraMessages_ = extraMessagesBuilder_.build();
        }
        if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
          to_bitField1_ |= 0x00000400;
        }
        if (saveGameBuilder_ == null) {
          result.saveGame_ = saveGame_;
        } else {
          result.saveGame_ = saveGameBuilder_.build();
        }
        if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
          to_bitField1_ |= 0x00000800;
        }
        result.firstBloodHappened_ = firstBloodHappened_;
        if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
          to_bitField1_ |= 0x00001000;
        }
        result.matchOutcome_ = matchOutcome_;
        if (((from_bitField1_ & 0x00200000) == 0x00200000)) {
          to_bitField1_ |= 0x00002000;
        }
        result.massDisconnect_ = massDisconnect_;
        if (((from_bitField1_ & 0x00400000) == 0x00400000)) {
          to_bitField1_ |= 0x00004000;
        }
        result.customGameId_ = customGameId_;
        if (((bitField1_ & 0x00800000) == 0x00800000)) {
          activeIngameEvents_ = java.util.Collections.unmodifiableList(activeIngameEvents_);
          bitField1_ = (bitField1_ & ~0x00800000);
        }
        result.activeIngameEvents_ = activeIngameEvents_;
        if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
          to_bitField1_ |= 0x00008000;
        }
        result.customMinPlayers_ = customMinPlayers_;
        if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
          to_bitField1_ |= 0x00010000;
        }
        result.customMaxPlayers_ = customMaxPlayers_;
        if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
          to_bitField1_ |= 0x00020000;
        }
        result.partnerType_ = partnerType_;
        if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
          to_bitField1_ |= 0x00040000;
        }
        result.lanHostPingToServerRegion_ = lanHostPingToServerRegion_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.getDefaultInstance()) return this;
        if (other.hasLobbyId()) {
          setLobbyId(other.getLobbyId());
        }
        if (membersBuilder_ == null) {
          if (!other.members_.isEmpty()) {
            if (members_.isEmpty()) {
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMembersIsMutable();
              members_.addAll(other.members_);
            }
            onChanged();
          }
        } else {
          if (!other.members_.isEmpty()) {
            if (membersBuilder_.isEmpty()) {
              membersBuilder_.dispose();
              membersBuilder_ = null;
              members_ = other.members_;
              bitField0_ = (bitField0_ & ~0x00000002);
              membersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMembersFieldBuilder() : null;
            } else {
              membersBuilder_.addAllMessages(other.members_);
            }
          }
        }
        if (leftMembersBuilder_ == null) {
          if (!other.leftMembers_.isEmpty()) {
            if (leftMembers_.isEmpty()) {
              leftMembers_ = other.leftMembers_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLeftMembersIsMutable();
              leftMembers_.addAll(other.leftMembers_);
            }
            onChanged();
          }
        } else {
          if (!other.leftMembers_.isEmpty()) {
            if (leftMembersBuilder_.isEmpty()) {
              leftMembersBuilder_.dispose();
              leftMembersBuilder_ = null;
              leftMembers_ = other.leftMembers_;
              bitField0_ = (bitField0_ & ~0x00000004);
              leftMembersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLeftMembersFieldBuilder() : null;
            } else {
              leftMembersBuilder_.addAllMessages(other.leftMembers_);
            }
          }
        }
        if (other.hasLeaderId()) {
          setLeaderId(other.getLeaderId());
        }
        if (other.hasServerId()) {
          setServerId(other.getServerId());
        }
        if (other.hasGameMode()) {
          setGameMode(other.getGameMode());
        }
        if (!other.pendingInvites_.isEmpty()) {
          if (pendingInvites_.isEmpty()) {
            pendingInvites_ = other.pendingInvites_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensurePendingInvitesIsMutable();
            pendingInvites_.addAll(other.pendingInvites_);
          }
          onChanged();
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasConnect()) {
          bitField0_ |= 0x00000100;
          connect_ = other.connect_;
          onChanged();
        }
        if (other.hasLobbyType()) {
          setLobbyType(other.getLobbyType());
        }
        if (other.hasAllowCheats()) {
          setAllowCheats(other.getAllowCheats());
        }
        if (other.hasFillWithBots()) {
          setFillWithBots(other.getFillWithBots());
        }
        if (other.hasIntroMode()) {
          setIntroMode(other.getIntroMode());
        }
        if (other.hasGameName()) {
          bitField0_ |= 0x00002000;
          gameName_ = other.gameName_;
          onChanged();
        }
        if (teamDetailsBuilder_ == null) {
          if (!other.teamDetails_.isEmpty()) {
            if (teamDetails_.isEmpty()) {
              teamDetails_ = other.teamDetails_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureTeamDetailsIsMutable();
              teamDetails_.addAll(other.teamDetails_);
            }
            onChanged();
          }
        } else {
          if (!other.teamDetails_.isEmpty()) {
            if (teamDetailsBuilder_.isEmpty()) {
              teamDetailsBuilder_.dispose();
              teamDetailsBuilder_ = null;
              teamDetails_ = other.teamDetails_;
              bitField0_ = (bitField0_ & ~0x00004000);
              teamDetailsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTeamDetailsFieldBuilder() : null;
            } else {
              teamDetailsBuilder_.addAllMessages(other.teamDetails_);
            }
          }
        }
        if (other.hasTutorialLesson()) {
          setTutorialLesson(other.getTutorialLesson());
        }
        if (other.hasTournamentId()) {
          setTournamentId(other.getTournamentId());
        }
        if (other.hasTournamentGameId()) {
          setTournamentGameId(other.getTournamentGameId());
        }
        if (other.hasServerRegion()) {
          setServerRegion(other.getServerRegion());
        }
        if (other.hasGameState()) {
          setGameState(other.getGameState());
        }
        if (other.hasNumSpectators()) {
          setNumSpectators(other.getNumSpectators());
        }
        if (other.hasMatchgroup()) {
          setMatchgroup(other.getMatchgroup());
        }
        if (other.hasCmPick()) {
          setCmPick(other.getCmPick());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasAllowSpectating()) {
          setAllowSpectating(other.getAllowSpectating());
        }
        if (other.hasBotDifficulty()) {
          setBotDifficulty(other.getBotDifficulty());
        }
        if (other.hasGameVersion()) {
          setGameVersion(other.getGameVersion());
        }
        if (timedRewardDetailsBuilder_ == null) {
          if (!other.timedRewardDetails_.isEmpty()) {
            if (timedRewardDetails_.isEmpty()) {
              timedRewardDetails_ = other.timedRewardDetails_;
              bitField0_ = (bitField0_ & ~0x08000000);
            } else {
              ensureTimedRewardDetailsIsMutable();
              timedRewardDetails_.addAll(other.timedRewardDetails_);
            }
            onChanged();
          }
        } else {
          if (!other.timedRewardDetails_.isEmpty()) {
            if (timedRewardDetailsBuilder_.isEmpty()) {
              timedRewardDetailsBuilder_.dispose();
              timedRewardDetailsBuilder_ = null;
              timedRewardDetails_ = other.timedRewardDetails_;
              bitField0_ = (bitField0_ & ~0x08000000);
              timedRewardDetailsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTimedRewardDetailsFieldBuilder() : null;
            } else {
              timedRewardDetailsBuilder_.addAllMessages(other.timedRewardDetails_);
            }
          }
        }
        if (other.hasPassKey()) {
          bitField0_ |= 0x10000000;
          passKey_ = other.passKey_;
          onChanged();
        }
        if (!other.botSlotDifficulty_.isEmpty()) {
          if (botSlotDifficulty_.isEmpty()) {
            botSlotDifficulty_ = other.botSlotDifficulty_;
            bitField0_ = (bitField0_ & ~0x20000000);
          } else {
            ensureBotSlotDifficultyIsMutable();
            botSlotDifficulty_.addAll(other.botSlotDifficulty_);
          }
          onChanged();
        }
        if (other.hasLeagueid()) {
          setLeagueid(other.getLeagueid());
        }
        if (other.hasPenaltyLevelRadiant()) {
          setPenaltyLevelRadiant(other.getPenaltyLevelRadiant());
        }
        if (other.hasPenaltyLevelDire()) {
          setPenaltyLevelDire(other.getPenaltyLevelDire());
        }
        if (other.hasLoadGameId()) {
          setLoadGameId(other.getLoadGameId());
        }
        if (other.hasSeriesType()) {
          setSeriesType(other.getSeriesType());
        }
        if (other.hasRadiantSeriesWins()) {
          setRadiantSeriesWins(other.getRadiantSeriesWins());
        }
        if (other.hasDireSeriesWins()) {
          setDireSeriesWins(other.getDireSeriesWins());
        }
        if (other.hasLootGenerated()) {
          setLootGenerated(other.getLootGenerated());
        }
        if (other.hasLootAwarded()) {
          setLootAwarded(other.getLootAwarded());
        }
        if (other.hasAllchat()) {
          setAllchat(other.getAllchat());
        }
        if (other.hasDotaTvDelay()) {
          setDotaTvDelay(other.getDotaTvDelay());
        }
        if (other.hasCustomGameMode()) {
          bitField1_ |= 0x00000200;
          customGameMode_ = other.customGameMode_;
          onChanged();
        }
        if (other.hasCustomMapName()) {
          bitField1_ |= 0x00000400;
          customMapName_ = other.customMapName_;
          onChanged();
        }
        if (other.hasCustomDifficulty()) {
          setCustomDifficulty(other.getCustomDifficulty());
        }
        if (other.hasLan()) {
          setLan(other.getLan());
        }
        if (broadcastChannelInfoBuilder_ == null) {
          if (!other.broadcastChannelInfo_.isEmpty()) {
            if (broadcastChannelInfo_.isEmpty()) {
              broadcastChannelInfo_ = other.broadcastChannelInfo_;
              bitField1_ = (bitField1_ & ~0x00002000);
            } else {
              ensureBroadcastChannelInfoIsMutable();
              broadcastChannelInfo_.addAll(other.broadcastChannelInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.broadcastChannelInfo_.isEmpty()) {
            if (broadcastChannelInfoBuilder_.isEmpty()) {
              broadcastChannelInfoBuilder_.dispose();
              broadcastChannelInfoBuilder_ = null;
              broadcastChannelInfo_ = other.broadcastChannelInfo_;
              bitField1_ = (bitField1_ & ~0x00002000);
              broadcastChannelInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBroadcastChannelInfoFieldBuilder() : null;
            } else {
              broadcastChannelInfoBuilder_.addAllMessages(other.broadcastChannelInfo_);
            }
          }
        }
        if (other.hasFirstLeaverAccountid()) {
          setFirstLeaverAccountid(other.getFirstLeaverAccountid());
        }
        if (other.hasSeriesId()) {
          setSeriesId(other.getSeriesId());
        }
        if (other.hasLowPriority()) {
          setLowPriority(other.getLowPriority());
        }
        if (extraMessagesBuilder_ == null) {
          if (!other.extraMessages_.isEmpty()) {
            if (extraMessages_.isEmpty()) {
              extraMessages_ = other.extraMessages_;
              bitField1_ = (bitField1_ & ~0x00020000);
            } else {
              ensureExtraMessagesIsMutable();
              extraMessages_.addAll(other.extraMessages_);
            }
            onChanged();
          }
        } else {
          if (!other.extraMessages_.isEmpty()) {
            if (extraMessagesBuilder_.isEmpty()) {
              extraMessagesBuilder_.dispose();
              extraMessagesBuilder_ = null;
              extraMessages_ = other.extraMessages_;
              bitField1_ = (bitField1_ & ~0x00020000);
              extraMessagesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getExtraMessagesFieldBuilder() : null;
            } else {
              extraMessagesBuilder_.addAllMessages(other.extraMessages_);
            }
          }
        }
        if (other.hasSaveGame()) {
          mergeSaveGame(other.getSaveGame());
        }
        if (other.hasFirstBloodHappened()) {
          setFirstBloodHappened(other.getFirstBloodHappened());
        }
        if (other.hasMatchOutcome()) {
          setMatchOutcome(other.getMatchOutcome());
        }
        if (other.hasMassDisconnect()) {
          setMassDisconnect(other.getMassDisconnect());
        }
        if (other.hasCustomGameId()) {
          setCustomGameId(other.getCustomGameId());
        }
        if (!other.activeIngameEvents_.isEmpty()) {
          if (activeIngameEvents_.isEmpty()) {
            activeIngameEvents_ = other.activeIngameEvents_;
            bitField1_ = (bitField1_ & ~0x00800000);
          } else {
            ensureActiveIngameEventsIsMutable();
            activeIngameEvents_.addAll(other.activeIngameEvents_);
          }
          onChanged();
        }
        if (other.hasCustomMinPlayers()) {
          setCustomMinPlayers(other.getCustomMinPlayers());
        }
        if (other.hasCustomMaxPlayers()) {
          setCustomMaxPlayers(other.getCustomMaxPlayers());
        }
        if (other.hasPartnerType()) {
          setPartnerType(other.getPartnerType());
        }
        if (other.hasLanHostPingToServerRegion()) {
          setLanHostPingToServerRegion(other.getLanHostPingToServerRegion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // optional uint64 lobby_id = 1;
      private long lobbyId_ ;
      /**
       * <code>optional uint64 lobby_id = 1;</code>
       */
      public boolean hasLobbyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 lobby_id = 1;</code>
       */
      public long getLobbyId() {
        return lobbyId_;
      }
      /**
       * <code>optional uint64 lobby_id = 1;</code>
       */
      public Builder setLobbyId(long value) {
        bitField0_ |= 0x00000001;
        lobbyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 lobby_id = 1;</code>
       */
      public Builder clearLobbyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lobbyId_ = 0L;
        onChanged();
        return this;
      }

      // repeated .CDOTALobbyMember members = 2;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> members_ =
        java.util.Collections.emptyList();
      private void ensureMembersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          members_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember>(members_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder> membersBuilder_;

      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> getMembersList() {
        if (membersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(members_);
        } else {
          return membersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public int getMembersCount() {
        if (membersBuilder_ == null) {
          return members_.size();
        } else {
          return membersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember getMembers(int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);
        } else {
          return membersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public Builder setMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.set(index, value);
          onChanged();
        } else {
          membersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public Builder setMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.set(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public Builder addMembers(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(value);
          onChanged();
        } else {
          membersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public Builder addMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember value) {
        if (membersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMembersIsMutable();
          members_.add(index, value);
          onChanged();
        } else {
          membersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public Builder addMembers(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public Builder addMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder builderForValue) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.add(index, builderForValue.build());
          onChanged();
        } else {
          membersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public Builder addAllMembers(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> values) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          super.addAll(values, members_);
          onChanged();
        } else {
          membersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public Builder clearMembers() {
        if (membersBuilder_ == null) {
          members_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          membersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public Builder removeMembers(int index) {
        if (membersBuilder_ == null) {
          ensureMembersIsMutable();
          members_.remove(index);
          onChanged();
        } else {
          membersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder getMembersBuilder(
          int index) {
        return getMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder getMembersOrBuilder(
          int index) {
        if (membersBuilder_ == null) {
          return members_.get(index);  } else {
          return membersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder> 
           getMembersOrBuilderList() {
        if (membersBuilder_ != null) {
          return membersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(members_);
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder addMembersBuilder() {
        return getMembersFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder addMembersBuilder(
          int index) {
        return getMembersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTALobbyMember members = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder> 
           getMembersBuilderList() {
        return getMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder> 
          getMembersFieldBuilder() {
        if (membersBuilder_ == null) {
          membersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder>(
                  members_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          members_ = null;
        }
        return membersBuilder_;
      }

      // repeated .CDOTALobbyMember left_members = 7;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> leftMembers_ =
        java.util.Collections.emptyList();
      private void ensureLeftMembersIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          leftMembers_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember>(leftMembers_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder> leftMembersBuilder_;

      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> getLeftMembersList() {
        if (leftMembersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(leftMembers_);
        } else {
          return leftMembersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public int getLeftMembersCount() {
        if (leftMembersBuilder_ == null) {
          return leftMembers_.size();
        } else {
          return leftMembersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember getLeftMembers(int index) {
        if (leftMembersBuilder_ == null) {
          return leftMembers_.get(index);
        } else {
          return leftMembersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public Builder setLeftMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember value) {
        if (leftMembersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeftMembersIsMutable();
          leftMembers_.set(index, value);
          onChanged();
        } else {
          leftMembersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public Builder setLeftMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder builderForValue) {
        if (leftMembersBuilder_ == null) {
          ensureLeftMembersIsMutable();
          leftMembers_.set(index, builderForValue.build());
          onChanged();
        } else {
          leftMembersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public Builder addLeftMembers(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember value) {
        if (leftMembersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeftMembersIsMutable();
          leftMembers_.add(value);
          onChanged();
        } else {
          leftMembersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public Builder addLeftMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember value) {
        if (leftMembersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLeftMembersIsMutable();
          leftMembers_.add(index, value);
          onChanged();
        } else {
          leftMembersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public Builder addLeftMembers(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder builderForValue) {
        if (leftMembersBuilder_ == null) {
          ensureLeftMembersIsMutable();
          leftMembers_.add(builderForValue.build());
          onChanged();
        } else {
          leftMembersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public Builder addLeftMembers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder builderForValue) {
        if (leftMembersBuilder_ == null) {
          ensureLeftMembersIsMutable();
          leftMembers_.add(index, builderForValue.build());
          onChanged();
        } else {
          leftMembersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public Builder addAllLeftMembers(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember> values) {
        if (leftMembersBuilder_ == null) {
          ensureLeftMembersIsMutable();
          super.addAll(values, leftMembers_);
          onChanged();
        } else {
          leftMembersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public Builder clearLeftMembers() {
        if (leftMembersBuilder_ == null) {
          leftMembers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          leftMembersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public Builder removeLeftMembers(int index) {
        if (leftMembersBuilder_ == null) {
          ensureLeftMembersIsMutable();
          leftMembers_.remove(index);
          onChanged();
        } else {
          leftMembersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder getLeftMembersBuilder(
          int index) {
        return getLeftMembersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder getLeftMembersOrBuilder(
          int index) {
        if (leftMembersBuilder_ == null) {
          return leftMembers_.get(index);  } else {
          return leftMembersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder> 
           getLeftMembersOrBuilderList() {
        if (leftMembersBuilder_ != null) {
          return leftMembersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(leftMembers_);
        }
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder addLeftMembersBuilder() {
        return getLeftMembersFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder addLeftMembersBuilder(
          int index) {
        return getLeftMembersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.getDefaultInstance());
      }
      /**
       * <code>repeated .CDOTALobbyMember left_members = 7;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder> 
           getLeftMembersBuilderList() {
        return getLeftMembersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder> 
          getLeftMembersFieldBuilder() {
        if (leftMembersBuilder_ == null) {
          leftMembersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMember.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTALobbyMemberOrBuilder>(
                  leftMembers_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          leftMembers_ = null;
        }
        return leftMembersBuilder_;
      }

      // optional fixed64 leader_id = 11;
      private long leaderId_ ;
      /**
       * <code>optional fixed64 leader_id = 11;</code>
       */
      public boolean hasLeaderId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional fixed64 leader_id = 11;</code>
       */
      public long getLeaderId() {
        return leaderId_;
      }
      /**
       * <code>optional fixed64 leader_id = 11;</code>
       */
      public Builder setLeaderId(long value) {
        bitField0_ |= 0x00000008;
        leaderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 leader_id = 11;</code>
       */
      public Builder clearLeaderId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        leaderId_ = 0L;
        onChanged();
        return this;
      }

      // optional fixed64 server_id = 6 [default = 0];
      private long serverId_ ;
      /**
       * <code>optional fixed64 server_id = 6 [default = 0];</code>
       */
      public boolean hasServerId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional fixed64 server_id = 6 [default = 0];</code>
       */
      public long getServerId() {
        return serverId_;
      }
      /**
       * <code>optional fixed64 server_id = 6 [default = 0];</code>
       */
      public Builder setServerId(long value) {
        bitField0_ |= 0x00000010;
        serverId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 server_id = 6 [default = 0];</code>
       */
      public Builder clearServerId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        serverId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 game_mode = 3;
      private int gameMode_ ;
      /**
       * <code>optional uint32 game_mode = 3;</code>
       */
      public boolean hasGameMode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 game_mode = 3;</code>
       */
      public int getGameMode() {
        return gameMode_;
      }
      /**
       * <code>optional uint32 game_mode = 3;</code>
       */
      public Builder setGameMode(int value) {
        bitField0_ |= 0x00000020;
        gameMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 game_mode = 3;</code>
       */
      public Builder clearGameMode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gameMode_ = 0;
        onChanged();
        return this;
      }

      // repeated fixed64 pending_invites = 10;
      private java.util.List<java.lang.Long> pendingInvites_ = java.util.Collections.emptyList();
      private void ensurePendingInvitesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          pendingInvites_ = new java.util.ArrayList<java.lang.Long>(pendingInvites_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated fixed64 pending_invites = 10;</code>
       */
      public java.util.List<java.lang.Long>
          getPendingInvitesList() {
        return java.util.Collections.unmodifiableList(pendingInvites_);
      }
      /**
       * <code>repeated fixed64 pending_invites = 10;</code>
       */
      public int getPendingInvitesCount() {
        return pendingInvites_.size();
      }
      /**
       * <code>repeated fixed64 pending_invites = 10;</code>
       */
      public long getPendingInvites(int index) {
        return pendingInvites_.get(index);
      }
      /**
       * <code>repeated fixed64 pending_invites = 10;</code>
       */
      public Builder setPendingInvites(
          int index, long value) {
        ensurePendingInvitesIsMutable();
        pendingInvites_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 pending_invites = 10;</code>
       */
      public Builder addPendingInvites(long value) {
        ensurePendingInvitesIsMutable();
        pendingInvites_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 pending_invites = 10;</code>
       */
      public Builder addAllPendingInvites(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePendingInvitesIsMutable();
        super.addAll(values, pendingInvites_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed64 pending_invites = 10;</code>
       */
      public Builder clearPendingInvites() {
        pendingInvites_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional .CSODOTALobby.State state = 4 [default = UI];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State state_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State.UI;
      /**
       * <code>optional .CSODOTALobby.State state = 4 [default = UI];</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .CSODOTALobby.State state = 4 [default = UI];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State getState() {
        return state_;
      }
      /**
       * <code>optional .CSODOTALobby.State state = 4 [default = UI];</code>
       */
      public Builder setState(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CSODOTALobby.State state = 4 [default = UI];</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000080);
        state_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.State.UI;
        onChanged();
        return this;
      }

      // optional string connect = 5;
      private java.lang.Object connect_ = "";
      /**
       * <code>optional string connect = 5;</code>
       */
      public boolean hasConnect() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string connect = 5;</code>
       */
      public java.lang.String getConnect() {
        java.lang.Object ref = connect_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          connect_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string connect = 5;</code>
       */
      public com.google.protobuf.ByteString
          getConnectBytes() {
        java.lang.Object ref = connect_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          connect_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string connect = 5;</code>
       */
      public Builder setConnect(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        connect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string connect = 5;</code>
       */
      public Builder clearConnect() {
        bitField0_ = (bitField0_ & ~0x00000100);
        connect_ = getDefaultInstance().getConnect();
        onChanged();
        return this;
      }
      /**
       * <code>optional string connect = 5;</code>
       */
      public Builder setConnectBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        connect_ = value;
        onChanged();
        return this;
      }

      // optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType lobbyType_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType.INVALID;
      /**
       * <code>optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];</code>
       */
      public boolean hasLobbyType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType getLobbyType() {
        return lobbyType_;
      }
      /**
       * <code>optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];</code>
       */
      public Builder setLobbyType(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        lobbyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CSODOTALobby.LobbyType lobby_type = 12 [default = INVALID];</code>
       */
      public Builder clearLobbyType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        lobbyType_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.LobbyType.INVALID;
        onChanged();
        return this;
      }

      // optional bool allow_cheats = 13;
      private boolean allowCheats_ ;
      /**
       * <code>optional bool allow_cheats = 13;</code>
       */
      public boolean hasAllowCheats() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool allow_cheats = 13;</code>
       */
      public boolean getAllowCheats() {
        return allowCheats_;
      }
      /**
       * <code>optional bool allow_cheats = 13;</code>
       */
      public Builder setAllowCheats(boolean value) {
        bitField0_ |= 0x00000400;
        allowCheats_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool allow_cheats = 13;</code>
       */
      public Builder clearAllowCheats() {
        bitField0_ = (bitField0_ & ~0x00000400);
        allowCheats_ = false;
        onChanged();
        return this;
      }

      // optional bool fill_with_bots = 14;
      private boolean fillWithBots_ ;
      /**
       * <code>optional bool fill_with_bots = 14;</code>
       */
      public boolean hasFillWithBots() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool fill_with_bots = 14;</code>
       */
      public boolean getFillWithBots() {
        return fillWithBots_;
      }
      /**
       * <code>optional bool fill_with_bots = 14;</code>
       */
      public Builder setFillWithBots(boolean value) {
        bitField0_ |= 0x00000800;
        fillWithBots_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool fill_with_bots = 14;</code>
       */
      public Builder clearFillWithBots() {
        bitField0_ = (bitField0_ & ~0x00000800);
        fillWithBots_ = false;
        onChanged();
        return this;
      }

      // optional bool intro_mode = 15;
      private boolean introMode_ ;
      /**
       * <code>optional bool intro_mode = 15;</code>
       */
      public boolean hasIntroMode() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool intro_mode = 15;</code>
       */
      public boolean getIntroMode() {
        return introMode_;
      }
      /**
       * <code>optional bool intro_mode = 15;</code>
       */
      public Builder setIntroMode(boolean value) {
        bitField0_ |= 0x00001000;
        introMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool intro_mode = 15;</code>
       */
      public Builder clearIntroMode() {
        bitField0_ = (bitField0_ & ~0x00001000);
        introMode_ = false;
        onChanged();
        return this;
      }

      // optional string game_name = 16;
      private java.lang.Object gameName_ = "";
      /**
       * <code>optional string game_name = 16;</code>
       */
      public boolean hasGameName() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string game_name = 16;</code>
       */
      public java.lang.String getGameName() {
        java.lang.Object ref = gameName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gameName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string game_name = 16;</code>
       */
      public com.google.protobuf.ByteString
          getGameNameBytes() {
        java.lang.Object ref = gameName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gameName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string game_name = 16;</code>
       */
      public Builder setGameName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        gameName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_name = 16;</code>
       */
      public Builder clearGameName() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gameName_ = getDefaultInstance().getGameName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string game_name = 16;</code>
       */
      public Builder setGameNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        gameName_ = value;
        onChanged();
        return this;
      }

      // repeated .CLobbyTeamDetails team_details = 17;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails> teamDetails_ =
        java.util.Collections.emptyList();
      private void ensureTeamDetailsIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          teamDetails_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails>(teamDetails_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetailsOrBuilder> teamDetailsBuilder_;

      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails> getTeamDetailsList() {
        if (teamDetailsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(teamDetails_);
        } else {
          return teamDetailsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public int getTeamDetailsCount() {
        if (teamDetailsBuilder_ == null) {
          return teamDetails_.size();
        } else {
          return teamDetailsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails getTeamDetails(int index) {
        if (teamDetailsBuilder_ == null) {
          return teamDetails_.get(index);
        } else {
          return teamDetailsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public Builder setTeamDetails(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails value) {
        if (teamDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamDetailsIsMutable();
          teamDetails_.set(index, value);
          onChanged();
        } else {
          teamDetailsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public Builder setTeamDetails(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder builderForValue) {
        if (teamDetailsBuilder_ == null) {
          ensureTeamDetailsIsMutable();
          teamDetails_.set(index, builderForValue.build());
          onChanged();
        } else {
          teamDetailsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public Builder addTeamDetails(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails value) {
        if (teamDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamDetailsIsMutable();
          teamDetails_.add(value);
          onChanged();
        } else {
          teamDetailsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public Builder addTeamDetails(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails value) {
        if (teamDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTeamDetailsIsMutable();
          teamDetails_.add(index, value);
          onChanged();
        } else {
          teamDetailsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public Builder addTeamDetails(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder builderForValue) {
        if (teamDetailsBuilder_ == null) {
          ensureTeamDetailsIsMutable();
          teamDetails_.add(builderForValue.build());
          onChanged();
        } else {
          teamDetailsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public Builder addTeamDetails(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder builderForValue) {
        if (teamDetailsBuilder_ == null) {
          ensureTeamDetailsIsMutable();
          teamDetails_.add(index, builderForValue.build());
          onChanged();
        } else {
          teamDetailsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public Builder addAllTeamDetails(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails> values) {
        if (teamDetailsBuilder_ == null) {
          ensureTeamDetailsIsMutable();
          super.addAll(values, teamDetails_);
          onChanged();
        } else {
          teamDetailsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public Builder clearTeamDetails() {
        if (teamDetailsBuilder_ == null) {
          teamDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          teamDetailsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public Builder removeTeamDetails(int index) {
        if (teamDetailsBuilder_ == null) {
          ensureTeamDetailsIsMutable();
          teamDetails_.remove(index);
          onChanged();
        } else {
          teamDetailsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder getTeamDetailsBuilder(
          int index) {
        return getTeamDetailsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetailsOrBuilder getTeamDetailsOrBuilder(
          int index) {
        if (teamDetailsBuilder_ == null) {
          return teamDetails_.get(index);  } else {
          return teamDetailsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetailsOrBuilder> 
           getTeamDetailsOrBuilderList() {
        if (teamDetailsBuilder_ != null) {
          return teamDetailsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(teamDetails_);
        }
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder addTeamDetailsBuilder() {
        return getTeamDetailsFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder addTeamDetailsBuilder(
          int index) {
        return getTeamDetailsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CLobbyTeamDetails team_details = 17;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder> 
           getTeamDetailsBuilderList() {
        return getTeamDetailsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetailsOrBuilder> 
          getTeamDetailsFieldBuilder() {
        if (teamDetailsBuilder_ == null) {
          teamDetailsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTeamDetailsOrBuilder>(
                  teamDetails_,
                  ((bitField0_ & 0x00004000) == 0x00004000),
                  getParentForChildren(),
                  isClean());
          teamDetails_ = null;
        }
        return teamDetailsBuilder_;
      }

      // optional uint32 tutorial_lesson = 18;
      private int tutorialLesson_ ;
      /**
       * <code>optional uint32 tutorial_lesson = 18;</code>
       */
      public boolean hasTutorialLesson() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 tutorial_lesson = 18;</code>
       */
      public int getTutorialLesson() {
        return tutorialLesson_;
      }
      /**
       * <code>optional uint32 tutorial_lesson = 18;</code>
       */
      public Builder setTutorialLesson(int value) {
        bitField0_ |= 0x00008000;
        tutorialLesson_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tutorial_lesson = 18;</code>
       */
      public Builder clearTutorialLesson() {
        bitField0_ = (bitField0_ & ~0x00008000);
        tutorialLesson_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 tournament_id = 19;
      private int tournamentId_ ;
      /**
       * <code>optional uint32 tournament_id = 19;</code>
       */
      public boolean hasTournamentId() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 tournament_id = 19;</code>
       */
      public int getTournamentId() {
        return tournamentId_;
      }
      /**
       * <code>optional uint32 tournament_id = 19;</code>
       */
      public Builder setTournamentId(int value) {
        bitField0_ |= 0x00010000;
        tournamentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_id = 19;</code>
       */
      public Builder clearTournamentId() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tournamentId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 tournament_game_id = 20;
      private int tournamentGameId_ ;
      /**
       * <code>optional uint32 tournament_game_id = 20;</code>
       */
      public boolean hasTournamentGameId() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 tournament_game_id = 20;</code>
       */
      public int getTournamentGameId() {
        return tournamentGameId_;
      }
      /**
       * <code>optional uint32 tournament_game_id = 20;</code>
       */
      public Builder setTournamentGameId(int value) {
        bitField0_ |= 0x00020000;
        tournamentGameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_game_id = 20;</code>
       */
      public Builder clearTournamentGameId() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tournamentGameId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 server_region = 21 [default = 0];
      private int serverRegion_ ;
      /**
       * <code>optional uint32 server_region = 21 [default = 0];</code>
       */
      public boolean hasServerRegion() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 server_region = 21 [default = 0];</code>
       */
      public int getServerRegion() {
        return serverRegion_;
      }
      /**
       * <code>optional uint32 server_region = 21 [default = 0];</code>
       */
      public Builder setServerRegion(int value) {
        bitField0_ |= 0x00040000;
        serverRegion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 server_region = 21 [default = 0];</code>
       */
      public Builder clearServerRegion() {
        bitField0_ = (bitField0_ & ~0x00040000);
        serverRegion_ = 0;
        onChanged();
        return this;
      }

      // optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState gameState_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState.DOTA_GAMERULES_STATE_INIT;
      /**
       * <code>optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];</code>
       */
      public boolean hasGameState() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState getGameState() {
        return gameState_;
      }
      /**
       * <code>optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];</code>
       */
      public Builder setGameState(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00080000;
        gameState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_GameState game_state = 22 [default = DOTA_GAMERULES_STATE_INIT];</code>
       */
      public Builder clearGameState() {
        bitField0_ = (bitField0_ & ~0x00080000);
        gameState_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_GameState.DOTA_GAMERULES_STATE_INIT;
        onChanged();
        return this;
      }

      // optional uint32 num_spectators = 23;
      private int numSpectators_ ;
      /**
       * <code>optional uint32 num_spectators = 23;</code>
       */
      public boolean hasNumSpectators() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint32 num_spectators = 23;</code>
       */
      public int getNumSpectators() {
        return numSpectators_;
      }
      /**
       * <code>optional uint32 num_spectators = 23;</code>
       */
      public Builder setNumSpectators(int value) {
        bitField0_ |= 0x00100000;
        numSpectators_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_spectators = 23;</code>
       */
      public Builder clearNumSpectators() {
        bitField0_ = (bitField0_ & ~0x00100000);
        numSpectators_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 matchgroup = 25;
      private int matchgroup_ ;
      /**
       * <code>optional uint32 matchgroup = 25;</code>
       */
      public boolean hasMatchgroup() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 matchgroup = 25;</code>
       */
      public int getMatchgroup() {
        return matchgroup_;
      }
      /**
       * <code>optional uint32 matchgroup = 25;</code>
       */
      public Builder setMatchgroup(int value) {
        bitField0_ |= 0x00200000;
        matchgroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 matchgroup = 25;</code>
       */
      public Builder clearMatchgroup() {
        bitField0_ = (bitField0_ & ~0x00200000);
        matchgroup_ = 0;
        onChanged();
        return this;
      }

      // optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK cmPick_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK.DOTA_CM_RANDOM;
      /**
       * <code>optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];</code>
       */
      public boolean hasCmPick() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK getCmPick() {
        return cmPick_;
      }
      /**
       * <code>optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];</code>
       */
      public Builder setCmPick(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00400000;
        cmPick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_CM_PICK cm_pick = 28 [default = DOTA_CM_RANDOM];</code>
       */
      public Builder clearCmPick() {
        bitField0_ = (bitField0_ & ~0x00400000);
        cmPick_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_CM_PICK.DOTA_CM_RANDOM;
        onChanged();
        return this;
      }

      // optional uint64 match_id = 30;
      private long matchId_ ;
      /**
       * <code>optional uint64 match_id = 30;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint64 match_id = 30;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint64 match_id = 30;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00800000;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_id = 30;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00800000);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      // optional bool allow_spectating = 31 [default = true];
      private boolean allowSpectating_ = true;
      /**
       * <code>optional bool allow_spectating = 31 [default = true];</code>
       */
      public boolean hasAllowSpectating() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional bool allow_spectating = 31 [default = true];</code>
       */
      public boolean getAllowSpectating() {
        return allowSpectating_;
      }
      /**
       * <code>optional bool allow_spectating = 31 [default = true];</code>
       */
      public Builder setAllowSpectating(boolean value) {
        bitField0_ |= 0x01000000;
        allowSpectating_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool allow_spectating = 31 [default = true];</code>
       */
      public Builder clearAllowSpectating() {
        bitField0_ = (bitField0_ & ~0x01000000);
        allowSpectating_ = true;
        onChanged();
        return this;
      }

      // optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty botDifficulty_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.BOT_DIFFICULTY_HARD;
      /**
       * <code>optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];</code>
       */
      public boolean hasBotDifficulty() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty getBotDifficulty() {
        return botDifficulty_;
      }
      /**
       * <code>optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];</code>
       */
      public Builder setBotDifficulty(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x02000000;
        botDifficulty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTABotDifficulty bot_difficulty = 36 [default = BOT_DIFFICULTY_HARD];</code>
       */
      public Builder clearBotDifficulty() {
        bitField0_ = (bitField0_ & ~0x02000000);
        botDifficulty_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty.BOT_DIFFICULTY_HARD;
        onChanged();
        return this;
      }

      // optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion gameVersion_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion.GAME_VERSION_CURRENT;
      /**
       * <code>optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];</code>
       */
      public boolean hasGameVersion() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion getGameVersion() {
        return gameVersion_;
      }
      /**
       * <code>optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];</code>
       */
      public Builder setGameVersion(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x04000000;
        gameVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTAGameVersion game_version = 37 [default = GAME_VERSION_CURRENT];</code>
       */
      public Builder clearGameVersion() {
        bitField0_ = (bitField0_ & ~0x04000000);
        gameVersion_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTAGameVersion.GAME_VERSION_CURRENT;
        onChanged();
        return this;
      }

      // repeated .CLobbyTimedRewardDetails timed_reward_details = 38;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails> timedRewardDetails_ =
        java.util.Collections.emptyList();
      private void ensureTimedRewardDetailsIsMutable() {
        if (!((bitField0_ & 0x08000000) == 0x08000000)) {
          timedRewardDetails_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails>(timedRewardDetails_);
          bitField0_ |= 0x08000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetailsOrBuilder> timedRewardDetailsBuilder_;

      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails> getTimedRewardDetailsList() {
        if (timedRewardDetailsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(timedRewardDetails_);
        } else {
          return timedRewardDetailsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public int getTimedRewardDetailsCount() {
        if (timedRewardDetailsBuilder_ == null) {
          return timedRewardDetails_.size();
        } else {
          return timedRewardDetailsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails getTimedRewardDetails(int index) {
        if (timedRewardDetailsBuilder_ == null) {
          return timedRewardDetails_.get(index);
        } else {
          return timedRewardDetailsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public Builder setTimedRewardDetails(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails value) {
        if (timedRewardDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimedRewardDetailsIsMutable();
          timedRewardDetails_.set(index, value);
          onChanged();
        } else {
          timedRewardDetailsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public Builder setTimedRewardDetails(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder builderForValue) {
        if (timedRewardDetailsBuilder_ == null) {
          ensureTimedRewardDetailsIsMutable();
          timedRewardDetails_.set(index, builderForValue.build());
          onChanged();
        } else {
          timedRewardDetailsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public Builder addTimedRewardDetails(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails value) {
        if (timedRewardDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimedRewardDetailsIsMutable();
          timedRewardDetails_.add(value);
          onChanged();
        } else {
          timedRewardDetailsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public Builder addTimedRewardDetails(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails value) {
        if (timedRewardDetailsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimedRewardDetailsIsMutable();
          timedRewardDetails_.add(index, value);
          onChanged();
        } else {
          timedRewardDetailsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public Builder addTimedRewardDetails(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder builderForValue) {
        if (timedRewardDetailsBuilder_ == null) {
          ensureTimedRewardDetailsIsMutable();
          timedRewardDetails_.add(builderForValue.build());
          onChanged();
        } else {
          timedRewardDetailsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public Builder addTimedRewardDetails(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder builderForValue) {
        if (timedRewardDetailsBuilder_ == null) {
          ensureTimedRewardDetailsIsMutable();
          timedRewardDetails_.add(index, builderForValue.build());
          onChanged();
        } else {
          timedRewardDetailsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public Builder addAllTimedRewardDetails(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails> values) {
        if (timedRewardDetailsBuilder_ == null) {
          ensureTimedRewardDetailsIsMutable();
          super.addAll(values, timedRewardDetails_);
          onChanged();
        } else {
          timedRewardDetailsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public Builder clearTimedRewardDetails() {
        if (timedRewardDetailsBuilder_ == null) {
          timedRewardDetails_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x08000000);
          onChanged();
        } else {
          timedRewardDetailsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public Builder removeTimedRewardDetails(int index) {
        if (timedRewardDetailsBuilder_ == null) {
          ensureTimedRewardDetailsIsMutable();
          timedRewardDetails_.remove(index);
          onChanged();
        } else {
          timedRewardDetailsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder getTimedRewardDetailsBuilder(
          int index) {
        return getTimedRewardDetailsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetailsOrBuilder getTimedRewardDetailsOrBuilder(
          int index) {
        if (timedRewardDetailsBuilder_ == null) {
          return timedRewardDetails_.get(index);  } else {
          return timedRewardDetailsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetailsOrBuilder> 
           getTimedRewardDetailsOrBuilderList() {
        if (timedRewardDetailsBuilder_ != null) {
          return timedRewardDetailsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(timedRewardDetails_);
        }
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder addTimedRewardDetailsBuilder() {
        return getTimedRewardDetailsFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder addTimedRewardDetailsBuilder(
          int index) {
        return getTimedRewardDetailsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CLobbyTimedRewardDetails timed_reward_details = 38;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder> 
           getTimedRewardDetailsBuilderList() {
        return getTimedRewardDetailsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetailsOrBuilder> 
          getTimedRewardDetailsFieldBuilder() {
        if (timedRewardDetailsBuilder_ == null) {
          timedRewardDetailsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyTimedRewardDetailsOrBuilder>(
                  timedRewardDetails_,
                  ((bitField0_ & 0x08000000) == 0x08000000),
                  getParentForChildren(),
                  isClean());
          timedRewardDetails_ = null;
        }
        return timedRewardDetailsBuilder_;
      }

      // optional string pass_key = 39;
      private java.lang.Object passKey_ = "";
      /**
       * <code>optional string pass_key = 39;</code>
       */
      public boolean hasPassKey() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional string pass_key = 39;</code>
       */
      public java.lang.String getPassKey() {
        java.lang.Object ref = passKey_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          passKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pass_key = 39;</code>
       */
      public com.google.protobuf.ByteString
          getPassKeyBytes() {
        java.lang.Object ref = passKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          passKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pass_key = 39;</code>
       */
      public Builder setPassKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x10000000;
        passKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pass_key = 39;</code>
       */
      public Builder clearPassKey() {
        bitField0_ = (bitField0_ & ~0x10000000);
        passKey_ = getDefaultInstance().getPassKey();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pass_key = 39;</code>
       */
      public Builder setPassKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x10000000;
        passKey_ = value;
        onChanged();
        return this;
      }

      // repeated .DOTABotDifficulty bot_slot_difficulty = 41;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty> botSlotDifficulty_ =
        java.util.Collections.emptyList();
      private void ensureBotSlotDifficultyIsMutable() {
        if (!((bitField0_ & 0x20000000) == 0x20000000)) {
          botSlotDifficulty_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty>(botSlotDifficulty_);
          bitField0_ |= 0x20000000;
        }
      }
      /**
       * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty> getBotSlotDifficultyList() {
        return java.util.Collections.unmodifiableList(botSlotDifficulty_);
      }
      /**
       * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
       */
      public int getBotSlotDifficultyCount() {
        return botSlotDifficulty_.size();
      }
      /**
       * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty getBotSlotDifficulty(int index) {
        return botSlotDifficulty_.get(index);
      }
      /**
       * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
       */
      public Builder setBotSlotDifficulty(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBotSlotDifficultyIsMutable();
        botSlotDifficulty_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
       */
      public Builder addBotSlotDifficulty(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBotSlotDifficultyIsMutable();
        botSlotDifficulty_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
       */
      public Builder addAllBotSlotDifficulty(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTABotDifficulty> values) {
        ensureBotSlotDifficultyIsMutable();
        super.addAll(values, botSlotDifficulty_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .DOTABotDifficulty bot_slot_difficulty = 41;</code>
       */
      public Builder clearBotSlotDifficulty() {
        botSlotDifficulty_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x20000000);
        onChanged();
        return this;
      }

      // optional uint32 leagueid = 42;
      private int leagueid_ ;
      /**
       * <code>optional uint32 leagueid = 42;</code>
       */
      public boolean hasLeagueid() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional uint32 leagueid = 42;</code>
       */
      public int getLeagueid() {
        return leagueid_;
      }
      /**
       * <code>optional uint32 leagueid = 42;</code>
       */
      public Builder setLeagueid(int value) {
        bitField0_ |= 0x40000000;
        leagueid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 leagueid = 42;</code>
       */
      public Builder clearLeagueid() {
        bitField0_ = (bitField0_ & ~0x40000000);
        leagueid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 penalty_level_radiant = 43 [default = 0];
      private int penaltyLevelRadiant_ ;
      /**
       * <code>optional uint32 penalty_level_radiant = 43 [default = 0];</code>
       */
      public boolean hasPenaltyLevelRadiant() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional uint32 penalty_level_radiant = 43 [default = 0];</code>
       */
      public int getPenaltyLevelRadiant() {
        return penaltyLevelRadiant_;
      }
      /**
       * <code>optional uint32 penalty_level_radiant = 43 [default = 0];</code>
       */
      public Builder setPenaltyLevelRadiant(int value) {
        bitField0_ |= 0x80000000;
        penaltyLevelRadiant_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 penalty_level_radiant = 43 [default = 0];</code>
       */
      public Builder clearPenaltyLevelRadiant() {
        bitField0_ = (bitField0_ & ~0x80000000);
        penaltyLevelRadiant_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 penalty_level_dire = 44 [default = 0];
      private int penaltyLevelDire_ ;
      /**
       * <code>optional uint32 penalty_level_dire = 44 [default = 0];</code>
       */
      public boolean hasPenaltyLevelDire() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 penalty_level_dire = 44 [default = 0];</code>
       */
      public int getPenaltyLevelDire() {
        return penaltyLevelDire_;
      }
      /**
       * <code>optional uint32 penalty_level_dire = 44 [default = 0];</code>
       */
      public Builder setPenaltyLevelDire(int value) {
        bitField1_ |= 0x00000001;
        penaltyLevelDire_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 penalty_level_dire = 44 [default = 0];</code>
       */
      public Builder clearPenaltyLevelDire() {
        bitField1_ = (bitField1_ & ~0x00000001);
        penaltyLevelDire_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 load_game_id = 45;
      private int loadGameId_ ;
      /**
       * <code>optional uint32 load_game_id = 45;</code>
       */
      public boolean hasLoadGameId() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 load_game_id = 45;</code>
       */
      public int getLoadGameId() {
        return loadGameId_;
      }
      /**
       * <code>optional uint32 load_game_id = 45;</code>
       */
      public Builder setLoadGameId(int value) {
        bitField1_ |= 0x00000002;
        loadGameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 load_game_id = 45;</code>
       */
      public Builder clearLoadGameId() {
        bitField1_ = (bitField1_ & ~0x00000002);
        loadGameId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 series_type = 46;
      private int seriesType_ ;
      /**
       * <code>optional uint32 series_type = 46;</code>
       */
      public boolean hasSeriesType() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 series_type = 46;</code>
       */
      public int getSeriesType() {
        return seriesType_;
      }
      /**
       * <code>optional uint32 series_type = 46;</code>
       */
      public Builder setSeriesType(int value) {
        bitField1_ |= 0x00000004;
        seriesType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 series_type = 46;</code>
       */
      public Builder clearSeriesType() {
        bitField1_ = (bitField1_ & ~0x00000004);
        seriesType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 radiant_series_wins = 47;
      private int radiantSeriesWins_ ;
      /**
       * <code>optional uint32 radiant_series_wins = 47;</code>
       */
      public boolean hasRadiantSeriesWins() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 radiant_series_wins = 47;</code>
       */
      public int getRadiantSeriesWins() {
        return radiantSeriesWins_;
      }
      /**
       * <code>optional uint32 radiant_series_wins = 47;</code>
       */
      public Builder setRadiantSeriesWins(int value) {
        bitField1_ |= 0x00000008;
        radiantSeriesWins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 radiant_series_wins = 47;</code>
       */
      public Builder clearRadiantSeriesWins() {
        bitField1_ = (bitField1_ & ~0x00000008);
        radiantSeriesWins_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 dire_series_wins = 48;
      private int direSeriesWins_ ;
      /**
       * <code>optional uint32 dire_series_wins = 48;</code>
       */
      public boolean hasDireSeriesWins() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 dire_series_wins = 48;</code>
       */
      public int getDireSeriesWins() {
        return direSeriesWins_;
      }
      /**
       * <code>optional uint32 dire_series_wins = 48;</code>
       */
      public Builder setDireSeriesWins(int value) {
        bitField1_ |= 0x00000010;
        direSeriesWins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dire_series_wins = 48;</code>
       */
      public Builder clearDireSeriesWins() {
        bitField1_ = (bitField1_ & ~0x00000010);
        direSeriesWins_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 loot_generated = 49;
      private int lootGenerated_ ;
      /**
       * <code>optional uint32 loot_generated = 49;</code>
       */
      public boolean hasLootGenerated() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 loot_generated = 49;</code>
       */
      public int getLootGenerated() {
        return lootGenerated_;
      }
      /**
       * <code>optional uint32 loot_generated = 49;</code>
       */
      public Builder setLootGenerated(int value) {
        bitField1_ |= 0x00000020;
        lootGenerated_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 loot_generated = 49;</code>
       */
      public Builder clearLootGenerated() {
        bitField1_ = (bitField1_ & ~0x00000020);
        lootGenerated_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 loot_awarded = 50;
      private int lootAwarded_ ;
      /**
       * <code>optional uint32 loot_awarded = 50;</code>
       */
      public boolean hasLootAwarded() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 loot_awarded = 50;</code>
       */
      public int getLootAwarded() {
        return lootAwarded_;
      }
      /**
       * <code>optional uint32 loot_awarded = 50;</code>
       */
      public Builder setLootAwarded(int value) {
        bitField1_ |= 0x00000040;
        lootAwarded_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 loot_awarded = 50;</code>
       */
      public Builder clearLootAwarded() {
        bitField1_ = (bitField1_ & ~0x00000040);
        lootAwarded_ = 0;
        onChanged();
        return this;
      }

      // optional bool allchat = 51 [default = false];
      private boolean allchat_ ;
      /**
       * <code>optional bool allchat = 51 [default = false];</code>
       */
      public boolean hasAllchat() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool allchat = 51 [default = false];</code>
       */
      public boolean getAllchat() {
        return allchat_;
      }
      /**
       * <code>optional bool allchat = 51 [default = false];</code>
       */
      public Builder setAllchat(boolean value) {
        bitField1_ |= 0x00000080;
        allchat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool allchat = 51 [default = false];</code>
       */
      public Builder clearAllchat() {
        bitField1_ = (bitField1_ & ~0x00000080);
        allchat_ = false;
        onChanged();
        return this;
      }

      // optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay dotaTvDelay_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay.LobbyDotaTV_10;
      /**
       * <code>optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];</code>
       */
      public boolean hasDotaTvDelay() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay getDotaTvDelay() {
        return dotaTvDelay_;
      }
      /**
       * <code>optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];</code>
       */
      public Builder setDotaTvDelay(skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField1_ |= 0x00000100;
        dotaTvDelay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .LobbyDotaTVDelay dota_tv_delay = 53 [default = LobbyDotaTV_10];</code>
       */
      public Builder clearDotaTvDelay() {
        bitField1_ = (bitField1_ & ~0x00000100);
        dotaTvDelay_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.LobbyDotaTVDelay.LobbyDotaTV_10;
        onChanged();
        return this;
      }

      // optional string custom_game_mode = 54;
      private java.lang.Object customGameMode_ = "";
      /**
       * <code>optional string custom_game_mode = 54;</code>
       */
      public boolean hasCustomGameMode() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string custom_game_mode = 54;</code>
       */
      public java.lang.String getCustomGameMode() {
        java.lang.Object ref = customGameMode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          customGameMode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string custom_game_mode = 54;</code>
       */
      public com.google.protobuf.ByteString
          getCustomGameModeBytes() {
        java.lang.Object ref = customGameMode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          customGameMode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string custom_game_mode = 54;</code>
       */
      public Builder setCustomGameMode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000200;
        customGameMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string custom_game_mode = 54;</code>
       */
      public Builder clearCustomGameMode() {
        bitField1_ = (bitField1_ & ~0x00000200);
        customGameMode_ = getDefaultInstance().getCustomGameMode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string custom_game_mode = 54;</code>
       */
      public Builder setCustomGameModeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000200;
        customGameMode_ = value;
        onChanged();
        return this;
      }

      // optional string custom_map_name = 55;
      private java.lang.Object customMapName_ = "";
      /**
       * <code>optional string custom_map_name = 55;</code>
       */
      public boolean hasCustomMapName() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string custom_map_name = 55;</code>
       */
      public java.lang.String getCustomMapName() {
        java.lang.Object ref = customMapName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          customMapName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string custom_map_name = 55;</code>
       */
      public com.google.protobuf.ByteString
          getCustomMapNameBytes() {
        java.lang.Object ref = customMapName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          customMapName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string custom_map_name = 55;</code>
       */
      public Builder setCustomMapName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000400;
        customMapName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string custom_map_name = 55;</code>
       */
      public Builder clearCustomMapName() {
        bitField1_ = (bitField1_ & ~0x00000400);
        customMapName_ = getDefaultInstance().getCustomMapName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string custom_map_name = 55;</code>
       */
      public Builder setCustomMapNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000400;
        customMapName_ = value;
        onChanged();
        return this;
      }

      // optional uint32 custom_difficulty = 56;
      private int customDifficulty_ ;
      /**
       * <code>optional uint32 custom_difficulty = 56;</code>
       */
      public boolean hasCustomDifficulty() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 custom_difficulty = 56;</code>
       */
      public int getCustomDifficulty() {
        return customDifficulty_;
      }
      /**
       * <code>optional uint32 custom_difficulty = 56;</code>
       */
      public Builder setCustomDifficulty(int value) {
        bitField1_ |= 0x00000800;
        customDifficulty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 custom_difficulty = 56;</code>
       */
      public Builder clearCustomDifficulty() {
        bitField1_ = (bitField1_ & ~0x00000800);
        customDifficulty_ = 0;
        onChanged();
        return this;
      }

      // optional bool lan = 57;
      private boolean lan_ ;
      /**
       * <code>optional bool lan = 57;</code>
       */
      public boolean hasLan() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool lan = 57;</code>
       */
      public boolean getLan() {
        return lan_;
      }
      /**
       * <code>optional bool lan = 57;</code>
       */
      public Builder setLan(boolean value) {
        bitField1_ |= 0x00001000;
        lan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool lan = 57;</code>
       */
      public Builder clearLan() {
        bitField1_ = (bitField1_ & ~0x00001000);
        lan_ = false;
        onChanged();
        return this;
      }

      // repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo> broadcastChannelInfo_ =
        java.util.Collections.emptyList();
      private void ensureBroadcastChannelInfoIsMutable() {
        if (!((bitField1_ & 0x00002000) == 0x00002000)) {
          broadcastChannelInfo_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo>(broadcastChannelInfo_);
          bitField1_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfoOrBuilder> broadcastChannelInfoBuilder_;

      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo> getBroadcastChannelInfoList() {
        if (broadcastChannelInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(broadcastChannelInfo_);
        } else {
          return broadcastChannelInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public int getBroadcastChannelInfoCount() {
        if (broadcastChannelInfoBuilder_ == null) {
          return broadcastChannelInfo_.size();
        } else {
          return broadcastChannelInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo getBroadcastChannelInfo(int index) {
        if (broadcastChannelInfoBuilder_ == null) {
          return broadcastChannelInfo_.get(index);
        } else {
          return broadcastChannelInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public Builder setBroadcastChannelInfo(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo value) {
        if (broadcastChannelInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBroadcastChannelInfoIsMutable();
          broadcastChannelInfo_.set(index, value);
          onChanged();
        } else {
          broadcastChannelInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public Builder setBroadcastChannelInfo(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder builderForValue) {
        if (broadcastChannelInfoBuilder_ == null) {
          ensureBroadcastChannelInfoIsMutable();
          broadcastChannelInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          broadcastChannelInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public Builder addBroadcastChannelInfo(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo value) {
        if (broadcastChannelInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBroadcastChannelInfoIsMutable();
          broadcastChannelInfo_.add(value);
          onChanged();
        } else {
          broadcastChannelInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public Builder addBroadcastChannelInfo(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo value) {
        if (broadcastChannelInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBroadcastChannelInfoIsMutable();
          broadcastChannelInfo_.add(index, value);
          onChanged();
        } else {
          broadcastChannelInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public Builder addBroadcastChannelInfo(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder builderForValue) {
        if (broadcastChannelInfoBuilder_ == null) {
          ensureBroadcastChannelInfoIsMutable();
          broadcastChannelInfo_.add(builderForValue.build());
          onChanged();
        } else {
          broadcastChannelInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public Builder addBroadcastChannelInfo(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder builderForValue) {
        if (broadcastChannelInfoBuilder_ == null) {
          ensureBroadcastChannelInfoIsMutable();
          broadcastChannelInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          broadcastChannelInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public Builder addAllBroadcastChannelInfo(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo> values) {
        if (broadcastChannelInfoBuilder_ == null) {
          ensureBroadcastChannelInfoIsMutable();
          super.addAll(values, broadcastChannelInfo_);
          onChanged();
        } else {
          broadcastChannelInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public Builder clearBroadcastChannelInfo() {
        if (broadcastChannelInfoBuilder_ == null) {
          broadcastChannelInfo_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00002000);
          onChanged();
        } else {
          broadcastChannelInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public Builder removeBroadcastChannelInfo(int index) {
        if (broadcastChannelInfoBuilder_ == null) {
          ensureBroadcastChannelInfoIsMutable();
          broadcastChannelInfo_.remove(index);
          onChanged();
        } else {
          broadcastChannelInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder getBroadcastChannelInfoBuilder(
          int index) {
        return getBroadcastChannelInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfoOrBuilder getBroadcastChannelInfoOrBuilder(
          int index) {
        if (broadcastChannelInfoBuilder_ == null) {
          return broadcastChannelInfo_.get(index);  } else {
          return broadcastChannelInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfoOrBuilder> 
           getBroadcastChannelInfoOrBuilderList() {
        if (broadcastChannelInfoBuilder_ != null) {
          return broadcastChannelInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(broadcastChannelInfo_);
        }
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder addBroadcastChannelInfoBuilder() {
        return getBroadcastChannelInfoFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder addBroadcastChannelInfoBuilder(
          int index) {
        return getBroadcastChannelInfoFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .CLobbyBroadcastChannelInfo broadcast_channel_info = 58;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder> 
           getBroadcastChannelInfoBuilderList() {
        return getBroadcastChannelInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfoOrBuilder> 
          getBroadcastChannelInfoFieldBuilder() {
        if (broadcastChannelInfoBuilder_ == null) {
          broadcastChannelInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfo.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CLobbyBroadcastChannelInfoOrBuilder>(
                  broadcastChannelInfo_,
                  ((bitField1_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          broadcastChannelInfo_ = null;
        }
        return broadcastChannelInfoBuilder_;
      }

      // optional uint32 first_leaver_accountid = 59;
      private int firstLeaverAccountid_ ;
      /**
       * <code>optional uint32 first_leaver_accountid = 59;</code>
       */
      public boolean hasFirstLeaverAccountid() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 first_leaver_accountid = 59;</code>
       */
      public int getFirstLeaverAccountid() {
        return firstLeaverAccountid_;
      }
      /**
       * <code>optional uint32 first_leaver_accountid = 59;</code>
       */
      public Builder setFirstLeaverAccountid(int value) {
        bitField1_ |= 0x00004000;
        firstLeaverAccountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 first_leaver_accountid = 59;</code>
       */
      public Builder clearFirstLeaverAccountid() {
        bitField1_ = (bitField1_ & ~0x00004000);
        firstLeaverAccountid_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 series_id = 60;
      private int seriesId_ ;
      /**
       * <code>optional uint32 series_id = 60;</code>
       */
      public boolean hasSeriesId() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 series_id = 60;</code>
       */
      public int getSeriesId() {
        return seriesId_;
      }
      /**
       * <code>optional uint32 series_id = 60;</code>
       */
      public Builder setSeriesId(int value) {
        bitField1_ |= 0x00008000;
        seriesId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 series_id = 60;</code>
       */
      public Builder clearSeriesId() {
        bitField1_ = (bitField1_ & ~0x00008000);
        seriesId_ = 0;
        onChanged();
        return this;
      }

      // optional bool low_priority = 61;
      private boolean lowPriority_ ;
      /**
       * <code>optional bool low_priority = 61;</code>
       */
      public boolean hasLowPriority() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bool low_priority = 61;</code>
       */
      public boolean getLowPriority() {
        return lowPriority_;
      }
      /**
       * <code>optional bool low_priority = 61;</code>
       */
      public Builder setLowPriority(boolean value) {
        bitField1_ |= 0x00010000;
        lowPriority_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool low_priority = 61;</code>
       */
      public Builder clearLowPriority() {
        bitField1_ = (bitField1_ & ~0x00010000);
        lowPriority_ = false;
        onChanged();
        return this;
      }

      // repeated .CSODOTALobby.CExtraMsg extra_messages = 62;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg> extraMessages_ =
        java.util.Collections.emptyList();
      private void ensureExtraMessagesIsMutable() {
        if (!((bitField1_ & 0x00020000) == 0x00020000)) {
          extraMessages_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg>(extraMessages_);
          bitField1_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsgOrBuilder> extraMessagesBuilder_;

      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg> getExtraMessagesList() {
        if (extraMessagesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(extraMessages_);
        } else {
          return extraMessagesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public int getExtraMessagesCount() {
        if (extraMessagesBuilder_ == null) {
          return extraMessages_.size();
        } else {
          return extraMessagesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg getExtraMessages(int index) {
        if (extraMessagesBuilder_ == null) {
          return extraMessages_.get(index);
        } else {
          return extraMessagesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public Builder setExtraMessages(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg value) {
        if (extraMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtraMessagesIsMutable();
          extraMessages_.set(index, value);
          onChanged();
        } else {
          extraMessagesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public Builder setExtraMessages(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder builderForValue) {
        if (extraMessagesBuilder_ == null) {
          ensureExtraMessagesIsMutable();
          extraMessages_.set(index, builderForValue.build());
          onChanged();
        } else {
          extraMessagesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public Builder addExtraMessages(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg value) {
        if (extraMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtraMessagesIsMutable();
          extraMessages_.add(value);
          onChanged();
        } else {
          extraMessagesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public Builder addExtraMessages(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg value) {
        if (extraMessagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtraMessagesIsMutable();
          extraMessages_.add(index, value);
          onChanged();
        } else {
          extraMessagesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public Builder addExtraMessages(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder builderForValue) {
        if (extraMessagesBuilder_ == null) {
          ensureExtraMessagesIsMutable();
          extraMessages_.add(builderForValue.build());
          onChanged();
        } else {
          extraMessagesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public Builder addExtraMessages(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder builderForValue) {
        if (extraMessagesBuilder_ == null) {
          ensureExtraMessagesIsMutable();
          extraMessages_.add(index, builderForValue.build());
          onChanged();
        } else {
          extraMessagesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public Builder addAllExtraMessages(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg> values) {
        if (extraMessagesBuilder_ == null) {
          ensureExtraMessagesIsMutable();
          super.addAll(values, extraMessages_);
          onChanged();
        } else {
          extraMessagesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public Builder clearExtraMessages() {
        if (extraMessagesBuilder_ == null) {
          extraMessages_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00020000);
          onChanged();
        } else {
          extraMessagesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public Builder removeExtraMessages(int index) {
        if (extraMessagesBuilder_ == null) {
          ensureExtraMessagesIsMutable();
          extraMessages_.remove(index);
          onChanged();
        } else {
          extraMessagesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder getExtraMessagesBuilder(
          int index) {
        return getExtraMessagesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsgOrBuilder getExtraMessagesOrBuilder(
          int index) {
        if (extraMessagesBuilder_ == null) {
          return extraMessages_.get(index);  } else {
          return extraMessagesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsgOrBuilder> 
           getExtraMessagesOrBuilderList() {
        if (extraMessagesBuilder_ != null) {
          return extraMessagesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(extraMessages_);
        }
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder addExtraMessagesBuilder() {
        return getExtraMessagesFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder addExtraMessagesBuilder(
          int index) {
        return getExtraMessagesFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .CSODOTALobby.CExtraMsg extra_messages = 62;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder> 
           getExtraMessagesBuilderList() {
        return getExtraMessagesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsgOrBuilder> 
          getExtraMessagesFieldBuilder() {
        if (extraMessagesBuilder_ == null) {
          extraMessagesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsg.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTALobby.CExtraMsgOrBuilder>(
                  extraMessages_,
                  ((bitField1_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          extraMessages_ = null;
        }
        return extraMessagesBuilder_;
      }

      // optional .CDOTASaveGame save_game = 63;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame saveGame_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGameOrBuilder> saveGameBuilder_;
      /**
       * <code>optional .CDOTASaveGame save_game = 63;</code>
       */
      public boolean hasSaveGame() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .CDOTASaveGame save_game = 63;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame getSaveGame() {
        if (saveGameBuilder_ == null) {
          return saveGame_;
        } else {
          return saveGameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDOTASaveGame save_game = 63;</code>
       */
      public Builder setSaveGame(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame value) {
        if (saveGameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          saveGame_ = value;
          onChanged();
        } else {
          saveGameBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .CDOTASaveGame save_game = 63;</code>
       */
      public Builder setSaveGame(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Builder builderForValue) {
        if (saveGameBuilder_ == null) {
          saveGame_ = builderForValue.build();
          onChanged();
        } else {
          saveGameBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .CDOTASaveGame save_game = 63;</code>
       */
      public Builder mergeSaveGame(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame value) {
        if (saveGameBuilder_ == null) {
          if (((bitField1_ & 0x00040000) == 0x00040000) &&
              saveGame_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.getDefaultInstance()) {
            saveGame_ =
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.newBuilder(saveGame_).mergeFrom(value).buildPartial();
          } else {
            saveGame_ = value;
          }
          onChanged();
        } else {
          saveGameBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .CDOTASaveGame save_game = 63;</code>
       */
      public Builder clearSaveGame() {
        if (saveGameBuilder_ == null) {
          saveGame_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.getDefaultInstance();
          onChanged();
        } else {
          saveGameBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .CDOTASaveGame save_game = 63;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Builder getSaveGameBuilder() {
        bitField1_ |= 0x00040000;
        onChanged();
        return getSaveGameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDOTASaveGame save_game = 63;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGameOrBuilder getSaveGameOrBuilder() {
        if (saveGameBuilder_ != null) {
          return saveGameBuilder_.getMessageOrBuilder();
        } else {
          return saveGame_;
        }
      }
      /**
       * <code>optional .CDOTASaveGame save_game = 63;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGameOrBuilder> 
          getSaveGameFieldBuilder() {
        if (saveGameBuilder_ == null) {
          saveGameBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGame.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CDOTASaveGameOrBuilder>(
                  saveGame_,
                  getParentForChildren(),
                  isClean());
          saveGame_ = null;
        }
        return saveGameBuilder_;
      }

      // optional bool first_blood_happened = 65;
      private boolean firstBloodHappened_ ;
      /**
       * <code>optional bool first_blood_happened = 65;</code>
       */
      public boolean hasFirstBloodHappened() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool first_blood_happened = 65;</code>
       */
      public boolean getFirstBloodHappened() {
        return firstBloodHappened_;
      }
      /**
       * <code>optional bool first_blood_happened = 65;</code>
       */
      public Builder setFirstBloodHappened(boolean value) {
        bitField1_ |= 0x00080000;
        firstBloodHappened_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool first_blood_happened = 65;</code>
       */
      public Builder clearFirstBloodHappened() {
        bitField1_ = (bitField1_ & ~0x00080000);
        firstBloodHappened_ = false;
        onChanged();
        return this;
      }

      // optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome matchOutcome_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome.k_EMatchOutcome_Unknown;
      /**
       * <code>optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];</code>
       */
      public boolean hasMatchOutcome() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome getMatchOutcome() {
        return matchOutcome_;
      }
      /**
       * <code>optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];</code>
       */
      public Builder setMatchOutcome(skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField1_ |= 0x00100000;
        matchOutcome_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EMatchOutcome match_outcome = 70 [default = k_EMatchOutcome_Unknown];</code>
       */
      public Builder clearMatchOutcome() {
        bitField1_ = (bitField1_ & ~0x00100000);
        matchOutcome_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.EMatchOutcome.k_EMatchOutcome_Unknown;
        onChanged();
        return this;
      }

      // optional bool mass_disconnect = 67;
      private boolean massDisconnect_ ;
      /**
       * <code>optional bool mass_disconnect = 67;</code>
       */
      public boolean hasMassDisconnect() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool mass_disconnect = 67;</code>
       */
      public boolean getMassDisconnect() {
        return massDisconnect_;
      }
      /**
       * <code>optional bool mass_disconnect = 67;</code>
       */
      public Builder setMassDisconnect(boolean value) {
        bitField1_ |= 0x00200000;
        massDisconnect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool mass_disconnect = 67;</code>
       */
      public Builder clearMassDisconnect() {
        bitField1_ = (bitField1_ & ~0x00200000);
        massDisconnect_ = false;
        onChanged();
        return this;
      }

      // optional uint64 custom_game_id = 68;
      private long customGameId_ ;
      /**
       * <code>optional uint64 custom_game_id = 68;</code>
       */
      public boolean hasCustomGameId() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint64 custom_game_id = 68;</code>
       */
      public long getCustomGameId() {
        return customGameId_;
      }
      /**
       * <code>optional uint64 custom_game_id = 68;</code>
       */
      public Builder setCustomGameId(long value) {
        bitField1_ |= 0x00400000;
        customGameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 custom_game_id = 68;</code>
       */
      public Builder clearCustomGameId() {
        bitField1_ = (bitField1_ & ~0x00400000);
        customGameId_ = 0L;
        onChanged();
        return this;
      }

      // repeated .EIngameEvent active_ingame_events = 69;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> activeIngameEvents_ =
        java.util.Collections.emptyList();
      private void ensureActiveIngameEventsIsMutable() {
        if (!((bitField1_ & 0x00800000) == 0x00800000)) {
          activeIngameEvents_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent>(activeIngameEvents_);
          bitField1_ |= 0x00800000;
        }
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> getActiveIngameEventsList() {
        return java.util.Collections.unmodifiableList(activeIngameEvents_);
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
       */
      public int getActiveIngameEventsCount() {
        return activeIngameEvents_.size();
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent getActiveIngameEvents(int index) {
        return activeIngameEvents_.get(index);
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
       */
      public Builder setActiveIngameEvents(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActiveIngameEventsIsMutable();
        activeIngameEvents_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
       */
      public Builder addActiveIngameEvents(skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureActiveIngameEventsIsMutable();
        activeIngameEvents_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
       */
      public Builder addAllActiveIngameEvents(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.EIngameEvent> values) {
        ensureActiveIngameEventsIsMutable();
        super.addAll(values, activeIngameEvents_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .EIngameEvent active_ingame_events = 69;</code>
       */
      public Builder clearActiveIngameEvents() {
        activeIngameEvents_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00800000);
        onChanged();
        return this;
      }

      // optional uint32 custom_min_players = 71;
      private int customMinPlayers_ ;
      /**
       * <code>optional uint32 custom_min_players = 71;</code>
       */
      public boolean hasCustomMinPlayers() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional uint32 custom_min_players = 71;</code>
       */
      public int getCustomMinPlayers() {
        return customMinPlayers_;
      }
      /**
       * <code>optional uint32 custom_min_players = 71;</code>
       */
      public Builder setCustomMinPlayers(int value) {
        bitField1_ |= 0x01000000;
        customMinPlayers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 custom_min_players = 71;</code>
       */
      public Builder clearCustomMinPlayers() {
        bitField1_ = (bitField1_ & ~0x01000000);
        customMinPlayers_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 custom_max_players = 72;
      private int customMaxPlayers_ ;
      /**
       * <code>optional uint32 custom_max_players = 72;</code>
       */
      public boolean hasCustomMaxPlayers() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 custom_max_players = 72;</code>
       */
      public int getCustomMaxPlayers() {
        return customMaxPlayers_;
      }
      /**
       * <code>optional uint32 custom_max_players = 72;</code>
       */
      public Builder setCustomMaxPlayers(int value) {
        bitField1_ |= 0x02000000;
        customMaxPlayers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 custom_max_players = 72;</code>
       */
      public Builder clearCustomMaxPlayers() {
        bitField1_ = (bitField1_ & ~0x02000000);
        customMaxPlayers_ = 0;
        onChanged();
        return this;
      }

      // optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];
      private skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType partnerType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
      /**
       * <code>optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];</code>
       */
      public boolean hasPartnerType() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];</code>
       */
      public skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType getPartnerType() {
        return partnerType_;
      }
      /**
       * <code>optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];</code>
       */
      public Builder setPartnerType(skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField1_ |= 0x04000000;
        partnerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .PartnerAccountType partner_type = 73 [default = PARTNER_NONE];</code>
       */
      public Builder clearPartnerType() {
        bitField1_ = (bitField1_ & ~0x04000000);
        partnerType_ = skadistats.clarity.wire.proto.GcsdkGcmessages.PartnerAccountType.PARTNER_NONE;
        onChanged();
        return this;
      }

      // optional uint32 lan_host_ping_to_server_region = 74;
      private int lanHostPingToServerRegion_ ;
      /**
       * <code>optional uint32 lan_host_ping_to_server_region = 74;</code>
       */
      public boolean hasLanHostPingToServerRegion() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional uint32 lan_host_ping_to_server_region = 74;</code>
       */
      public int getLanHostPingToServerRegion() {
        return lanHostPingToServerRegion_;
      }
      /**
       * <code>optional uint32 lan_host_ping_to_server_region = 74;</code>
       */
      public Builder setLanHostPingToServerRegion(int value) {
        bitField1_ |= 0x08000000;
        lanHostPingToServerRegion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lan_host_ping_to_server_region = 74;</code>
       */
      public Builder clearLanHostPingToServerRegion() {
        bitField1_ = (bitField1_ & ~0x08000000);
        lanHostPingToServerRegion_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTALobby)
    }

    static {
      defaultInstance = new CSODOTALobby(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSODOTALobby)
  }

  public interface CMsgLobbyEventPointsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 event_id = 1;
    /**
     * <code>optional uint32 event_id = 1;</code>
     */
    boolean hasEventId();
    /**
     * <code>optional uint32 event_id = 1;</code>
     */
    int getEventId();

    // repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;
    /**
     * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints> 
        getAccountPointsList();
    /**
     * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints getAccountPoints(int index);
    /**
     * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
     */
    int getAccountPointsCount();
    /**
     * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPointsOrBuilder> 
        getAccountPointsOrBuilderList();
    /**
     * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPointsOrBuilder getAccountPointsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgLobbyEventPoints}
   */
  public static final class CMsgLobbyEventPoints extends
      com.google.protobuf.GeneratedMessage
      implements CMsgLobbyEventPointsOrBuilder {
    // Use CMsgLobbyEventPoints.newBuilder() to construct.
    private CMsgLobbyEventPoints(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgLobbyEventPoints(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgLobbyEventPoints defaultInstance;
    public static CMsgLobbyEventPoints getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgLobbyEventPoints getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgLobbyEventPoints(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eventId_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                accountPoints_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints>();
                mutable_bitField0_ |= 0x00000002;
              }
              accountPoints_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          accountPoints_ = java.util.Collections.unmodifiableList(accountPoints_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLobbyEventPoints_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLobbyEventPoints_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgLobbyEventPoints> PARSER =
        new com.google.protobuf.AbstractParser<CMsgLobbyEventPoints>() {
      public CMsgLobbyEventPoints parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgLobbyEventPoints(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgLobbyEventPoints> getParserForType() {
      return PARSER;
    }

    public interface AccountPointsOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 account_id = 1;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      // optional uint32 normal_points = 2;
      /**
       * <code>optional uint32 normal_points = 2;</code>
       */
      boolean hasNormalPoints();
      /**
       * <code>optional uint32 normal_points = 2;</code>
       */
      int getNormalPoints();

      // optional uint32 premium_points = 3;
      /**
       * <code>optional uint32 premium_points = 3;</code>
       */
      boolean hasPremiumPoints();
      /**
       * <code>optional uint32 premium_points = 3;</code>
       */
      int getPremiumPoints();

      // optional bool owned = 4;
      /**
       * <code>optional bool owned = 4;</code>
       */
      boolean hasOwned();
      /**
       * <code>optional bool owned = 4;</code>
       */
      boolean getOwned();
    }
    /**
     * Protobuf type {@code CMsgLobbyEventPoints.AccountPoints}
     */
    public static final class AccountPoints extends
        com.google.protobuf.GeneratedMessage
        implements AccountPointsOrBuilder {
      // Use AccountPoints.newBuilder() to construct.
      private AccountPoints(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private AccountPoints(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final AccountPoints defaultInstance;
      public static AccountPoints getDefaultInstance() {
        return defaultInstance;
      }

      public AccountPoints getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private AccountPoints(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                normalPoints_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                premiumPoints_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                owned_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLobbyEventPoints_AccountPoints_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLobbyEventPoints_AccountPoints_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder.class);
      }

      public static com.google.protobuf.Parser<AccountPoints> PARSER =
          new com.google.protobuf.AbstractParser<AccountPoints>() {
        public AccountPoints parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AccountPoints(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<AccountPoints> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 account_id = 1;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      // optional uint32 normal_points = 2;
      public static final int NORMAL_POINTS_FIELD_NUMBER = 2;
      private int normalPoints_;
      /**
       * <code>optional uint32 normal_points = 2;</code>
       */
      public boolean hasNormalPoints() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 normal_points = 2;</code>
       */
      public int getNormalPoints() {
        return normalPoints_;
      }

      // optional uint32 premium_points = 3;
      public static final int PREMIUM_POINTS_FIELD_NUMBER = 3;
      private int premiumPoints_;
      /**
       * <code>optional uint32 premium_points = 3;</code>
       */
      public boolean hasPremiumPoints() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 premium_points = 3;</code>
       */
      public int getPremiumPoints() {
        return premiumPoints_;
      }

      // optional bool owned = 4;
      public static final int OWNED_FIELD_NUMBER = 4;
      private boolean owned_;
      /**
       * <code>optional bool owned = 4;</code>
       */
      public boolean hasOwned() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool owned = 4;</code>
       */
      public boolean getOwned() {
        return owned_;
      }

      private void initFields() {
        accountId_ = 0;
        normalPoints_ = 0;
        premiumPoints_ = 0;
        owned_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, normalPoints_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, premiumPoints_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, owned_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, normalPoints_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, premiumPoints_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, owned_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgLobbyEventPoints.AccountPoints}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPointsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLobbyEventPoints_AccountPoints_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLobbyEventPoints_AccountPoints_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          normalPoints_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          premiumPoints_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          owned_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLobbyEventPoints_AccountPoints_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.normalPoints_ = normalPoints_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.premiumPoints_ = premiumPoints_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.owned_ = owned_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasNormalPoints()) {
            setNormalPoints(other.getNormalPoints());
          }
          if (other.hasPremiumPoints()) {
            setPremiumPoints(other.getPremiumPoints());
          }
          if (other.hasOwned()) {
            setOwned(other.getOwned());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 account_id = 1;
        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 normal_points = 2;
        private int normalPoints_ ;
        /**
         * <code>optional uint32 normal_points = 2;</code>
         */
        public boolean hasNormalPoints() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 normal_points = 2;</code>
         */
        public int getNormalPoints() {
          return normalPoints_;
        }
        /**
         * <code>optional uint32 normal_points = 2;</code>
         */
        public Builder setNormalPoints(int value) {
          bitField0_ |= 0x00000002;
          normalPoints_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 normal_points = 2;</code>
         */
        public Builder clearNormalPoints() {
          bitField0_ = (bitField0_ & ~0x00000002);
          normalPoints_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 premium_points = 3;
        private int premiumPoints_ ;
        /**
         * <code>optional uint32 premium_points = 3;</code>
         */
        public boolean hasPremiumPoints() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 premium_points = 3;</code>
         */
        public int getPremiumPoints() {
          return premiumPoints_;
        }
        /**
         * <code>optional uint32 premium_points = 3;</code>
         */
        public Builder setPremiumPoints(int value) {
          bitField0_ |= 0x00000004;
          premiumPoints_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 premium_points = 3;</code>
         */
        public Builder clearPremiumPoints() {
          bitField0_ = (bitField0_ & ~0x00000004);
          premiumPoints_ = 0;
          onChanged();
          return this;
        }

        // optional bool owned = 4;
        private boolean owned_ ;
        /**
         * <code>optional bool owned = 4;</code>
         */
        public boolean hasOwned() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional bool owned = 4;</code>
         */
        public boolean getOwned() {
          return owned_;
        }
        /**
         * <code>optional bool owned = 4;</code>
         */
        public Builder setOwned(boolean value) {
          bitField0_ |= 0x00000008;
          owned_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool owned = 4;</code>
         */
        public Builder clearOwned() {
          bitField0_ = (bitField0_ & ~0x00000008);
          owned_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgLobbyEventPoints.AccountPoints)
      }

      static {
        defaultInstance = new AccountPoints(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgLobbyEventPoints.AccountPoints)
    }

    private int bitField0_;
    // optional uint32 event_id = 1;
    public static final int EVENT_ID_FIELD_NUMBER = 1;
    private int eventId_;
    /**
     * <code>optional uint32 event_id = 1;</code>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 event_id = 1;</code>
     */
    public int getEventId() {
      return eventId_;
    }

    // repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;
    public static final int ACCOUNT_POINTS_FIELD_NUMBER = 2;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints> accountPoints_;
    /**
     * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints> getAccountPointsList() {
      return accountPoints_;
    }
    /**
     * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPointsOrBuilder> 
        getAccountPointsOrBuilderList() {
      return accountPoints_;
    }
    /**
     * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
     */
    public int getAccountPointsCount() {
      return accountPoints_.size();
    }
    /**
     * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints getAccountPoints(int index) {
      return accountPoints_.get(index);
    }
    /**
     * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPointsOrBuilder getAccountPointsOrBuilder(
        int index) {
      return accountPoints_.get(index);
    }

    private void initFields() {
      eventId_ = 0;
      accountPoints_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, eventId_);
      }
      for (int i = 0; i < accountPoints_.size(); i++) {
        output.writeMessage(2, accountPoints_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, eventId_);
      }
      for (int i = 0; i < accountPoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, accountPoints_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgLobbyEventPoints}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPointsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLobbyEventPoints_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLobbyEventPoints_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAccountPointsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eventId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (accountPointsBuilder_ == null) {
          accountPoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          accountPointsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLobbyEventPoints_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventId_ = eventId_;
        if (accountPointsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            accountPoints_ = java.util.Collections.unmodifiableList(accountPoints_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.accountPoints_ = accountPoints_;
        } else {
          result.accountPoints_ = accountPointsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.getDefaultInstance()) return this;
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (accountPointsBuilder_ == null) {
          if (!other.accountPoints_.isEmpty()) {
            if (accountPoints_.isEmpty()) {
              accountPoints_ = other.accountPoints_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAccountPointsIsMutable();
              accountPoints_.addAll(other.accountPoints_);
            }
            onChanged();
          }
        } else {
          if (!other.accountPoints_.isEmpty()) {
            if (accountPointsBuilder_.isEmpty()) {
              accountPointsBuilder_.dispose();
              accountPointsBuilder_ = null;
              accountPoints_ = other.accountPoints_;
              bitField0_ = (bitField0_ & ~0x00000002);
              accountPointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAccountPointsFieldBuilder() : null;
            } else {
              accountPointsBuilder_.addAllMessages(other.accountPoints_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 event_id = 1;
      private int eventId_ ;
      /**
       * <code>optional uint32 event_id = 1;</code>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 event_id = 1;</code>
       */
      public int getEventId() {
        return eventId_;
      }
      /**
       * <code>optional uint32 event_id = 1;</code>
       */
      public Builder setEventId(int value) {
        bitField0_ |= 0x00000001;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_id = 1;</code>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = 0;
        onChanged();
        return this;
      }

      // repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints> accountPoints_ =
        java.util.Collections.emptyList();
      private void ensureAccountPointsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          accountPoints_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints>(accountPoints_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPointsOrBuilder> accountPointsBuilder_;

      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints> getAccountPointsList() {
        if (accountPointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accountPoints_);
        } else {
          return accountPointsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public int getAccountPointsCount() {
        if (accountPointsBuilder_ == null) {
          return accountPoints_.size();
        } else {
          return accountPointsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints getAccountPoints(int index) {
        if (accountPointsBuilder_ == null) {
          return accountPoints_.get(index);
        } else {
          return accountPointsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public Builder setAccountPoints(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints value) {
        if (accountPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountPointsIsMutable();
          accountPoints_.set(index, value);
          onChanged();
        } else {
          accountPointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public Builder setAccountPoints(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder builderForValue) {
        if (accountPointsBuilder_ == null) {
          ensureAccountPointsIsMutable();
          accountPoints_.set(index, builderForValue.build());
          onChanged();
        } else {
          accountPointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public Builder addAccountPoints(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints value) {
        if (accountPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountPointsIsMutable();
          accountPoints_.add(value);
          onChanged();
        } else {
          accountPointsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public Builder addAccountPoints(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints value) {
        if (accountPointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountPointsIsMutable();
          accountPoints_.add(index, value);
          onChanged();
        } else {
          accountPointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public Builder addAccountPoints(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder builderForValue) {
        if (accountPointsBuilder_ == null) {
          ensureAccountPointsIsMutable();
          accountPoints_.add(builderForValue.build());
          onChanged();
        } else {
          accountPointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public Builder addAccountPoints(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder builderForValue) {
        if (accountPointsBuilder_ == null) {
          ensureAccountPointsIsMutable();
          accountPoints_.add(index, builderForValue.build());
          onChanged();
        } else {
          accountPointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public Builder addAllAccountPoints(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints> values) {
        if (accountPointsBuilder_ == null) {
          ensureAccountPointsIsMutable();
          super.addAll(values, accountPoints_);
          onChanged();
        } else {
          accountPointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public Builder clearAccountPoints() {
        if (accountPointsBuilder_ == null) {
          accountPoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          accountPointsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public Builder removeAccountPoints(int index) {
        if (accountPointsBuilder_ == null) {
          ensureAccountPointsIsMutable();
          accountPoints_.remove(index);
          onChanged();
        } else {
          accountPointsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder getAccountPointsBuilder(
          int index) {
        return getAccountPointsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPointsOrBuilder getAccountPointsOrBuilder(
          int index) {
        if (accountPointsBuilder_ == null) {
          return accountPoints_.get(index);  } else {
          return accountPointsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPointsOrBuilder> 
           getAccountPointsOrBuilderList() {
        if (accountPointsBuilder_ != null) {
          return accountPointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accountPoints_);
        }
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder addAccountPointsBuilder() {
        return getAccountPointsFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder addAccountPointsBuilder(
          int index) {
        return getAccountPointsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgLobbyEventPoints.AccountPoints account_points = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder> 
           getAccountPointsBuilderList() {
        return getAccountPointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPointsOrBuilder> 
          getAccountPointsFieldBuilder() {
        if (accountPointsBuilder_ == null) {
          accountPointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPoints.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLobbyEventPoints.AccountPointsOrBuilder>(
                  accountPoints_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          accountPoints_ = null;
        }
        return accountPointsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgLobbyEventPoints)
    }

    static {
      defaultInstance = new CMsgLobbyEventPoints(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgLobbyEventPoints)
  }

  public interface CMsgDOTAGenericResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 eresult = 1 [default = 2];
    /**
     * <code>optional uint32 eresult = 1 [default = 2];</code>
     */
    boolean hasEresult();
    /**
     * <code>optional uint32 eresult = 1 [default = 2];</code>
     */
    int getEresult();
  }
  /**
   * Protobuf type {@code CMsgDOTAGenericResult}
   */
  public static final class CMsgDOTAGenericResult extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTAGenericResultOrBuilder {
    // Use CMsgDOTAGenericResult.newBuilder() to construct.
    private CMsgDOTAGenericResult(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAGenericResult(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAGenericResult defaultInstance;
    public static CMsgDOTAGenericResult getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAGenericResult getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAGenericResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eresult_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAGenericResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAGenericResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAGenericResult> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAGenericResult>() {
      public CMsgDOTAGenericResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAGenericResult(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAGenericResult> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 eresult = 1 [default = 2];
    public static final int ERESULT_FIELD_NUMBER = 1;
    private int eresult_;
    /**
     * <code>optional uint32 eresult = 1 [default = 2];</code>
     */
    public boolean hasEresult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 eresult = 1 [default = 2];</code>
     */
    public int getEresult() {
      return eresult_;
    }

    private void initFields() {
      eresult_ = 2;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, eresult_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, eresult_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAGenericResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAGenericResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAGenericResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eresult_ = 2;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAGenericResult_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eresult_ = eresult_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult.getDefaultInstance()) return this;
        if (other.hasEresult()) {
          setEresult(other.getEresult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAGenericResult) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 eresult = 1 [default = 2];
      private int eresult_ = 2;
      /**
       * <code>optional uint32 eresult = 1 [default = 2];</code>
       */
      public boolean hasEresult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 eresult = 1 [default = 2];</code>
       */
      public int getEresult() {
        return eresult_;
      }
      /**
       * <code>optional uint32 eresult = 1 [default = 2];</code>
       */
      public Builder setEresult(int value) {
        bitField0_ |= 0x00000001;
        eresult_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 eresult = 1 [default = 2];</code>
       */
      public Builder clearEresult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eresult_ = 2;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAGenericResult)
    }

    static {
      defaultInstance = new CMsgDOTAGenericResult(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAGenericResult)
  }

  public interface CMsgDOTABroadcastNotificationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string message = 1;
    /**
     * <code>optional string message = 1;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTABroadcastNotification}
   */
  public static final class CMsgDOTABroadcastNotification extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTABroadcastNotificationOrBuilder {
    // Use CMsgDOTABroadcastNotification.newBuilder() to construct.
    private CMsgDOTABroadcastNotification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTABroadcastNotification(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTABroadcastNotification defaultInstance;
    public static CMsgDOTABroadcastNotification getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTABroadcastNotification getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTABroadcastNotification(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              message_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTABroadcastNotification_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTABroadcastNotification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTABroadcastNotification> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTABroadcastNotification>() {
      public CMsgDOTABroadcastNotification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTABroadcastNotification(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTABroadcastNotification> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 1;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTABroadcastNotification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTABroadcastNotification_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTABroadcastNotification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTABroadcastNotification_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          bitField0_ |= 0x00000001;
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTABroadcastNotification) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string message = 1;
      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 1;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 1;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        message_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTABroadcastNotification)
    }

    static {
      defaultInstance = new CMsgDOTABroadcastNotification(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTABroadcastNotification)
  }

  public interface CMsgDOTAPCBangTimedRewardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string persona = 1;
    /**
     * <code>optional string persona = 1;</code>
     */
    boolean hasPersona();
    /**
     * <code>optional string persona = 1;</code>
     */
    java.lang.String getPersona();
    /**
     * <code>optional string persona = 1;</code>
     */
    com.google.protobuf.ByteString
        getPersonaBytes();

    // optional uint32 itemdef = 2;
    /**
     * <code>optional uint32 itemdef = 2;</code>
     */
    boolean hasItemdef();
    /**
     * <code>optional uint32 itemdef = 2;</code>
     */
    int getItemdef();

    // optional string pcbangname = 3;
    /**
     * <code>optional string pcbangname = 3;</code>
     */
    boolean hasPcbangname();
    /**
     * <code>optional string pcbangname = 3;</code>
     */
    java.lang.String getPcbangname();
    /**
     * <code>optional string pcbangname = 3;</code>
     */
    com.google.protobuf.ByteString
        getPcbangnameBytes();
  }
  /**
   * Protobuf type {@code CMsgDOTAPCBangTimedReward}
   */
  public static final class CMsgDOTAPCBangTimedReward extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTAPCBangTimedRewardOrBuilder {
    // Use CMsgDOTAPCBangTimedReward.newBuilder() to construct.
    private CMsgDOTAPCBangTimedReward(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAPCBangTimedReward(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAPCBangTimedReward defaultInstance;
    public static CMsgDOTAPCBangTimedReward getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAPCBangTimedReward getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAPCBangTimedReward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              persona_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemdef_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              pcbangname_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAPCBangTimedReward_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAPCBangTimedReward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAPCBangTimedReward> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAPCBangTimedReward>() {
      public CMsgDOTAPCBangTimedReward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAPCBangTimedReward(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAPCBangTimedReward> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string persona = 1;
    public static final int PERSONA_FIELD_NUMBER = 1;
    private java.lang.Object persona_;
    /**
     * <code>optional string persona = 1;</code>
     */
    public boolean hasPersona() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string persona = 1;</code>
     */
    public java.lang.String getPersona() {
      java.lang.Object ref = persona_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          persona_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string persona = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPersonaBytes() {
      java.lang.Object ref = persona_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        persona_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 itemdef = 2;
    public static final int ITEMDEF_FIELD_NUMBER = 2;
    private int itemdef_;
    /**
     * <code>optional uint32 itemdef = 2;</code>
     */
    public boolean hasItemdef() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 itemdef = 2;</code>
     */
    public int getItemdef() {
      return itemdef_;
    }

    // optional string pcbangname = 3;
    public static final int PCBANGNAME_FIELD_NUMBER = 3;
    private java.lang.Object pcbangname_;
    /**
     * <code>optional string pcbangname = 3;</code>
     */
    public boolean hasPcbangname() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string pcbangname = 3;</code>
     */
    public java.lang.String getPcbangname() {
      java.lang.Object ref = pcbangname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pcbangname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pcbangname = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPcbangnameBytes() {
      java.lang.Object ref = pcbangname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pcbangname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      persona_ = "";
      itemdef_ = 0;
      pcbangname_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPersonaBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, itemdef_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPcbangnameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPersonaBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, itemdef_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPcbangnameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAPCBangTimedReward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedRewardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAPCBangTimedReward_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAPCBangTimedReward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        persona_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        itemdef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pcbangname_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAPCBangTimedReward_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.persona_ = persona_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemdef_ = itemdef_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pcbangname_ = pcbangname_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward.getDefaultInstance()) return this;
        if (other.hasPersona()) {
          bitField0_ |= 0x00000001;
          persona_ = other.persona_;
          onChanged();
        }
        if (other.hasItemdef()) {
          setItemdef(other.getItemdef());
        }
        if (other.hasPcbangname()) {
          bitField0_ |= 0x00000004;
          pcbangname_ = other.pcbangname_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAPCBangTimedReward) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string persona = 1;
      private java.lang.Object persona_ = "";
      /**
       * <code>optional string persona = 1;</code>
       */
      public boolean hasPersona() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string persona = 1;</code>
       */
      public java.lang.String getPersona() {
        java.lang.Object ref = persona_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          persona_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string persona = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPersonaBytes() {
        java.lang.Object ref = persona_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          persona_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string persona = 1;</code>
       */
      public Builder setPersona(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        persona_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string persona = 1;</code>
       */
      public Builder clearPersona() {
        bitField0_ = (bitField0_ & ~0x00000001);
        persona_ = getDefaultInstance().getPersona();
        onChanged();
        return this;
      }
      /**
       * <code>optional string persona = 1;</code>
       */
      public Builder setPersonaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        persona_ = value;
        onChanged();
        return this;
      }

      // optional uint32 itemdef = 2;
      private int itemdef_ ;
      /**
       * <code>optional uint32 itemdef = 2;</code>
       */
      public boolean hasItemdef() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 itemdef = 2;</code>
       */
      public int getItemdef() {
        return itemdef_;
      }
      /**
       * <code>optional uint32 itemdef = 2;</code>
       */
      public Builder setItemdef(int value) {
        bitField0_ |= 0x00000002;
        itemdef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 itemdef = 2;</code>
       */
      public Builder clearItemdef() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemdef_ = 0;
        onChanged();
        return this;
      }

      // optional string pcbangname = 3;
      private java.lang.Object pcbangname_ = "";
      /**
       * <code>optional string pcbangname = 3;</code>
       */
      public boolean hasPcbangname() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string pcbangname = 3;</code>
       */
      public java.lang.String getPcbangname() {
        java.lang.Object ref = pcbangname_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pcbangname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pcbangname = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPcbangnameBytes() {
        java.lang.Object ref = pcbangname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pcbangname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pcbangname = 3;</code>
       */
      public Builder setPcbangname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        pcbangname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pcbangname = 3;</code>
       */
      public Builder clearPcbangname() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pcbangname_ = getDefaultInstance().getPcbangname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pcbangname = 3;</code>
       */
      public Builder setPcbangnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        pcbangname_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAPCBangTimedReward)
    }

    static {
      defaultInstance = new CMsgDOTAPCBangTimedReward(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAPCBangTimedReward)
  }

  public interface CAttribute_StringOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string value = 1;
    /**
     * <code>optional string value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>optional string value = 1;</code>
     */
    java.lang.String getValue();
    /**
     * <code>optional string value = 1;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code CAttribute_String}
   */
  public static final class CAttribute_String extends
      com.google.protobuf.GeneratedMessage
      implements CAttribute_StringOrBuilder {
    // Use CAttribute_String.newBuilder() to construct.
    private CAttribute_String(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CAttribute_String(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CAttribute_String defaultInstance;
    public static CAttribute_String getDefaultInstance() {
      return defaultInstance;
    }

    public CAttribute_String getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CAttribute_String(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAttribute_String_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAttribute_String_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String.Builder.class);
    }

    public static com.google.protobuf.Parser<CAttribute_String> PARSER =
        new com.google.protobuf.AbstractParser<CAttribute_String>() {
      public CAttribute_String parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CAttribute_String(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CAttribute_String> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.lang.Object value_;
    /**
     * <code>optional string value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string value = 1;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value = 1;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAttribute_String}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_StringOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAttribute_String_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAttribute_String_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAttribute_String_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String.getDefaultInstance()) return this;
        if (other.hasValue()) {
          bitField0_ |= 0x00000001;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_String) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string value = 1;
      private java.lang.Object value_ = "";
      /**
       * <code>optional string value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string value = 1;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value = 1;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value = 1;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 1;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 1;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CAttribute_String)
    }

    static {
      defaultInstance = new CAttribute_String(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CAttribute_String)
  }

  public interface CAttribute_ItemDynamicRecipeComponentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 item_def = 1;
    /**
     * <code>optional uint32 item_def = 1;</code>
     */
    boolean hasItemDef();
    /**
     * <code>optional uint32 item_def = 1;</code>
     */
    int getItemDef();

    // optional uint32 item_quality = 2;
    /**
     * <code>optional uint32 item_quality = 2;</code>
     */
    boolean hasItemQuality();
    /**
     * <code>optional uint32 item_quality = 2;</code>
     */
    int getItemQuality();

    // optional uint32 item_flags = 3;
    /**
     * <code>optional uint32 item_flags = 3;</code>
     */
    boolean hasItemFlags();
    /**
     * <code>optional uint32 item_flags = 3;</code>
     */
    int getItemFlags();

    // optional string attributes_string = 4;
    /**
     * <code>optional string attributes_string = 4;</code>
     */
    boolean hasAttributesString();
    /**
     * <code>optional string attributes_string = 4;</code>
     */
    java.lang.String getAttributesString();
    /**
     * <code>optional string attributes_string = 4;</code>
     */
    com.google.protobuf.ByteString
        getAttributesStringBytes();

    // optional uint32 item_count = 5;
    /**
     * <code>optional uint32 item_count = 5;</code>
     */
    boolean hasItemCount();
    /**
     * <code>optional uint32 item_count = 5;</code>
     */
    int getItemCount();

    // optional uint32 items_fulfilled = 6;
    /**
     * <code>optional uint32 items_fulfilled = 6;</code>
     */
    boolean hasItemsFulfilled();
    /**
     * <code>optional uint32 items_fulfilled = 6;</code>
     */
    int getItemsFulfilled();

    // optional uint32 item_rarity = 7;
    /**
     * <code>optional uint32 item_rarity = 7;</code>
     */
    boolean hasItemRarity();
    /**
     * <code>optional uint32 item_rarity = 7;</code>
     */
    int getItemRarity();

    // optional string lootlist = 8;
    /**
     * <code>optional string lootlist = 8;</code>
     */
    boolean hasLootlist();
    /**
     * <code>optional string lootlist = 8;</code>
     */
    java.lang.String getLootlist();
    /**
     * <code>optional string lootlist = 8;</code>
     */
    com.google.protobuf.ByteString
        getLootlistBytes();

    // optional uint64 fulfilled_item_id = 9;
    /**
     * <code>optional uint64 fulfilled_item_id = 9;</code>
     */
    boolean hasFulfilledItemId();
    /**
     * <code>optional uint64 fulfilled_item_id = 9;</code>
     */
    long getFulfilledItemId();
  }
  /**
   * Protobuf type {@code CAttribute_ItemDynamicRecipeComponent}
   */
  public static final class CAttribute_ItemDynamicRecipeComponent extends
      com.google.protobuf.GeneratedMessage
      implements CAttribute_ItemDynamicRecipeComponentOrBuilder {
    // Use CAttribute_ItemDynamicRecipeComponent.newBuilder() to construct.
    private CAttribute_ItemDynamicRecipeComponent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CAttribute_ItemDynamicRecipeComponent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CAttribute_ItemDynamicRecipeComponent defaultInstance;
    public static CAttribute_ItemDynamicRecipeComponent getDefaultInstance() {
      return defaultInstance;
    }

    public CAttribute_ItemDynamicRecipeComponent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CAttribute_ItemDynamicRecipeComponent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              itemDef_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemQuality_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              itemFlags_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              attributesString_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              itemCount_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              itemsFulfilled_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              itemRarity_ = input.readUInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              lootlist_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              fulfilledItemId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAttribute_ItemDynamicRecipeComponent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAttribute_ItemDynamicRecipeComponent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent.Builder.class);
    }

    public static com.google.protobuf.Parser<CAttribute_ItemDynamicRecipeComponent> PARSER =
        new com.google.protobuf.AbstractParser<CAttribute_ItemDynamicRecipeComponent>() {
      public CAttribute_ItemDynamicRecipeComponent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CAttribute_ItemDynamicRecipeComponent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CAttribute_ItemDynamicRecipeComponent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 item_def = 1;
    public static final int ITEM_DEF_FIELD_NUMBER = 1;
    private int itemDef_;
    /**
     * <code>optional uint32 item_def = 1;</code>
     */
    public boolean hasItemDef() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 item_def = 1;</code>
     */
    public int getItemDef() {
      return itemDef_;
    }

    // optional uint32 item_quality = 2;
    public static final int ITEM_QUALITY_FIELD_NUMBER = 2;
    private int itemQuality_;
    /**
     * <code>optional uint32 item_quality = 2;</code>
     */
    public boolean hasItemQuality() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 item_quality = 2;</code>
     */
    public int getItemQuality() {
      return itemQuality_;
    }

    // optional uint32 item_flags = 3;
    public static final int ITEM_FLAGS_FIELD_NUMBER = 3;
    private int itemFlags_;
    /**
     * <code>optional uint32 item_flags = 3;</code>
     */
    public boolean hasItemFlags() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 item_flags = 3;</code>
     */
    public int getItemFlags() {
      return itemFlags_;
    }

    // optional string attributes_string = 4;
    public static final int ATTRIBUTES_STRING_FIELD_NUMBER = 4;
    private java.lang.Object attributesString_;
    /**
     * <code>optional string attributes_string = 4;</code>
     */
    public boolean hasAttributesString() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string attributes_string = 4;</code>
     */
    public java.lang.String getAttributesString() {
      java.lang.Object ref = attributesString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          attributesString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string attributes_string = 4;</code>
     */
    public com.google.protobuf.ByteString
        getAttributesStringBytes() {
      java.lang.Object ref = attributesString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        attributesString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 item_count = 5;
    public static final int ITEM_COUNT_FIELD_NUMBER = 5;
    private int itemCount_;
    /**
     * <code>optional uint32 item_count = 5;</code>
     */
    public boolean hasItemCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 item_count = 5;</code>
     */
    public int getItemCount() {
      return itemCount_;
    }

    // optional uint32 items_fulfilled = 6;
    public static final int ITEMS_FULFILLED_FIELD_NUMBER = 6;
    private int itemsFulfilled_;
    /**
     * <code>optional uint32 items_fulfilled = 6;</code>
     */
    public boolean hasItemsFulfilled() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 items_fulfilled = 6;</code>
     */
    public int getItemsFulfilled() {
      return itemsFulfilled_;
    }

    // optional uint32 item_rarity = 7;
    public static final int ITEM_RARITY_FIELD_NUMBER = 7;
    private int itemRarity_;
    /**
     * <code>optional uint32 item_rarity = 7;</code>
     */
    public boolean hasItemRarity() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 item_rarity = 7;</code>
     */
    public int getItemRarity() {
      return itemRarity_;
    }

    // optional string lootlist = 8;
    public static final int LOOTLIST_FIELD_NUMBER = 8;
    private java.lang.Object lootlist_;
    /**
     * <code>optional string lootlist = 8;</code>
     */
    public boolean hasLootlist() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string lootlist = 8;</code>
     */
    public java.lang.String getLootlist() {
      java.lang.Object ref = lootlist_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lootlist_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string lootlist = 8;</code>
     */
    public com.google.protobuf.ByteString
        getLootlistBytes() {
      java.lang.Object ref = lootlist_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lootlist_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint64 fulfilled_item_id = 9;
    public static final int FULFILLED_ITEM_ID_FIELD_NUMBER = 9;
    private long fulfilledItemId_;
    /**
     * <code>optional uint64 fulfilled_item_id = 9;</code>
     */
    public boolean hasFulfilledItemId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 fulfilled_item_id = 9;</code>
     */
    public long getFulfilledItemId() {
      return fulfilledItemId_;
    }

    private void initFields() {
      itemDef_ = 0;
      itemQuality_ = 0;
      itemFlags_ = 0;
      attributesString_ = "";
      itemCount_ = 0;
      itemsFulfilled_ = 0;
      itemRarity_ = 0;
      lootlist_ = "";
      fulfilledItemId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, itemDef_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, itemQuality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, itemFlags_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getAttributesStringBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, itemCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, itemsFulfilled_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, itemRarity_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getLootlistBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(9, fulfilledItemId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, itemDef_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, itemQuality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, itemFlags_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getAttributesStringBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, itemCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, itemsFulfilled_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, itemRarity_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getLootlistBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, fulfilledItemId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAttribute_ItemDynamicRecipeComponent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAttribute_ItemDynamicRecipeComponent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAttribute_ItemDynamicRecipeComponent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemDef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemQuality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        itemFlags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        attributesString_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        itemCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        itemsFulfilled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        itemRarity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        lootlist_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        fulfilledItemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAttribute_ItemDynamicRecipeComponent_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemDef_ = itemDef_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemQuality_ = itemQuality_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.itemFlags_ = itemFlags_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.attributesString_ = attributesString_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.itemCount_ = itemCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.itemsFulfilled_ = itemsFulfilled_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.itemRarity_ = itemRarity_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.lootlist_ = lootlist_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fulfilledItemId_ = fulfilledItemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent.getDefaultInstance()) return this;
        if (other.hasItemDef()) {
          setItemDef(other.getItemDef());
        }
        if (other.hasItemQuality()) {
          setItemQuality(other.getItemQuality());
        }
        if (other.hasItemFlags()) {
          setItemFlags(other.getItemFlags());
        }
        if (other.hasAttributesString()) {
          bitField0_ |= 0x00000008;
          attributesString_ = other.attributesString_;
          onChanged();
        }
        if (other.hasItemCount()) {
          setItemCount(other.getItemCount());
        }
        if (other.hasItemsFulfilled()) {
          setItemsFulfilled(other.getItemsFulfilled());
        }
        if (other.hasItemRarity()) {
          setItemRarity(other.getItemRarity());
        }
        if (other.hasLootlist()) {
          bitField0_ |= 0x00000080;
          lootlist_ = other.lootlist_;
          onChanged();
        }
        if (other.hasFulfilledItemId()) {
          setFulfilledItemId(other.getFulfilledItemId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAttribute_ItemDynamicRecipeComponent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 item_def = 1;
      private int itemDef_ ;
      /**
       * <code>optional uint32 item_def = 1;</code>
       */
      public boolean hasItemDef() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 item_def = 1;</code>
       */
      public int getItemDef() {
        return itemDef_;
      }
      /**
       * <code>optional uint32 item_def = 1;</code>
       */
      public Builder setItemDef(int value) {
        bitField0_ |= 0x00000001;
        itemDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_def = 1;</code>
       */
      public Builder clearItemDef() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemDef_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 item_quality = 2;
      private int itemQuality_ ;
      /**
       * <code>optional uint32 item_quality = 2;</code>
       */
      public boolean hasItemQuality() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 item_quality = 2;</code>
       */
      public int getItemQuality() {
        return itemQuality_;
      }
      /**
       * <code>optional uint32 item_quality = 2;</code>
       */
      public Builder setItemQuality(int value) {
        bitField0_ |= 0x00000002;
        itemQuality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_quality = 2;</code>
       */
      public Builder clearItemQuality() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemQuality_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 item_flags = 3;
      private int itemFlags_ ;
      /**
       * <code>optional uint32 item_flags = 3;</code>
       */
      public boolean hasItemFlags() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 item_flags = 3;</code>
       */
      public int getItemFlags() {
        return itemFlags_;
      }
      /**
       * <code>optional uint32 item_flags = 3;</code>
       */
      public Builder setItemFlags(int value) {
        bitField0_ |= 0x00000004;
        itemFlags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_flags = 3;</code>
       */
      public Builder clearItemFlags() {
        bitField0_ = (bitField0_ & ~0x00000004);
        itemFlags_ = 0;
        onChanged();
        return this;
      }

      // optional string attributes_string = 4;
      private java.lang.Object attributesString_ = "";
      /**
       * <code>optional string attributes_string = 4;</code>
       */
      public boolean hasAttributesString() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string attributes_string = 4;</code>
       */
      public java.lang.String getAttributesString() {
        java.lang.Object ref = attributesString_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          attributesString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string attributes_string = 4;</code>
       */
      public com.google.protobuf.ByteString
          getAttributesStringBytes() {
        java.lang.Object ref = attributesString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          attributesString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string attributes_string = 4;</code>
       */
      public Builder setAttributesString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        attributesString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string attributes_string = 4;</code>
       */
      public Builder clearAttributesString() {
        bitField0_ = (bitField0_ & ~0x00000008);
        attributesString_ = getDefaultInstance().getAttributesString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string attributes_string = 4;</code>
       */
      public Builder setAttributesStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        attributesString_ = value;
        onChanged();
        return this;
      }

      // optional uint32 item_count = 5;
      private int itemCount_ ;
      /**
       * <code>optional uint32 item_count = 5;</code>
       */
      public boolean hasItemCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 item_count = 5;</code>
       */
      public int getItemCount() {
        return itemCount_;
      }
      /**
       * <code>optional uint32 item_count = 5;</code>
       */
      public Builder setItemCount(int value) {
        bitField0_ |= 0x00000010;
        itemCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_count = 5;</code>
       */
      public Builder clearItemCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        itemCount_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 items_fulfilled = 6;
      private int itemsFulfilled_ ;
      /**
       * <code>optional uint32 items_fulfilled = 6;</code>
       */
      public boolean hasItemsFulfilled() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 items_fulfilled = 6;</code>
       */
      public int getItemsFulfilled() {
        return itemsFulfilled_;
      }
      /**
       * <code>optional uint32 items_fulfilled = 6;</code>
       */
      public Builder setItemsFulfilled(int value) {
        bitField0_ |= 0x00000020;
        itemsFulfilled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 items_fulfilled = 6;</code>
       */
      public Builder clearItemsFulfilled() {
        bitField0_ = (bitField0_ & ~0x00000020);
        itemsFulfilled_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 item_rarity = 7;
      private int itemRarity_ ;
      /**
       * <code>optional uint32 item_rarity = 7;</code>
       */
      public boolean hasItemRarity() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 item_rarity = 7;</code>
       */
      public int getItemRarity() {
        return itemRarity_;
      }
      /**
       * <code>optional uint32 item_rarity = 7;</code>
       */
      public Builder setItemRarity(int value) {
        bitField0_ |= 0x00000040;
        itemRarity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_rarity = 7;</code>
       */
      public Builder clearItemRarity() {
        bitField0_ = (bitField0_ & ~0x00000040);
        itemRarity_ = 0;
        onChanged();
        return this;
      }

      // optional string lootlist = 8;
      private java.lang.Object lootlist_ = "";
      /**
       * <code>optional string lootlist = 8;</code>
       */
      public boolean hasLootlist() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string lootlist = 8;</code>
       */
      public java.lang.String getLootlist() {
        java.lang.Object ref = lootlist_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          lootlist_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string lootlist = 8;</code>
       */
      public com.google.protobuf.ByteString
          getLootlistBytes() {
        java.lang.Object ref = lootlist_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lootlist_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string lootlist = 8;</code>
       */
      public Builder setLootlist(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        lootlist_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string lootlist = 8;</code>
       */
      public Builder clearLootlist() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lootlist_ = getDefaultInstance().getLootlist();
        onChanged();
        return this;
      }
      /**
       * <code>optional string lootlist = 8;</code>
       */
      public Builder setLootlistBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        lootlist_ = value;
        onChanged();
        return this;
      }

      // optional uint64 fulfilled_item_id = 9;
      private long fulfilledItemId_ ;
      /**
       * <code>optional uint64 fulfilled_item_id = 9;</code>
       */
      public boolean hasFulfilledItemId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 fulfilled_item_id = 9;</code>
       */
      public long getFulfilledItemId() {
        return fulfilledItemId_;
      }
      /**
       * <code>optional uint64 fulfilled_item_id = 9;</code>
       */
      public Builder setFulfilledItemId(long value) {
        bitField0_ |= 0x00000100;
        fulfilledItemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 fulfilled_item_id = 9;</code>
       */
      public Builder clearFulfilledItemId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fulfilledItemId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CAttribute_ItemDynamicRecipeComponent)
    }

    static {
      defaultInstance = new CAttribute_ItemDynamicRecipeComponent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CAttribute_ItemDynamicRecipeComponent)
  }

  public interface CProtoItemHeroStatueOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 hero_id = 1;
    /**
     * <code>optional uint32 hero_id = 1;</code>
     */
    boolean hasHeroId();
    /**
     * <code>optional uint32 hero_id = 1;</code>
     */
    int getHeroId();

    // optional uint32 status_effect_index = 2;
    /**
     * <code>optional uint32 status_effect_index = 2;</code>
     */
    boolean hasStatusEffectIndex();
    /**
     * <code>optional uint32 status_effect_index = 2;</code>
     */
    int getStatusEffectIndex();

    // optional string sequence_name = 3;
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    boolean hasSequenceName();
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    java.lang.String getSequenceName();
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getSequenceNameBytes();

    // optional float cycle = 4;
    /**
     * <code>optional float cycle = 4;</code>
     */
    boolean hasCycle();
    /**
     * <code>optional float cycle = 4;</code>
     */
    float getCycle();

    // repeated uint32 wearable = 5;
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    java.util.List<java.lang.Integer> getWearableList();
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    int getWearableCount();
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    int getWearable(int index);

    // optional string inscription = 6;
    /**
     * <code>optional string inscription = 6;</code>
     */
    boolean hasInscription();
    /**
     * <code>optional string inscription = 6;</code>
     */
    java.lang.String getInscription();
    /**
     * <code>optional string inscription = 6;</code>
     */
    com.google.protobuf.ByteString
        getInscriptionBytes();

    // repeated uint32 style = 7;
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    java.util.List<java.lang.Integer> getStyleList();
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    int getStyleCount();
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    int getStyle(int index);

    // optional bool tournament_drop = 8;
    /**
     * <code>optional bool tournament_drop = 8;</code>
     */
    boolean hasTournamentDrop();
    /**
     * <code>optional bool tournament_drop = 8;</code>
     */
    boolean getTournamentDrop();
  }
  /**
   * Protobuf type {@code CProtoItemHeroStatue}
   */
  public static final class CProtoItemHeroStatue extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemHeroStatueOrBuilder {
    // Use CProtoItemHeroStatue.newBuilder() to construct.
    private CProtoItemHeroStatue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemHeroStatue(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemHeroStatue defaultInstance;
    public static CProtoItemHeroStatue getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemHeroStatue getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemHeroStatue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              heroId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              statusEffectIndex_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              sequenceName_ = input.readBytes();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              cycle_ = input.readFloat();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                wearable_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              wearable_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                wearable_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                wearable_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              inscription_ = input.readBytes();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                style_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              style_.add(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                style_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                style_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              tournamentDrop_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          wearable_ = java.util.Collections.unmodifiableList(wearable_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          style_ = java.util.Collections.unmodifiableList(style_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemHeroStatue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemHeroStatue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemHeroStatue> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemHeroStatue>() {
      public CProtoItemHeroStatue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemHeroStatue(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemHeroStatue> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 hero_id = 1;
    public static final int HERO_ID_FIELD_NUMBER = 1;
    private int heroId_;
    /**
     * <code>optional uint32 hero_id = 1;</code>
     */
    public boolean hasHeroId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 hero_id = 1;</code>
     */
    public int getHeroId() {
      return heroId_;
    }

    // optional uint32 status_effect_index = 2;
    public static final int STATUS_EFFECT_INDEX_FIELD_NUMBER = 2;
    private int statusEffectIndex_;
    /**
     * <code>optional uint32 status_effect_index = 2;</code>
     */
    public boolean hasStatusEffectIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 status_effect_index = 2;</code>
     */
    public int getStatusEffectIndex() {
      return statusEffectIndex_;
    }

    // optional string sequence_name = 3;
    public static final int SEQUENCE_NAME_FIELD_NUMBER = 3;
    private java.lang.Object sequenceName_;
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    public boolean hasSequenceName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    public java.lang.String getSequenceName() {
      java.lang.Object ref = sequenceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sequenceName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSequenceNameBytes() {
      java.lang.Object ref = sequenceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sequenceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float cycle = 4;
    public static final int CYCLE_FIELD_NUMBER = 4;
    private float cycle_;
    /**
     * <code>optional float cycle = 4;</code>
     */
    public boolean hasCycle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float cycle = 4;</code>
     */
    public float getCycle() {
      return cycle_;
    }

    // repeated uint32 wearable = 5;
    public static final int WEARABLE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> wearable_;
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getWearableList() {
      return wearable_;
    }
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    public int getWearableCount() {
      return wearable_.size();
    }
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    public int getWearable(int index) {
      return wearable_.get(index);
    }

    // optional string inscription = 6;
    public static final int INSCRIPTION_FIELD_NUMBER = 6;
    private java.lang.Object inscription_;
    /**
     * <code>optional string inscription = 6;</code>
     */
    public boolean hasInscription() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string inscription = 6;</code>
     */
    public java.lang.String getInscription() {
      java.lang.Object ref = inscription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          inscription_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string inscription = 6;</code>
     */
    public com.google.protobuf.ByteString
        getInscriptionBytes() {
      java.lang.Object ref = inscription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inscription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated uint32 style = 7;
    public static final int STYLE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> style_;
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getStyleList() {
      return style_;
    }
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    public int getStyleCount() {
      return style_.size();
    }
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    public int getStyle(int index) {
      return style_.get(index);
    }

    // optional bool tournament_drop = 8;
    public static final int TOURNAMENT_DROP_FIELD_NUMBER = 8;
    private boolean tournamentDrop_;
    /**
     * <code>optional bool tournament_drop = 8;</code>
     */
    public boolean hasTournamentDrop() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool tournament_drop = 8;</code>
     */
    public boolean getTournamentDrop() {
      return tournamentDrop_;
    }

    private void initFields() {
      heroId_ = 0;
      statusEffectIndex_ = 0;
      sequenceName_ = "";
      cycle_ = 0F;
      wearable_ = java.util.Collections.emptyList();
      inscription_ = "";
      style_ = java.util.Collections.emptyList();
      tournamentDrop_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, heroId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, statusEffectIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSequenceNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, cycle_);
      }
      for (int i = 0; i < wearable_.size(); i++) {
        output.writeUInt32(5, wearable_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getInscriptionBytes());
      }
      for (int i = 0; i < style_.size(); i++) {
        output.writeUInt32(7, style_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(8, tournamentDrop_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, heroId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, statusEffectIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSequenceNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, cycle_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < wearable_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(wearable_.get(i));
        }
        size += dataSize;
        size += 1 * getWearableList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getInscriptionBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < style_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(style_.get(i));
        }
        size += dataSize;
        size += 1 * getStyleList().size();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, tournamentDrop_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemHeroStatue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemHeroStatue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemHeroStatue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        heroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        statusEffectIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        cycle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        wearable_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        inscription_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        style_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        tournamentDrop_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemHeroStatue_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.heroId_ = heroId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.statusEffectIndex_ = statusEffectIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sequenceName_ = sequenceName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cycle_ = cycle_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          wearable_ = java.util.Collections.unmodifiableList(wearable_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.wearable_ = wearable_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.inscription_ = inscription_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          style_ = java.util.Collections.unmodifiableList(style_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.style_ = style_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tournamentDrop_ = tournamentDrop_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue.getDefaultInstance()) return this;
        if (other.hasHeroId()) {
          setHeroId(other.getHeroId());
        }
        if (other.hasStatusEffectIndex()) {
          setStatusEffectIndex(other.getStatusEffectIndex());
        }
        if (other.hasSequenceName()) {
          bitField0_ |= 0x00000004;
          sequenceName_ = other.sequenceName_;
          onChanged();
        }
        if (other.hasCycle()) {
          setCycle(other.getCycle());
        }
        if (!other.wearable_.isEmpty()) {
          if (wearable_.isEmpty()) {
            wearable_ = other.wearable_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureWearableIsMutable();
            wearable_.addAll(other.wearable_);
          }
          onChanged();
        }
        if (other.hasInscription()) {
          bitField0_ |= 0x00000020;
          inscription_ = other.inscription_;
          onChanged();
        }
        if (!other.style_.isEmpty()) {
          if (style_.isEmpty()) {
            style_ = other.style_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureStyleIsMutable();
            style_.addAll(other.style_);
          }
          onChanged();
        }
        if (other.hasTournamentDrop()) {
          setTournamentDrop(other.getTournamentDrop());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemHeroStatue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 hero_id = 1;
      private int heroId_ ;
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      public int getHeroId() {
        return heroId_;
      }
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      public Builder setHeroId(int value) {
        bitField0_ |= 0x00000001;
        heroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      public Builder clearHeroId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        heroId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 status_effect_index = 2;
      private int statusEffectIndex_ ;
      /**
       * <code>optional uint32 status_effect_index = 2;</code>
       */
      public boolean hasStatusEffectIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 status_effect_index = 2;</code>
       */
      public int getStatusEffectIndex() {
        return statusEffectIndex_;
      }
      /**
       * <code>optional uint32 status_effect_index = 2;</code>
       */
      public Builder setStatusEffectIndex(int value) {
        bitField0_ |= 0x00000002;
        statusEffectIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status_effect_index = 2;</code>
       */
      public Builder clearStatusEffectIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        statusEffectIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string sequence_name = 3;
      private java.lang.Object sequenceName_ = "";
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public boolean hasSequenceName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public java.lang.String getSequenceName() {
        java.lang.Object ref = sequenceName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sequenceName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSequenceNameBytes() {
        java.lang.Object ref = sequenceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sequenceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public Builder setSequenceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sequenceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public Builder clearSequenceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sequenceName_ = getDefaultInstance().getSequenceName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public Builder setSequenceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sequenceName_ = value;
        onChanged();
        return this;
      }

      // optional float cycle = 4;
      private float cycle_ ;
      /**
       * <code>optional float cycle = 4;</code>
       */
      public boolean hasCycle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float cycle = 4;</code>
       */
      public float getCycle() {
        return cycle_;
      }
      /**
       * <code>optional float cycle = 4;</code>
       */
      public Builder setCycle(float value) {
        bitField0_ |= 0x00000008;
        cycle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float cycle = 4;</code>
       */
      public Builder clearCycle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cycle_ = 0F;
        onChanged();
        return this;
      }

      // repeated uint32 wearable = 5;
      private java.util.List<java.lang.Integer> wearable_ = java.util.Collections.emptyList();
      private void ensureWearableIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          wearable_ = new java.util.ArrayList<java.lang.Integer>(wearable_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getWearableList() {
        return java.util.Collections.unmodifiableList(wearable_);
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public int getWearableCount() {
        return wearable_.size();
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public int getWearable(int index) {
        return wearable_.get(index);
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public Builder setWearable(
          int index, int value) {
        ensureWearableIsMutable();
        wearable_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public Builder addWearable(int value) {
        ensureWearableIsMutable();
        wearable_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public Builder addAllWearable(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWearableIsMutable();
        super.addAll(values, wearable_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public Builder clearWearable() {
        wearable_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional string inscription = 6;
      private java.lang.Object inscription_ = "";
      /**
       * <code>optional string inscription = 6;</code>
       */
      public boolean hasInscription() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string inscription = 6;</code>
       */
      public java.lang.String getInscription() {
        java.lang.Object ref = inscription_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          inscription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string inscription = 6;</code>
       */
      public com.google.protobuf.ByteString
          getInscriptionBytes() {
        java.lang.Object ref = inscription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inscription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string inscription = 6;</code>
       */
      public Builder setInscription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        inscription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string inscription = 6;</code>
       */
      public Builder clearInscription() {
        bitField0_ = (bitField0_ & ~0x00000020);
        inscription_ = getDefaultInstance().getInscription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string inscription = 6;</code>
       */
      public Builder setInscriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        inscription_ = value;
        onChanged();
        return this;
      }

      // repeated uint32 style = 7;
      private java.util.List<java.lang.Integer> style_ = java.util.Collections.emptyList();
      private void ensureStyleIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          style_ = new java.util.ArrayList<java.lang.Integer>(style_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getStyleList() {
        return java.util.Collections.unmodifiableList(style_);
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public int getStyleCount() {
        return style_.size();
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public int getStyle(int index) {
        return style_.get(index);
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public Builder setStyle(
          int index, int value) {
        ensureStyleIsMutable();
        style_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public Builder addStyle(int value) {
        ensureStyleIsMutable();
        style_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public Builder addAllStyle(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStyleIsMutable();
        super.addAll(values, style_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public Builder clearStyle() {
        style_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional bool tournament_drop = 8;
      private boolean tournamentDrop_ ;
      /**
       * <code>optional bool tournament_drop = 8;</code>
       */
      public boolean hasTournamentDrop() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool tournament_drop = 8;</code>
       */
      public boolean getTournamentDrop() {
        return tournamentDrop_;
      }
      /**
       * <code>optional bool tournament_drop = 8;</code>
       */
      public Builder setTournamentDrop(boolean value) {
        bitField0_ |= 0x00000080;
        tournamentDrop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool tournament_drop = 8;</code>
       */
      public Builder clearTournamentDrop() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tournamentDrop_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemHeroStatue)
    }

    static {
      defaultInstance = new CProtoItemHeroStatue(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemHeroStatue)
  }

  public interface CProtoItemTeamShowcaseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 hero_id = 1;
    /**
     * <code>optional uint32 hero_id = 1;</code>
     */
    boolean hasHeroId();
    /**
     * <code>optional uint32 hero_id = 1;</code>
     */
    int getHeroId();

    // optional uint32 status_effect_index = 2;
    /**
     * <code>optional uint32 status_effect_index = 2;</code>
     */
    boolean hasStatusEffectIndex();
    /**
     * <code>optional uint32 status_effect_index = 2;</code>
     */
    int getStatusEffectIndex();

    // optional string sequence_name = 3;
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    boolean hasSequenceName();
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    java.lang.String getSequenceName();
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getSequenceNameBytes();

    // optional float cycle = 4;
    /**
     * <code>optional float cycle = 4;</code>
     */
    boolean hasCycle();
    /**
     * <code>optional float cycle = 4;</code>
     */
    float getCycle();

    // repeated uint32 wearable = 5;
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    java.util.List<java.lang.Integer> getWearableList();
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    int getWearableCount();
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    int getWearable(int index);

    // optional string inscription = 6;
    /**
     * <code>optional string inscription = 6;</code>
     */
    boolean hasInscription();
    /**
     * <code>optional string inscription = 6;</code>
     */
    java.lang.String getInscription();
    /**
     * <code>optional string inscription = 6;</code>
     */
    com.google.protobuf.ByteString
        getInscriptionBytes();

    // repeated uint32 style = 7;
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    java.util.List<java.lang.Integer> getStyleList();
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    int getStyleCount();
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    int getStyle(int index);
  }
  /**
   * Protobuf type {@code CProtoItemTeamShowcase}
   */
  public static final class CProtoItemTeamShowcase extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemTeamShowcaseOrBuilder {
    // Use CProtoItemTeamShowcase.newBuilder() to construct.
    private CProtoItemTeamShowcase(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemTeamShowcase(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemTeamShowcase defaultInstance;
    public static CProtoItemTeamShowcase getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemTeamShowcase getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemTeamShowcase(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              heroId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              statusEffectIndex_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              sequenceName_ = input.readBytes();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              cycle_ = input.readFloat();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                wearable_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              wearable_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                wearable_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                wearable_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              inscription_ = input.readBytes();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                style_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              style_.add(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                style_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                style_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          wearable_ = java.util.Collections.unmodifiableList(wearable_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          style_ = java.util.Collections.unmodifiableList(style_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemTeamShowcase_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemTeamShowcase_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemTeamShowcase> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemTeamShowcase>() {
      public CProtoItemTeamShowcase parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemTeamShowcase(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemTeamShowcase> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 hero_id = 1;
    public static final int HERO_ID_FIELD_NUMBER = 1;
    private int heroId_;
    /**
     * <code>optional uint32 hero_id = 1;</code>
     */
    public boolean hasHeroId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 hero_id = 1;</code>
     */
    public int getHeroId() {
      return heroId_;
    }

    // optional uint32 status_effect_index = 2;
    public static final int STATUS_EFFECT_INDEX_FIELD_NUMBER = 2;
    private int statusEffectIndex_;
    /**
     * <code>optional uint32 status_effect_index = 2;</code>
     */
    public boolean hasStatusEffectIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 status_effect_index = 2;</code>
     */
    public int getStatusEffectIndex() {
      return statusEffectIndex_;
    }

    // optional string sequence_name = 3;
    public static final int SEQUENCE_NAME_FIELD_NUMBER = 3;
    private java.lang.Object sequenceName_;
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    public boolean hasSequenceName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    public java.lang.String getSequenceName() {
      java.lang.Object ref = sequenceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sequenceName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sequence_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSequenceNameBytes() {
      java.lang.Object ref = sequenceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sequenceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float cycle = 4;
    public static final int CYCLE_FIELD_NUMBER = 4;
    private float cycle_;
    /**
     * <code>optional float cycle = 4;</code>
     */
    public boolean hasCycle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float cycle = 4;</code>
     */
    public float getCycle() {
      return cycle_;
    }

    // repeated uint32 wearable = 5;
    public static final int WEARABLE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> wearable_;
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getWearableList() {
      return wearable_;
    }
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    public int getWearableCount() {
      return wearable_.size();
    }
    /**
     * <code>repeated uint32 wearable = 5;</code>
     */
    public int getWearable(int index) {
      return wearable_.get(index);
    }

    // optional string inscription = 6;
    public static final int INSCRIPTION_FIELD_NUMBER = 6;
    private java.lang.Object inscription_;
    /**
     * <code>optional string inscription = 6;</code>
     */
    public boolean hasInscription() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string inscription = 6;</code>
     */
    public java.lang.String getInscription() {
      java.lang.Object ref = inscription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          inscription_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string inscription = 6;</code>
     */
    public com.google.protobuf.ByteString
        getInscriptionBytes() {
      java.lang.Object ref = inscription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inscription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated uint32 style = 7;
    public static final int STYLE_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> style_;
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getStyleList() {
      return style_;
    }
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    public int getStyleCount() {
      return style_.size();
    }
    /**
     * <code>repeated uint32 style = 7;</code>
     */
    public int getStyle(int index) {
      return style_.get(index);
    }

    private void initFields() {
      heroId_ = 0;
      statusEffectIndex_ = 0;
      sequenceName_ = "";
      cycle_ = 0F;
      wearable_ = java.util.Collections.emptyList();
      inscription_ = "";
      style_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, heroId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, statusEffectIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSequenceNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, cycle_);
      }
      for (int i = 0; i < wearable_.size(); i++) {
        output.writeUInt32(5, wearable_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getInscriptionBytes());
      }
      for (int i = 0; i < style_.size(); i++) {
        output.writeUInt32(7, style_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, heroId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, statusEffectIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSequenceNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, cycle_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < wearable_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(wearable_.get(i));
        }
        size += dataSize;
        size += 1 * getWearableList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getInscriptionBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < style_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(style_.get(i));
        }
        size += dataSize;
        size += 1 * getStyleList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemTeamShowcase}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcaseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemTeamShowcase_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemTeamShowcase_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        heroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        statusEffectIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        cycle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        wearable_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        inscription_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        style_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemTeamShowcase_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.heroId_ = heroId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.statusEffectIndex_ = statusEffectIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sequenceName_ = sequenceName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cycle_ = cycle_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          wearable_ = java.util.Collections.unmodifiableList(wearable_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.wearable_ = wearable_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.inscription_ = inscription_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          style_ = java.util.Collections.unmodifiableList(style_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.style_ = style_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase.getDefaultInstance()) return this;
        if (other.hasHeroId()) {
          setHeroId(other.getHeroId());
        }
        if (other.hasStatusEffectIndex()) {
          setStatusEffectIndex(other.getStatusEffectIndex());
        }
        if (other.hasSequenceName()) {
          bitField0_ |= 0x00000004;
          sequenceName_ = other.sequenceName_;
          onChanged();
        }
        if (other.hasCycle()) {
          setCycle(other.getCycle());
        }
        if (!other.wearable_.isEmpty()) {
          if (wearable_.isEmpty()) {
            wearable_ = other.wearable_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureWearableIsMutable();
            wearable_.addAll(other.wearable_);
          }
          onChanged();
        }
        if (other.hasInscription()) {
          bitField0_ |= 0x00000020;
          inscription_ = other.inscription_;
          onChanged();
        }
        if (!other.style_.isEmpty()) {
          if (style_.isEmpty()) {
            style_ = other.style_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureStyleIsMutable();
            style_.addAll(other.style_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemTeamShowcase) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 hero_id = 1;
      private int heroId_ ;
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      public int getHeroId() {
        return heroId_;
      }
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      public Builder setHeroId(int value) {
        bitField0_ |= 0x00000001;
        heroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      public Builder clearHeroId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        heroId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 status_effect_index = 2;
      private int statusEffectIndex_ ;
      /**
       * <code>optional uint32 status_effect_index = 2;</code>
       */
      public boolean hasStatusEffectIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 status_effect_index = 2;</code>
       */
      public int getStatusEffectIndex() {
        return statusEffectIndex_;
      }
      /**
       * <code>optional uint32 status_effect_index = 2;</code>
       */
      public Builder setStatusEffectIndex(int value) {
        bitField0_ |= 0x00000002;
        statusEffectIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 status_effect_index = 2;</code>
       */
      public Builder clearStatusEffectIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        statusEffectIndex_ = 0;
        onChanged();
        return this;
      }

      // optional string sequence_name = 3;
      private java.lang.Object sequenceName_ = "";
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public boolean hasSequenceName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public java.lang.String getSequenceName() {
        java.lang.Object ref = sequenceName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sequenceName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSequenceNameBytes() {
        java.lang.Object ref = sequenceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sequenceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public Builder setSequenceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sequenceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public Builder clearSequenceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sequenceName_ = getDefaultInstance().getSequenceName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sequence_name = 3;</code>
       */
      public Builder setSequenceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sequenceName_ = value;
        onChanged();
        return this;
      }

      // optional float cycle = 4;
      private float cycle_ ;
      /**
       * <code>optional float cycle = 4;</code>
       */
      public boolean hasCycle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float cycle = 4;</code>
       */
      public float getCycle() {
        return cycle_;
      }
      /**
       * <code>optional float cycle = 4;</code>
       */
      public Builder setCycle(float value) {
        bitField0_ |= 0x00000008;
        cycle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float cycle = 4;</code>
       */
      public Builder clearCycle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cycle_ = 0F;
        onChanged();
        return this;
      }

      // repeated uint32 wearable = 5;
      private java.util.List<java.lang.Integer> wearable_ = java.util.Collections.emptyList();
      private void ensureWearableIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          wearable_ = new java.util.ArrayList<java.lang.Integer>(wearable_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getWearableList() {
        return java.util.Collections.unmodifiableList(wearable_);
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public int getWearableCount() {
        return wearable_.size();
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public int getWearable(int index) {
        return wearable_.get(index);
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public Builder setWearable(
          int index, int value) {
        ensureWearableIsMutable();
        wearable_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public Builder addWearable(int value) {
        ensureWearableIsMutable();
        wearable_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public Builder addAllWearable(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWearableIsMutable();
        super.addAll(values, wearable_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 wearable = 5;</code>
       */
      public Builder clearWearable() {
        wearable_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional string inscription = 6;
      private java.lang.Object inscription_ = "";
      /**
       * <code>optional string inscription = 6;</code>
       */
      public boolean hasInscription() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string inscription = 6;</code>
       */
      public java.lang.String getInscription() {
        java.lang.Object ref = inscription_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          inscription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string inscription = 6;</code>
       */
      public com.google.protobuf.ByteString
          getInscriptionBytes() {
        java.lang.Object ref = inscription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inscription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string inscription = 6;</code>
       */
      public Builder setInscription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        inscription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string inscription = 6;</code>
       */
      public Builder clearInscription() {
        bitField0_ = (bitField0_ & ~0x00000020);
        inscription_ = getDefaultInstance().getInscription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string inscription = 6;</code>
       */
      public Builder setInscriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        inscription_ = value;
        onChanged();
        return this;
      }

      // repeated uint32 style = 7;
      private java.util.List<java.lang.Integer> style_ = java.util.Collections.emptyList();
      private void ensureStyleIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          style_ = new java.util.ArrayList<java.lang.Integer>(style_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getStyleList() {
        return java.util.Collections.unmodifiableList(style_);
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public int getStyleCount() {
        return style_.size();
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public int getStyle(int index) {
        return style_.get(index);
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public Builder setStyle(
          int index, int value) {
        ensureStyleIsMutable();
        style_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public Builder addStyle(int value) {
        ensureStyleIsMutable();
        style_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public Builder addAllStyle(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStyleIsMutable();
        super.addAll(values, style_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 style = 7;</code>
       */
      public Builder clearStyle() {
        style_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemTeamShowcase)
    }

    static {
      defaultInstance = new CProtoItemTeamShowcase(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemTeamShowcase)
  }

  public interface CProtoItemSocketOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 item_id = 1;
    /**
     * <code>optional uint64 item_id = 1;</code>
     */
    boolean hasItemId();
    /**
     * <code>optional uint64 item_id = 1;</code>
     */
    long getItemId();

    // optional uint32 attr_def_index = 2;
    /**
     * <code>optional uint32 attr_def_index = 2;</code>
     */
    boolean hasAttrDefIndex();
    /**
     * <code>optional uint32 attr_def_index = 2;</code>
     */
    int getAttrDefIndex();

    // optional uint32 required_type = 3;
    /**
     * <code>optional uint32 required_type = 3;</code>
     */
    boolean hasRequiredType();
    /**
     * <code>optional uint32 required_type = 3;</code>
     */
    int getRequiredType();

    // optional string required_hero = 4;
    /**
     * <code>optional string required_hero = 4;</code>
     */
    boolean hasRequiredHero();
    /**
     * <code>optional string required_hero = 4;</code>
     */
    java.lang.String getRequiredHero();
    /**
     * <code>optional string required_hero = 4;</code>
     */
    com.google.protobuf.ByteString
        getRequiredHeroBytes();

    // optional uint32 gem_def_index = 5;
    /**
     * <code>optional uint32 gem_def_index = 5;</code>
     */
    boolean hasGemDefIndex();
    /**
     * <code>optional uint32 gem_def_index = 5;</code>
     */
    int getGemDefIndex();

    // optional bool not_tradable = 6;
    /**
     * <code>optional bool not_tradable = 6;</code>
     */
    boolean hasNotTradable();
    /**
     * <code>optional bool not_tradable = 6;</code>
     */
    boolean getNotTradable();

    // optional string required_item_slot = 7;
    /**
     * <code>optional string required_item_slot = 7;</code>
     */
    boolean hasRequiredItemSlot();
    /**
     * <code>optional string required_item_slot = 7;</code>
     */
    java.lang.String getRequiredItemSlot();
    /**
     * <code>optional string required_item_slot = 7;</code>
     */
    com.google.protobuf.ByteString
        getRequiredItemSlotBytes();
  }
  /**
   * Protobuf type {@code CProtoItemSocket}
   */
  public static final class CProtoItemSocket extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemSocketOrBuilder {
    // Use CProtoItemSocket.newBuilder() to construct.
    private CProtoItemSocket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemSocket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemSocket defaultInstance;
    public static CProtoItemSocket getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemSocket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemSocket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              itemId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              attrDefIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              requiredType_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              requiredHero_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              gemDefIndex_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              notTradable_ = input.readBool();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              requiredItemSlot_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemSocket> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemSocket>() {
      public CProtoItemSocket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemSocket(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemSocket> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 item_id = 1;
    public static final int ITEM_ID_FIELD_NUMBER = 1;
    private long itemId_;
    /**
     * <code>optional uint64 item_id = 1;</code>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 item_id = 1;</code>
     */
    public long getItemId() {
      return itemId_;
    }

    // optional uint32 attr_def_index = 2;
    public static final int ATTR_DEF_INDEX_FIELD_NUMBER = 2;
    private int attrDefIndex_;
    /**
     * <code>optional uint32 attr_def_index = 2;</code>
     */
    public boolean hasAttrDefIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 attr_def_index = 2;</code>
     */
    public int getAttrDefIndex() {
      return attrDefIndex_;
    }

    // optional uint32 required_type = 3;
    public static final int REQUIRED_TYPE_FIELD_NUMBER = 3;
    private int requiredType_;
    /**
     * <code>optional uint32 required_type = 3;</code>
     */
    public boolean hasRequiredType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 required_type = 3;</code>
     */
    public int getRequiredType() {
      return requiredType_;
    }

    // optional string required_hero = 4;
    public static final int REQUIRED_HERO_FIELD_NUMBER = 4;
    private java.lang.Object requiredHero_;
    /**
     * <code>optional string required_hero = 4;</code>
     */
    public boolean hasRequiredHero() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string required_hero = 4;</code>
     */
    public java.lang.String getRequiredHero() {
      java.lang.Object ref = requiredHero_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          requiredHero_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string required_hero = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRequiredHeroBytes() {
      java.lang.Object ref = requiredHero_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        requiredHero_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 gem_def_index = 5;
    public static final int GEM_DEF_INDEX_FIELD_NUMBER = 5;
    private int gemDefIndex_;
    /**
     * <code>optional uint32 gem_def_index = 5;</code>
     */
    public boolean hasGemDefIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 gem_def_index = 5;</code>
     */
    public int getGemDefIndex() {
      return gemDefIndex_;
    }

    // optional bool not_tradable = 6;
    public static final int NOT_TRADABLE_FIELD_NUMBER = 6;
    private boolean notTradable_;
    /**
     * <code>optional bool not_tradable = 6;</code>
     */
    public boolean hasNotTradable() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool not_tradable = 6;</code>
     */
    public boolean getNotTradable() {
      return notTradable_;
    }

    // optional string required_item_slot = 7;
    public static final int REQUIRED_ITEM_SLOT_FIELD_NUMBER = 7;
    private java.lang.Object requiredItemSlot_;
    /**
     * <code>optional string required_item_slot = 7;</code>
     */
    public boolean hasRequiredItemSlot() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string required_item_slot = 7;</code>
     */
    public java.lang.String getRequiredItemSlot() {
      java.lang.Object ref = requiredItemSlot_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          requiredItemSlot_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string required_item_slot = 7;</code>
     */
    public com.google.protobuf.ByteString
        getRequiredItemSlotBytes() {
      java.lang.Object ref = requiredItemSlot_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        requiredItemSlot_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      itemId_ = 0L;
      attrDefIndex_ = 0;
      requiredType_ = 0;
      requiredHero_ = "";
      gemDefIndex_ = 0;
      notTradable_ = false;
      requiredItemSlot_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, itemId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, attrDefIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, requiredType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getRequiredHeroBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, gemDefIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, notTradable_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getRequiredItemSlotBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, itemId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, attrDefIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, requiredType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getRequiredHeroBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, gemDefIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, notTradable_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getRequiredItemSlotBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemSocket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        attrDefIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        requiredType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        requiredHero_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        gemDefIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        notTradable_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        requiredItemSlot_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.attrDefIndex_ = attrDefIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.requiredType_ = requiredType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.requiredHero_ = requiredHero_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.gemDefIndex_ = gemDefIndex_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.notTradable_ = notTradable_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.requiredItemSlot_ = requiredItemSlot_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance()) return this;
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasAttrDefIndex()) {
          setAttrDefIndex(other.getAttrDefIndex());
        }
        if (other.hasRequiredType()) {
          setRequiredType(other.getRequiredType());
        }
        if (other.hasRequiredHero()) {
          bitField0_ |= 0x00000008;
          requiredHero_ = other.requiredHero_;
          onChanged();
        }
        if (other.hasGemDefIndex()) {
          setGemDefIndex(other.getGemDefIndex());
        }
        if (other.hasNotTradable()) {
          setNotTradable(other.getNotTradable());
        }
        if (other.hasRequiredItemSlot()) {
          bitField0_ |= 0x00000040;
          requiredItemSlot_ = other.requiredItemSlot_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 item_id = 1;
      private long itemId_ ;
      /**
       * <code>optional uint64 item_id = 1;</code>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 item_id = 1;</code>
       */
      public long getItemId() {
        return itemId_;
      }
      /**
       * <code>optional uint64 item_id = 1;</code>
       */
      public Builder setItemId(long value) {
        bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 item_id = 1;</code>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 attr_def_index = 2;
      private int attrDefIndex_ ;
      /**
       * <code>optional uint32 attr_def_index = 2;</code>
       */
      public boolean hasAttrDefIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 attr_def_index = 2;</code>
       */
      public int getAttrDefIndex() {
        return attrDefIndex_;
      }
      /**
       * <code>optional uint32 attr_def_index = 2;</code>
       */
      public Builder setAttrDefIndex(int value) {
        bitField0_ |= 0x00000002;
        attrDefIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attr_def_index = 2;</code>
       */
      public Builder clearAttrDefIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        attrDefIndex_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 required_type = 3;
      private int requiredType_ ;
      /**
       * <code>optional uint32 required_type = 3;</code>
       */
      public boolean hasRequiredType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 required_type = 3;</code>
       */
      public int getRequiredType() {
        return requiredType_;
      }
      /**
       * <code>optional uint32 required_type = 3;</code>
       */
      public Builder setRequiredType(int value) {
        bitField0_ |= 0x00000004;
        requiredType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 required_type = 3;</code>
       */
      public Builder clearRequiredType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        requiredType_ = 0;
        onChanged();
        return this;
      }

      // optional string required_hero = 4;
      private java.lang.Object requiredHero_ = "";
      /**
       * <code>optional string required_hero = 4;</code>
       */
      public boolean hasRequiredHero() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string required_hero = 4;</code>
       */
      public java.lang.String getRequiredHero() {
        java.lang.Object ref = requiredHero_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          requiredHero_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string required_hero = 4;</code>
       */
      public com.google.protobuf.ByteString
          getRequiredHeroBytes() {
        java.lang.Object ref = requiredHero_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          requiredHero_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string required_hero = 4;</code>
       */
      public Builder setRequiredHero(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        requiredHero_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string required_hero = 4;</code>
       */
      public Builder clearRequiredHero() {
        bitField0_ = (bitField0_ & ~0x00000008);
        requiredHero_ = getDefaultInstance().getRequiredHero();
        onChanged();
        return this;
      }
      /**
       * <code>optional string required_hero = 4;</code>
       */
      public Builder setRequiredHeroBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        requiredHero_ = value;
        onChanged();
        return this;
      }

      // optional uint32 gem_def_index = 5;
      private int gemDefIndex_ ;
      /**
       * <code>optional uint32 gem_def_index = 5;</code>
       */
      public boolean hasGemDefIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 gem_def_index = 5;</code>
       */
      public int getGemDefIndex() {
        return gemDefIndex_;
      }
      /**
       * <code>optional uint32 gem_def_index = 5;</code>
       */
      public Builder setGemDefIndex(int value) {
        bitField0_ |= 0x00000010;
        gemDefIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gem_def_index = 5;</code>
       */
      public Builder clearGemDefIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        gemDefIndex_ = 0;
        onChanged();
        return this;
      }

      // optional bool not_tradable = 6;
      private boolean notTradable_ ;
      /**
       * <code>optional bool not_tradable = 6;</code>
       */
      public boolean hasNotTradable() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool not_tradable = 6;</code>
       */
      public boolean getNotTradable() {
        return notTradable_;
      }
      /**
       * <code>optional bool not_tradable = 6;</code>
       */
      public Builder setNotTradable(boolean value) {
        bitField0_ |= 0x00000020;
        notTradable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool not_tradable = 6;</code>
       */
      public Builder clearNotTradable() {
        bitField0_ = (bitField0_ & ~0x00000020);
        notTradable_ = false;
        onChanged();
        return this;
      }

      // optional string required_item_slot = 7;
      private java.lang.Object requiredItemSlot_ = "";
      /**
       * <code>optional string required_item_slot = 7;</code>
       */
      public boolean hasRequiredItemSlot() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string required_item_slot = 7;</code>
       */
      public java.lang.String getRequiredItemSlot() {
        java.lang.Object ref = requiredItemSlot_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          requiredItemSlot_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string required_item_slot = 7;</code>
       */
      public com.google.protobuf.ByteString
          getRequiredItemSlotBytes() {
        java.lang.Object ref = requiredItemSlot_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          requiredItemSlot_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string required_item_slot = 7;</code>
       */
      public Builder setRequiredItemSlot(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        requiredItemSlot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string required_item_slot = 7;</code>
       */
      public Builder clearRequiredItemSlot() {
        bitField0_ = (bitField0_ & ~0x00000040);
        requiredItemSlot_ = getDefaultInstance().getRequiredItemSlot();
        onChanged();
        return this;
      }
      /**
       * <code>optional string required_item_slot = 7;</code>
       */
      public Builder setRequiredItemSlotBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        requiredItemSlot_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemSocket)
    }

    static {
      defaultInstance = new CProtoItemSocket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemSocket)
  }

  public interface CProtoItemSocket_EmptyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CProtoItemSocket socket = 1;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    boolean hasSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder();
  }
  /**
   * Protobuf type {@code CProtoItemSocket_Empty}
   */
  public static final class CProtoItemSocket_Empty extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemSocket_EmptyOrBuilder {
    // Use CProtoItemSocket_Empty.newBuilder() to construct.
    private CProtoItemSocket_Empty(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemSocket_Empty(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemSocket_Empty defaultInstance;
    public static CProtoItemSocket_Empty getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemSocket_Empty getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemSocket_Empty(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = socket_.toBuilder();
              }
              socket_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(socket_);
                socket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Empty_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Empty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemSocket_Empty> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemSocket_Empty>() {
      public CProtoItemSocket_Empty parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemSocket_Empty(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemSocket_Empty> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CProtoItemSocket socket = 1;
    public static final int SOCKET_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public boolean hasSocket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
      return socket_;
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
      return socket_;
    }

    private void initFields() {
      socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, socket_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, socket_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemSocket_Empty}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_EmptyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Empty_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Empty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSocketFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Empty_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (socketBuilder_ == null) {
          result.socket_ = socket_;
        } else {
          result.socket_ = socketBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty.getDefaultInstance()) return this;
        if (other.hasSocket()) {
          mergeSocket(other.getSocket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Empty) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CProtoItemSocket socket = 1;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> socketBuilder_;
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public boolean hasSocket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
        if (socketBuilder_ == null) {
          return socket_;
        } else {
          return socketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          socket_ = value;
          onChanged();
        } else {
          socketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder builderForValue) {
        if (socketBuilder_ == null) {
          socket_ = builderForValue.build();
          onChanged();
        } else {
          socketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder mergeSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              socket_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance()) {
            socket_ =
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.newBuilder(socket_).mergeFrom(value).buildPartial();
          } else {
            socket_ = value;
          }
          onChanged();
        } else {
          socketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder clearSocket() {
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
          onChanged();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder getSocketBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSocketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
        if (socketBuilder_ != null) {
          return socketBuilder_.getMessageOrBuilder();
        } else {
          return socket_;
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> 
          getSocketFieldBuilder() {
        if (socketBuilder_ == null) {
          socketBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder>(
                  socket_,
                  getParentForChildren(),
                  isClean());
          socket_ = null;
        }
        return socketBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemSocket_Empty)
    }

    static {
      defaultInstance = new CProtoItemSocket_Empty(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemSocket_Empty)
  }

  public interface CProtoItemSocket_EffectOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CProtoItemSocket socket = 1;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    boolean hasSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder();

    // optional uint32 effect = 2;
    /**
     * <code>optional uint32 effect = 2;</code>
     */
    boolean hasEffect();
    /**
     * <code>optional uint32 effect = 2;</code>
     */
    int getEffect();
  }
  /**
   * Protobuf type {@code CProtoItemSocket_Effect}
   */
  public static final class CProtoItemSocket_Effect extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemSocket_EffectOrBuilder {
    // Use CProtoItemSocket_Effect.newBuilder() to construct.
    private CProtoItemSocket_Effect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemSocket_Effect(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemSocket_Effect defaultInstance;
    public static CProtoItemSocket_Effect getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemSocket_Effect getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemSocket_Effect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = socket_.toBuilder();
              }
              socket_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(socket_);
                socket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              effect_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Effect_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Effect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemSocket_Effect> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemSocket_Effect>() {
      public CProtoItemSocket_Effect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemSocket_Effect(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemSocket_Effect> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CProtoItemSocket socket = 1;
    public static final int SOCKET_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public boolean hasSocket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
      return socket_;
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
      return socket_;
    }

    // optional uint32 effect = 2;
    public static final int EFFECT_FIELD_NUMBER = 2;
    private int effect_;
    /**
     * <code>optional uint32 effect = 2;</code>
     */
    public boolean hasEffect() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 effect = 2;</code>
     */
    public int getEffect() {
      return effect_;
    }

    private void initFields() {
      socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      effect_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, effect_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, effect_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemSocket_Effect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_EffectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Effect_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Effect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSocketFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        effect_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Effect_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (socketBuilder_ == null) {
          result.socket_ = socket_;
        } else {
          result.socket_ = socketBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.effect_ = effect_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect.getDefaultInstance()) return this;
        if (other.hasSocket()) {
          mergeSocket(other.getSocket());
        }
        if (other.hasEffect()) {
          setEffect(other.getEffect());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Effect) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CProtoItemSocket socket = 1;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> socketBuilder_;
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public boolean hasSocket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
        if (socketBuilder_ == null) {
          return socket_;
        } else {
          return socketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          socket_ = value;
          onChanged();
        } else {
          socketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder builderForValue) {
        if (socketBuilder_ == null) {
          socket_ = builderForValue.build();
          onChanged();
        } else {
          socketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder mergeSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              socket_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance()) {
            socket_ =
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.newBuilder(socket_).mergeFrom(value).buildPartial();
          } else {
            socket_ = value;
          }
          onChanged();
        } else {
          socketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder clearSocket() {
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
          onChanged();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder getSocketBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSocketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
        if (socketBuilder_ != null) {
          return socketBuilder_.getMessageOrBuilder();
        } else {
          return socket_;
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> 
          getSocketFieldBuilder() {
        if (socketBuilder_ == null) {
          socketBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder>(
                  socket_,
                  getParentForChildren(),
                  isClean());
          socket_ = null;
        }
        return socketBuilder_;
      }

      // optional uint32 effect = 2;
      private int effect_ ;
      /**
       * <code>optional uint32 effect = 2;</code>
       */
      public boolean hasEffect() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 effect = 2;</code>
       */
      public int getEffect() {
        return effect_;
      }
      /**
       * <code>optional uint32 effect = 2;</code>
       */
      public Builder setEffect(int value) {
        bitField0_ |= 0x00000002;
        effect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 effect = 2;</code>
       */
      public Builder clearEffect() {
        bitField0_ = (bitField0_ & ~0x00000002);
        effect_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemSocket_Effect)
    }

    static {
      defaultInstance = new CProtoItemSocket_Effect(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemSocket_Effect)
  }

  public interface CProtoItemSocket_ColorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CProtoItemSocket socket = 1;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    boolean hasSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder();

    // optional uint32 red = 2;
    /**
     * <code>optional uint32 red = 2;</code>
     */
    boolean hasRed();
    /**
     * <code>optional uint32 red = 2;</code>
     */
    int getRed();

    // optional uint32 green = 3;
    /**
     * <code>optional uint32 green = 3;</code>
     */
    boolean hasGreen();
    /**
     * <code>optional uint32 green = 3;</code>
     */
    int getGreen();

    // optional uint32 blue = 4;
    /**
     * <code>optional uint32 blue = 4;</code>
     */
    boolean hasBlue();
    /**
     * <code>optional uint32 blue = 4;</code>
     */
    int getBlue();
  }
  /**
   * Protobuf type {@code CProtoItemSocket_Color}
   */
  public static final class CProtoItemSocket_Color extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemSocket_ColorOrBuilder {
    // Use CProtoItemSocket_Color.newBuilder() to construct.
    private CProtoItemSocket_Color(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemSocket_Color(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemSocket_Color defaultInstance;
    public static CProtoItemSocket_Color getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemSocket_Color getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemSocket_Color(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = socket_.toBuilder();
              }
              socket_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(socket_);
                socket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              red_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              green_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              blue_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Color_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Color_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemSocket_Color> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemSocket_Color>() {
      public CProtoItemSocket_Color parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemSocket_Color(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemSocket_Color> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CProtoItemSocket socket = 1;
    public static final int SOCKET_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public boolean hasSocket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
      return socket_;
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
      return socket_;
    }

    // optional uint32 red = 2;
    public static final int RED_FIELD_NUMBER = 2;
    private int red_;
    /**
     * <code>optional uint32 red = 2;</code>
     */
    public boolean hasRed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 red = 2;</code>
     */
    public int getRed() {
      return red_;
    }

    // optional uint32 green = 3;
    public static final int GREEN_FIELD_NUMBER = 3;
    private int green_;
    /**
     * <code>optional uint32 green = 3;</code>
     */
    public boolean hasGreen() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 green = 3;</code>
     */
    public int getGreen() {
      return green_;
    }

    // optional uint32 blue = 4;
    public static final int BLUE_FIELD_NUMBER = 4;
    private int blue_;
    /**
     * <code>optional uint32 blue = 4;</code>
     */
    public boolean hasBlue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 blue = 4;</code>
     */
    public int getBlue() {
      return blue_;
    }

    private void initFields() {
      socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      red_ = 0;
      green_ = 0;
      blue_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, red_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, green_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, blue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, red_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, green_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, blue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemSocket_Color}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_ColorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Color_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Color_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSocketFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        red_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        green_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        blue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Color_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (socketBuilder_ == null) {
          result.socket_ = socket_;
        } else {
          result.socket_ = socketBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.red_ = red_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.green_ = green_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.blue_ = blue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color.getDefaultInstance()) return this;
        if (other.hasSocket()) {
          mergeSocket(other.getSocket());
        }
        if (other.hasRed()) {
          setRed(other.getRed());
        }
        if (other.hasGreen()) {
          setGreen(other.getGreen());
        }
        if (other.hasBlue()) {
          setBlue(other.getBlue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Color) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CProtoItemSocket socket = 1;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> socketBuilder_;
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public boolean hasSocket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
        if (socketBuilder_ == null) {
          return socket_;
        } else {
          return socketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          socket_ = value;
          onChanged();
        } else {
          socketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder builderForValue) {
        if (socketBuilder_ == null) {
          socket_ = builderForValue.build();
          onChanged();
        } else {
          socketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder mergeSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              socket_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance()) {
            socket_ =
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.newBuilder(socket_).mergeFrom(value).buildPartial();
          } else {
            socket_ = value;
          }
          onChanged();
        } else {
          socketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder clearSocket() {
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
          onChanged();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder getSocketBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSocketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
        if (socketBuilder_ != null) {
          return socketBuilder_.getMessageOrBuilder();
        } else {
          return socket_;
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> 
          getSocketFieldBuilder() {
        if (socketBuilder_ == null) {
          socketBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder>(
                  socket_,
                  getParentForChildren(),
                  isClean());
          socket_ = null;
        }
        return socketBuilder_;
      }

      // optional uint32 red = 2;
      private int red_ ;
      /**
       * <code>optional uint32 red = 2;</code>
       */
      public boolean hasRed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 red = 2;</code>
       */
      public int getRed() {
        return red_;
      }
      /**
       * <code>optional uint32 red = 2;</code>
       */
      public Builder setRed(int value) {
        bitField0_ |= 0x00000002;
        red_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 red = 2;</code>
       */
      public Builder clearRed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        red_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 green = 3;
      private int green_ ;
      /**
       * <code>optional uint32 green = 3;</code>
       */
      public boolean hasGreen() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 green = 3;</code>
       */
      public int getGreen() {
        return green_;
      }
      /**
       * <code>optional uint32 green = 3;</code>
       */
      public Builder setGreen(int value) {
        bitField0_ |= 0x00000004;
        green_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 green = 3;</code>
       */
      public Builder clearGreen() {
        bitField0_ = (bitField0_ & ~0x00000004);
        green_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 blue = 4;
      private int blue_ ;
      /**
       * <code>optional uint32 blue = 4;</code>
       */
      public boolean hasBlue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 blue = 4;</code>
       */
      public int getBlue() {
        return blue_;
      }
      /**
       * <code>optional uint32 blue = 4;</code>
       */
      public Builder setBlue(int value) {
        bitField0_ |= 0x00000008;
        blue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 blue = 4;</code>
       */
      public Builder clearBlue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        blue_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemSocket_Color)
    }

    static {
      defaultInstance = new CProtoItemSocket_Color(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemSocket_Color)
  }

  public interface CProtoItemSocket_StrangeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CProtoItemSocket socket = 1;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    boolean hasSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder();

    // optional uint32 strange_type = 2;
    /**
     * <code>optional uint32 strange_type = 2;</code>
     */
    boolean hasStrangeType();
    /**
     * <code>optional uint32 strange_type = 2;</code>
     */
    int getStrangeType();

    // optional uint32 strange_value = 3;
    /**
     * <code>optional uint32 strange_value = 3;</code>
     */
    boolean hasStrangeValue();
    /**
     * <code>optional uint32 strange_value = 3;</code>
     */
    int getStrangeValue();
  }
  /**
   * Protobuf type {@code CProtoItemSocket_Strange}
   */
  public static final class CProtoItemSocket_Strange extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemSocket_StrangeOrBuilder {
    // Use CProtoItemSocket_Strange.newBuilder() to construct.
    private CProtoItemSocket_Strange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemSocket_Strange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemSocket_Strange defaultInstance;
    public static CProtoItemSocket_Strange getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemSocket_Strange getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemSocket_Strange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = socket_.toBuilder();
              }
              socket_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(socket_);
                socket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              strangeType_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              strangeValue_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Strange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Strange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemSocket_Strange> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemSocket_Strange>() {
      public CProtoItemSocket_Strange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemSocket_Strange(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemSocket_Strange> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CProtoItemSocket socket = 1;
    public static final int SOCKET_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public boolean hasSocket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
      return socket_;
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
      return socket_;
    }

    // optional uint32 strange_type = 2;
    public static final int STRANGE_TYPE_FIELD_NUMBER = 2;
    private int strangeType_;
    /**
     * <code>optional uint32 strange_type = 2;</code>
     */
    public boolean hasStrangeType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 strange_type = 2;</code>
     */
    public int getStrangeType() {
      return strangeType_;
    }

    // optional uint32 strange_value = 3;
    public static final int STRANGE_VALUE_FIELD_NUMBER = 3;
    private int strangeValue_;
    /**
     * <code>optional uint32 strange_value = 3;</code>
     */
    public boolean hasStrangeValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 strange_value = 3;</code>
     */
    public int getStrangeValue() {
      return strangeValue_;
    }

    private void initFields() {
      socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      strangeType_ = 0;
      strangeValue_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, strangeType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, strangeValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, strangeType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, strangeValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemSocket_Strange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StrangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Strange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Strange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSocketFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        strangeType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        strangeValue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Strange_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (socketBuilder_ == null) {
          result.socket_ = socket_;
        } else {
          result.socket_ = socketBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.strangeType_ = strangeType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.strangeValue_ = strangeValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange.getDefaultInstance()) return this;
        if (other.hasSocket()) {
          mergeSocket(other.getSocket());
        }
        if (other.hasStrangeType()) {
          setStrangeType(other.getStrangeType());
        }
        if (other.hasStrangeValue()) {
          setStrangeValue(other.getStrangeValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Strange) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CProtoItemSocket socket = 1;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> socketBuilder_;
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public boolean hasSocket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
        if (socketBuilder_ == null) {
          return socket_;
        } else {
          return socketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          socket_ = value;
          onChanged();
        } else {
          socketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder builderForValue) {
        if (socketBuilder_ == null) {
          socket_ = builderForValue.build();
          onChanged();
        } else {
          socketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder mergeSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              socket_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance()) {
            socket_ =
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.newBuilder(socket_).mergeFrom(value).buildPartial();
          } else {
            socket_ = value;
          }
          onChanged();
        } else {
          socketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder clearSocket() {
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
          onChanged();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder getSocketBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSocketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
        if (socketBuilder_ != null) {
          return socketBuilder_.getMessageOrBuilder();
        } else {
          return socket_;
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> 
          getSocketFieldBuilder() {
        if (socketBuilder_ == null) {
          socketBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder>(
                  socket_,
                  getParentForChildren(),
                  isClean());
          socket_ = null;
        }
        return socketBuilder_;
      }

      // optional uint32 strange_type = 2;
      private int strangeType_ ;
      /**
       * <code>optional uint32 strange_type = 2;</code>
       */
      public boolean hasStrangeType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 strange_type = 2;</code>
       */
      public int getStrangeType() {
        return strangeType_;
      }
      /**
       * <code>optional uint32 strange_type = 2;</code>
       */
      public Builder setStrangeType(int value) {
        bitField0_ |= 0x00000002;
        strangeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 strange_type = 2;</code>
       */
      public Builder clearStrangeType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        strangeType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 strange_value = 3;
      private int strangeValue_ ;
      /**
       * <code>optional uint32 strange_value = 3;</code>
       */
      public boolean hasStrangeValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 strange_value = 3;</code>
       */
      public int getStrangeValue() {
        return strangeValue_;
      }
      /**
       * <code>optional uint32 strange_value = 3;</code>
       */
      public Builder setStrangeValue(int value) {
        bitField0_ |= 0x00000004;
        strangeValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 strange_value = 3;</code>
       */
      public Builder clearStrangeValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        strangeValue_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemSocket_Strange)
    }

    static {
      defaultInstance = new CProtoItemSocket_Strange(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemSocket_Strange)
  }

  public interface CProtoItemSocket_SpectatorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CProtoItemSocket socket = 1;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    boolean hasSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder();

    // optional uint32 games_viewed = 2;
    /**
     * <code>optional uint32 games_viewed = 2;</code>
     */
    boolean hasGamesViewed();
    /**
     * <code>optional uint32 games_viewed = 2;</code>
     */
    int getGamesViewed();

    // optional uint32 corporation_id = 3;
    /**
     * <code>optional uint32 corporation_id = 3;</code>
     */
    boolean hasCorporationId();
    /**
     * <code>optional uint32 corporation_id = 3;</code>
     */
    int getCorporationId();

    // optional uint32 league_id = 4;
    /**
     * <code>optional uint32 league_id = 4;</code>
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 4;</code>
     */
    int getLeagueId();

    // optional uint32 team_id = 5;
    /**
     * <code>optional uint32 team_id = 5;</code>
     */
    boolean hasTeamId();
    /**
     * <code>optional uint32 team_id = 5;</code>
     */
    int getTeamId();
  }
  /**
   * Protobuf type {@code CProtoItemSocket_Spectator}
   */
  public static final class CProtoItemSocket_Spectator extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemSocket_SpectatorOrBuilder {
    // Use CProtoItemSocket_Spectator.newBuilder() to construct.
    private CProtoItemSocket_Spectator(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemSocket_Spectator(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemSocket_Spectator defaultInstance;
    public static CProtoItemSocket_Spectator getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemSocket_Spectator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemSocket_Spectator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = socket_.toBuilder();
              }
              socket_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(socket_);
                socket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gamesViewed_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              corporationId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              leagueId_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              teamId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Spectator_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Spectator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemSocket_Spectator> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemSocket_Spectator>() {
      public CProtoItemSocket_Spectator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemSocket_Spectator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemSocket_Spectator> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CProtoItemSocket socket = 1;
    public static final int SOCKET_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public boolean hasSocket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
      return socket_;
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
      return socket_;
    }

    // optional uint32 games_viewed = 2;
    public static final int GAMES_VIEWED_FIELD_NUMBER = 2;
    private int gamesViewed_;
    /**
     * <code>optional uint32 games_viewed = 2;</code>
     */
    public boolean hasGamesViewed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 games_viewed = 2;</code>
     */
    public int getGamesViewed() {
      return gamesViewed_;
    }

    // optional uint32 corporation_id = 3;
    public static final int CORPORATION_ID_FIELD_NUMBER = 3;
    private int corporationId_;
    /**
     * <code>optional uint32 corporation_id = 3;</code>
     */
    public boolean hasCorporationId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 corporation_id = 3;</code>
     */
    public int getCorporationId() {
      return corporationId_;
    }

    // optional uint32 league_id = 4;
    public static final int LEAGUE_ID_FIELD_NUMBER = 4;
    private int leagueId_;
    /**
     * <code>optional uint32 league_id = 4;</code>
     */
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 league_id = 4;</code>
     */
    public int getLeagueId() {
      return leagueId_;
    }

    // optional uint32 team_id = 5;
    public static final int TEAM_ID_FIELD_NUMBER = 5;
    private int teamId_;
    /**
     * <code>optional uint32 team_id = 5;</code>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 team_id = 5;</code>
     */
    public int getTeamId() {
      return teamId_;
    }

    private void initFields() {
      socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      gamesViewed_ = 0;
      corporationId_ = 0;
      leagueId_ = 0;
      teamId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, gamesViewed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, corporationId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, leagueId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, teamId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gamesViewed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, corporationId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, leagueId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, teamId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemSocket_Spectator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_SpectatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Spectator_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Spectator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSocketFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        gamesViewed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        corporationId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        leagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        teamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Spectator_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (socketBuilder_ == null) {
          result.socket_ = socket_;
        } else {
          result.socket_ = socketBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gamesViewed_ = gamesViewed_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.corporationId_ = corporationId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.leagueId_ = leagueId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.teamId_ = teamId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator.getDefaultInstance()) return this;
        if (other.hasSocket()) {
          mergeSocket(other.getSocket());
        }
        if (other.hasGamesViewed()) {
          setGamesViewed(other.getGamesViewed());
        }
        if (other.hasCorporationId()) {
          setCorporationId(other.getCorporationId());
        }
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Spectator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CProtoItemSocket socket = 1;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> socketBuilder_;
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public boolean hasSocket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
        if (socketBuilder_ == null) {
          return socket_;
        } else {
          return socketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          socket_ = value;
          onChanged();
        } else {
          socketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder builderForValue) {
        if (socketBuilder_ == null) {
          socket_ = builderForValue.build();
          onChanged();
        } else {
          socketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder mergeSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              socket_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance()) {
            socket_ =
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.newBuilder(socket_).mergeFrom(value).buildPartial();
          } else {
            socket_ = value;
          }
          onChanged();
        } else {
          socketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder clearSocket() {
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
          onChanged();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder getSocketBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSocketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
        if (socketBuilder_ != null) {
          return socketBuilder_.getMessageOrBuilder();
        } else {
          return socket_;
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> 
          getSocketFieldBuilder() {
        if (socketBuilder_ == null) {
          socketBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder>(
                  socket_,
                  getParentForChildren(),
                  isClean());
          socket_ = null;
        }
        return socketBuilder_;
      }

      // optional uint32 games_viewed = 2;
      private int gamesViewed_ ;
      /**
       * <code>optional uint32 games_viewed = 2;</code>
       */
      public boolean hasGamesViewed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 games_viewed = 2;</code>
       */
      public int getGamesViewed() {
        return gamesViewed_;
      }
      /**
       * <code>optional uint32 games_viewed = 2;</code>
       */
      public Builder setGamesViewed(int value) {
        bitField0_ |= 0x00000002;
        gamesViewed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 games_viewed = 2;</code>
       */
      public Builder clearGamesViewed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gamesViewed_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 corporation_id = 3;
      private int corporationId_ ;
      /**
       * <code>optional uint32 corporation_id = 3;</code>
       */
      public boolean hasCorporationId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 corporation_id = 3;</code>
       */
      public int getCorporationId() {
        return corporationId_;
      }
      /**
       * <code>optional uint32 corporation_id = 3;</code>
       */
      public Builder setCorporationId(int value) {
        bitField0_ |= 0x00000004;
        corporationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 corporation_id = 3;</code>
       */
      public Builder clearCorporationId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        corporationId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 league_id = 4;
      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 4;</code>
       */
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 league_id = 4;</code>
       */
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 4;</code>
       */
      public Builder setLeagueId(int value) {
        bitField0_ |= 0x00000008;
        leagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 4;</code>
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 team_id = 5;
      private int teamId_ ;
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public Builder setTeamId(int value) {
        bitField0_ |= 0x00000010;
        teamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team_id = 5;</code>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        teamId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemSocket_Spectator)
    }

    static {
      defaultInstance = new CProtoItemSocket_Spectator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemSocket_Spectator)
  }

  public interface CProtoItemSocket_AssetModifierOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CProtoItemSocket socket = 1;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    boolean hasSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder();

    // optional uint32 asset_modifier = 2;
    /**
     * <code>optional uint32 asset_modifier = 2;</code>
     */
    boolean hasAssetModifier();
    /**
     * <code>optional uint32 asset_modifier = 2;</code>
     */
    int getAssetModifier();
  }
  /**
   * Protobuf type {@code CProtoItemSocket_AssetModifier}
   */
  public static final class CProtoItemSocket_AssetModifier extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemSocket_AssetModifierOrBuilder {
    // Use CProtoItemSocket_AssetModifier.newBuilder() to construct.
    private CProtoItemSocket_AssetModifier(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemSocket_AssetModifier(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemSocket_AssetModifier defaultInstance;
    public static CProtoItemSocket_AssetModifier getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemSocket_AssetModifier getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemSocket_AssetModifier(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = socket_.toBuilder();
              }
              socket_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(socket_);
                socket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              assetModifier_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_AssetModifier_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_AssetModifier_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemSocket_AssetModifier> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemSocket_AssetModifier>() {
      public CProtoItemSocket_AssetModifier parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemSocket_AssetModifier(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemSocket_AssetModifier> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CProtoItemSocket socket = 1;
    public static final int SOCKET_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public boolean hasSocket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
      return socket_;
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
      return socket_;
    }

    // optional uint32 asset_modifier = 2;
    public static final int ASSET_MODIFIER_FIELD_NUMBER = 2;
    private int assetModifier_;
    /**
     * <code>optional uint32 asset_modifier = 2;</code>
     */
    public boolean hasAssetModifier() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 asset_modifier = 2;</code>
     */
    public int getAssetModifier() {
      return assetModifier_;
    }

    private void initFields() {
      socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      assetModifier_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, assetModifier_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, assetModifier_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemSocket_AssetModifier}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifierOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_AssetModifier_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_AssetModifier_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSocketFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        assetModifier_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_AssetModifier_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (socketBuilder_ == null) {
          result.socket_ = socket_;
        } else {
          result.socket_ = socketBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.assetModifier_ = assetModifier_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier.getDefaultInstance()) return this;
        if (other.hasSocket()) {
          mergeSocket(other.getSocket());
        }
        if (other.hasAssetModifier()) {
          setAssetModifier(other.getAssetModifier());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CProtoItemSocket socket = 1;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> socketBuilder_;
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public boolean hasSocket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
        if (socketBuilder_ == null) {
          return socket_;
        } else {
          return socketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          socket_ = value;
          onChanged();
        } else {
          socketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder builderForValue) {
        if (socketBuilder_ == null) {
          socket_ = builderForValue.build();
          onChanged();
        } else {
          socketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder mergeSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              socket_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance()) {
            socket_ =
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.newBuilder(socket_).mergeFrom(value).buildPartial();
          } else {
            socket_ = value;
          }
          onChanged();
        } else {
          socketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder clearSocket() {
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
          onChanged();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder getSocketBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSocketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
        if (socketBuilder_ != null) {
          return socketBuilder_.getMessageOrBuilder();
        } else {
          return socket_;
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> 
          getSocketFieldBuilder() {
        if (socketBuilder_ == null) {
          socketBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder>(
                  socket_,
                  getParentForChildren(),
                  isClean());
          socket_ = null;
        }
        return socketBuilder_;
      }

      // optional uint32 asset_modifier = 2;
      private int assetModifier_ ;
      /**
       * <code>optional uint32 asset_modifier = 2;</code>
       */
      public boolean hasAssetModifier() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 asset_modifier = 2;</code>
       */
      public int getAssetModifier() {
        return assetModifier_;
      }
      /**
       * <code>optional uint32 asset_modifier = 2;</code>
       */
      public Builder setAssetModifier(int value) {
        bitField0_ |= 0x00000002;
        assetModifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 asset_modifier = 2;</code>
       */
      public Builder clearAssetModifier() {
        bitField0_ = (bitField0_ & ~0x00000002);
        assetModifier_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemSocket_AssetModifier)
    }

    static {
      defaultInstance = new CProtoItemSocket_AssetModifier(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemSocket_AssetModifier)
  }

  public interface CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLYOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CProtoItemSocket socket = 1;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    boolean hasSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder();

    // optional uint32 asset_modifier = 2;
    /**
     * <code>optional uint32 asset_modifier = 2;</code>
     */
    boolean hasAssetModifier();
    /**
     * <code>optional uint32 asset_modifier = 2;</code>
     */
    int getAssetModifier();

    // optional uint32 anim_modifier = 3;
    /**
     * <code>optional uint32 anim_modifier = 3;</code>
     */
    boolean hasAnimModifier();
    /**
     * <code>optional uint32 anim_modifier = 3;</code>
     */
    int getAnimModifier();

    // optional uint32 ability_effect = 4;
    /**
     * <code>optional uint32 ability_effect = 4;</code>
     */
    boolean hasAbilityEffect();
    /**
     * <code>optional uint32 ability_effect = 4;</code>
     */
    int getAbilityEffect();
  }
  /**
   * Protobuf type {@code CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY}
   */
  public static final class CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLYOrBuilder {
    // Use CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.newBuilder() to construct.
    private CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY defaultInstance;
    public static CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = socket_.toBuilder();
              }
              socket_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(socket_);
                socket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              assetModifier_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              animModifier_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              abilityEffect_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY>() {
      public CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CProtoItemSocket socket = 1;
    public static final int SOCKET_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public boolean hasSocket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
      return socket_;
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
      return socket_;
    }

    // optional uint32 asset_modifier = 2;
    public static final int ASSET_MODIFIER_FIELD_NUMBER = 2;
    private int assetModifier_;
    /**
     * <code>optional uint32 asset_modifier = 2;</code>
     */
    public boolean hasAssetModifier() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 asset_modifier = 2;</code>
     */
    public int getAssetModifier() {
      return assetModifier_;
    }

    // optional uint32 anim_modifier = 3;
    public static final int ANIM_MODIFIER_FIELD_NUMBER = 3;
    private int animModifier_;
    /**
     * <code>optional uint32 anim_modifier = 3;</code>
     */
    public boolean hasAnimModifier() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 anim_modifier = 3;</code>
     */
    public int getAnimModifier() {
      return animModifier_;
    }

    // optional uint32 ability_effect = 4;
    public static final int ABILITY_EFFECT_FIELD_NUMBER = 4;
    private int abilityEffect_;
    /**
     * <code>optional uint32 ability_effect = 4;</code>
     */
    public boolean hasAbilityEffect() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 ability_effect = 4;</code>
     */
    public int getAbilityEffect() {
      return abilityEffect_;
    }

    private void initFields() {
      socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      assetModifier_ = 0;
      animModifier_ = 0;
      abilityEffect_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, assetModifier_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, animModifier_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, abilityEffect_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, assetModifier_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, animModifier_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, abilityEffect_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLYOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSocketFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        assetModifier_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        animModifier_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        abilityEffect_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (socketBuilder_ == null) {
          result.socket_ = socket_;
        } else {
          result.socket_ = socketBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.assetModifier_ = assetModifier_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.animModifier_ = animModifier_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.abilityEffect_ = abilityEffect_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.getDefaultInstance()) return this;
        if (other.hasSocket()) {
          mergeSocket(other.getSocket());
        }
        if (other.hasAssetModifier()) {
          setAssetModifier(other.getAssetModifier());
        }
        if (other.hasAnimModifier()) {
          setAnimModifier(other.getAnimModifier());
        }
        if (other.hasAbilityEffect()) {
          setAbilityEffect(other.getAbilityEffect());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CProtoItemSocket socket = 1;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> socketBuilder_;
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public boolean hasSocket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
        if (socketBuilder_ == null) {
          return socket_;
        } else {
          return socketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          socket_ = value;
          onChanged();
        } else {
          socketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder builderForValue) {
        if (socketBuilder_ == null) {
          socket_ = builderForValue.build();
          onChanged();
        } else {
          socketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder mergeSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              socket_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance()) {
            socket_ =
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.newBuilder(socket_).mergeFrom(value).buildPartial();
          } else {
            socket_ = value;
          }
          onChanged();
        } else {
          socketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder clearSocket() {
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
          onChanged();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder getSocketBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSocketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
        if (socketBuilder_ != null) {
          return socketBuilder_.getMessageOrBuilder();
        } else {
          return socket_;
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> 
          getSocketFieldBuilder() {
        if (socketBuilder_ == null) {
          socketBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder>(
                  socket_,
                  getParentForChildren(),
                  isClean());
          socket_ = null;
        }
        return socketBuilder_;
      }

      // optional uint32 asset_modifier = 2;
      private int assetModifier_ ;
      /**
       * <code>optional uint32 asset_modifier = 2;</code>
       */
      public boolean hasAssetModifier() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 asset_modifier = 2;</code>
       */
      public int getAssetModifier() {
        return assetModifier_;
      }
      /**
       * <code>optional uint32 asset_modifier = 2;</code>
       */
      public Builder setAssetModifier(int value) {
        bitField0_ |= 0x00000002;
        assetModifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 asset_modifier = 2;</code>
       */
      public Builder clearAssetModifier() {
        bitField0_ = (bitField0_ & ~0x00000002);
        assetModifier_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 anim_modifier = 3;
      private int animModifier_ ;
      /**
       * <code>optional uint32 anim_modifier = 3;</code>
       */
      public boolean hasAnimModifier() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 anim_modifier = 3;</code>
       */
      public int getAnimModifier() {
        return animModifier_;
      }
      /**
       * <code>optional uint32 anim_modifier = 3;</code>
       */
      public Builder setAnimModifier(int value) {
        bitField0_ |= 0x00000004;
        animModifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 anim_modifier = 3;</code>
       */
      public Builder clearAnimModifier() {
        bitField0_ = (bitField0_ & ~0x00000004);
        animModifier_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 ability_effect = 4;
      private int abilityEffect_ ;
      /**
       * <code>optional uint32 ability_effect = 4;</code>
       */
      public boolean hasAbilityEffect() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 ability_effect = 4;</code>
       */
      public int getAbilityEffect() {
        return abilityEffect_;
      }
      /**
       * <code>optional uint32 ability_effect = 4;</code>
       */
      public Builder setAbilityEffect(int value) {
        bitField0_ |= 0x00000008;
        abilityEffect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability_effect = 4;</code>
       */
      public Builder clearAbilityEffect() {
        bitField0_ = (bitField0_ & ~0x00000008);
        abilityEffect_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
    }

    static {
      defaultInstance = new CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  }

  public interface CProtoItemSocket_AutographOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CProtoItemSocket socket = 1;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    boolean hasSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder();

    // optional string autograph = 2;
    /**
     * <code>optional string autograph = 2;</code>
     */
    boolean hasAutograph();
    /**
     * <code>optional string autograph = 2;</code>
     */
    java.lang.String getAutograph();
    /**
     * <code>optional string autograph = 2;</code>
     */
    com.google.protobuf.ByteString
        getAutographBytes();

    // optional uint32 autograph_id = 3;
    /**
     * <code>optional uint32 autograph_id = 3;</code>
     */
    boolean hasAutographId();
    /**
     * <code>optional uint32 autograph_id = 3;</code>
     */
    int getAutographId();
  }
  /**
   * Protobuf type {@code CProtoItemSocket_Autograph}
   */
  public static final class CProtoItemSocket_Autograph extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemSocket_AutographOrBuilder {
    // Use CProtoItemSocket_Autograph.newBuilder() to construct.
    private CProtoItemSocket_Autograph(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemSocket_Autograph(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemSocket_Autograph defaultInstance;
    public static CProtoItemSocket_Autograph getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemSocket_Autograph getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemSocket_Autograph(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = socket_.toBuilder();
              }
              socket_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(socket_);
                socket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              autograph_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              autographId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Autograph_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Autograph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemSocket_Autograph> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemSocket_Autograph>() {
      public CProtoItemSocket_Autograph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemSocket_Autograph(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemSocket_Autograph> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CProtoItemSocket socket = 1;
    public static final int SOCKET_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public boolean hasSocket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
      return socket_;
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
      return socket_;
    }

    // optional string autograph = 2;
    public static final int AUTOGRAPH_FIELD_NUMBER = 2;
    private java.lang.Object autograph_;
    /**
     * <code>optional string autograph = 2;</code>
     */
    public boolean hasAutograph() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string autograph = 2;</code>
     */
    public java.lang.String getAutograph() {
      java.lang.Object ref = autograph_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          autograph_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string autograph = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAutographBytes() {
      java.lang.Object ref = autograph_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        autograph_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint32 autograph_id = 3;
    public static final int AUTOGRAPH_ID_FIELD_NUMBER = 3;
    private int autographId_;
    /**
     * <code>optional uint32 autograph_id = 3;</code>
     */
    public boolean hasAutographId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 autograph_id = 3;</code>
     */
    public int getAutographId() {
      return autographId_;
    }

    private void initFields() {
      socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      autograph_ = "";
      autographId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAutographBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, autographId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, socket_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAutographBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, autographId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemSocket_Autograph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_AutographOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Autograph_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Autograph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSocketFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        autograph_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        autographId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_Autograph_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (socketBuilder_ == null) {
          result.socket_ = socket_;
        } else {
          result.socket_ = socketBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.autograph_ = autograph_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.autographId_ = autographId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph.getDefaultInstance()) return this;
        if (other.hasSocket()) {
          mergeSocket(other.getSocket());
        }
        if (other.hasAutograph()) {
          bitField0_ |= 0x00000002;
          autograph_ = other.autograph_;
          onChanged();
        }
        if (other.hasAutographId()) {
          setAutographId(other.getAutographId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_Autograph) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CProtoItemSocket socket = 1;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> socketBuilder_;
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public boolean hasSocket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
        if (socketBuilder_ == null) {
          return socket_;
        } else {
          return socketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          socket_ = value;
          onChanged();
        } else {
          socketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder builderForValue) {
        if (socketBuilder_ == null) {
          socket_ = builderForValue.build();
          onChanged();
        } else {
          socketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder mergeSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              socket_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance()) {
            socket_ =
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.newBuilder(socket_).mergeFrom(value).buildPartial();
          } else {
            socket_ = value;
          }
          onChanged();
        } else {
          socketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder clearSocket() {
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
          onChanged();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder getSocketBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSocketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
        if (socketBuilder_ != null) {
          return socketBuilder_.getMessageOrBuilder();
        } else {
          return socket_;
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> 
          getSocketFieldBuilder() {
        if (socketBuilder_ == null) {
          socketBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder>(
                  socket_,
                  getParentForChildren(),
                  isClean());
          socket_ = null;
        }
        return socketBuilder_;
      }

      // optional string autograph = 2;
      private java.lang.Object autograph_ = "";
      /**
       * <code>optional string autograph = 2;</code>
       */
      public boolean hasAutograph() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string autograph = 2;</code>
       */
      public java.lang.String getAutograph() {
        java.lang.Object ref = autograph_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          autograph_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string autograph = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAutographBytes() {
        java.lang.Object ref = autograph_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          autograph_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string autograph = 2;</code>
       */
      public Builder setAutograph(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        autograph_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string autograph = 2;</code>
       */
      public Builder clearAutograph() {
        bitField0_ = (bitField0_ & ~0x00000002);
        autograph_ = getDefaultInstance().getAutograph();
        onChanged();
        return this;
      }
      /**
       * <code>optional string autograph = 2;</code>
       */
      public Builder setAutographBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        autograph_ = value;
        onChanged();
        return this;
      }

      // optional uint32 autograph_id = 3;
      private int autographId_ ;
      /**
       * <code>optional uint32 autograph_id = 3;</code>
       */
      public boolean hasAutographId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 autograph_id = 3;</code>
       */
      public int getAutographId() {
        return autographId_;
      }
      /**
       * <code>optional uint32 autograph_id = 3;</code>
       */
      public Builder setAutographId(int value) {
        bitField0_ |= 0x00000004;
        autographId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 autograph_id = 3;</code>
       */
      public Builder clearAutographId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        autographId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemSocket_Autograph)
    }

    static {
      defaultInstance = new CProtoItemSocket_Autograph(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemSocket_Autograph)
  }

  public interface CProtoItemSocket_StaticVisualsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CProtoItemSocket socket = 1;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    boolean hasSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket();
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder();
  }
  /**
   * Protobuf type {@code CProtoItemSocket_StaticVisuals}
   */
  public static final class CProtoItemSocket_StaticVisuals extends
      com.google.protobuf.GeneratedMessage
      implements CProtoItemSocket_StaticVisualsOrBuilder {
    // Use CProtoItemSocket_StaticVisuals.newBuilder() to construct.
    private CProtoItemSocket_StaticVisuals(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CProtoItemSocket_StaticVisuals(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CProtoItemSocket_StaticVisuals defaultInstance;
    public static CProtoItemSocket_StaticVisuals getDefaultInstance() {
      return defaultInstance;
    }

    public CProtoItemSocket_StaticVisuals getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CProtoItemSocket_StaticVisuals(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = socket_.toBuilder();
              }
              socket_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(socket_);
                socket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_StaticVisuals_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_StaticVisuals_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals.Builder.class);
    }

    public static com.google.protobuf.Parser<CProtoItemSocket_StaticVisuals> PARSER =
        new com.google.protobuf.AbstractParser<CProtoItemSocket_StaticVisuals>() {
      public CProtoItemSocket_StaticVisuals parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CProtoItemSocket_StaticVisuals(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CProtoItemSocket_StaticVisuals> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .CProtoItemSocket socket = 1;
    public static final int SOCKET_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_;
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public boolean hasSocket() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
      return socket_;
    }
    /**
     * <code>optional .CProtoItemSocket socket = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
      return socket_;
    }

    private void initFields() {
      socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, socket_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, socket_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CProtoItemSocket_StaticVisuals}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisualsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_StaticVisuals_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_StaticVisuals_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSocketFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CProtoItemSocket_StaticVisuals_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (socketBuilder_ == null) {
          result.socket_ = socket_;
        } else {
          result.socket_ = socketBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals.getDefaultInstance()) return this;
        if (other.hasSocket()) {
          mergeSocket(other.getSocket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket_StaticVisuals) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CProtoItemSocket socket = 1;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> socketBuilder_;
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public boolean hasSocket() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket getSocket() {
        if (socketBuilder_ == null) {
          return socket_;
        } else {
          return socketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          socket_ = value;
          onChanged();
        } else {
          socketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder setSocket(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder builderForValue) {
        if (socketBuilder_ == null) {
          socket_ = builderForValue.build();
          onChanged();
        } else {
          socketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder mergeSocket(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket value) {
        if (socketBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              socket_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance()) {
            socket_ =
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.newBuilder(socket_).mergeFrom(value).buildPartial();
          } else {
            socket_ = value;
          }
          onChanged();
        } else {
          socketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public Builder clearSocket() {
        if (socketBuilder_ == null) {
          socket_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.getDefaultInstance();
          onChanged();
        } else {
          socketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder getSocketBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSocketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder getSocketOrBuilder() {
        if (socketBuilder_ != null) {
          return socketBuilder_.getMessageOrBuilder();
        } else {
          return socket_;
        }
      }
      /**
       * <code>optional .CProtoItemSocket socket = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder> 
          getSocketFieldBuilder() {
        if (socketBuilder_ == null) {
          socketBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocket.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CProtoItemSocketOrBuilder>(
                  socket_,
                  getParentForChildren(),
                  isClean());
          socket_ = null;
        }
        return socketBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CProtoItemSocket_StaticVisuals)
    }

    static {
      defaultInstance = new CProtoItemSocket_StaticVisuals(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CProtoItemSocket_StaticVisuals)
  }

  public interface CMatchPlayerAbilityUpgradeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 ability = 1;
    /**
     * <code>optional uint32 ability = 1;</code>
     */
    boolean hasAbility();
    /**
     * <code>optional uint32 ability = 1;</code>
     */
    int getAbility();

    // optional uint32 time = 2;
    /**
     * <code>optional uint32 time = 2;</code>
     */
    boolean hasTime();
    /**
     * <code>optional uint32 time = 2;</code>
     */
    int getTime();
  }
  /**
   * Protobuf type {@code CMatchPlayerAbilityUpgrade}
   */
  public static final class CMatchPlayerAbilityUpgrade extends
      com.google.protobuf.GeneratedMessage
      implements CMatchPlayerAbilityUpgradeOrBuilder {
    // Use CMatchPlayerAbilityUpgrade.newBuilder() to construct.
    private CMatchPlayerAbilityUpgrade(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMatchPlayerAbilityUpgrade(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMatchPlayerAbilityUpgrade defaultInstance;
    public static CMatchPlayerAbilityUpgrade getDefaultInstance() {
      return defaultInstance;
    }

    public CMatchPlayerAbilityUpgrade getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMatchPlayerAbilityUpgrade(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ability_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchPlayerAbilityUpgrade_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchPlayerAbilityUpgrade_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade.Builder.class);
    }

    public static com.google.protobuf.Parser<CMatchPlayerAbilityUpgrade> PARSER =
        new com.google.protobuf.AbstractParser<CMatchPlayerAbilityUpgrade>() {
      public CMatchPlayerAbilityUpgrade parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMatchPlayerAbilityUpgrade(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMatchPlayerAbilityUpgrade> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 ability = 1;
    public static final int ABILITY_FIELD_NUMBER = 1;
    private int ability_;
    /**
     * <code>optional uint32 ability = 1;</code>
     */
    public boolean hasAbility() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ability = 1;</code>
     */
    public int getAbility() {
      return ability_;
    }

    // optional uint32 time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <code>optional uint32 time = 2;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 time = 2;</code>
     */
    public int getTime() {
      return time_;
    }

    private void initFields() {
      ability_ = 0;
      time_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, ability_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, time_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ability_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, time_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMatchPlayerAbilityUpgrade}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgradeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchPlayerAbilityUpgrade_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchPlayerAbilityUpgrade_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ability_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchPlayerAbilityUpgrade_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ability_ = ability_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade.getDefaultInstance()) return this;
        if (other.hasAbility()) {
          setAbility(other.getAbility());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchPlayerAbilityUpgrade) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 ability = 1;
      private int ability_ ;
      /**
       * <code>optional uint32 ability = 1;</code>
       */
      public boolean hasAbility() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ability = 1;</code>
       */
      public int getAbility() {
        return ability_;
      }
      /**
       * <code>optional uint32 ability = 1;</code>
       */
      public Builder setAbility(int value) {
        bitField0_ |= 0x00000001;
        ability_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability = 1;</code>
       */
      public Builder clearAbility() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ability_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 time = 2;
      private int time_ ;
      /**
       * <code>optional uint32 time = 2;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 time = 2;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>optional uint32 time = 2;</code>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 time = 2;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMatchPlayerAbilityUpgrade)
    }

    static {
      defaultInstance = new CMatchPlayerAbilityUpgrade(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMatchPlayerAbilityUpgrade)
  }

  public interface CMatchAdditionalUnitInventoryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string unit_name = 1;
    /**
     * <code>optional string unit_name = 1;</code>
     */
    boolean hasUnitName();
    /**
     * <code>optional string unit_name = 1;</code>
     */
    java.lang.String getUnitName();
    /**
     * <code>optional string unit_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getUnitNameBytes();

    // repeated uint32 items = 2;
    /**
     * <code>repeated uint32 items = 2;</code>
     */
    java.util.List<java.lang.Integer> getItemsList();
    /**
     * <code>repeated uint32 items = 2;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated uint32 items = 2;</code>
     */
    int getItems(int index);
  }
  /**
   * Protobuf type {@code CMatchAdditionalUnitInventory}
   */
  public static final class CMatchAdditionalUnitInventory extends
      com.google.protobuf.GeneratedMessage
      implements CMatchAdditionalUnitInventoryOrBuilder {
    // Use CMatchAdditionalUnitInventory.newBuilder() to construct.
    private CMatchAdditionalUnitInventory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMatchAdditionalUnitInventory(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMatchAdditionalUnitInventory defaultInstance;
    public static CMatchAdditionalUnitInventory getDefaultInstance() {
      return defaultInstance;
    }

    public CMatchAdditionalUnitInventory getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMatchAdditionalUnitInventory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              unitName_ = input.readBytes();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                items_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              items_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                items_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                items_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchAdditionalUnitInventory_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchAdditionalUnitInventory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory.Builder.class);
    }

    public static com.google.protobuf.Parser<CMatchAdditionalUnitInventory> PARSER =
        new com.google.protobuf.AbstractParser<CMatchAdditionalUnitInventory>() {
      public CMatchAdditionalUnitInventory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMatchAdditionalUnitInventory(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMatchAdditionalUnitInventory> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string unit_name = 1;
    public static final int UNIT_NAME_FIELD_NUMBER = 1;
    private java.lang.Object unitName_;
    /**
     * <code>optional string unit_name = 1;</code>
     */
    public boolean hasUnitName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string unit_name = 1;</code>
     */
    public java.lang.String getUnitName() {
      java.lang.Object ref = unitName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          unitName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string unit_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUnitNameBytes() {
      java.lang.Object ref = unitName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        unitName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated uint32 items = 2;
    public static final int ITEMS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> items_;
    /**
     * <code>repeated uint32 items = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getItemsList() {
      return items_;
    }
    /**
     * <code>repeated uint32 items = 2;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated uint32 items = 2;</code>
     */
    public int getItems(int index) {
      return items_.get(index);
    }

    private void initFields() {
      unitName_ = "";
      items_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUnitNameBytes());
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeUInt32(2, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUnitNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < items_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(items_.get(i));
        }
        size += dataSize;
        size += 1 * getItemsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMatchAdditionalUnitInventory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchAdditionalUnitInventory_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchAdditionalUnitInventory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        unitName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        items_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchAdditionalUnitInventory_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitName_ = unitName_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          items_ = java.util.Collections.unmodifiableList(items_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.items_ = items_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory.getDefaultInstance()) return this;
        if (other.hasUnitName()) {
          bitField0_ |= 0x00000001;
          unitName_ = other.unitName_;
          onChanged();
        }
        if (!other.items_.isEmpty()) {
          if (items_.isEmpty()) {
            items_ = other.items_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureItemsIsMutable();
            items_.addAll(other.items_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchAdditionalUnitInventory) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string unit_name = 1;
      private java.lang.Object unitName_ = "";
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public boolean hasUnitName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public java.lang.String getUnitName() {
        java.lang.Object ref = unitName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          unitName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUnitNameBytes() {
        java.lang.Object ref = unitName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          unitName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public Builder setUnitName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        unitName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public Builder clearUnitName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitName_ = getDefaultInstance().getUnitName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public Builder setUnitNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        unitName_ = value;
        onChanged();
        return this;
      }

      // repeated uint32 items = 2;
      private java.util.List<java.lang.Integer> items_ = java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          items_ = new java.util.ArrayList<java.lang.Integer>(items_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 items = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getItemsList() {
        return java.util.Collections.unmodifiableList(items_);
      }
      /**
       * <code>repeated uint32 items = 2;</code>
       */
      public int getItemsCount() {
        return items_.size();
      }
      /**
       * <code>repeated uint32 items = 2;</code>
       */
      public int getItems(int index) {
        return items_.get(index);
      }
      /**
       * <code>repeated uint32 items = 2;</code>
       */
      public Builder setItems(
          int index, int value) {
        ensureItemsIsMutable();
        items_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 items = 2;</code>
       */
      public Builder addItems(int value) {
        ensureItemsIsMutable();
        items_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 items = 2;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemsIsMutable();
        super.addAll(values, items_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 items = 2;</code>
       */
      public Builder clearItems() {
        items_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMatchAdditionalUnitInventory)
    }

    static {
      defaultInstance = new CMatchAdditionalUnitInventory(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMatchAdditionalUnitInventory)
  }

  public interface CMatchHeroSelectEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool is_pick = 1;
    /**
     * <code>optional bool is_pick = 1;</code>
     */
    boolean hasIsPick();
    /**
     * <code>optional bool is_pick = 1;</code>
     */
    boolean getIsPick();

    // optional uint32 team = 2;
    /**
     * <code>optional uint32 team = 2;</code>
     */
    boolean hasTeam();
    /**
     * <code>optional uint32 team = 2;</code>
     */
    int getTeam();

    // optional uint32 hero_id = 3;
    /**
     * <code>optional uint32 hero_id = 3;</code>
     */
    boolean hasHeroId();
    /**
     * <code>optional uint32 hero_id = 3;</code>
     */
    int getHeroId();
  }
  /**
   * Protobuf type {@code CMatchHeroSelectEvent}
   */
  public static final class CMatchHeroSelectEvent extends
      com.google.protobuf.GeneratedMessage
      implements CMatchHeroSelectEventOrBuilder {
    // Use CMatchHeroSelectEvent.newBuilder() to construct.
    private CMatchHeroSelectEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMatchHeroSelectEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMatchHeroSelectEvent defaultInstance;
    public static CMatchHeroSelectEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CMatchHeroSelectEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMatchHeroSelectEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isPick_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              team_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              heroId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchHeroSelectEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchHeroSelectEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<CMatchHeroSelectEvent> PARSER =
        new com.google.protobuf.AbstractParser<CMatchHeroSelectEvent>() {
      public CMatchHeroSelectEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMatchHeroSelectEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMatchHeroSelectEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool is_pick = 1;
    public static final int IS_PICK_FIELD_NUMBER = 1;
    private boolean isPick_;
    /**
     * <code>optional bool is_pick = 1;</code>
     */
    public boolean hasIsPick() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool is_pick = 1;</code>
     */
    public boolean getIsPick() {
      return isPick_;
    }

    // optional uint32 team = 2;
    public static final int TEAM_FIELD_NUMBER = 2;
    private int team_;
    /**
     * <code>optional uint32 team = 2;</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team = 2;</code>
     */
    public int getTeam() {
      return team_;
    }

    // optional uint32 hero_id = 3;
    public static final int HERO_ID_FIELD_NUMBER = 3;
    private int heroId_;
    /**
     * <code>optional uint32 hero_id = 3;</code>
     */
    public boolean hasHeroId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 hero_id = 3;</code>
     */
    public int getHeroId() {
      return heroId_;
    }

    private void initFields() {
      isPick_ = false;
      team_ = 0;
      heroId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isPick_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, team_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, heroId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isPick_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, team_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, heroId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMatchHeroSelectEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchHeroSelectEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchHeroSelectEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isPick_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        heroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMatchHeroSelectEvent_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isPick_ = isPick_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.team_ = team_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.heroId_ = heroId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent.getDefaultInstance()) return this;
        if (other.hasIsPick()) {
          setIsPick(other.getIsPick());
        }
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        if (other.hasHeroId()) {
          setHeroId(other.getHeroId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMatchHeroSelectEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool is_pick = 1;
      private boolean isPick_ ;
      /**
       * <code>optional bool is_pick = 1;</code>
       */
      public boolean hasIsPick() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool is_pick = 1;</code>
       */
      public boolean getIsPick() {
        return isPick_;
      }
      /**
       * <code>optional bool is_pick = 1;</code>
       */
      public Builder setIsPick(boolean value) {
        bitField0_ |= 0x00000001;
        isPick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_pick = 1;</code>
       */
      public Builder clearIsPick() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isPick_ = false;
        onChanged();
        return this;
      }

      // optional uint32 team = 2;
      private int team_ ;
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public int getTeam() {
        return team_;
      }
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public Builder setTeam(int value) {
        bitField0_ |= 0x00000002;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000002);
        team_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 hero_id = 3;
      private int heroId_ ;
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      public int getHeroId() {
        return heroId_;
      }
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      public Builder setHeroId(int value) {
        bitField0_ |= 0x00000004;
        heroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      public Builder clearHeroId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heroId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMatchHeroSelectEvent)
    }

    static {
      defaultInstance = new CMatchHeroSelectEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMatchHeroSelectEvent)
  }

  public interface CMsgDOTAProcessFantasyScheduledEventOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 event = 1;
    /**
     * <code>optional uint32 event = 1;</code>
     */
    boolean hasEvent();
    /**
     * <code>optional uint32 event = 1;</code>
     */
    int getEvent();

    // optional uint32 timestamp = 2;
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    int getTimestamp();

    // optional uint32 fantasy_league_id = 3;
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    int getFantasyLeagueId();

    // optional uint32 season = 4;
    /**
     * <code>optional uint32 season = 4;</code>
     */
    boolean hasSeason();
    /**
     * <code>optional uint32 season = 4;</code>
     */
    int getSeason();

    // optional uint32 reference_data = 5;
    /**
     * <code>optional uint32 reference_data = 5;</code>
     */
    boolean hasReferenceData();
    /**
     * <code>optional uint32 reference_data = 5;</code>
     */
    int getReferenceData();
  }
  /**
   * Protobuf type {@code CMsgDOTAProcessFantasyScheduledEvent}
   */
  public static final class CMsgDOTAProcessFantasyScheduledEvent extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTAProcessFantasyScheduledEventOrBuilder {
    // Use CMsgDOTAProcessFantasyScheduledEvent.newBuilder() to construct.
    private CMsgDOTAProcessFantasyScheduledEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAProcessFantasyScheduledEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAProcessFantasyScheduledEvent defaultInstance;
    public static CMsgDOTAProcessFantasyScheduledEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAProcessFantasyScheduledEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAProcessFantasyScheduledEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              event_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              season_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              referenceData_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProcessFantasyScheduledEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProcessFantasyScheduledEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAProcessFantasyScheduledEvent> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAProcessFantasyScheduledEvent>() {
      public CMsgDOTAProcessFantasyScheduledEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAProcessFantasyScheduledEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAProcessFantasyScheduledEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 event = 1;
    public static final int EVENT_FIELD_NUMBER = 1;
    private int event_;
    /**
     * <code>optional uint32 event = 1;</code>
     */
    public boolean hasEvent() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 event = 1;</code>
     */
    public int getEvent() {
      return event_;
    }

    // optional uint32 timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private int timestamp_;
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    // optional uint32 fantasy_league_id = 3;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 3;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    // optional uint32 season = 4;
    public static final int SEASON_FIELD_NUMBER = 4;
    private int season_;
    /**
     * <code>optional uint32 season = 4;</code>
     */
    public boolean hasSeason() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 season = 4;</code>
     */
    public int getSeason() {
      return season_;
    }

    // optional uint32 reference_data = 5;
    public static final int REFERENCE_DATA_FIELD_NUMBER = 5;
    private int referenceData_;
    /**
     * <code>optional uint32 reference_data = 5;</code>
     */
    public boolean hasReferenceData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 reference_data = 5;</code>
     */
    public int getReferenceData() {
      return referenceData_;
    }

    private void initFields() {
      event_ = 0;
      timestamp_ = 0;
      fantasyLeagueId_ = 0;
      season_ = 0;
      referenceData_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, event_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, season_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, referenceData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, event_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, fantasyLeagueId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, season_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, referenceData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAProcessFantasyScheduledEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProcessFantasyScheduledEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProcessFantasyScheduledEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        event_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        season_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        referenceData_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProcessFantasyScheduledEvent_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.event_ = event_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.season_ = season_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.referenceData_ = referenceData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent.getDefaultInstance()) return this;
        if (other.hasEvent()) {
          setEvent(other.getEvent());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        if (other.hasSeason()) {
          setSeason(other.getSeason());
        }
        if (other.hasReferenceData()) {
          setReferenceData(other.getReferenceData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProcessFantasyScheduledEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 event = 1;
      private int event_ ;
      /**
       * <code>optional uint32 event = 1;</code>
       */
      public boolean hasEvent() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 event = 1;</code>
       */
      public int getEvent() {
        return event_;
      }
      /**
       * <code>optional uint32 event = 1;</code>
       */
      public Builder setEvent(int value) {
        bitField0_ |= 0x00000001;
        event_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event = 1;</code>
       */
      public Builder clearEvent() {
        bitField0_ = (bitField0_ & ~0x00000001);
        event_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 timestamp = 2;
      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 fantasy_league_id = 3;
      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000004;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 season = 4;
      private int season_ ;
      /**
       * <code>optional uint32 season = 4;</code>
       */
      public boolean hasSeason() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 season = 4;</code>
       */
      public int getSeason() {
        return season_;
      }
      /**
       * <code>optional uint32 season = 4;</code>
       */
      public Builder setSeason(int value) {
        bitField0_ |= 0x00000008;
        season_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 season = 4;</code>
       */
      public Builder clearSeason() {
        bitField0_ = (bitField0_ & ~0x00000008);
        season_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 reference_data = 5;
      private int referenceData_ ;
      /**
       * <code>optional uint32 reference_data = 5;</code>
       */
      public boolean hasReferenceData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 reference_data = 5;</code>
       */
      public int getReferenceData() {
        return referenceData_;
      }
      /**
       * <code>optional uint32 reference_data = 5;</code>
       */
      public Builder setReferenceData(int value) {
        bitField0_ |= 0x00000010;
        referenceData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 reference_data = 5;</code>
       */
      public Builder clearReferenceData() {
        bitField0_ = (bitField0_ & ~0x00000010);
        referenceData_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAProcessFantasyScheduledEvent)
    }

    static {
      defaultInstance = new CMsgDOTAProcessFantasyScheduledEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAProcessFantasyScheduledEvent)
  }

  public interface CMsgDOTAHasItemQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 account_id = 1;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    // optional uint64 item_id = 2;
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    boolean hasItemId();
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    long getItemId();
  }
  /**
   * Protobuf type {@code CMsgDOTAHasItemQuery}
   */
  public static final class CMsgDOTAHasItemQuery extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTAHasItemQueryOrBuilder {
    // Use CMsgDOTAHasItemQuery.newBuilder() to construct.
    private CMsgDOTAHasItemQuery(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAHasItemQuery(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAHasItemQuery defaultInstance;
    public static CMsgDOTAHasItemQuery getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAHasItemQuery getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAHasItemQuery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemQuery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAHasItemQuery> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAHasItemQuery>() {
      public CMsgDOTAHasItemQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAHasItemQuery(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAHasItemQuery> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    // optional uint64 item_id = 2;
    public static final int ITEM_ID_FIELD_NUMBER = 2;
    private long itemId_;
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    public long getItemId() {
      return itemId_;
    }

    private void initFields() {
      accountId_ = 0;
      itemId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, itemId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, itemId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAHasItemQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemQuery_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemQuery_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemId_ = itemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemQuery) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 account_id = 1;
      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 item_id = 2;
      private long itemId_ ;
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public long getItemId() {
        return itemId_;
      }
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public Builder setItemId(long value) {
        bitField0_ |= 0x00000002;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAHasItemQuery)
    }

    static {
      defaultInstance = new CMsgDOTAHasItemQuery(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAHasItemQuery)
  }

  public interface CMsgDOTAHasItemResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool has_item = 1;
    /**
     * <code>optional bool has_item = 1;</code>
     */
    boolean hasHasItem();
    /**
     * <code>optional bool has_item = 1;</code>
     */
    boolean getHasItem();
  }
  /**
   * Protobuf type {@code CMsgDOTAHasItemResponse}
   */
  public static final class CMsgDOTAHasItemResponse extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTAHasItemResponseOrBuilder {
    // Use CMsgDOTAHasItemResponse.newBuilder() to construct.
    private CMsgDOTAHasItemResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAHasItemResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAHasItemResponse defaultInstance;
    public static CMsgDOTAHasItemResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAHasItemResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAHasItemResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              hasItem_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAHasItemResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAHasItemResponse>() {
      public CMsgDOTAHasItemResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAHasItemResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAHasItemResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool has_item = 1;
    public static final int HAS_ITEM_FIELD_NUMBER = 1;
    private boolean hasItem_;
    /**
     * <code>optional bool has_item = 1;</code>
     */
    public boolean hasHasItem() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool has_item = 1;</code>
     */
    public boolean getHasItem() {
      return hasItem_;
    }

    private void initFields() {
      hasItem_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, hasItem_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, hasItem_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAHasItemResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hasItem_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemResponse_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hasItem_ = hasItem_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse.getDefaultInstance()) return this;
        if (other.hasHasItem()) {
          setHasItem(other.getHasItem());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool has_item = 1;
      private boolean hasItem_ ;
      /**
       * <code>optional bool has_item = 1;</code>
       */
      public boolean hasHasItem() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool has_item = 1;</code>
       */
      public boolean getHasItem() {
        return hasItem_;
      }
      /**
       * <code>optional bool has_item = 1;</code>
       */
      public Builder setHasItem(boolean value) {
        bitField0_ |= 0x00000001;
        hasItem_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool has_item = 1;</code>
       */
      public Builder clearHasItem() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hasItem_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAHasItemResponse)
    }

    static {
      defaultInstance = new CMsgDOTAHasItemResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAHasItemResponse)
  }

  public interface CMsgDOTAHasItemDefsQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 account_id = 1;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    // repeated uint32 itemdef_ids = 2;
    /**
     * <code>repeated uint32 itemdef_ids = 2;</code>
     */
    java.util.List<java.lang.Integer> getItemdefIdsList();
    /**
     * <code>repeated uint32 itemdef_ids = 2;</code>
     */
    int getItemdefIdsCount();
    /**
     * <code>repeated uint32 itemdef_ids = 2;</code>
     */
    int getItemdefIds(int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAHasItemDefsQuery}
   */
  public static final class CMsgDOTAHasItemDefsQuery extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTAHasItemDefsQueryOrBuilder {
    // Use CMsgDOTAHasItemDefsQuery.newBuilder() to construct.
    private CMsgDOTAHasItemDefsQuery(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAHasItemDefsQuery(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAHasItemDefsQuery defaultInstance;
    public static CMsgDOTAHasItemDefsQuery getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAHasItemDefsQuery getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAHasItemDefsQuery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                itemdefIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              itemdefIds_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                itemdefIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                itemdefIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          itemdefIds_ = java.util.Collections.unmodifiableList(itemdefIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemDefsQuery_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemDefsQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAHasItemDefsQuery> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAHasItemDefsQuery>() {
      public CMsgDOTAHasItemDefsQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAHasItemDefsQuery(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAHasItemDefsQuery> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    // repeated uint32 itemdef_ids = 2;
    public static final int ITEMDEF_IDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> itemdefIds_;
    /**
     * <code>repeated uint32 itemdef_ids = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getItemdefIdsList() {
      return itemdefIds_;
    }
    /**
     * <code>repeated uint32 itemdef_ids = 2;</code>
     */
    public int getItemdefIdsCount() {
      return itemdefIds_.size();
    }
    /**
     * <code>repeated uint32 itemdef_ids = 2;</code>
     */
    public int getItemdefIds(int index) {
      return itemdefIds_.get(index);
    }

    private void initFields() {
      accountId_ = 0;
      itemdefIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      for (int i = 0; i < itemdefIds_.size(); i++) {
        output.writeUInt32(2, itemdefIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < itemdefIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(itemdefIds_.get(i));
        }
        size += dataSize;
        size += 1 * getItemdefIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAHasItemDefsQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemDefsQuery_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemDefsQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemdefIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemDefsQuery_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          itemdefIds_ = java.util.Collections.unmodifiableList(itemdefIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.itemdefIds_ = itemdefIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (!other.itemdefIds_.isEmpty()) {
          if (itemdefIds_.isEmpty()) {
            itemdefIds_ = other.itemdefIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureItemdefIdsIsMutable();
            itemdefIds_.addAll(other.itemdefIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsQuery) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 account_id = 1;
      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 itemdef_ids = 2;
      private java.util.List<java.lang.Integer> itemdefIds_ = java.util.Collections.emptyList();
      private void ensureItemdefIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          itemdefIds_ = new java.util.ArrayList<java.lang.Integer>(itemdefIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 itemdef_ids = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getItemdefIdsList() {
        return java.util.Collections.unmodifiableList(itemdefIds_);
      }
      /**
       * <code>repeated uint32 itemdef_ids = 2;</code>
       */
      public int getItemdefIdsCount() {
        return itemdefIds_.size();
      }
      /**
       * <code>repeated uint32 itemdef_ids = 2;</code>
       */
      public int getItemdefIds(int index) {
        return itemdefIds_.get(index);
      }
      /**
       * <code>repeated uint32 itemdef_ids = 2;</code>
       */
      public Builder setItemdefIds(
          int index, int value) {
        ensureItemdefIdsIsMutable();
        itemdefIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 itemdef_ids = 2;</code>
       */
      public Builder addItemdefIds(int value) {
        ensureItemdefIdsIsMutable();
        itemdefIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 itemdef_ids = 2;</code>
       */
      public Builder addAllItemdefIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemdefIdsIsMutable();
        super.addAll(values, itemdefIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 itemdef_ids = 2;</code>
       */
      public Builder clearItemdefIds() {
        itemdefIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAHasItemDefsQuery)
    }

    static {
      defaultInstance = new CMsgDOTAHasItemDefsQuery(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAHasItemDefsQuery)
  }

  public interface CMsgDOTAHasItemDefsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool has_items = 1;
    /**
     * <code>optional bool has_items = 1;</code>
     */
    boolean hasHasItems();
    /**
     * <code>optional bool has_items = 1;</code>
     */
    boolean getHasItems();
  }
  /**
   * Protobuf type {@code CMsgDOTAHasItemDefsResponse}
   */
  public static final class CMsgDOTAHasItemDefsResponse extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTAHasItemDefsResponseOrBuilder {
    // Use CMsgDOTAHasItemDefsResponse.newBuilder() to construct.
    private CMsgDOTAHasItemDefsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAHasItemDefsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAHasItemDefsResponse defaultInstance;
    public static CMsgDOTAHasItemDefsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAHasItemDefsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAHasItemDefsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              hasItems_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemDefsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemDefsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAHasItemDefsResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAHasItemDefsResponse>() {
      public CMsgDOTAHasItemDefsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAHasItemDefsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAHasItemDefsResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool has_items = 1;
    public static final int HAS_ITEMS_FIELD_NUMBER = 1;
    private boolean hasItems_;
    /**
     * <code>optional bool has_items = 1;</code>
     */
    public boolean hasHasItems() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool has_items = 1;</code>
     */
    public boolean getHasItems() {
      return hasItems_;
    }

    private void initFields() {
      hasItems_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, hasItems_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, hasItems_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAHasItemDefsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemDefsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemDefsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        hasItems_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAHasItemDefsResponse_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hasItems_ = hasItems_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse.getDefaultInstance()) return this;
        if (other.hasHasItems()) {
          setHasItems(other.getHasItems());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAHasItemDefsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool has_items = 1;
      private boolean hasItems_ ;
      /**
       * <code>optional bool has_items = 1;</code>
       */
      public boolean hasHasItems() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool has_items = 1;</code>
       */
      public boolean getHasItems() {
        return hasItems_;
      }
      /**
       * <code>optional bool has_items = 1;</code>
       */
      public Builder setHasItems(boolean value) {
        bitField0_ |= 0x00000001;
        hasItems_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool has_items = 1;</code>
       */
      public Builder clearHasItems() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hasItems_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAHasItemDefsResponse)
    }

    static {
      defaultInstance = new CMsgDOTAHasItemDefsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAHasItemDefsResponse)
  }

  public interface CMsgDOTAConsumeFantasyTicketOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 account_id = 1;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    // optional uint64 item_id = 2;
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    boolean hasItemId();
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    long getItemId();

    // optional uint32 fantasy_league_id = 3;
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAConsumeFantasyTicket}
   */
  public static final class CMsgDOTAConsumeFantasyTicket extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTAConsumeFantasyTicketOrBuilder {
    // Use CMsgDOTAConsumeFantasyTicket.newBuilder() to construct.
    private CMsgDOTAConsumeFantasyTicket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAConsumeFantasyTicket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAConsumeFantasyTicket defaultInstance;
    public static CMsgDOTAConsumeFantasyTicket getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAConsumeFantasyTicket getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAConsumeFantasyTicket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemId_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAConsumeFantasyTicket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAConsumeFantasyTicket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAConsumeFantasyTicket> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAConsumeFantasyTicket>() {
      public CMsgDOTAConsumeFantasyTicket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAConsumeFantasyTicket(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAConsumeFantasyTicket> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    // optional uint64 item_id = 2;
    public static final int ITEM_ID_FIELD_NUMBER = 2;
    private long itemId_;
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    public long getItemId() {
      return itemId_;
    }

    // optional uint32 fantasy_league_id = 3;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 3;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private void initFields() {
      accountId_ = 0;
      itemId_ = 0L;
      fantasyLeagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, fantasyLeagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, fantasyLeagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAConsumeFantasyTicket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAConsumeFantasyTicket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAConsumeFantasyTicket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAConsumeFantasyTicket_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicket) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 account_id = 1;
      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 item_id = 2;
      private long itemId_ ;
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public long getItemId() {
        return itemId_;
      }
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public Builder setItemId(long value) {
        bitField0_ |= 0x00000002;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 fantasy_league_id = 3;
      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000004;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAConsumeFantasyTicket)
    }

    static {
      defaultInstance = new CMsgDOTAConsumeFantasyTicket(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAConsumeFantasyTicket)
  }

  public interface CMsgDOTAConsumeFantasyTicketFailureOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 account_id = 1;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    // optional uint64 item_id = 2;
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    boolean hasItemId();
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    long getItemId();

    // optional uint32 fantasy_league_id = 3;
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    boolean hasFantasyLeagueId();
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    int getFantasyLeagueId();
  }
  /**
   * Protobuf type {@code CMsgDOTAConsumeFantasyTicketFailure}
   */
  public static final class CMsgDOTAConsumeFantasyTicketFailure extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTAConsumeFantasyTicketFailureOrBuilder {
    // Use CMsgDOTAConsumeFantasyTicketFailure.newBuilder() to construct.
    private CMsgDOTAConsumeFantasyTicketFailure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAConsumeFantasyTicketFailure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAConsumeFantasyTicketFailure defaultInstance;
    public static CMsgDOTAConsumeFantasyTicketFailure getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAConsumeFantasyTicketFailure getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAConsumeFantasyTicketFailure(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemId_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fantasyLeagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAConsumeFantasyTicketFailure_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAConsumeFantasyTicketFailure_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAConsumeFantasyTicketFailure> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAConsumeFantasyTicketFailure>() {
      public CMsgDOTAConsumeFantasyTicketFailure parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAConsumeFantasyTicketFailure(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAConsumeFantasyTicketFailure> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    // optional uint64 item_id = 2;
    public static final int ITEM_ID_FIELD_NUMBER = 2;
    private long itemId_;
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 item_id = 2;</code>
     */
    public long getItemId() {
      return itemId_;
    }

    // optional uint32 fantasy_league_id = 3;
    public static final int FANTASY_LEAGUE_ID_FIELD_NUMBER = 3;
    private int fantasyLeagueId_;
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    public boolean hasFantasyLeagueId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 fantasy_league_id = 3;</code>
     */
    public int getFantasyLeagueId() {
      return fantasyLeagueId_;
    }

    private void initFields() {
      accountId_ = 0;
      itemId_ = 0L;
      fantasyLeagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, fantasyLeagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, itemId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, fantasyLeagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAConsumeFantasyTicketFailure}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAConsumeFantasyTicketFailure_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAConsumeFantasyTicketFailure_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        fantasyLeagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAConsumeFantasyTicketFailure_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemId_ = itemId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fantasyLeagueId_ = fantasyLeagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        if (other.hasFantasyLeagueId()) {
          setFantasyLeagueId(other.getFantasyLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAConsumeFantasyTicketFailure) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 account_id = 1;
      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 item_id = 2;
      private long itemId_ ;
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public long getItemId() {
        return itemId_;
      }
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public Builder setItemId(long value) {
        bitField0_ |= 0x00000002;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 fantasy_league_id = 3;
      private int fantasyLeagueId_ ;
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public boolean hasFantasyLeagueId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public int getFantasyLeagueId() {
        return fantasyLeagueId_;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public Builder setFantasyLeagueId(int value) {
        bitField0_ |= 0x00000004;
        fantasyLeagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fantasy_league_id = 3;</code>
       */
      public Builder clearFantasyLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fantasyLeagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAConsumeFantasyTicketFailure)
    }

    static {
      defaultInstance = new CMsgDOTAConsumeFantasyTicketFailure(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAConsumeFantasyTicketFailure)
  }

  public interface CMsgGCToGCFantasySetMatchLeagueOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 match_id = 1;
    /**
     * <code>optional uint64 match_id = 1;</code>
     */
    boolean hasMatchId();
    /**
     * <code>optional uint64 match_id = 1;</code>
     */
    long getMatchId();

    // optional uint32 league_id = 2;
    /**
     * <code>optional uint32 league_id = 2;</code>
     */
    boolean hasLeagueId();
    /**
     * <code>optional uint32 league_id = 2;</code>
     */
    int getLeagueId();
  }
  /**
   * Protobuf type {@code CMsgGCToGCFantasySetMatchLeague}
   */
  public static final class CMsgGCToGCFantasySetMatchLeague extends
      com.google.protobuf.GeneratedMessage
      implements CMsgGCToGCFantasySetMatchLeagueOrBuilder {
    // Use CMsgGCToGCFantasySetMatchLeague.newBuilder() to construct.
    private CMsgGCToGCFantasySetMatchLeague(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgGCToGCFantasySetMatchLeague(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgGCToGCFantasySetMatchLeague defaultInstance;
    public static CMsgGCToGCFantasySetMatchLeague getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgGCToGCFantasySetMatchLeague getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgGCToGCFantasySetMatchLeague(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              matchId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              leagueId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToGCFantasySetMatchLeague_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToGCFantasySetMatchLeague_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgGCToGCFantasySetMatchLeague> PARSER =
        new com.google.protobuf.AbstractParser<CMsgGCToGCFantasySetMatchLeague>() {
      public CMsgGCToGCFantasySetMatchLeague parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgGCToGCFantasySetMatchLeague(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCToGCFantasySetMatchLeague> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 match_id = 1;
    public static final int MATCH_ID_FIELD_NUMBER = 1;
    private long matchId_;
    /**
     * <code>optional uint64 match_id = 1;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 match_id = 1;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    // optional uint32 league_id = 2;
    public static final int LEAGUE_ID_FIELD_NUMBER = 2;
    private int leagueId_;
    /**
     * <code>optional uint32 league_id = 2;</code>
     */
    public boolean hasLeagueId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 league_id = 2;</code>
     */
    public int getLeagueId() {
      return leagueId_;
    }

    private void initFields() {
      matchId_ = 0L;
      leagueId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, matchId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, leagueId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, matchId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, leagueId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCToGCFantasySetMatchLeague}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeagueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToGCFantasySetMatchLeague_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToGCFantasySetMatchLeague_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        leagueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToGCFantasySetMatchLeague_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.leagueId_ = leagueId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague.getDefaultInstance()) return this;
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasLeagueId()) {
          setLeagueId(other.getLeagueId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToGCFantasySetMatchLeague) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 match_id = 1;
      private long matchId_ ;
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00000001;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_id = 1;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 league_id = 2;
      private int leagueId_ ;
      /**
       * <code>optional uint32 league_id = 2;</code>
       */
      public boolean hasLeagueId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 league_id = 2;</code>
       */
      public int getLeagueId() {
        return leagueId_;
      }
      /**
       * <code>optional uint32 league_id = 2;</code>
       */
      public Builder setLeagueId(int value) {
        bitField0_ |= 0x00000002;
        leagueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 league_id = 2;</code>
       */
      public Builder clearLeagueId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        leagueId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCToGCFantasySetMatchLeague)
    }

    static {
      defaultInstance = new CMsgGCToGCFantasySetMatchLeague(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgGCToGCFantasySetMatchLeague)
  }

  public interface CSODOTAMapLocationStateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 account_id = 1;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    // optional int32 location_id = 2;
    /**
     * <code>optional int32 location_id = 2;</code>
     */
    boolean hasLocationId();
    /**
     * <code>optional int32 location_id = 2;</code>
     */
    int getLocationId();

    // optional bool completed = 3;
    /**
     * <code>optional bool completed = 3;</code>
     */
    boolean hasCompleted();
    /**
     * <code>optional bool completed = 3;</code>
     */
    boolean getCompleted();
  }
  /**
   * Protobuf type {@code CSODOTAMapLocationState}
   */
  public static final class CSODOTAMapLocationState extends
      com.google.protobuf.GeneratedMessage
      implements CSODOTAMapLocationStateOrBuilder {
    // Use CSODOTAMapLocationState.newBuilder() to construct.
    private CSODOTAMapLocationState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSODOTAMapLocationState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSODOTAMapLocationState defaultInstance;
    public static CSODOTAMapLocationState getDefaultInstance() {
      return defaultInstance;
    }

    public CSODOTAMapLocationState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSODOTAMapLocationState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              locationId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              completed_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAMapLocationState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAMapLocationState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState.Builder.class);
    }

    public static com.google.protobuf.Parser<CSODOTAMapLocationState> PARSER =
        new com.google.protobuf.AbstractParser<CSODOTAMapLocationState>() {
      public CSODOTAMapLocationState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSODOTAMapLocationState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTAMapLocationState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    // optional int32 location_id = 2;
    public static final int LOCATION_ID_FIELD_NUMBER = 2;
    private int locationId_;
    /**
     * <code>optional int32 location_id = 2;</code>
     */
    public boolean hasLocationId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 location_id = 2;</code>
     */
    public int getLocationId() {
      return locationId_;
    }

    // optional bool completed = 3;
    public static final int COMPLETED_FIELD_NUMBER = 3;
    private boolean completed_;
    /**
     * <code>optional bool completed = 3;</code>
     */
    public boolean hasCompleted() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool completed = 3;</code>
     */
    public boolean getCompleted() {
      return completed_;
    }

    private void initFields() {
      accountId_ = 0;
      locationId_ = 0;
      completed_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, locationId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, completed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, locationId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, completed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTAMapLocationState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAMapLocationState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAMapLocationState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        locationId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        completed_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAMapLocationState_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.locationId_ = locationId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.completed_ = completed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasLocationId()) {
          setLocationId(other.getLocationId());
        }
        if (other.hasCompleted()) {
          setCompleted(other.getCompleted());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAMapLocationState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 account_id = 1;
      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 location_id = 2;
      private int locationId_ ;
      /**
       * <code>optional int32 location_id = 2;</code>
       */
      public boolean hasLocationId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 location_id = 2;</code>
       */
      public int getLocationId() {
        return locationId_;
      }
      /**
       * <code>optional int32 location_id = 2;</code>
       */
      public Builder setLocationId(int value) {
        bitField0_ |= 0x00000002;
        locationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 location_id = 2;</code>
       */
      public Builder clearLocationId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        locationId_ = 0;
        onChanged();
        return this;
      }

      // optional bool completed = 3;
      private boolean completed_ ;
      /**
       * <code>optional bool completed = 3;</code>
       */
      public boolean hasCompleted() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool completed = 3;</code>
       */
      public boolean getCompleted() {
        return completed_;
      }
      /**
       * <code>optional bool completed = 3;</code>
       */
      public Builder setCompleted(boolean value) {
        bitField0_ |= 0x00000004;
        completed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool completed = 3;</code>
       */
      public Builder clearCompleted() {
        bitField0_ = (bitField0_ & ~0x00000004);
        completed_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTAMapLocationState)
    }

    static {
      defaultInstance = new CSODOTAMapLocationState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSODOTAMapLocationState)
  }

  public interface CMsgNexonPartnerUpdateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 messagetype = 1;
    /**
     * <code>optional uint32 messagetype = 1;</code>
     */
    boolean hasMessagetype();
    /**
     * <code>optional uint32 messagetype = 1;</code>
     */
    int getMessagetype();

    // optional uint32 timeremaining = 2;
    /**
     * <code>optional uint32 timeremaining = 2;</code>
     */
    boolean hasTimeremaining();
    /**
     * <code>optional uint32 timeremaining = 2;</code>
     */
    int getTimeremaining();

    // optional bool terminate = 3;
    /**
     * <code>optional bool terminate = 3;</code>
     */
    boolean hasTerminate();
    /**
     * <code>optional bool terminate = 3;</code>
     */
    boolean getTerminate();
  }
  /**
   * Protobuf type {@code CMsgNexonPartnerUpdate}
   */
  public static final class CMsgNexonPartnerUpdate extends
      com.google.protobuf.GeneratedMessage
      implements CMsgNexonPartnerUpdateOrBuilder {
    // Use CMsgNexonPartnerUpdate.newBuilder() to construct.
    private CMsgNexonPartnerUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgNexonPartnerUpdate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgNexonPartnerUpdate defaultInstance;
    public static CMsgNexonPartnerUpdate getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgNexonPartnerUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgNexonPartnerUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              messagetype_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timeremaining_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              terminate_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgNexonPartnerUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgNexonPartnerUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgNexonPartnerUpdate> PARSER =
        new com.google.protobuf.AbstractParser<CMsgNexonPartnerUpdate>() {
      public CMsgNexonPartnerUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgNexonPartnerUpdate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgNexonPartnerUpdate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 messagetype = 1;
    public static final int MESSAGETYPE_FIELD_NUMBER = 1;
    private int messagetype_;
    /**
     * <code>optional uint32 messagetype = 1;</code>
     */
    public boolean hasMessagetype() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 messagetype = 1;</code>
     */
    public int getMessagetype() {
      return messagetype_;
    }

    // optional uint32 timeremaining = 2;
    public static final int TIMEREMAINING_FIELD_NUMBER = 2;
    private int timeremaining_;
    /**
     * <code>optional uint32 timeremaining = 2;</code>
     */
    public boolean hasTimeremaining() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 timeremaining = 2;</code>
     */
    public int getTimeremaining() {
      return timeremaining_;
    }

    // optional bool terminate = 3;
    public static final int TERMINATE_FIELD_NUMBER = 3;
    private boolean terminate_;
    /**
     * <code>optional bool terminate = 3;</code>
     */
    public boolean hasTerminate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool terminate = 3;</code>
     */
    public boolean getTerminate() {
      return terminate_;
    }

    private void initFields() {
      messagetype_ = 0;
      timeremaining_ = 0;
      terminate_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, messagetype_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, timeremaining_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, terminate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, messagetype_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, timeremaining_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, terminate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgNexonPartnerUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgNexonPartnerUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgNexonPartnerUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        messagetype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeremaining_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        terminate_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgNexonPartnerUpdate_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messagetype_ = messagetype_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeremaining_ = timeremaining_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.terminate_ = terminate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate.getDefaultInstance()) return this;
        if (other.hasMessagetype()) {
          setMessagetype(other.getMessagetype());
        }
        if (other.hasTimeremaining()) {
          setTimeremaining(other.getTimeremaining());
        }
        if (other.hasTerminate()) {
          setTerminate(other.getTerminate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgNexonPartnerUpdate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 messagetype = 1;
      private int messagetype_ ;
      /**
       * <code>optional uint32 messagetype = 1;</code>
       */
      public boolean hasMessagetype() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 messagetype = 1;</code>
       */
      public int getMessagetype() {
        return messagetype_;
      }
      /**
       * <code>optional uint32 messagetype = 1;</code>
       */
      public Builder setMessagetype(int value) {
        bitField0_ |= 0x00000001;
        messagetype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 messagetype = 1;</code>
       */
      public Builder clearMessagetype() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messagetype_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 timeremaining = 2;
      private int timeremaining_ ;
      /**
       * <code>optional uint32 timeremaining = 2;</code>
       */
      public boolean hasTimeremaining() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 timeremaining = 2;</code>
       */
      public int getTimeremaining() {
        return timeremaining_;
      }
      /**
       * <code>optional uint32 timeremaining = 2;</code>
       */
      public Builder setTimeremaining(int value) {
        bitField0_ |= 0x00000002;
        timeremaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timeremaining = 2;</code>
       */
      public Builder clearTimeremaining() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeremaining_ = 0;
        onChanged();
        return this;
      }

      // optional bool terminate = 3;
      private boolean terminate_ ;
      /**
       * <code>optional bool terminate = 3;</code>
       */
      public boolean hasTerminate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool terminate = 3;</code>
       */
      public boolean getTerminate() {
        return terminate_;
      }
      /**
       * <code>optional bool terminate = 3;</code>
       */
      public Builder setTerminate(boolean value) {
        bitField0_ |= 0x00000004;
        terminate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool terminate = 3;</code>
       */
      public Builder clearTerminate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        terminate_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgNexonPartnerUpdate)
    }

    static {
      defaultInstance = new CMsgNexonPartnerUpdate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgNexonPartnerUpdate)
  }

  public interface CMsgMakeOfferingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 item_id = 1;
    /**
     * <code>optional uint64 item_id = 1;</code>
     */
    boolean hasItemId();
    /**
     * <code>optional uint64 item_id = 1;</code>
     */
    long getItemId();
  }
  /**
   * Protobuf type {@code CMsgMakeOffering}
   */
  public static final class CMsgMakeOffering extends
      com.google.protobuf.GeneratedMessage
      implements CMsgMakeOfferingOrBuilder {
    // Use CMsgMakeOffering.newBuilder() to construct.
    private CMsgMakeOffering(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgMakeOffering(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgMakeOffering defaultInstance;
    public static CMsgMakeOffering getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgMakeOffering getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgMakeOffering(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              itemId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgMakeOffering_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgMakeOffering_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgMakeOffering> PARSER =
        new com.google.protobuf.AbstractParser<CMsgMakeOffering>() {
      public CMsgMakeOffering parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgMakeOffering(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgMakeOffering> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 item_id = 1;
    public static final int ITEM_ID_FIELD_NUMBER = 1;
    private long itemId_;
    /**
     * <code>optional uint64 item_id = 1;</code>
     */
    public boolean hasItemId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 item_id = 1;</code>
     */
    public long getItemId() {
      return itemId_;
    }

    private void initFields() {
      itemId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, itemId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, itemId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgMakeOffering}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOfferingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgMakeOffering_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgMakeOffering_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgMakeOffering_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemId_ = itemId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering.getDefaultInstance()) return this;
        if (other.hasItemId()) {
          setItemId(other.getItemId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgMakeOffering) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 item_id = 1;
      private long itemId_ ;
      /**
       * <code>optional uint64 item_id = 1;</code>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 item_id = 1;</code>
       */
      public long getItemId() {
        return itemId_;
      }
      /**
       * <code>optional uint64 item_id = 1;</code>
       */
      public Builder setItemId(long value) {
        bitField0_ |= 0x00000001;
        itemId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 item_id = 1;</code>
       */
      public Builder clearItemId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgMakeOffering)
    }

    static {
      defaultInstance = new CMsgMakeOffering(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgMakeOffering)
  }

  public interface CMsgRequestOfferingsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CMsgRequestOfferings}
   */
  public static final class CMsgRequestOfferings extends
      com.google.protobuf.GeneratedMessage
      implements CMsgRequestOfferingsOrBuilder {
    // Use CMsgRequestOfferings.newBuilder() to construct.
    private CMsgRequestOfferings(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgRequestOfferings(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgRequestOfferings defaultInstance;
    public static CMsgRequestOfferings getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgRequestOfferings getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgRequestOfferings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgRequestOfferings> PARSER =
        new com.google.protobuf.AbstractParser<CMsgRequestOfferings>() {
      public CMsgRequestOfferings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgRequestOfferings(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgRequestOfferings> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgRequestOfferings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferings_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferings) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgRequestOfferings)
    }

    static {
      defaultInstance = new CMsgRequestOfferings(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgRequestOfferings)
  }

  public interface CMsgRequestOfferingsResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;
    /**
     * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering> 
        getOfferingsList();
    /**
     * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering getOfferings(int index);
    /**
     * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
     */
    int getOfferingsCount();
    /**
     * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOfferingOrBuilder> 
        getOfferingsOrBuilderList();
    /**
     * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOfferingOrBuilder getOfferingsOrBuilder(
        int index);

    // optional bool completed = 2;
    /**
     * <code>optional bool completed = 2;</code>
     */
    boolean hasCompleted();
    /**
     * <code>optional bool completed = 2;</code>
     */
    boolean getCompleted();
  }
  /**
   * Protobuf type {@code CMsgRequestOfferingsResponse}
   */
  public static final class CMsgRequestOfferingsResponse extends
      com.google.protobuf.GeneratedMessage
      implements CMsgRequestOfferingsResponseOrBuilder {
    // Use CMsgRequestOfferingsResponse.newBuilder() to construct.
    private CMsgRequestOfferingsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgRequestOfferingsResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgRequestOfferingsResponse defaultInstance;
    public static CMsgRequestOfferingsResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgRequestOfferingsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgRequestOfferingsResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                offerings_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering>();
                mutable_bitField0_ |= 0x00000001;
              }
              offerings_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              completed_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          offerings_ = java.util.Collections.unmodifiableList(offerings_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferingsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferingsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgRequestOfferingsResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgRequestOfferingsResponse>() {
      public CMsgRequestOfferingsResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgRequestOfferingsResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgRequestOfferingsResponse> getParserForType() {
      return PARSER;
    }

    public interface NewYearsOfferingOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 def_index = 1;
      /**
       * <code>optional uint32 def_index = 1;</code>
       */
      boolean hasDefIndex();
      /**
       * <code>optional uint32 def_index = 1;</code>
       */
      int getDefIndex();

      // optional uint64 item_id = 2;
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      boolean hasItemId();
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      long getItemId();
    }
    /**
     * Protobuf type {@code CMsgRequestOfferingsResponse.NewYearsOffering}
     */
    public static final class NewYearsOffering extends
        com.google.protobuf.GeneratedMessage
        implements NewYearsOfferingOrBuilder {
      // Use NewYearsOffering.newBuilder() to construct.
      private NewYearsOffering(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private NewYearsOffering(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final NewYearsOffering defaultInstance;
      public static NewYearsOffering getDefaultInstance() {
        return defaultInstance;
      }

      public NewYearsOffering getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private NewYearsOffering(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                defIndex_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                itemId_ = input.readUInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferingsResponse_NewYearsOffering_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferingsResponse_NewYearsOffering_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder.class);
      }

      public static com.google.protobuf.Parser<NewYearsOffering> PARSER =
          new com.google.protobuf.AbstractParser<NewYearsOffering>() {
        public NewYearsOffering parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new NewYearsOffering(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<NewYearsOffering> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 def_index = 1;
      public static final int DEF_INDEX_FIELD_NUMBER = 1;
      private int defIndex_;
      /**
       * <code>optional uint32 def_index = 1;</code>
       */
      public boolean hasDefIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 def_index = 1;</code>
       */
      public int getDefIndex() {
        return defIndex_;
      }

      // optional uint64 item_id = 2;
      public static final int ITEM_ID_FIELD_NUMBER = 2;
      private long itemId_;
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 item_id = 2;</code>
       */
      public long getItemId() {
        return itemId_;
      }

      private void initFields() {
        defIndex_ = 0;
        itemId_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, defIndex_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt64(2, itemId_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, defIndex_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, itemId_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgRequestOfferingsResponse.NewYearsOffering}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOfferingOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferingsResponse_NewYearsOffering_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferingsResponse_NewYearsOffering_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          defIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          itemId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferingsResponse_NewYearsOffering_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.defIndex_ = defIndex_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.itemId_ = itemId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.getDefaultInstance()) return this;
          if (other.hasDefIndex()) {
            setDefIndex(other.getDefIndex());
          }
          if (other.hasItemId()) {
            setItemId(other.getItemId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 def_index = 1;
        private int defIndex_ ;
        /**
         * <code>optional uint32 def_index = 1;</code>
         */
        public boolean hasDefIndex() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 def_index = 1;</code>
         */
        public int getDefIndex() {
          return defIndex_;
        }
        /**
         * <code>optional uint32 def_index = 1;</code>
         */
        public Builder setDefIndex(int value) {
          bitField0_ |= 0x00000001;
          defIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 def_index = 1;</code>
         */
        public Builder clearDefIndex() {
          bitField0_ = (bitField0_ & ~0x00000001);
          defIndex_ = 0;
          onChanged();
          return this;
        }

        // optional uint64 item_id = 2;
        private long itemId_ ;
        /**
         * <code>optional uint64 item_id = 2;</code>
         */
        public boolean hasItemId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint64 item_id = 2;</code>
         */
        public long getItemId() {
          return itemId_;
        }
        /**
         * <code>optional uint64 item_id = 2;</code>
         */
        public Builder setItemId(long value) {
          bitField0_ |= 0x00000002;
          itemId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 item_id = 2;</code>
         */
        public Builder clearItemId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          itemId_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgRequestOfferingsResponse.NewYearsOffering)
      }

      static {
        defaultInstance = new NewYearsOffering(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgRequestOfferingsResponse.NewYearsOffering)
    }

    private int bitField0_;
    // repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;
    public static final int OFFERINGS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering> offerings_;
    /**
     * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering> getOfferingsList() {
      return offerings_;
    }
    /**
     * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOfferingOrBuilder> 
        getOfferingsOrBuilderList() {
      return offerings_;
    }
    /**
     * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
     */
    public int getOfferingsCount() {
      return offerings_.size();
    }
    /**
     * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering getOfferings(int index) {
      return offerings_.get(index);
    }
    /**
     * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOfferingOrBuilder getOfferingsOrBuilder(
        int index) {
      return offerings_.get(index);
    }

    // optional bool completed = 2;
    public static final int COMPLETED_FIELD_NUMBER = 2;
    private boolean completed_;
    /**
     * <code>optional bool completed = 2;</code>
     */
    public boolean hasCompleted() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool completed = 2;</code>
     */
    public boolean getCompleted() {
      return completed_;
    }

    private void initFields() {
      offerings_ = java.util.Collections.emptyList();
      completed_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < offerings_.size(); i++) {
        output.writeMessage(1, offerings_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(2, completed_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < offerings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, offerings_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, completed_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgRequestOfferingsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferingsResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferingsResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOfferingsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (offeringsBuilder_ == null) {
          offerings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          offeringsBuilder_.clear();
        }
        completed_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgRequestOfferingsResponse_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (offeringsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            offerings_ = java.util.Collections.unmodifiableList(offerings_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.offerings_ = offerings_;
        } else {
          result.offerings_ = offeringsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.completed_ = completed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.getDefaultInstance()) return this;
        if (offeringsBuilder_ == null) {
          if (!other.offerings_.isEmpty()) {
            if (offerings_.isEmpty()) {
              offerings_ = other.offerings_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOfferingsIsMutable();
              offerings_.addAll(other.offerings_);
            }
            onChanged();
          }
        } else {
          if (!other.offerings_.isEmpty()) {
            if (offeringsBuilder_.isEmpty()) {
              offeringsBuilder_.dispose();
              offeringsBuilder_ = null;
              offerings_ = other.offerings_;
              bitField0_ = (bitField0_ & ~0x00000001);
              offeringsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOfferingsFieldBuilder() : null;
            } else {
              offeringsBuilder_.addAllMessages(other.offerings_);
            }
          }
        }
        if (other.hasCompleted()) {
          setCompleted(other.getCompleted());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering> offerings_ =
        java.util.Collections.emptyList();
      private void ensureOfferingsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          offerings_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering>(offerings_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOfferingOrBuilder> offeringsBuilder_;

      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering> getOfferingsList() {
        if (offeringsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(offerings_);
        } else {
          return offeringsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public int getOfferingsCount() {
        if (offeringsBuilder_ == null) {
          return offerings_.size();
        } else {
          return offeringsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering getOfferings(int index) {
        if (offeringsBuilder_ == null) {
          return offerings_.get(index);
        } else {
          return offeringsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public Builder setOfferings(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering value) {
        if (offeringsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOfferingsIsMutable();
          offerings_.set(index, value);
          onChanged();
        } else {
          offeringsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public Builder setOfferings(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder builderForValue) {
        if (offeringsBuilder_ == null) {
          ensureOfferingsIsMutable();
          offerings_.set(index, builderForValue.build());
          onChanged();
        } else {
          offeringsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public Builder addOfferings(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering value) {
        if (offeringsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOfferingsIsMutable();
          offerings_.add(value);
          onChanged();
        } else {
          offeringsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public Builder addOfferings(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering value) {
        if (offeringsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOfferingsIsMutable();
          offerings_.add(index, value);
          onChanged();
        } else {
          offeringsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public Builder addOfferings(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder builderForValue) {
        if (offeringsBuilder_ == null) {
          ensureOfferingsIsMutable();
          offerings_.add(builderForValue.build());
          onChanged();
        } else {
          offeringsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public Builder addOfferings(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder builderForValue) {
        if (offeringsBuilder_ == null) {
          ensureOfferingsIsMutable();
          offerings_.add(index, builderForValue.build());
          onChanged();
        } else {
          offeringsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public Builder addAllOfferings(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering> values) {
        if (offeringsBuilder_ == null) {
          ensureOfferingsIsMutable();
          super.addAll(values, offerings_);
          onChanged();
        } else {
          offeringsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public Builder clearOfferings() {
        if (offeringsBuilder_ == null) {
          offerings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          offeringsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public Builder removeOfferings(int index) {
        if (offeringsBuilder_ == null) {
          ensureOfferingsIsMutable();
          offerings_.remove(index);
          onChanged();
        } else {
          offeringsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder getOfferingsBuilder(
          int index) {
        return getOfferingsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOfferingOrBuilder getOfferingsOrBuilder(
          int index) {
        if (offeringsBuilder_ == null) {
          return offerings_.get(index);  } else {
          return offeringsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOfferingOrBuilder> 
           getOfferingsOrBuilderList() {
        if (offeringsBuilder_ != null) {
          return offeringsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(offerings_);
        }
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder addOfferingsBuilder() {
        return getOfferingsFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder addOfferingsBuilder(
          int index) {
        return getOfferingsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder> 
           getOfferingsBuilderList() {
        return getOfferingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOfferingOrBuilder> 
          getOfferingsFieldBuilder() {
        if (offeringsBuilder_ == null) {
          offeringsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOffering.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgRequestOfferingsResponse.NewYearsOfferingOrBuilder>(
                  offerings_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          offerings_ = null;
        }
        return offeringsBuilder_;
      }

      // optional bool completed = 2;
      private boolean completed_ ;
      /**
       * <code>optional bool completed = 2;</code>
       */
      public boolean hasCompleted() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool completed = 2;</code>
       */
      public boolean getCompleted() {
        return completed_;
      }
      /**
       * <code>optional bool completed = 2;</code>
       */
      public Builder setCompleted(boolean value) {
        bitField0_ |= 0x00000002;
        completed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool completed = 2;</code>
       */
      public Builder clearCompleted() {
        bitField0_ = (bitField0_ & ~0x00000002);
        completed_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgRequestOfferingsResponse)
    }

    static {
      defaultInstance = new CMsgRequestOfferingsResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgRequestOfferingsResponse)
  }

  public interface CMsgLeagueAdminListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated uint32 account_ids = 1;
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    java.util.List<java.lang.Integer> getAccountIdsList();
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    int getAccountIdsCount();
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    int getAccountIds(int index);
  }
  /**
   * Protobuf type {@code CMsgLeagueAdminList}
   */
  public static final class CMsgLeagueAdminList extends
      com.google.protobuf.GeneratedMessage
      implements CMsgLeagueAdminListOrBuilder {
    // Use CMsgLeagueAdminList.newBuilder() to construct.
    private CMsgLeagueAdminList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgLeagueAdminList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgLeagueAdminList defaultInstance;
    public static CMsgLeagueAdminList getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgLeagueAdminList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgLeagueAdminList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                accountIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              accountIds_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                accountIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                accountIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLeagueAdminList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLeagueAdminList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgLeagueAdminList> PARSER =
        new com.google.protobuf.AbstractParser<CMsgLeagueAdminList>() {
      public CMsgLeagueAdminList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgLeagueAdminList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgLeagueAdminList> getParserForType() {
      return PARSER;
    }

    // repeated uint32 account_ids = 1;
    public static final int ACCOUNT_IDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> accountIds_;
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getAccountIdsList() {
      return accountIds_;
    }
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    public int getAccountIdsCount() {
      return accountIds_.size();
    }
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    public int getAccountIds(int index) {
      return accountIds_.get(index);
    }

    private void initFields() {
      accountIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < accountIds_.size(); i++) {
        output.writeUInt32(1, accountIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < accountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(accountIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAccountIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgLeagueAdminList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLeagueAdminList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLeagueAdminList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgLeagueAdminList_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.accountIds_ = accountIds_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList.getDefaultInstance()) return this;
        if (!other.accountIds_.isEmpty()) {
          if (accountIds_.isEmpty()) {
            accountIds_ = other.accountIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAccountIdsIsMutable();
            accountIds_.addAll(other.accountIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgLeagueAdminList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated uint32 account_ids = 1;
      private java.util.List<java.lang.Integer> accountIds_ = java.util.Collections.emptyList();
      private void ensureAccountIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          accountIds_ = new java.util.ArrayList<java.lang.Integer>(accountIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getAccountIdsList() {
        return java.util.Collections.unmodifiableList(accountIds_);
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public int getAccountIdsCount() {
        return accountIds_.size();
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public int getAccountIds(int index) {
        return accountIds_.get(index);
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public Builder setAccountIds(
          int index, int value) {
        ensureAccountIdsIsMutable();
        accountIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public Builder addAccountIds(int value) {
        ensureAccountIdsIsMutable();
        accountIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public Builder addAllAccountIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAccountIdsIsMutable();
        super.addAll(values, accountIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public Builder clearAccountIds() {
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgLeagueAdminList)
    }

    static {
      defaultInstance = new CMsgLeagueAdminList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgLeagueAdminList)
  }

  public interface CMsgPerfectWorldUserLookupRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string user_name = 1;
    /**
     * <code>optional string user_name = 1;</code>
     */
    boolean hasUserName();
    /**
     * <code>optional string user_name = 1;</code>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string user_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();
  }
  /**
   * Protobuf type {@code CMsgPerfectWorldUserLookupRequest}
   */
  public static final class CMsgPerfectWorldUserLookupRequest extends
      com.google.protobuf.GeneratedMessage
      implements CMsgPerfectWorldUserLookupRequestOrBuilder {
    // Use CMsgPerfectWorldUserLookupRequest.newBuilder() to construct.
    private CMsgPerfectWorldUserLookupRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgPerfectWorldUserLookupRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgPerfectWorldUserLookupRequest defaultInstance;
    public static CMsgPerfectWorldUserLookupRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgPerfectWorldUserLookupRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgPerfectWorldUserLookupRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgPerfectWorldUserLookupRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgPerfectWorldUserLookupRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgPerfectWorldUserLookupRequest> PARSER =
        new com.google.protobuf.AbstractParser<CMsgPerfectWorldUserLookupRequest>() {
      public CMsgPerfectWorldUserLookupRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgPerfectWorldUserLookupRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgPerfectWorldUserLookupRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string user_name = 1;
    public static final int USER_NAME_FIELD_NUMBER = 1;
    private java.lang.Object userName_;
    /**
     * <code>optional string user_name = 1;</code>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string user_name = 1;</code>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string user_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      userName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgPerfectWorldUserLookupRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgPerfectWorldUserLookupRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgPerfectWorldUserLookupRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgPerfectWorldUserLookupRequest_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userName_ = userName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest.getDefaultInstance()) return this;
        if (other.hasUserName()) {
          bitField0_ |= 0x00000001;
          userName_ = other.userName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string user_name = 1;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string user_name = 1;</code>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string user_name = 1;</code>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string user_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string user_name = 1;</code>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 1;</code>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string user_name = 1;</code>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgPerfectWorldUserLookupRequest)
    }

    static {
      defaultInstance = new CMsgPerfectWorldUserLookupRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgPerfectWorldUserLookupRequest)
  }

  public interface CMsgPerfectWorldUserLookupResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];
    /**
     * <code>optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];</code>
     */
    boolean hasResultCode();
    /**
     * <code>optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode getResultCode();

    // optional uint32 account_id = 2;
    /**
     * <code>optional uint32 account_id = 2;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 2;</code>
     */
    int getAccountId();
  }
  /**
   * Protobuf type {@code CMsgPerfectWorldUserLookupResponse}
   */
  public static final class CMsgPerfectWorldUserLookupResponse extends
      com.google.protobuf.GeneratedMessage
      implements CMsgPerfectWorldUserLookupResponseOrBuilder {
    // Use CMsgPerfectWorldUserLookupResponse.newBuilder() to construct.
    private CMsgPerfectWorldUserLookupResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgPerfectWorldUserLookupResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgPerfectWorldUserLookupResponse defaultInstance;
    public static CMsgPerfectWorldUserLookupResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgPerfectWorldUserLookupResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgPerfectWorldUserLookupResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                resultCode_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              accountId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgPerfectWorldUserLookupResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgPerfectWorldUserLookupResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgPerfectWorldUserLookupResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgPerfectWorldUserLookupResponse>() {
      public CMsgPerfectWorldUserLookupResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgPerfectWorldUserLookupResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgPerfectWorldUserLookupResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgPerfectWorldUserLookupResponse.EResultCode}
     */
    public enum EResultCode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SUCCESS_ACCOUNT_FOUND = 0;</code>
       */
      SUCCESS_ACCOUNT_FOUND(0, 0),
      /**
       * <code>ERROR_UNKNOWN = 1;</code>
       */
      ERROR_UNKNOWN(1, 1),
      /**
       * <code>ERROR_USER_NAME_WRONG_FORMAT = 2;</code>
       */
      ERROR_USER_NAME_WRONG_FORMAT(2, 2),
      /**
       * <code>ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND = 3;</code>
       */
      ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND(3, 3),
      /**
       * <code>ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND = 4;</code>
       */
      ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND(4, 4),
      ;

      /**
       * <code>SUCCESS_ACCOUNT_FOUND = 0;</code>
       */
      public static final int SUCCESS_ACCOUNT_FOUND_VALUE = 0;
      /**
       * <code>ERROR_UNKNOWN = 1;</code>
       */
      public static final int ERROR_UNKNOWN_VALUE = 1;
      /**
       * <code>ERROR_USER_NAME_WRONG_FORMAT = 2;</code>
       */
      public static final int ERROR_USER_NAME_WRONG_FORMAT_VALUE = 2;
      /**
       * <code>ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND = 3;</code>
       */
      public static final int ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND_VALUE = 3;
      /**
       * <code>ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND = 4;</code>
       */
      public static final int ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND_VALUE = 4;


      public final int getNumber() { return value; }

      public static EResultCode valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS_ACCOUNT_FOUND;
          case 1: return ERROR_UNKNOWN;
          case 2: return ERROR_USER_NAME_WRONG_FORMAT;
          case 3: return ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND;
          case 4: return ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResultCode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResultCode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResultCode>() {
              public EResultCode findValueByNumber(int number) {
                return EResultCode.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResultCode[] VALUES = values();

      public static EResultCode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResultCode(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgPerfectWorldUserLookupResponse.EResultCode)
    }

    private int bitField0_;
    // optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];
    public static final int RESULT_CODE_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode resultCode_;
    /**
     * <code>optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];</code>
     */
    public boolean hasResultCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode getResultCode() {
      return resultCode_;
    }

    // optional uint32 account_id = 2;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 2;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 2;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 account_id = 2;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    private void initFields() {
      resultCode_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode.SUCCESS_ACCOUNT_FOUND;
      accountId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, resultCode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, accountId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, resultCode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, accountId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgPerfectWorldUserLookupResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgPerfectWorldUserLookupResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgPerfectWorldUserLookupResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        resultCode_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode.SUCCESS_ACCOUNT_FOUND;
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgPerfectWorldUserLookupResponse_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.resultCode_ = resultCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.accountId_ = accountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.getDefaultInstance()) return this;
        if (other.hasResultCode()) {
          setResultCode(other.getResultCode());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode resultCode_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode.SUCCESS_ACCOUNT_FOUND;
      /**
       * <code>optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];</code>
       */
      public boolean hasResultCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode getResultCode() {
        return resultCode_;
      }
      /**
       * <code>optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];</code>
       */
      public Builder setResultCode(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        resultCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];</code>
       */
      public Builder clearResultCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        resultCode_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgPerfectWorldUserLookupResponse.EResultCode.SUCCESS_ACCOUNT_FOUND;
        onChanged();
        return this;
      }

      // optional uint32 account_id = 2;
      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 2;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000002;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgPerfectWorldUserLookupResponse)
    }

    static {
      defaultInstance = new CMsgPerfectWorldUserLookupResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgPerfectWorldUserLookupResponse)
  }

  public interface CCompendiumTimestampedDataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 game_time = 1;
    /**
     * <code>optional uint32 game_time = 1;</code>
     */
    boolean hasGameTime();
    /**
     * <code>optional uint32 game_time = 1;</code>
     */
    int getGameTime();

    // optional uint32 gpm = 2;
    /**
     * <code>optional uint32 gpm = 2;</code>
     */
    boolean hasGpm();
    /**
     * <code>optional uint32 gpm = 2;</code>
     */
    int getGpm();

    // optional uint32 xpm = 3;
    /**
     * <code>optional uint32 xpm = 3;</code>
     */
    boolean hasXpm();
    /**
     * <code>optional uint32 xpm = 3;</code>
     */
    int getXpm();

    // optional uint32 kills = 4;
    /**
     * <code>optional uint32 kills = 4;</code>
     */
    boolean hasKills();
    /**
     * <code>optional uint32 kills = 4;</code>
     */
    int getKills();

    // optional uint32 deaths = 5;
    /**
     * <code>optional uint32 deaths = 5;</code>
     */
    boolean hasDeaths();
    /**
     * <code>optional uint32 deaths = 5;</code>
     */
    int getDeaths();

    // repeated uint32 item_purchases = 6;
    /**
     * <code>repeated uint32 item_purchases = 6;</code>
     */
    java.util.List<java.lang.Integer> getItemPurchasesList();
    /**
     * <code>repeated uint32 item_purchases = 6;</code>
     */
    int getItemPurchasesCount();
    /**
     * <code>repeated uint32 item_purchases = 6;</code>
     */
    int getItemPurchases(int index);
  }
  /**
   * Protobuf type {@code CCompendiumTimestampedData}
   */
  public static final class CCompendiumTimestampedData extends
      com.google.protobuf.GeneratedMessage
      implements CCompendiumTimestampedDataOrBuilder {
    // Use CCompendiumTimestampedData.newBuilder() to construct.
    private CCompendiumTimestampedData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CCompendiumTimestampedData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CCompendiumTimestampedData defaultInstance;
    public static CCompendiumTimestampedData getDefaultInstance() {
      return defaultInstance;
    }

    public CCompendiumTimestampedData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CCompendiumTimestampedData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              gameTime_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              gpm_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              xpm_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              kills_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              deaths_ = input.readUInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                itemPurchases_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              itemPurchases_.add(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                itemPurchases_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                itemPurchases_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          itemPurchases_ = java.util.Collections.unmodifiableList(itemPurchases_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumTimestampedData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumTimestampedData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder.class);
    }

    public static com.google.protobuf.Parser<CCompendiumTimestampedData> PARSER =
        new com.google.protobuf.AbstractParser<CCompendiumTimestampedData>() {
      public CCompendiumTimestampedData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CCompendiumTimestampedData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CCompendiumTimestampedData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 game_time = 1;
    public static final int GAME_TIME_FIELD_NUMBER = 1;
    private int gameTime_;
    /**
     * <code>optional uint32 game_time = 1;</code>
     */
    public boolean hasGameTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 game_time = 1;</code>
     */
    public int getGameTime() {
      return gameTime_;
    }

    // optional uint32 gpm = 2;
    public static final int GPM_FIELD_NUMBER = 2;
    private int gpm_;
    /**
     * <code>optional uint32 gpm = 2;</code>
     */
    public boolean hasGpm() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 gpm = 2;</code>
     */
    public int getGpm() {
      return gpm_;
    }

    // optional uint32 xpm = 3;
    public static final int XPM_FIELD_NUMBER = 3;
    private int xpm_;
    /**
     * <code>optional uint32 xpm = 3;</code>
     */
    public boolean hasXpm() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 xpm = 3;</code>
     */
    public int getXpm() {
      return xpm_;
    }

    // optional uint32 kills = 4;
    public static final int KILLS_FIELD_NUMBER = 4;
    private int kills_;
    /**
     * <code>optional uint32 kills = 4;</code>
     */
    public boolean hasKills() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 kills = 4;</code>
     */
    public int getKills() {
      return kills_;
    }

    // optional uint32 deaths = 5;
    public static final int DEATHS_FIELD_NUMBER = 5;
    private int deaths_;
    /**
     * <code>optional uint32 deaths = 5;</code>
     */
    public boolean hasDeaths() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 deaths = 5;</code>
     */
    public int getDeaths() {
      return deaths_;
    }

    // repeated uint32 item_purchases = 6;
    public static final int ITEM_PURCHASES_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> itemPurchases_;
    /**
     * <code>repeated uint32 item_purchases = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getItemPurchasesList() {
      return itemPurchases_;
    }
    /**
     * <code>repeated uint32 item_purchases = 6;</code>
     */
    public int getItemPurchasesCount() {
      return itemPurchases_.size();
    }
    /**
     * <code>repeated uint32 item_purchases = 6;</code>
     */
    public int getItemPurchases(int index) {
      return itemPurchases_.get(index);
    }

    private void initFields() {
      gameTime_ = 0;
      gpm_ = 0;
      xpm_ = 0;
      kills_ = 0;
      deaths_ = 0;
      itemPurchases_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, gameTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, gpm_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, xpm_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, kills_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, deaths_);
      }
      for (int i = 0; i < itemPurchases_.size(); i++) {
        output.writeUInt32(6, itemPurchases_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, gameTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gpm_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, xpm_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, kills_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, deaths_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < itemPurchases_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(itemPurchases_.get(i));
        }
        size += dataSize;
        size += 1 * getItemPurchasesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CCompendiumTimestampedData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumTimestampedData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumTimestampedData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        gameTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        gpm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        xpm_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        kills_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        deaths_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        itemPurchases_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumTimestampedData_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gameTime_ = gameTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gpm_ = gpm_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.xpm_ = xpm_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.kills_ = kills_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.deaths_ = deaths_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          itemPurchases_ = java.util.Collections.unmodifiableList(itemPurchases_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.itemPurchases_ = itemPurchases_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.getDefaultInstance()) return this;
        if (other.hasGameTime()) {
          setGameTime(other.getGameTime());
        }
        if (other.hasGpm()) {
          setGpm(other.getGpm());
        }
        if (other.hasXpm()) {
          setXpm(other.getXpm());
        }
        if (other.hasKills()) {
          setKills(other.getKills());
        }
        if (other.hasDeaths()) {
          setDeaths(other.getDeaths());
        }
        if (!other.itemPurchases_.isEmpty()) {
          if (itemPurchases_.isEmpty()) {
            itemPurchases_ = other.itemPurchases_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureItemPurchasesIsMutable();
            itemPurchases_.addAll(other.itemPurchases_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 game_time = 1;
      private int gameTime_ ;
      /**
       * <code>optional uint32 game_time = 1;</code>
       */
      public boolean hasGameTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 game_time = 1;</code>
       */
      public int getGameTime() {
        return gameTime_;
      }
      /**
       * <code>optional uint32 game_time = 1;</code>
       */
      public Builder setGameTime(int value) {
        bitField0_ |= 0x00000001;
        gameTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 game_time = 1;</code>
       */
      public Builder clearGameTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        gameTime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 gpm = 2;
      private int gpm_ ;
      /**
       * <code>optional uint32 gpm = 2;</code>
       */
      public boolean hasGpm() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 gpm = 2;</code>
       */
      public int getGpm() {
        return gpm_;
      }
      /**
       * <code>optional uint32 gpm = 2;</code>
       */
      public Builder setGpm(int value) {
        bitField0_ |= 0x00000002;
        gpm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gpm = 2;</code>
       */
      public Builder clearGpm() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gpm_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 xpm = 3;
      private int xpm_ ;
      /**
       * <code>optional uint32 xpm = 3;</code>
       */
      public boolean hasXpm() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 xpm = 3;</code>
       */
      public int getXpm() {
        return xpm_;
      }
      /**
       * <code>optional uint32 xpm = 3;</code>
       */
      public Builder setXpm(int value) {
        bitField0_ |= 0x00000004;
        xpm_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 xpm = 3;</code>
       */
      public Builder clearXpm() {
        bitField0_ = (bitField0_ & ~0x00000004);
        xpm_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 kills = 4;
      private int kills_ ;
      /**
       * <code>optional uint32 kills = 4;</code>
       */
      public boolean hasKills() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 kills = 4;</code>
       */
      public int getKills() {
        return kills_;
      }
      /**
       * <code>optional uint32 kills = 4;</code>
       */
      public Builder setKills(int value) {
        bitField0_ |= 0x00000008;
        kills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 kills = 4;</code>
       */
      public Builder clearKills() {
        bitField0_ = (bitField0_ & ~0x00000008);
        kills_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 deaths = 5;
      private int deaths_ ;
      /**
       * <code>optional uint32 deaths = 5;</code>
       */
      public boolean hasDeaths() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 deaths = 5;</code>
       */
      public int getDeaths() {
        return deaths_;
      }
      /**
       * <code>optional uint32 deaths = 5;</code>
       */
      public Builder setDeaths(int value) {
        bitField0_ |= 0x00000010;
        deaths_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 deaths = 5;</code>
       */
      public Builder clearDeaths() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deaths_ = 0;
        onChanged();
        return this;
      }

      // repeated uint32 item_purchases = 6;
      private java.util.List<java.lang.Integer> itemPurchases_ = java.util.Collections.emptyList();
      private void ensureItemPurchasesIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          itemPurchases_ = new java.util.ArrayList<java.lang.Integer>(itemPurchases_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint32 item_purchases = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getItemPurchasesList() {
        return java.util.Collections.unmodifiableList(itemPurchases_);
      }
      /**
       * <code>repeated uint32 item_purchases = 6;</code>
       */
      public int getItemPurchasesCount() {
        return itemPurchases_.size();
      }
      /**
       * <code>repeated uint32 item_purchases = 6;</code>
       */
      public int getItemPurchases(int index) {
        return itemPurchases_.get(index);
      }
      /**
       * <code>repeated uint32 item_purchases = 6;</code>
       */
      public Builder setItemPurchases(
          int index, int value) {
        ensureItemPurchasesIsMutable();
        itemPurchases_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 item_purchases = 6;</code>
       */
      public Builder addItemPurchases(int value) {
        ensureItemPurchasesIsMutable();
        itemPurchases_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 item_purchases = 6;</code>
       */
      public Builder addAllItemPurchases(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemPurchasesIsMutable();
        super.addAll(values, itemPurchases_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 item_purchases = 6;</code>
       */
      public Builder clearItemPurchases() {
        itemPurchases_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CCompendiumTimestampedData)
    }

    static {
      defaultInstance = new CCompendiumTimestampedData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CCompendiumTimestampedData)
  }

  public interface CCompendiumGameTimelineOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .CCompendiumTimestampedData data = 1;
    /**
     * <code>repeated .CCompendiumTimestampedData data = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData> 
        getDataList();
    /**
     * <code>repeated .CCompendiumTimestampedData data = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData getData(int index);
    /**
     * <code>repeated .CCompendiumTimestampedData data = 1;</code>
     */
    int getDataCount();
    /**
     * <code>repeated .CCompendiumTimestampedData data = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedDataOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .CCompendiumTimestampedData data = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedDataOrBuilder getDataOrBuilder(
        int index);

    // repeated string tags = 2;
    /**
     * <code>repeated string tags = 2;</code>
     */
    java.util.List<java.lang.String>
    getTagsList();
    /**
     * <code>repeated string tags = 2;</code>
     */
    int getTagsCount();
    /**
     * <code>repeated string tags = 2;</code>
     */
    java.lang.String getTags(int index);
    /**
     * <code>repeated string tags = 2;</code>
     */
    com.google.protobuf.ByteString
        getTagsBytes(int index);
  }
  /**
   * Protobuf type {@code CCompendiumGameTimeline}
   */
  public static final class CCompendiumGameTimeline extends
      com.google.protobuf.GeneratedMessage
      implements CCompendiumGameTimelineOrBuilder {
    // Use CCompendiumGameTimeline.newBuilder() to construct.
    private CCompendiumGameTimeline(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CCompendiumGameTimeline(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CCompendiumGameTimeline defaultInstance;
    public static CCompendiumGameTimeline getDefaultInstance() {
      return defaultInstance;
    }

    public CCompendiumGameTimeline getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CCompendiumGameTimeline(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                data_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData>();
                mutable_bitField0_ |= 0x00000001;
              }
              data_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                tags_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              tags_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          tags_ = new com.google.protobuf.UnmodifiableLazyStringList(tags_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumGameTimeline_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumGameTimeline_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder.class);
    }

    public static com.google.protobuf.Parser<CCompendiumGameTimeline> PARSER =
        new com.google.protobuf.AbstractParser<CCompendiumGameTimeline>() {
      public CCompendiumGameTimeline parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CCompendiumGameTimeline(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CCompendiumGameTimeline> getParserForType() {
      return PARSER;
    }

    // repeated .CCompendiumTimestampedData data = 1;
    public static final int DATA_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData> data_;
    /**
     * <code>repeated .CCompendiumTimestampedData data = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .CCompendiumTimestampedData data = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedDataOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .CCompendiumTimestampedData data = 1;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .CCompendiumTimestampedData data = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .CCompendiumTimestampedData data = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    // repeated string tags = 2;
    public static final int TAGS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList tags_;
    /**
     * <code>repeated string tags = 2;</code>
     */
    public java.util.List<java.lang.String>
        getTagsList() {
      return tags_;
    }
    /**
     * <code>repeated string tags = 2;</code>
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <code>repeated string tags = 2;</code>
     */
    public java.lang.String getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <code>repeated string tags = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return tags_.getByteString(index);
    }

    private void initFields() {
      data_ = java.util.Collections.emptyList();
      tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(1, data_.get(i));
      }
      for (int i = 0; i < tags_.size(); i++) {
        output.writeBytes(2, tags_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, data_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(tags_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CCompendiumGameTimeline}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimelineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumGameTimeline_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumGameTimeline_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dataBuilder_.clear();
        }
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumGameTimeline_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline(this);
        int from_bitField0_ = bitField0_;
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          tags_ = new com.google.protobuf.UnmodifiableLazyStringList(
              tags_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.tags_ = tags_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.getDefaultInstance()) return this;
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .CCompendiumTimestampedData data = 1;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          data_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData>(data_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedDataOrBuilder> dataBuilder_;

      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public Builder setData(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public Builder setData(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public Builder addData(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public Builder addData(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public Builder addData(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public Builder addData(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          super.addAll(values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedDataOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.getDefaultInstance());
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.getDefaultInstance());
      }
      /**
       * <code>repeated .CCompendiumTimestampedData data = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedData.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumTimestampedDataOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // repeated string tags = 2;
      private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string tags = 2;</code>
       */
      public java.util.List<java.lang.String>
          getTagsList() {
        return java.util.Collections.unmodifiableList(tags_);
      }
      /**
       * <code>repeated string tags = 2;</code>
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <code>repeated string tags = 2;</code>
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <code>repeated string tags = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }
      /**
       * <code>repeated string tags = 2;</code>
       */
      public Builder setTags(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string tags = 2;</code>
       */
      public Builder addTags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string tags = 2;</code>
       */
      public Builder addAllTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureTagsIsMutable();
        super.addAll(values, tags_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string tags = 2;</code>
       */
      public Builder clearTags() {
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string tags = 2;</code>
       */
      public Builder addTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CCompendiumGameTimeline)
    }

    static {
      defaultInstance = new CCompendiumGameTimeline(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CCompendiumGameTimeline)
  }

  public interface CCompendiumGameListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .CCompendiumGameTimeline games = 1;
    /**
     * <code>repeated .CCompendiumGameTimeline games = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline> 
        getGamesList();
    /**
     * <code>repeated .CCompendiumGameTimeline games = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline getGames(int index);
    /**
     * <code>repeated .CCompendiumGameTimeline games = 1;</code>
     */
    int getGamesCount();
    /**
     * <code>repeated .CCompendiumGameTimeline games = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimelineOrBuilder> 
        getGamesOrBuilderList();
    /**
     * <code>repeated .CCompendiumGameTimeline games = 1;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimelineOrBuilder getGamesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CCompendiumGameList}
   */
  public static final class CCompendiumGameList extends
      com.google.protobuf.GeneratedMessage
      implements CCompendiumGameListOrBuilder {
    // Use CCompendiumGameList.newBuilder() to construct.
    private CCompendiumGameList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CCompendiumGameList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CCompendiumGameList defaultInstance;
    public static CCompendiumGameList getDefaultInstance() {
      return defaultInstance;
    }

    public CCompendiumGameList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CCompendiumGameList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                games_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline>();
                mutable_bitField0_ |= 0x00000001;
              }
              games_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          games_ = java.util.Collections.unmodifiableList(games_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumGameList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumGameList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList.Builder.class);
    }

    public static com.google.protobuf.Parser<CCompendiumGameList> PARSER =
        new com.google.protobuf.AbstractParser<CCompendiumGameList>() {
      public CCompendiumGameList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CCompendiumGameList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CCompendiumGameList> getParserForType() {
      return PARSER;
    }

    // repeated .CCompendiumGameTimeline games = 1;
    public static final int GAMES_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline> games_;
    /**
     * <code>repeated .CCompendiumGameTimeline games = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline> getGamesList() {
      return games_;
    }
    /**
     * <code>repeated .CCompendiumGameTimeline games = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimelineOrBuilder> 
        getGamesOrBuilderList() {
      return games_;
    }
    /**
     * <code>repeated .CCompendiumGameTimeline games = 1;</code>
     */
    public int getGamesCount() {
      return games_.size();
    }
    /**
     * <code>repeated .CCompendiumGameTimeline games = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline getGames(int index) {
      return games_.get(index);
    }
    /**
     * <code>repeated .CCompendiumGameTimeline games = 1;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimelineOrBuilder getGamesOrBuilder(
        int index) {
      return games_.get(index);
    }

    private void initFields() {
      games_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < games_.size(); i++) {
        output.writeMessage(1, games_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < games_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, games_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CCompendiumGameList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumGameList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumGameList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGamesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          gamesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CCompendiumGameList_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList(this);
        int from_bitField0_ = bitField0_;
        if (gamesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            games_ = java.util.Collections.unmodifiableList(games_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.games_ = games_;
        } else {
          result.games_ = gamesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList.getDefaultInstance()) return this;
        if (gamesBuilder_ == null) {
          if (!other.games_.isEmpty()) {
            if (games_.isEmpty()) {
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureGamesIsMutable();
              games_.addAll(other.games_);
            }
            onChanged();
          }
        } else {
          if (!other.games_.isEmpty()) {
            if (gamesBuilder_.isEmpty()) {
              gamesBuilder_.dispose();
              gamesBuilder_ = null;
              games_ = other.games_;
              bitField0_ = (bitField0_ & ~0x00000001);
              gamesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGamesFieldBuilder() : null;
            } else {
              gamesBuilder_.addAllMessages(other.games_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .CCompendiumGameTimeline games = 1;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline> games_ =
        java.util.Collections.emptyList();
      private void ensureGamesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          games_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline>(games_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimelineOrBuilder> gamesBuilder_;

      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline> getGamesList() {
        if (gamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(games_);
        } else {
          return gamesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public int getGamesCount() {
        if (gamesBuilder_ == null) {
          return games_.size();
        } else {
          return gamesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline getGames(int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);
        } else {
          return gamesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public Builder setGames(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.set(index, value);
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public Builder setGames(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.set(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public Builder addGames(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public Builder addGames(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline value) {
        if (gamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGamesIsMutable();
          games_.add(index, value);
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public Builder addGames(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public Builder addGames(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder builderForValue) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.add(index, builderForValue.build());
          onChanged();
        } else {
          gamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public Builder addAllGames(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline> values) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          super.addAll(values, games_);
          onChanged();
        } else {
          gamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public Builder clearGames() {
        if (gamesBuilder_ == null) {
          games_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          gamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public Builder removeGames(int index) {
        if (gamesBuilder_ == null) {
          ensureGamesIsMutable();
          games_.remove(index);
          onChanged();
        } else {
          gamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder getGamesBuilder(
          int index) {
        return getGamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimelineOrBuilder getGamesOrBuilder(
          int index) {
        if (gamesBuilder_ == null) {
          return games_.get(index);  } else {
          return gamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimelineOrBuilder> 
           getGamesOrBuilderList() {
        if (gamesBuilder_ != null) {
          return gamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(games_);
        }
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder addGamesBuilder() {
        return getGamesFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.getDefaultInstance());
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder addGamesBuilder(
          int index) {
        return getGamesFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.getDefaultInstance());
      }
      /**
       * <code>repeated .CCompendiumGameTimeline games = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder> 
           getGamesBuilderList() {
        return getGamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimelineOrBuilder> 
          getGamesFieldBuilder() {
        if (gamesBuilder_ == null) {
          gamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimeline.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CCompendiumGameTimelineOrBuilder>(
                  games_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          games_ = null;
        }
        return gamesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CCompendiumGameList)
    }

    static {
      defaultInstance = new CCompendiumGameList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CCompendiumGameList)
  }

  public interface CAdditionalEquipSlotOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 class_id = 1;
    /**
     * <code>optional uint32 class_id = 1;</code>
     */
    boolean hasClassId();
    /**
     * <code>optional uint32 class_id = 1;</code>
     */
    int getClassId();

    // optional uint32 slot_id = 2;
    /**
     * <code>optional uint32 slot_id = 2;</code>
     */
    boolean hasSlotId();
    /**
     * <code>optional uint32 slot_id = 2;</code>
     */
    int getSlotId();

    // optional uint32 def_index = 3;
    /**
     * <code>optional uint32 def_index = 3;</code>
     */
    boolean hasDefIndex();
    /**
     * <code>optional uint32 def_index = 3;</code>
     */
    int getDefIndex();
  }
  /**
   * Protobuf type {@code CAdditionalEquipSlot}
   */
  public static final class CAdditionalEquipSlot extends
      com.google.protobuf.GeneratedMessage
      implements CAdditionalEquipSlotOrBuilder {
    // Use CAdditionalEquipSlot.newBuilder() to construct.
    private CAdditionalEquipSlot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CAdditionalEquipSlot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CAdditionalEquipSlot defaultInstance;
    public static CAdditionalEquipSlot getDefaultInstance() {
      return defaultInstance;
    }

    public CAdditionalEquipSlot getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CAdditionalEquipSlot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              classId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              slotId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              defIndex_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAdditionalEquipSlot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAdditionalEquipSlot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot.Builder.class);
    }

    public static com.google.protobuf.Parser<CAdditionalEquipSlot> PARSER =
        new com.google.protobuf.AbstractParser<CAdditionalEquipSlot>() {
      public CAdditionalEquipSlot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CAdditionalEquipSlot(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CAdditionalEquipSlot> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 class_id = 1;
    public static final int CLASS_ID_FIELD_NUMBER = 1;
    private int classId_;
    /**
     * <code>optional uint32 class_id = 1;</code>
     */
    public boolean hasClassId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 class_id = 1;</code>
     */
    public int getClassId() {
      return classId_;
    }

    // optional uint32 slot_id = 2;
    public static final int SLOT_ID_FIELD_NUMBER = 2;
    private int slotId_;
    /**
     * <code>optional uint32 slot_id = 2;</code>
     */
    public boolean hasSlotId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 slot_id = 2;</code>
     */
    public int getSlotId() {
      return slotId_;
    }

    // optional uint32 def_index = 3;
    public static final int DEF_INDEX_FIELD_NUMBER = 3;
    private int defIndex_;
    /**
     * <code>optional uint32 def_index = 3;</code>
     */
    public boolean hasDefIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 def_index = 3;</code>
     */
    public int getDefIndex() {
      return defIndex_;
    }

    private void initFields() {
      classId_ = 0;
      slotId_ = 0;
      defIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, classId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, slotId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, defIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, classId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, slotId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, defIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CAdditionalEquipSlot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAdditionalEquipSlot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAdditionalEquipSlot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        classId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        slotId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        defIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CAdditionalEquipSlot_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.classId_ = classId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.slotId_ = slotId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.defIndex_ = defIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot.getDefaultInstance()) return this;
        if (other.hasClassId()) {
          setClassId(other.getClassId());
        }
        if (other.hasSlotId()) {
          setSlotId(other.getSlotId());
        }
        if (other.hasDefIndex()) {
          setDefIndex(other.getDefIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CAdditionalEquipSlot) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 class_id = 1;
      private int classId_ ;
      /**
       * <code>optional uint32 class_id = 1;</code>
       */
      public boolean hasClassId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 class_id = 1;</code>
       */
      public int getClassId() {
        return classId_;
      }
      /**
       * <code>optional uint32 class_id = 1;</code>
       */
      public Builder setClassId(int value) {
        bitField0_ |= 0x00000001;
        classId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 class_id = 1;</code>
       */
      public Builder clearClassId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        classId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 slot_id = 2;
      private int slotId_ ;
      /**
       * <code>optional uint32 slot_id = 2;</code>
       */
      public boolean hasSlotId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 slot_id = 2;</code>
       */
      public int getSlotId() {
        return slotId_;
      }
      /**
       * <code>optional uint32 slot_id = 2;</code>
       */
      public Builder setSlotId(int value) {
        bitField0_ |= 0x00000002;
        slotId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_id = 2;</code>
       */
      public Builder clearSlotId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        slotId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 def_index = 3;
      private int defIndex_ ;
      /**
       * <code>optional uint32 def_index = 3;</code>
       */
      public boolean hasDefIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 def_index = 3;</code>
       */
      public int getDefIndex() {
        return defIndex_;
      }
      /**
       * <code>optional uint32 def_index = 3;</code>
       */
      public Builder setDefIndex(int value) {
        bitField0_ |= 0x00000004;
        defIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 def_index = 3;</code>
       */
      public Builder clearDefIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        defIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CAdditionalEquipSlot)
    }

    static {
      defaultInstance = new CAdditionalEquipSlot(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CAdditionalEquipSlot)
  }

  public interface CMsgDOTARedeemItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 currency_id = 1;
    /**
     * <code>optional uint64 currency_id = 1;</code>
     */
    boolean hasCurrencyId();
    /**
     * <code>optional uint64 currency_id = 1;</code>
     */
    long getCurrencyId();

    // optional uint32 purchase_def = 2;
    /**
     * <code>optional uint32 purchase_def = 2;</code>
     */
    boolean hasPurchaseDef();
    /**
     * <code>optional uint32 purchase_def = 2;</code>
     */
    int getPurchaseDef();
  }
  /**
   * Protobuf type {@code CMsgDOTARedeemItem}
   */
  public static final class CMsgDOTARedeemItem extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTARedeemItemOrBuilder {
    // Use CMsgDOTARedeemItem.newBuilder() to construct.
    private CMsgDOTARedeemItem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTARedeemItem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTARedeemItem defaultInstance;
    public static CMsgDOTARedeemItem getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTARedeemItem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTARedeemItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              currencyId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              purchaseDef_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARedeemItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARedeemItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTARedeemItem> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTARedeemItem>() {
      public CMsgDOTARedeemItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTARedeemItem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTARedeemItem> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 currency_id = 1;
    public static final int CURRENCY_ID_FIELD_NUMBER = 1;
    private long currencyId_;
    /**
     * <code>optional uint64 currency_id = 1;</code>
     */
    public boolean hasCurrencyId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 currency_id = 1;</code>
     */
    public long getCurrencyId() {
      return currencyId_;
    }

    // optional uint32 purchase_def = 2;
    public static final int PURCHASE_DEF_FIELD_NUMBER = 2;
    private int purchaseDef_;
    /**
     * <code>optional uint32 purchase_def = 2;</code>
     */
    public boolean hasPurchaseDef() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 purchase_def = 2;</code>
     */
    public int getPurchaseDef() {
      return purchaseDef_;
    }

    private void initFields() {
      currencyId_ = 0L;
      purchaseDef_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, currencyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, purchaseDef_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, currencyId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, purchaseDef_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTARedeemItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARedeemItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARedeemItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        currencyId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        purchaseDef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARedeemItem_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.currencyId_ = currencyId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.purchaseDef_ = purchaseDef_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem.getDefaultInstance()) return this;
        if (other.hasCurrencyId()) {
          setCurrencyId(other.getCurrencyId());
        }
        if (other.hasPurchaseDef()) {
          setPurchaseDef(other.getPurchaseDef());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 currency_id = 1;
      private long currencyId_ ;
      /**
       * <code>optional uint64 currency_id = 1;</code>
       */
      public boolean hasCurrencyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 currency_id = 1;</code>
       */
      public long getCurrencyId() {
        return currencyId_;
      }
      /**
       * <code>optional uint64 currency_id = 1;</code>
       */
      public Builder setCurrencyId(long value) {
        bitField0_ |= 0x00000001;
        currencyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 currency_id = 1;</code>
       */
      public Builder clearCurrencyId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currencyId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 purchase_def = 2;
      private int purchaseDef_ ;
      /**
       * <code>optional uint32 purchase_def = 2;</code>
       */
      public boolean hasPurchaseDef() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 purchase_def = 2;</code>
       */
      public int getPurchaseDef() {
        return purchaseDef_;
      }
      /**
       * <code>optional uint32 purchase_def = 2;</code>
       */
      public Builder setPurchaseDef(int value) {
        bitField0_ |= 0x00000002;
        purchaseDef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 purchase_def = 2;</code>
       */
      public Builder clearPurchaseDef() {
        bitField0_ = (bitField0_ & ~0x00000002);
        purchaseDef_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTARedeemItem)
    }

    static {
      defaultInstance = new CMsgDOTARedeemItem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTARedeemItem)
  }

  public interface CMsgDOTARedeemItemResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CMsgDOTARedeemItemResponse}
   */
  public static final class CMsgDOTARedeemItemResponse extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTARedeemItemResponseOrBuilder {
    // Use CMsgDOTARedeemItemResponse.newBuilder() to construct.
    private CMsgDOTARedeemItemResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTARedeemItemResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTARedeemItemResponse defaultInstance;
    public static CMsgDOTARedeemItemResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTARedeemItemResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTARedeemItemResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARedeemItemResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARedeemItemResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTARedeemItemResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTARedeemItemResponse>() {
      public CMsgDOTARedeemItemResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTARedeemItemResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTARedeemItemResponse> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTARedeemItemResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARedeemItemResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARedeemItemResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARedeemItemResponse_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARedeemItemResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTARedeemItemResponse)
    }

    static {
      defaultInstance = new CMsgDOTARedeemItemResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTARedeemItemResponse)
  }

  public interface CMsgDOTACombatLogEntryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];
    /**
     * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
     */
    boolean hasType();
    /**
     * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES getType();

    // optional uint32 target_name = 2;
    /**
     * <code>optional uint32 target_name = 2;</code>
     */
    boolean hasTargetName();
    /**
     * <code>optional uint32 target_name = 2;</code>
     */
    int getTargetName();

    // optional uint32 target_source_name = 3;
    /**
     * <code>optional uint32 target_source_name = 3;</code>
     */
    boolean hasTargetSourceName();
    /**
     * <code>optional uint32 target_source_name = 3;</code>
     */
    int getTargetSourceName();

    // optional uint32 attacker_name = 4;
    /**
     * <code>optional uint32 attacker_name = 4;</code>
     */
    boolean hasAttackerName();
    /**
     * <code>optional uint32 attacker_name = 4;</code>
     */
    int getAttackerName();

    // optional uint32 damage_source_name = 5;
    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     */
    boolean hasDamageSourceName();
    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     */
    int getDamageSourceName();

    // optional uint32 inflictor_name = 6;
    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     */
    boolean hasInflictorName();
    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     */
    int getInflictorName();

    // optional bool is_attacker_illusion = 7;
    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     */
    boolean hasIsAttackerIllusion();
    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     */
    boolean getIsAttackerIllusion();

    // optional bool is_attacker_hero = 8;
    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     */
    boolean hasIsAttackerHero();
    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     */
    boolean getIsAttackerHero();

    // optional bool is_target_illusion = 9;
    /**
     * <code>optional bool is_target_illusion = 9;</code>
     */
    boolean hasIsTargetIllusion();
    /**
     * <code>optional bool is_target_illusion = 9;</code>
     */
    boolean getIsTargetIllusion();

    // optional bool is_target_hero = 10;
    /**
     * <code>optional bool is_target_hero = 10;</code>
     */
    boolean hasIsTargetHero();
    /**
     * <code>optional bool is_target_hero = 10;</code>
     */
    boolean getIsTargetHero();

    // optional bool is_visible_radiant = 11;
    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     */
    boolean hasIsVisibleRadiant();
    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     */
    boolean getIsVisibleRadiant();

    // optional bool is_visible_dire = 12;
    /**
     * <code>optional bool is_visible_dire = 12;</code>
     */
    boolean hasIsVisibleDire();
    /**
     * <code>optional bool is_visible_dire = 12;</code>
     */
    boolean getIsVisibleDire();

    // optional uint32 value = 13;
    /**
     * <code>optional uint32 value = 13;</code>
     */
    boolean hasValue();
    /**
     * <code>optional uint32 value = 13;</code>
     */
    int getValue();

    // optional int32 health = 14;
    /**
     * <code>optional int32 health = 14;</code>
     */
    boolean hasHealth();
    /**
     * <code>optional int32 health = 14;</code>
     */
    int getHealth();

    // optional float timestamp = 15;
    /**
     * <code>optional float timestamp = 15;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional float timestamp = 15;</code>
     */
    float getTimestamp();

    // optional float stun_duration = 16;
    /**
     * <code>optional float stun_duration = 16;</code>
     */
    boolean hasStunDuration();
    /**
     * <code>optional float stun_duration = 16;</code>
     */
    float getStunDuration();

    // optional float slow_duration = 17;
    /**
     * <code>optional float slow_duration = 17;</code>
     */
    boolean hasSlowDuration();
    /**
     * <code>optional float slow_duration = 17;</code>
     */
    float getSlowDuration();

    // optional bool is_ability_toggle_on = 18;
    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     */
    boolean hasIsAbilityToggleOn();
    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     */
    boolean getIsAbilityToggleOn();

    // optional bool is_ability_toggle_off = 19;
    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     */
    boolean hasIsAbilityToggleOff();
    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     */
    boolean getIsAbilityToggleOff();

    // optional uint32 ability_level = 20;
    /**
     * <code>optional uint32 ability_level = 20;</code>
     */
    boolean hasAbilityLevel();
    /**
     * <code>optional uint32 ability_level = 20;</code>
     */
    int getAbilityLevel();

    // optional float location_x = 21;
    /**
     * <code>optional float location_x = 21;</code>
     */
    boolean hasLocationX();
    /**
     * <code>optional float location_x = 21;</code>
     */
    float getLocationX();

    // optional float location_y = 22;
    /**
     * <code>optional float location_y = 22;</code>
     */
    boolean hasLocationY();
    /**
     * <code>optional float location_y = 22;</code>
     */
    float getLocationY();

    // optional uint32 gold_reason = 23;
    /**
     * <code>optional uint32 gold_reason = 23;</code>
     */
    boolean hasGoldReason();
    /**
     * <code>optional uint32 gold_reason = 23;</code>
     */
    int getGoldReason();

    // optional float timestamp_raw = 24;
    /**
     * <code>optional float timestamp_raw = 24;</code>
     */
    boolean hasTimestampRaw();
    /**
     * <code>optional float timestamp_raw = 24;</code>
     */
    float getTimestampRaw();

    // optional float modifier_duration = 25;
    /**
     * <code>optional float modifier_duration = 25;</code>
     */
    boolean hasModifierDuration();
    /**
     * <code>optional float modifier_duration = 25;</code>
     */
    float getModifierDuration();

    // optional uint32 xp_reason = 26;
    /**
     * <code>optional uint32 xp_reason = 26;</code>
     */
    boolean hasXpReason();
    /**
     * <code>optional uint32 xp_reason = 26;</code>
     */
    int getXpReason();

    // optional uint32 last_hits = 27;
    /**
     * <code>optional uint32 last_hits = 27;</code>
     */
    boolean hasLastHits();
    /**
     * <code>optional uint32 last_hits = 27;</code>
     */
    int getLastHits();

    // optional uint32 attacker_team = 28;
    /**
     * <code>optional uint32 attacker_team = 28;</code>
     */
    boolean hasAttackerTeam();
    /**
     * <code>optional uint32 attacker_team = 28;</code>
     */
    int getAttackerTeam();

    // optional uint32 target_team = 29;
    /**
     * <code>optional uint32 target_team = 29;</code>
     */
    boolean hasTargetTeam();
    /**
     * <code>optional uint32 target_team = 29;</code>
     */
    int getTargetTeam();

    // optional uint32 obs_wards_placed = 30;
    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     */
    boolean hasObsWardsPlaced();
    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     */
    int getObsWardsPlaced();

    // optional uint32 assist_player0 = 31;
    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     */
    boolean hasAssistPlayer0();
    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     */
    int getAssistPlayer0();

    // optional uint32 assist_player1 = 32;
    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     */
    boolean hasAssistPlayer1();
    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     */
    int getAssistPlayer1();

    // optional uint32 assist_player2 = 33;
    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     */
    boolean hasAssistPlayer2();
    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     */
    int getAssistPlayer2();

    // optional uint32 assist_player3 = 34;
    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     */
    boolean hasAssistPlayer3();
    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     */
    int getAssistPlayer3();

    // optional uint32 stack_count = 35;
    /**
     * <code>optional uint32 stack_count = 35;</code>
     */
    boolean hasStackCount();
    /**
     * <code>optional uint32 stack_count = 35;</code>
     */
    int getStackCount();

    // optional bool hidden_modifier = 36;
    /**
     * <code>optional bool hidden_modifier = 36;</code>
     */
    boolean hasHiddenModifier();
    /**
     * <code>optional bool hidden_modifier = 36;</code>
     */
    boolean getHiddenModifier();
  }
  /**
   * Protobuf type {@code CMsgDOTACombatLogEntry}
   */
  public static final class CMsgDOTACombatLogEntry extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTACombatLogEntryOrBuilder {
    // Use CMsgDOTACombatLogEntry.newBuilder() to construct.
    private CMsgDOTACombatLogEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTACombatLogEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTACombatLogEntry defaultInstance;
    public static CMsgDOTACombatLogEntry getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTACombatLogEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTACombatLogEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              targetName_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              targetSourceName_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              attackerName_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              damageSourceName_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              inflictorName_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isAttackerIllusion_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              isAttackerHero_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              isTargetIllusion_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              isTargetHero_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              isVisibleRadiant_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isVisibleDire_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              value_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              health_ = input.readInt32();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              timestamp_ = input.readFloat();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              stunDuration_ = input.readFloat();
              break;
            }
            case 141: {
              bitField0_ |= 0x00010000;
              slowDuration_ = input.readFloat();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              isAbilityToggleOn_ = input.readBool();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              isAbilityToggleOff_ = input.readBool();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              abilityLevel_ = input.readUInt32();
              break;
            }
            case 173: {
              bitField0_ |= 0x00100000;
              locationX_ = input.readFloat();
              break;
            }
            case 181: {
              bitField0_ |= 0x00200000;
              locationY_ = input.readFloat();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              goldReason_ = input.readUInt32();
              break;
            }
            case 197: {
              bitField0_ |= 0x00800000;
              timestampRaw_ = input.readFloat();
              break;
            }
            case 205: {
              bitField0_ |= 0x01000000;
              modifierDuration_ = input.readFloat();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              xpReason_ = input.readUInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              lastHits_ = input.readUInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              attackerTeam_ = input.readUInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              targetTeam_ = input.readUInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              obsWardsPlaced_ = input.readUInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              assistPlayer0_ = input.readUInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              assistPlayer1_ = input.readUInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              assistPlayer2_ = input.readUInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              assistPlayer3_ = input.readUInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              stackCount_ = input.readUInt32();
              break;
            }
            case 288: {
              bitField1_ |= 0x00000008;
              hiddenModifier_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTACombatLogEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTACombatLogEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTACombatLogEntry> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTACombatLogEntry>() {
      public CMsgDOTACombatLogEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTACombatLogEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTACombatLogEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    // optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];
    public static final int TYPE_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES type_;
    /**
     * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES getType() {
      return type_;
    }

    // optional uint32 target_name = 2;
    public static final int TARGET_NAME_FIELD_NUMBER = 2;
    private int targetName_;
    /**
     * <code>optional uint32 target_name = 2;</code>
     */
    public boolean hasTargetName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 target_name = 2;</code>
     */
    public int getTargetName() {
      return targetName_;
    }

    // optional uint32 target_source_name = 3;
    public static final int TARGET_SOURCE_NAME_FIELD_NUMBER = 3;
    private int targetSourceName_;
    /**
     * <code>optional uint32 target_source_name = 3;</code>
     */
    public boolean hasTargetSourceName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 target_source_name = 3;</code>
     */
    public int getTargetSourceName() {
      return targetSourceName_;
    }

    // optional uint32 attacker_name = 4;
    public static final int ATTACKER_NAME_FIELD_NUMBER = 4;
    private int attackerName_;
    /**
     * <code>optional uint32 attacker_name = 4;</code>
     */
    public boolean hasAttackerName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 attacker_name = 4;</code>
     */
    public int getAttackerName() {
      return attackerName_;
    }

    // optional uint32 damage_source_name = 5;
    public static final int DAMAGE_SOURCE_NAME_FIELD_NUMBER = 5;
    private int damageSourceName_;
    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     */
    public boolean hasDamageSourceName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     */
    public int getDamageSourceName() {
      return damageSourceName_;
    }

    // optional uint32 inflictor_name = 6;
    public static final int INFLICTOR_NAME_FIELD_NUMBER = 6;
    private int inflictorName_;
    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     */
    public boolean hasInflictorName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     */
    public int getInflictorName() {
      return inflictorName_;
    }

    // optional bool is_attacker_illusion = 7;
    public static final int IS_ATTACKER_ILLUSION_FIELD_NUMBER = 7;
    private boolean isAttackerIllusion_;
    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     */
    public boolean hasIsAttackerIllusion() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     */
    public boolean getIsAttackerIllusion() {
      return isAttackerIllusion_;
    }

    // optional bool is_attacker_hero = 8;
    public static final int IS_ATTACKER_HERO_FIELD_NUMBER = 8;
    private boolean isAttackerHero_;
    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     */
    public boolean hasIsAttackerHero() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     */
    public boolean getIsAttackerHero() {
      return isAttackerHero_;
    }

    // optional bool is_target_illusion = 9;
    public static final int IS_TARGET_ILLUSION_FIELD_NUMBER = 9;
    private boolean isTargetIllusion_;
    /**
     * <code>optional bool is_target_illusion = 9;</code>
     */
    public boolean hasIsTargetIllusion() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool is_target_illusion = 9;</code>
     */
    public boolean getIsTargetIllusion() {
      return isTargetIllusion_;
    }

    // optional bool is_target_hero = 10;
    public static final int IS_TARGET_HERO_FIELD_NUMBER = 10;
    private boolean isTargetHero_;
    /**
     * <code>optional bool is_target_hero = 10;</code>
     */
    public boolean hasIsTargetHero() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool is_target_hero = 10;</code>
     */
    public boolean getIsTargetHero() {
      return isTargetHero_;
    }

    // optional bool is_visible_radiant = 11;
    public static final int IS_VISIBLE_RADIANT_FIELD_NUMBER = 11;
    private boolean isVisibleRadiant_;
    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     */
    public boolean hasIsVisibleRadiant() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     */
    public boolean getIsVisibleRadiant() {
      return isVisibleRadiant_;
    }

    // optional bool is_visible_dire = 12;
    public static final int IS_VISIBLE_DIRE_FIELD_NUMBER = 12;
    private boolean isVisibleDire_;
    /**
     * <code>optional bool is_visible_dire = 12;</code>
     */
    public boolean hasIsVisibleDire() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool is_visible_dire = 12;</code>
     */
    public boolean getIsVisibleDire() {
      return isVisibleDire_;
    }

    // optional uint32 value = 13;
    public static final int VALUE_FIELD_NUMBER = 13;
    private int value_;
    /**
     * <code>optional uint32 value = 13;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 value = 13;</code>
     */
    public int getValue() {
      return value_;
    }

    // optional int32 health = 14;
    public static final int HEALTH_FIELD_NUMBER = 14;
    private int health_;
    /**
     * <code>optional int32 health = 14;</code>
     */
    public boolean hasHealth() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 health = 14;</code>
     */
    public int getHealth() {
      return health_;
    }

    // optional float timestamp = 15;
    public static final int TIMESTAMP_FIELD_NUMBER = 15;
    private float timestamp_;
    /**
     * <code>optional float timestamp = 15;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float timestamp = 15;</code>
     */
    public float getTimestamp() {
      return timestamp_;
    }

    // optional float stun_duration = 16;
    public static final int STUN_DURATION_FIELD_NUMBER = 16;
    private float stunDuration_;
    /**
     * <code>optional float stun_duration = 16;</code>
     */
    public boolean hasStunDuration() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float stun_duration = 16;</code>
     */
    public float getStunDuration() {
      return stunDuration_;
    }

    // optional float slow_duration = 17;
    public static final int SLOW_DURATION_FIELD_NUMBER = 17;
    private float slowDuration_;
    /**
     * <code>optional float slow_duration = 17;</code>
     */
    public boolean hasSlowDuration() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional float slow_duration = 17;</code>
     */
    public float getSlowDuration() {
      return slowDuration_;
    }

    // optional bool is_ability_toggle_on = 18;
    public static final int IS_ABILITY_TOGGLE_ON_FIELD_NUMBER = 18;
    private boolean isAbilityToggleOn_;
    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     */
    public boolean hasIsAbilityToggleOn() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     */
    public boolean getIsAbilityToggleOn() {
      return isAbilityToggleOn_;
    }

    // optional bool is_ability_toggle_off = 19;
    public static final int IS_ABILITY_TOGGLE_OFF_FIELD_NUMBER = 19;
    private boolean isAbilityToggleOff_;
    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     */
    public boolean hasIsAbilityToggleOff() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     */
    public boolean getIsAbilityToggleOff() {
      return isAbilityToggleOff_;
    }

    // optional uint32 ability_level = 20;
    public static final int ABILITY_LEVEL_FIELD_NUMBER = 20;
    private int abilityLevel_;
    /**
     * <code>optional uint32 ability_level = 20;</code>
     */
    public boolean hasAbilityLevel() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint32 ability_level = 20;</code>
     */
    public int getAbilityLevel() {
      return abilityLevel_;
    }

    // optional float location_x = 21;
    public static final int LOCATION_X_FIELD_NUMBER = 21;
    private float locationX_;
    /**
     * <code>optional float location_x = 21;</code>
     */
    public boolean hasLocationX() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional float location_x = 21;</code>
     */
    public float getLocationX() {
      return locationX_;
    }

    // optional float location_y = 22;
    public static final int LOCATION_Y_FIELD_NUMBER = 22;
    private float locationY_;
    /**
     * <code>optional float location_y = 22;</code>
     */
    public boolean hasLocationY() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional float location_y = 22;</code>
     */
    public float getLocationY() {
      return locationY_;
    }

    // optional uint32 gold_reason = 23;
    public static final int GOLD_REASON_FIELD_NUMBER = 23;
    private int goldReason_;
    /**
     * <code>optional uint32 gold_reason = 23;</code>
     */
    public boolean hasGoldReason() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional uint32 gold_reason = 23;</code>
     */
    public int getGoldReason() {
      return goldReason_;
    }

    // optional float timestamp_raw = 24;
    public static final int TIMESTAMP_RAW_FIELD_NUMBER = 24;
    private float timestampRaw_;
    /**
     * <code>optional float timestamp_raw = 24;</code>
     */
    public boolean hasTimestampRaw() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional float timestamp_raw = 24;</code>
     */
    public float getTimestampRaw() {
      return timestampRaw_;
    }

    // optional float modifier_duration = 25;
    public static final int MODIFIER_DURATION_FIELD_NUMBER = 25;
    private float modifierDuration_;
    /**
     * <code>optional float modifier_duration = 25;</code>
     */
    public boolean hasModifierDuration() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional float modifier_duration = 25;</code>
     */
    public float getModifierDuration() {
      return modifierDuration_;
    }

    // optional uint32 xp_reason = 26;
    public static final int XP_REASON_FIELD_NUMBER = 26;
    private int xpReason_;
    /**
     * <code>optional uint32 xp_reason = 26;</code>
     */
    public boolean hasXpReason() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional uint32 xp_reason = 26;</code>
     */
    public int getXpReason() {
      return xpReason_;
    }

    // optional uint32 last_hits = 27;
    public static final int LAST_HITS_FIELD_NUMBER = 27;
    private int lastHits_;
    /**
     * <code>optional uint32 last_hits = 27;</code>
     */
    public boolean hasLastHits() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional uint32 last_hits = 27;</code>
     */
    public int getLastHits() {
      return lastHits_;
    }

    // optional uint32 attacker_team = 28;
    public static final int ATTACKER_TEAM_FIELD_NUMBER = 28;
    private int attackerTeam_;
    /**
     * <code>optional uint32 attacker_team = 28;</code>
     */
    public boolean hasAttackerTeam() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional uint32 attacker_team = 28;</code>
     */
    public int getAttackerTeam() {
      return attackerTeam_;
    }

    // optional uint32 target_team = 29;
    public static final int TARGET_TEAM_FIELD_NUMBER = 29;
    private int targetTeam_;
    /**
     * <code>optional uint32 target_team = 29;</code>
     */
    public boolean hasTargetTeam() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional uint32 target_team = 29;</code>
     */
    public int getTargetTeam() {
      return targetTeam_;
    }

    // optional uint32 obs_wards_placed = 30;
    public static final int OBS_WARDS_PLACED_FIELD_NUMBER = 30;
    private int obsWardsPlaced_;
    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     */
    public boolean hasObsWardsPlaced() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     */
    public int getObsWardsPlaced() {
      return obsWardsPlaced_;
    }

    // optional uint32 assist_player0 = 31;
    public static final int ASSIST_PLAYER0_FIELD_NUMBER = 31;
    private int assistPlayer0_;
    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     */
    public boolean hasAssistPlayer0() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     */
    public int getAssistPlayer0() {
      return assistPlayer0_;
    }

    // optional uint32 assist_player1 = 32;
    public static final int ASSIST_PLAYER1_FIELD_NUMBER = 32;
    private int assistPlayer1_;
    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     */
    public boolean hasAssistPlayer1() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     */
    public int getAssistPlayer1() {
      return assistPlayer1_;
    }

    // optional uint32 assist_player2 = 33;
    public static final int ASSIST_PLAYER2_FIELD_NUMBER = 33;
    private int assistPlayer2_;
    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     */
    public boolean hasAssistPlayer2() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     */
    public int getAssistPlayer2() {
      return assistPlayer2_;
    }

    // optional uint32 assist_player3 = 34;
    public static final int ASSIST_PLAYER3_FIELD_NUMBER = 34;
    private int assistPlayer3_;
    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     */
    public boolean hasAssistPlayer3() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     */
    public int getAssistPlayer3() {
      return assistPlayer3_;
    }

    // optional uint32 stack_count = 35;
    public static final int STACK_COUNT_FIELD_NUMBER = 35;
    private int stackCount_;
    /**
     * <code>optional uint32 stack_count = 35;</code>
     */
    public boolean hasStackCount() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 stack_count = 35;</code>
     */
    public int getStackCount() {
      return stackCount_;
    }

    // optional bool hidden_modifier = 36;
    public static final int HIDDEN_MODIFIER_FIELD_NUMBER = 36;
    private boolean hiddenModifier_;
    /**
     * <code>optional bool hidden_modifier = 36;</code>
     */
    public boolean hasHiddenModifier() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool hidden_modifier = 36;</code>
     */
    public boolean getHiddenModifier() {
      return hiddenModifier_;
    }

    private void initFields() {
      type_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
      targetName_ = 0;
      targetSourceName_ = 0;
      attackerName_ = 0;
      damageSourceName_ = 0;
      inflictorName_ = 0;
      isAttackerIllusion_ = false;
      isAttackerHero_ = false;
      isTargetIllusion_ = false;
      isTargetHero_ = false;
      isVisibleRadiant_ = false;
      isVisibleDire_ = false;
      value_ = 0;
      health_ = 0;
      timestamp_ = 0F;
      stunDuration_ = 0F;
      slowDuration_ = 0F;
      isAbilityToggleOn_ = false;
      isAbilityToggleOff_ = false;
      abilityLevel_ = 0;
      locationX_ = 0F;
      locationY_ = 0F;
      goldReason_ = 0;
      timestampRaw_ = 0F;
      modifierDuration_ = 0F;
      xpReason_ = 0;
      lastHits_ = 0;
      attackerTeam_ = 0;
      targetTeam_ = 0;
      obsWardsPlaced_ = 0;
      assistPlayer0_ = 0;
      assistPlayer1_ = 0;
      assistPlayer2_ = 0;
      assistPlayer3_ = 0;
      stackCount_ = 0;
      hiddenModifier_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, targetName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, targetSourceName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, attackerName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, damageSourceName_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, inflictorName_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, isAttackerIllusion_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, isAttackerHero_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, isTargetIllusion_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, isTargetHero_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, isVisibleRadiant_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isVisibleDire_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, value_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, health_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, timestamp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, stunDuration_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(17, slowDuration_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(18, isAbilityToggleOn_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(19, isAbilityToggleOff_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(20, abilityLevel_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeFloat(21, locationX_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeFloat(22, locationY_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(23, goldReason_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeFloat(24, timestampRaw_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeFloat(25, modifierDuration_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeUInt32(26, xpReason_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeUInt32(27, lastHits_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeUInt32(28, attackerTeam_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeUInt32(29, targetTeam_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeUInt32(30, obsWardsPlaced_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeUInt32(31, assistPlayer0_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeUInt32(32, assistPlayer1_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(33, assistPlayer2_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(34, assistPlayer3_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(35, stackCount_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeBool(36, hiddenModifier_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, targetName_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, targetSourceName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, attackerName_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, damageSourceName_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, inflictorName_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isAttackerIllusion_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isAttackerHero_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isTargetIllusion_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isTargetHero_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isVisibleRadiant_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isVisibleDire_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, value_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, health_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, timestamp_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, stunDuration_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, slowDuration_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, isAbilityToggleOn_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, isAbilityToggleOff_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, abilityLevel_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, locationX_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, locationY_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, goldReason_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(24, timestampRaw_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(25, modifierDuration_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, xpReason_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, lastHits_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, attackerTeam_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, targetTeam_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, obsWardsPlaced_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(31, assistPlayer0_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, assistPlayer1_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(33, assistPlayer2_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(34, assistPlayer3_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(35, stackCount_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(36, hiddenModifier_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTACombatLogEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTACombatLogEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTACombatLogEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
        bitField0_ = (bitField0_ & ~0x00000001);
        targetName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        targetSourceName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        attackerName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        damageSourceName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        inflictorName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        isAttackerIllusion_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        isAttackerHero_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        isTargetIllusion_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        isTargetHero_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        isVisibleRadiant_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        isVisibleDire_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        health_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        timestamp_ = 0F;
        bitField0_ = (bitField0_ & ~0x00004000);
        stunDuration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        slowDuration_ = 0F;
        bitField0_ = (bitField0_ & ~0x00010000);
        isAbilityToggleOn_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        isAbilityToggleOff_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        abilityLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        locationX_ = 0F;
        bitField0_ = (bitField0_ & ~0x00100000);
        locationY_ = 0F;
        bitField0_ = (bitField0_ & ~0x00200000);
        goldReason_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        timestampRaw_ = 0F;
        bitField0_ = (bitField0_ & ~0x00800000);
        modifierDuration_ = 0F;
        bitField0_ = (bitField0_ & ~0x01000000);
        xpReason_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        lastHits_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        attackerTeam_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        targetTeam_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        obsWardsPlaced_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        assistPlayer0_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        assistPlayer1_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        assistPlayer2_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        assistPlayer3_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        stackCount_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        hiddenModifier_ = false;
        bitField1_ = (bitField1_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTACombatLogEntry_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetName_ = targetName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.targetSourceName_ = targetSourceName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.attackerName_ = attackerName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.damageSourceName_ = damageSourceName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.inflictorName_ = inflictorName_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isAttackerIllusion_ = isAttackerIllusion_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isAttackerHero_ = isAttackerHero_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isTargetIllusion_ = isTargetIllusion_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isTargetHero_ = isTargetHero_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isVisibleRadiant_ = isVisibleRadiant_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isVisibleDire_ = isVisibleDire_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.health_ = health_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.stunDuration_ = stunDuration_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.slowDuration_ = slowDuration_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.isAbilityToggleOn_ = isAbilityToggleOn_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.isAbilityToggleOff_ = isAbilityToggleOff_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.abilityLevel_ = abilityLevel_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.locationX_ = locationX_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.locationY_ = locationY_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.goldReason_ = goldReason_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.timestampRaw_ = timestampRaw_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.modifierDuration_ = modifierDuration_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.xpReason_ = xpReason_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.lastHits_ = lastHits_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.attackerTeam_ = attackerTeam_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.targetTeam_ = targetTeam_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.obsWardsPlaced_ = obsWardsPlaced_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.assistPlayer0_ = assistPlayer0_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.assistPlayer1_ = assistPlayer1_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.assistPlayer2_ = assistPlayer2_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.assistPlayer3_ = assistPlayer3_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.stackCount_ = stackCount_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000008;
        }
        result.hiddenModifier_ = hiddenModifier_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTargetName()) {
          setTargetName(other.getTargetName());
        }
        if (other.hasTargetSourceName()) {
          setTargetSourceName(other.getTargetSourceName());
        }
        if (other.hasAttackerName()) {
          setAttackerName(other.getAttackerName());
        }
        if (other.hasDamageSourceName()) {
          setDamageSourceName(other.getDamageSourceName());
        }
        if (other.hasInflictorName()) {
          setInflictorName(other.getInflictorName());
        }
        if (other.hasIsAttackerIllusion()) {
          setIsAttackerIllusion(other.getIsAttackerIllusion());
        }
        if (other.hasIsAttackerHero()) {
          setIsAttackerHero(other.getIsAttackerHero());
        }
        if (other.hasIsTargetIllusion()) {
          setIsTargetIllusion(other.getIsTargetIllusion());
        }
        if (other.hasIsTargetHero()) {
          setIsTargetHero(other.getIsTargetHero());
        }
        if (other.hasIsVisibleRadiant()) {
          setIsVisibleRadiant(other.getIsVisibleRadiant());
        }
        if (other.hasIsVisibleDire()) {
          setIsVisibleDire(other.getIsVisibleDire());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasHealth()) {
          setHealth(other.getHealth());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasStunDuration()) {
          setStunDuration(other.getStunDuration());
        }
        if (other.hasSlowDuration()) {
          setSlowDuration(other.getSlowDuration());
        }
        if (other.hasIsAbilityToggleOn()) {
          setIsAbilityToggleOn(other.getIsAbilityToggleOn());
        }
        if (other.hasIsAbilityToggleOff()) {
          setIsAbilityToggleOff(other.getIsAbilityToggleOff());
        }
        if (other.hasAbilityLevel()) {
          setAbilityLevel(other.getAbilityLevel());
        }
        if (other.hasLocationX()) {
          setLocationX(other.getLocationX());
        }
        if (other.hasLocationY()) {
          setLocationY(other.getLocationY());
        }
        if (other.hasGoldReason()) {
          setGoldReason(other.getGoldReason());
        }
        if (other.hasTimestampRaw()) {
          setTimestampRaw(other.getTimestampRaw());
        }
        if (other.hasModifierDuration()) {
          setModifierDuration(other.getModifierDuration());
        }
        if (other.hasXpReason()) {
          setXpReason(other.getXpReason());
        }
        if (other.hasLastHits()) {
          setLastHits(other.getLastHits());
        }
        if (other.hasAttackerTeam()) {
          setAttackerTeam(other.getAttackerTeam());
        }
        if (other.hasTargetTeam()) {
          setTargetTeam(other.getTargetTeam());
        }
        if (other.hasObsWardsPlaced()) {
          setObsWardsPlaced(other.getObsWardsPlaced());
        }
        if (other.hasAssistPlayer0()) {
          setAssistPlayer0(other.getAssistPlayer0());
        }
        if (other.hasAssistPlayer1()) {
          setAssistPlayer1(other.getAssistPlayer1());
        }
        if (other.hasAssistPlayer2()) {
          setAssistPlayer2(other.getAssistPlayer2());
        }
        if (other.hasAssistPlayer3()) {
          setAssistPlayer3(other.getAssistPlayer3());
        }
        if (other.hasStackCount()) {
          setStackCount(other.getStackCount());
        }
        if (other.hasHiddenModifier()) {
          setHiddenModifier(other.getHiddenModifier());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTACombatLogEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES type_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
      /**
       * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES getType() {
        return type_;
      }
      /**
       * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
       */
      public Builder setType(skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_DAMAGE];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_DAMAGE;
        onChanged();
        return this;
      }

      // optional uint32 target_name = 2;
      private int targetName_ ;
      /**
       * <code>optional uint32 target_name = 2;</code>
       */
      public boolean hasTargetName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 target_name = 2;</code>
       */
      public int getTargetName() {
        return targetName_;
      }
      /**
       * <code>optional uint32 target_name = 2;</code>
       */
      public Builder setTargetName(int value) {
        bitField0_ |= 0x00000002;
        targetName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_name = 2;</code>
       */
      public Builder clearTargetName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetName_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 target_source_name = 3;
      private int targetSourceName_ ;
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       */
      public boolean hasTargetSourceName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       */
      public int getTargetSourceName() {
        return targetSourceName_;
      }
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       */
      public Builder setTargetSourceName(int value) {
        bitField0_ |= 0x00000004;
        targetSourceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       */
      public Builder clearTargetSourceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        targetSourceName_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 attacker_name = 4;
      private int attackerName_ ;
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       */
      public boolean hasAttackerName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       */
      public int getAttackerName() {
        return attackerName_;
      }
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       */
      public Builder setAttackerName(int value) {
        bitField0_ |= 0x00000008;
        attackerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       */
      public Builder clearAttackerName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        attackerName_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 damage_source_name = 5;
      private int damageSourceName_ ;
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       */
      public boolean hasDamageSourceName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       */
      public int getDamageSourceName() {
        return damageSourceName_;
      }
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       */
      public Builder setDamageSourceName(int value) {
        bitField0_ |= 0x00000010;
        damageSourceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       */
      public Builder clearDamageSourceName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        damageSourceName_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 inflictor_name = 6;
      private int inflictorName_ ;
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       */
      public boolean hasInflictorName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       */
      public int getInflictorName() {
        return inflictorName_;
      }
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       */
      public Builder setInflictorName(int value) {
        bitField0_ |= 0x00000020;
        inflictorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       */
      public Builder clearInflictorName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        inflictorName_ = 0;
        onChanged();
        return this;
      }

      // optional bool is_attacker_illusion = 7;
      private boolean isAttackerIllusion_ ;
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       */
      public boolean hasIsAttackerIllusion() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       */
      public boolean getIsAttackerIllusion() {
        return isAttackerIllusion_;
      }
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       */
      public Builder setIsAttackerIllusion(boolean value) {
        bitField0_ |= 0x00000040;
        isAttackerIllusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       */
      public Builder clearIsAttackerIllusion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isAttackerIllusion_ = false;
        onChanged();
        return this;
      }

      // optional bool is_attacker_hero = 8;
      private boolean isAttackerHero_ ;
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       */
      public boolean hasIsAttackerHero() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       */
      public boolean getIsAttackerHero() {
        return isAttackerHero_;
      }
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       */
      public Builder setIsAttackerHero(boolean value) {
        bitField0_ |= 0x00000080;
        isAttackerHero_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       */
      public Builder clearIsAttackerHero() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isAttackerHero_ = false;
        onChanged();
        return this;
      }

      // optional bool is_target_illusion = 9;
      private boolean isTargetIllusion_ ;
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       */
      public boolean hasIsTargetIllusion() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       */
      public boolean getIsTargetIllusion() {
        return isTargetIllusion_;
      }
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       */
      public Builder setIsTargetIllusion(boolean value) {
        bitField0_ |= 0x00000100;
        isTargetIllusion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       */
      public Builder clearIsTargetIllusion() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isTargetIllusion_ = false;
        onChanged();
        return this;
      }

      // optional bool is_target_hero = 10;
      private boolean isTargetHero_ ;
      /**
       * <code>optional bool is_target_hero = 10;</code>
       */
      public boolean hasIsTargetHero() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool is_target_hero = 10;</code>
       */
      public boolean getIsTargetHero() {
        return isTargetHero_;
      }
      /**
       * <code>optional bool is_target_hero = 10;</code>
       */
      public Builder setIsTargetHero(boolean value) {
        bitField0_ |= 0x00000200;
        isTargetHero_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_target_hero = 10;</code>
       */
      public Builder clearIsTargetHero() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isTargetHero_ = false;
        onChanged();
        return this;
      }

      // optional bool is_visible_radiant = 11;
      private boolean isVisibleRadiant_ ;
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       */
      public boolean hasIsVisibleRadiant() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       */
      public boolean getIsVisibleRadiant() {
        return isVisibleRadiant_;
      }
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       */
      public Builder setIsVisibleRadiant(boolean value) {
        bitField0_ |= 0x00000400;
        isVisibleRadiant_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       */
      public Builder clearIsVisibleRadiant() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isVisibleRadiant_ = false;
        onChanged();
        return this;
      }

      // optional bool is_visible_dire = 12;
      private boolean isVisibleDire_ ;
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       */
      public boolean hasIsVisibleDire() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       */
      public boolean getIsVisibleDire() {
        return isVisibleDire_;
      }
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       */
      public Builder setIsVisibleDire(boolean value) {
        bitField0_ |= 0x00000800;
        isVisibleDire_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       */
      public Builder clearIsVisibleDire() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isVisibleDire_ = false;
        onChanged();
        return this;
      }

      // optional uint32 value = 13;
      private int value_ ;
      /**
       * <code>optional uint32 value = 13;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 value = 13;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional uint32 value = 13;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00001000;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 value = 13;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00001000);
        value_ = 0;
        onChanged();
        return this;
      }

      // optional int32 health = 14;
      private int health_ ;
      /**
       * <code>optional int32 health = 14;</code>
       */
      public boolean hasHealth() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 health = 14;</code>
       */
      public int getHealth() {
        return health_;
      }
      /**
       * <code>optional int32 health = 14;</code>
       */
      public Builder setHealth(int value) {
        bitField0_ |= 0x00002000;
        health_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 health = 14;</code>
       */
      public Builder clearHealth() {
        bitField0_ = (bitField0_ & ~0x00002000);
        health_ = 0;
        onChanged();
        return this;
      }

      // optional float timestamp = 15;
      private float timestamp_ ;
      /**
       * <code>optional float timestamp = 15;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float timestamp = 15;</code>
       */
      public float getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional float timestamp = 15;</code>
       */
      public Builder setTimestamp(float value) {
        bitField0_ |= 0x00004000;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float timestamp = 15;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00004000);
        timestamp_ = 0F;
        onChanged();
        return this;
      }

      // optional float stun_duration = 16;
      private float stunDuration_ ;
      /**
       * <code>optional float stun_duration = 16;</code>
       */
      public boolean hasStunDuration() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float stun_duration = 16;</code>
       */
      public float getStunDuration() {
        return stunDuration_;
      }
      /**
       * <code>optional float stun_duration = 16;</code>
       */
      public Builder setStunDuration(float value) {
        bitField0_ |= 0x00008000;
        stunDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float stun_duration = 16;</code>
       */
      public Builder clearStunDuration() {
        bitField0_ = (bitField0_ & ~0x00008000);
        stunDuration_ = 0F;
        onChanged();
        return this;
      }

      // optional float slow_duration = 17;
      private float slowDuration_ ;
      /**
       * <code>optional float slow_duration = 17;</code>
       */
      public boolean hasSlowDuration() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional float slow_duration = 17;</code>
       */
      public float getSlowDuration() {
        return slowDuration_;
      }
      /**
       * <code>optional float slow_duration = 17;</code>
       */
      public Builder setSlowDuration(float value) {
        bitField0_ |= 0x00010000;
        slowDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float slow_duration = 17;</code>
       */
      public Builder clearSlowDuration() {
        bitField0_ = (bitField0_ & ~0x00010000);
        slowDuration_ = 0F;
        onChanged();
        return this;
      }

      // optional bool is_ability_toggle_on = 18;
      private boolean isAbilityToggleOn_ ;
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       */
      public boolean hasIsAbilityToggleOn() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       */
      public boolean getIsAbilityToggleOn() {
        return isAbilityToggleOn_;
      }
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       */
      public Builder setIsAbilityToggleOn(boolean value) {
        bitField0_ |= 0x00020000;
        isAbilityToggleOn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       */
      public Builder clearIsAbilityToggleOn() {
        bitField0_ = (bitField0_ & ~0x00020000);
        isAbilityToggleOn_ = false;
        onChanged();
        return this;
      }

      // optional bool is_ability_toggle_off = 19;
      private boolean isAbilityToggleOff_ ;
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       */
      public boolean hasIsAbilityToggleOff() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       */
      public boolean getIsAbilityToggleOff() {
        return isAbilityToggleOff_;
      }
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       */
      public Builder setIsAbilityToggleOff(boolean value) {
        bitField0_ |= 0x00040000;
        isAbilityToggleOff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       */
      public Builder clearIsAbilityToggleOff() {
        bitField0_ = (bitField0_ & ~0x00040000);
        isAbilityToggleOff_ = false;
        onChanged();
        return this;
      }

      // optional uint32 ability_level = 20;
      private int abilityLevel_ ;
      /**
       * <code>optional uint32 ability_level = 20;</code>
       */
      public boolean hasAbilityLevel() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 ability_level = 20;</code>
       */
      public int getAbilityLevel() {
        return abilityLevel_;
      }
      /**
       * <code>optional uint32 ability_level = 20;</code>
       */
      public Builder setAbilityLevel(int value) {
        bitField0_ |= 0x00080000;
        abilityLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability_level = 20;</code>
       */
      public Builder clearAbilityLevel() {
        bitField0_ = (bitField0_ & ~0x00080000);
        abilityLevel_ = 0;
        onChanged();
        return this;
      }

      // optional float location_x = 21;
      private float locationX_ ;
      /**
       * <code>optional float location_x = 21;</code>
       */
      public boolean hasLocationX() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional float location_x = 21;</code>
       */
      public float getLocationX() {
        return locationX_;
      }
      /**
       * <code>optional float location_x = 21;</code>
       */
      public Builder setLocationX(float value) {
        bitField0_ |= 0x00100000;
        locationX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float location_x = 21;</code>
       */
      public Builder clearLocationX() {
        bitField0_ = (bitField0_ & ~0x00100000);
        locationX_ = 0F;
        onChanged();
        return this;
      }

      // optional float location_y = 22;
      private float locationY_ ;
      /**
       * <code>optional float location_y = 22;</code>
       */
      public boolean hasLocationY() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional float location_y = 22;</code>
       */
      public float getLocationY() {
        return locationY_;
      }
      /**
       * <code>optional float location_y = 22;</code>
       */
      public Builder setLocationY(float value) {
        bitField0_ |= 0x00200000;
        locationY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float location_y = 22;</code>
       */
      public Builder clearLocationY() {
        bitField0_ = (bitField0_ & ~0x00200000);
        locationY_ = 0F;
        onChanged();
        return this;
      }

      // optional uint32 gold_reason = 23;
      private int goldReason_ ;
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       */
      public boolean hasGoldReason() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       */
      public int getGoldReason() {
        return goldReason_;
      }
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       */
      public Builder setGoldReason(int value) {
        bitField0_ |= 0x00400000;
        goldReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       */
      public Builder clearGoldReason() {
        bitField0_ = (bitField0_ & ~0x00400000);
        goldReason_ = 0;
        onChanged();
        return this;
      }

      // optional float timestamp_raw = 24;
      private float timestampRaw_ ;
      /**
       * <code>optional float timestamp_raw = 24;</code>
       */
      public boolean hasTimestampRaw() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional float timestamp_raw = 24;</code>
       */
      public float getTimestampRaw() {
        return timestampRaw_;
      }
      /**
       * <code>optional float timestamp_raw = 24;</code>
       */
      public Builder setTimestampRaw(float value) {
        bitField0_ |= 0x00800000;
        timestampRaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float timestamp_raw = 24;</code>
       */
      public Builder clearTimestampRaw() {
        bitField0_ = (bitField0_ & ~0x00800000);
        timestampRaw_ = 0F;
        onChanged();
        return this;
      }

      // optional float modifier_duration = 25;
      private float modifierDuration_ ;
      /**
       * <code>optional float modifier_duration = 25;</code>
       */
      public boolean hasModifierDuration() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional float modifier_duration = 25;</code>
       */
      public float getModifierDuration() {
        return modifierDuration_;
      }
      /**
       * <code>optional float modifier_duration = 25;</code>
       */
      public Builder setModifierDuration(float value) {
        bitField0_ |= 0x01000000;
        modifierDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float modifier_duration = 25;</code>
       */
      public Builder clearModifierDuration() {
        bitField0_ = (bitField0_ & ~0x01000000);
        modifierDuration_ = 0F;
        onChanged();
        return this;
      }

      // optional uint32 xp_reason = 26;
      private int xpReason_ ;
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       */
      public boolean hasXpReason() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       */
      public int getXpReason() {
        return xpReason_;
      }
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       */
      public Builder setXpReason(int value) {
        bitField0_ |= 0x02000000;
        xpReason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       */
      public Builder clearXpReason() {
        bitField0_ = (bitField0_ & ~0x02000000);
        xpReason_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 last_hits = 27;
      private int lastHits_ ;
      /**
       * <code>optional uint32 last_hits = 27;</code>
       */
      public boolean hasLastHits() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional uint32 last_hits = 27;</code>
       */
      public int getLastHits() {
        return lastHits_;
      }
      /**
       * <code>optional uint32 last_hits = 27;</code>
       */
      public Builder setLastHits(int value) {
        bitField0_ |= 0x04000000;
        lastHits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 last_hits = 27;</code>
       */
      public Builder clearLastHits() {
        bitField0_ = (bitField0_ & ~0x04000000);
        lastHits_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 attacker_team = 28;
      private int attackerTeam_ ;
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       */
      public boolean hasAttackerTeam() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       */
      public int getAttackerTeam() {
        return attackerTeam_;
      }
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       */
      public Builder setAttackerTeam(int value) {
        bitField0_ |= 0x08000000;
        attackerTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       */
      public Builder clearAttackerTeam() {
        bitField0_ = (bitField0_ & ~0x08000000);
        attackerTeam_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 target_team = 29;
      private int targetTeam_ ;
      /**
       * <code>optional uint32 target_team = 29;</code>
       */
      public boolean hasTargetTeam() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional uint32 target_team = 29;</code>
       */
      public int getTargetTeam() {
        return targetTeam_;
      }
      /**
       * <code>optional uint32 target_team = 29;</code>
       */
      public Builder setTargetTeam(int value) {
        bitField0_ |= 0x10000000;
        targetTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_team = 29;</code>
       */
      public Builder clearTargetTeam() {
        bitField0_ = (bitField0_ & ~0x10000000);
        targetTeam_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 obs_wards_placed = 30;
      private int obsWardsPlaced_ ;
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       */
      public boolean hasObsWardsPlaced() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       */
      public int getObsWardsPlaced() {
        return obsWardsPlaced_;
      }
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       */
      public Builder setObsWardsPlaced(int value) {
        bitField0_ |= 0x20000000;
        obsWardsPlaced_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       */
      public Builder clearObsWardsPlaced() {
        bitField0_ = (bitField0_ & ~0x20000000);
        obsWardsPlaced_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 assist_player0 = 31;
      private int assistPlayer0_ ;
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       */
      public boolean hasAssistPlayer0() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       */
      public int getAssistPlayer0() {
        return assistPlayer0_;
      }
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       */
      public Builder setAssistPlayer0(int value) {
        bitField0_ |= 0x40000000;
        assistPlayer0_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       */
      public Builder clearAssistPlayer0() {
        bitField0_ = (bitField0_ & ~0x40000000);
        assistPlayer0_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 assist_player1 = 32;
      private int assistPlayer1_ ;
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       */
      public boolean hasAssistPlayer1() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       */
      public int getAssistPlayer1() {
        return assistPlayer1_;
      }
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       */
      public Builder setAssistPlayer1(int value) {
        bitField0_ |= 0x80000000;
        assistPlayer1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       */
      public Builder clearAssistPlayer1() {
        bitField0_ = (bitField0_ & ~0x80000000);
        assistPlayer1_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 assist_player2 = 33;
      private int assistPlayer2_ ;
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       */
      public boolean hasAssistPlayer2() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       */
      public int getAssistPlayer2() {
        return assistPlayer2_;
      }
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       */
      public Builder setAssistPlayer2(int value) {
        bitField1_ |= 0x00000001;
        assistPlayer2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       */
      public Builder clearAssistPlayer2() {
        bitField1_ = (bitField1_ & ~0x00000001);
        assistPlayer2_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 assist_player3 = 34;
      private int assistPlayer3_ ;
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       */
      public boolean hasAssistPlayer3() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       */
      public int getAssistPlayer3() {
        return assistPlayer3_;
      }
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       */
      public Builder setAssistPlayer3(int value) {
        bitField1_ |= 0x00000002;
        assistPlayer3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       */
      public Builder clearAssistPlayer3() {
        bitField1_ = (bitField1_ & ~0x00000002);
        assistPlayer3_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 stack_count = 35;
      private int stackCount_ ;
      /**
       * <code>optional uint32 stack_count = 35;</code>
       */
      public boolean hasStackCount() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 stack_count = 35;</code>
       */
      public int getStackCount() {
        return stackCount_;
      }
      /**
       * <code>optional uint32 stack_count = 35;</code>
       */
      public Builder setStackCount(int value) {
        bitField1_ |= 0x00000004;
        stackCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stack_count = 35;</code>
       */
      public Builder clearStackCount() {
        bitField1_ = (bitField1_ & ~0x00000004);
        stackCount_ = 0;
        onChanged();
        return this;
      }

      // optional bool hidden_modifier = 36;
      private boolean hiddenModifier_ ;
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       */
      public boolean hasHiddenModifier() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       */
      public boolean getHiddenModifier() {
        return hiddenModifier_;
      }
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       */
      public Builder setHiddenModifier(boolean value) {
        bitField1_ |= 0x00000008;
        hiddenModifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       */
      public Builder clearHiddenModifier() {
        bitField1_ = (bitField1_ & ~0x00000008);
        hiddenModifier_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTACombatLogEntry)
    }

    static {
      defaultInstance = new CMsgDOTACombatLogEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTACombatLogEntry)
  }

  public interface CMsgDOTAProfileCardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 account_id = 1;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    // optional uint32 background_def_index = 2;
    /**
     * <code>optional uint32 background_def_index = 2;</code>
     */
    boolean hasBackgroundDefIndex();
    /**
     * <code>optional uint32 background_def_index = 2;</code>
     */
    int getBackgroundDefIndex();

    // repeated .CMsgDOTAProfileCard.Slot slots = 3;
    /**
     * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot> 
        getSlotsList();
    /**
     * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot getSlots(int index);
    /**
     * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
     */
    int getSlotsCount();
    /**
     * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.SlotOrBuilder> 
        getSlotsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.SlotOrBuilder getSlotsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTAProfileCard}
   */
  public static final class CMsgDOTAProfileCard extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTAProfileCardOrBuilder {
    // Use CMsgDOTAProfileCard.newBuilder() to construct.
    private CMsgDOTAProfileCard(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAProfileCard(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAProfileCard defaultInstance;
    public static CMsgDOTAProfileCard getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAProfileCard getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAProfileCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              backgroundDefIndex_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                slots_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot>();
                mutable_bitField0_ |= 0x00000004;
              }
              slots_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          slots_ = java.util.Collections.unmodifiableList(slots_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAProfileCard> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAProfileCard>() {
      public CMsgDOTAProfileCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAProfileCard(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAProfileCard> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAProfileCard.EStatID}
     */
    public enum EStatID
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>k_eStat_SoloRank = 1;</code>
       */
      k_eStat_SoloRank(0, 1),
      /**
       * <code>k_eStat_PartyRank = 2;</code>
       */
      k_eStat_PartyRank(1, 2),
      /**
       * <code>k_eStat_Wins = 3;</code>
       */
      k_eStat_Wins(2, 3),
      /**
       * <code>k_eStat_Commends = 4;</code>
       */
      k_eStat_Commends(3, 4),
      /**
       * <code>k_eStat_GamesPlayed = 5;</code>
       */
      k_eStat_GamesPlayed(4, 5),
      /**
       * <code>k_eStat_FirstMatchDate = 6;</code>
       */
      k_eStat_FirstMatchDate(5, 6),
      ;

      /**
       * <code>k_eStat_SoloRank = 1;</code>
       */
      public static final int k_eStat_SoloRank_VALUE = 1;
      /**
       * <code>k_eStat_PartyRank = 2;</code>
       */
      public static final int k_eStat_PartyRank_VALUE = 2;
      /**
       * <code>k_eStat_Wins = 3;</code>
       */
      public static final int k_eStat_Wins_VALUE = 3;
      /**
       * <code>k_eStat_Commends = 4;</code>
       */
      public static final int k_eStat_Commends_VALUE = 4;
      /**
       * <code>k_eStat_GamesPlayed = 5;</code>
       */
      public static final int k_eStat_GamesPlayed_VALUE = 5;
      /**
       * <code>k_eStat_FirstMatchDate = 6;</code>
       */
      public static final int k_eStat_FirstMatchDate_VALUE = 6;


      public final int getNumber() { return value; }

      public static EStatID valueOf(int value) {
        switch (value) {
          case 1: return k_eStat_SoloRank;
          case 2: return k_eStat_PartyRank;
          case 3: return k_eStat_Wins;
          case 4: return k_eStat_Commends;
          case 5: return k_eStat_GamesPlayed;
          case 6: return k_eStat_FirstMatchDate;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EStatID>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EStatID>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EStatID>() {
              public EStatID findValueByNumber(int number) {
                return EStatID.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.getDescriptor().getEnumTypes().get(0);
      }

      private static final EStatID[] VALUES = values();

      public static EStatID valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EStatID(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAProfileCard.EStatID)
    }

    public interface SlotOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 slot_id = 1;
      /**
       * <code>optional uint32 slot_id = 1;</code>
       */
      boolean hasSlotId();
      /**
       * <code>optional uint32 slot_id = 1;</code>
       */
      int getSlotId();

      // optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
       */
      boolean hasTrophy();
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy getTrophy();
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.TrophyOrBuilder getTrophyOrBuilder();

      // optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
       */
      boolean hasStat();
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat getStat();
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.StatOrBuilder getStatOrBuilder();

      // optional .CMsgDOTAProfileCard.Slot.Item item = 4;
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
       */
      boolean hasItem();
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item getItem();
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.ItemOrBuilder getItemOrBuilder();

      // optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
       */
      boolean hasHero();
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero getHero();
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.HeroOrBuilder getHeroOrBuilder();

      // optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
       */
      boolean hasEmoticon();
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon getEmoticon();
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.EmoticonOrBuilder getEmoticonOrBuilder();
    }
    /**
     * Protobuf type {@code CMsgDOTAProfileCard.Slot}
     */
    public static final class Slot extends
        com.google.protobuf.GeneratedMessage
        implements SlotOrBuilder {
      // Use Slot.newBuilder() to construct.
      private Slot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Slot(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Slot defaultInstance;
      public static Slot getDefaultInstance() {
        return defaultInstance;
      }

      public Slot getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Slot(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                slotId_ = input.readUInt32();
                break;
              }
              case 18: {
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = trophy_.toBuilder();
                }
                trophy_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(trophy_);
                  trophy_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = stat_.toBuilder();
                }
                stat_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(stat_);
                  stat_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = item_.toBuilder();
                }
                item_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(item_);
                  item_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
              case 42: {
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                  subBuilder = hero_.toBuilder();
                }
                hero_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(hero_);
                  hero_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              case 50: {
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = emoticon_.toBuilder();
                }
                emoticon_ = input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(emoticon_);
                  emoticon_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder.class);
      }

      public static com.google.protobuf.Parser<Slot> PARSER =
          new com.google.protobuf.AbstractParser<Slot>() {
        public Slot parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Slot(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Slot> getParserForType() {
        return PARSER;
      }

      public interface TrophyOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional uint32 trophy_id = 1;
        /**
         * <code>optional uint32 trophy_id = 1;</code>
         */
        boolean hasTrophyId();
        /**
         * <code>optional uint32 trophy_id = 1;</code>
         */
        int getTrophyId();

        // optional uint32 trophy_score = 2;
        /**
         * <code>optional uint32 trophy_score = 2;</code>
         */
        boolean hasTrophyScore();
        /**
         * <code>optional uint32 trophy_score = 2;</code>
         */
        int getTrophyScore();
      }
      /**
       * Protobuf type {@code CMsgDOTAProfileCard.Slot.Trophy}
       */
      public static final class Trophy extends
          com.google.protobuf.GeneratedMessage
          implements TrophyOrBuilder {
        // Use Trophy.newBuilder() to construct.
        private Trophy(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Trophy(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Trophy defaultInstance;
        public static Trophy getDefaultInstance() {
          return defaultInstance;
        }

        public Trophy getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Trophy(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  trophyId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  trophyScore_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Trophy_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Trophy_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.Builder.class);
        }

        public static com.google.protobuf.Parser<Trophy> PARSER =
            new com.google.protobuf.AbstractParser<Trophy>() {
          public Trophy parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Trophy(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Trophy> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional uint32 trophy_id = 1;
        public static final int TROPHY_ID_FIELD_NUMBER = 1;
        private int trophyId_;
        /**
         * <code>optional uint32 trophy_id = 1;</code>
         */
        public boolean hasTrophyId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 trophy_id = 1;</code>
         */
        public int getTrophyId() {
          return trophyId_;
        }

        // optional uint32 trophy_score = 2;
        public static final int TROPHY_SCORE_FIELD_NUMBER = 2;
        private int trophyScore_;
        /**
         * <code>optional uint32 trophy_score = 2;</code>
         */
        public boolean hasTrophyScore() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 trophy_score = 2;</code>
         */
        public int getTrophyScore() {
          return trophyScore_;
        }

        private void initFields() {
          trophyId_ = 0;
          trophyScore_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, trophyId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, trophyScore_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, trophyId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, trophyScore_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMsgDOTAProfileCard.Slot.Trophy}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.TrophyOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Trophy_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Trophy_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.Builder.class);
          }

          // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            trophyId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            trophyScore_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Trophy_descriptor;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy getDefaultInstanceForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.getDefaultInstance();
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy build() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy buildPartial() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.trophyId_ = trophyId_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.trophyScore_ = trophyScore_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy) {
              return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy other) {
            if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.getDefaultInstance()) return this;
            if (other.hasTrophyId()) {
              setTrophyId(other.getTrophyId());
            }
            if (other.hasTrophyScore()) {
              setTrophyScore(other.getTrophyScore());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional uint32 trophy_id = 1;
          private int trophyId_ ;
          /**
           * <code>optional uint32 trophy_id = 1;</code>
           */
          public boolean hasTrophyId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 trophy_id = 1;</code>
           */
          public int getTrophyId() {
            return trophyId_;
          }
          /**
           * <code>optional uint32 trophy_id = 1;</code>
           */
          public Builder setTrophyId(int value) {
            bitField0_ |= 0x00000001;
            trophyId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 trophy_id = 1;</code>
           */
          public Builder clearTrophyId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            trophyId_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 trophy_score = 2;
          private int trophyScore_ ;
          /**
           * <code>optional uint32 trophy_score = 2;</code>
           */
          public boolean hasTrophyScore() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 trophy_score = 2;</code>
           */
          public int getTrophyScore() {
            return trophyScore_;
          }
          /**
           * <code>optional uint32 trophy_score = 2;</code>
           */
          public Builder setTrophyScore(int value) {
            bitField0_ |= 0x00000002;
            trophyScore_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 trophy_score = 2;</code>
           */
          public Builder clearTrophyScore() {
            bitField0_ = (bitField0_ & ~0x00000002);
            trophyScore_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CMsgDOTAProfileCard.Slot.Trophy)
        }

        static {
          defaultInstance = new Trophy(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CMsgDOTAProfileCard.Slot.Trophy)
      }

      public interface StatOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];
        /**
         * <code>optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];</code>
         */
        boolean hasStatId();
        /**
         * <code>optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];</code>
         */
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID getStatId();

        // optional uint32 stat_score = 2;
        /**
         * <code>optional uint32 stat_score = 2;</code>
         */
        boolean hasStatScore();
        /**
         * <code>optional uint32 stat_score = 2;</code>
         */
        int getStatScore();
      }
      /**
       * Protobuf type {@code CMsgDOTAProfileCard.Slot.Stat}
       */
      public static final class Stat extends
          com.google.protobuf.GeneratedMessage
          implements StatOrBuilder {
        // Use Stat.newBuilder() to construct.
        private Stat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Stat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Stat defaultInstance;
        public static Stat getDefaultInstance() {
          return defaultInstance;
        }

        public Stat getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Stat(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    statId_ = value;
                  }
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  statScore_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Stat_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Stat_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.Builder.class);
        }

        public static com.google.protobuf.Parser<Stat> PARSER =
            new com.google.protobuf.AbstractParser<Stat>() {
          public Stat parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Stat(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Stat> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];
        public static final int STAT_ID_FIELD_NUMBER = 1;
        private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID statId_;
        /**
         * <code>optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];</code>
         */
        public boolean hasStatId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID getStatId() {
          return statId_;
        }

        // optional uint32 stat_score = 2;
        public static final int STAT_SCORE_FIELD_NUMBER = 2;
        private int statScore_;
        /**
         * <code>optional uint32 stat_score = 2;</code>
         */
        public boolean hasStatScore() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 stat_score = 2;</code>
         */
        public int getStatScore() {
          return statScore_;
        }

        private void initFields() {
          statId_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID.k_eStat_SoloRank;
          statScore_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, statId_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, statScore_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, statId_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, statScore_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMsgDOTAProfileCard.Slot.Stat}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.StatOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Stat_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Stat_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.Builder.class);
          }

          // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            statId_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID.k_eStat_SoloRank;
            bitField0_ = (bitField0_ & ~0x00000001);
            statScore_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Stat_descriptor;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat getDefaultInstanceForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.getDefaultInstance();
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat build() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat buildPartial() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.statId_ = statId_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.statScore_ = statScore_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat) {
              return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat other) {
            if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.getDefaultInstance()) return this;
            if (other.hasStatId()) {
              setStatId(other.getStatId());
            }
            if (other.hasStatScore()) {
              setStatScore(other.getStatScore());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];
          private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID statId_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID.k_eStat_SoloRank;
          /**
           * <code>optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];</code>
           */
          public boolean hasStatId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];</code>
           */
          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID getStatId() {
            return statId_;
          }
          /**
           * <code>optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];</code>
           */
          public Builder setStatId(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            statId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .CMsgDOTAProfileCard.EStatID stat_id = 1 [default = k_eStat_SoloRank];</code>
           */
          public Builder clearStatId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            statId_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.EStatID.k_eStat_SoloRank;
            onChanged();
            return this;
          }

          // optional uint32 stat_score = 2;
          private int statScore_ ;
          /**
           * <code>optional uint32 stat_score = 2;</code>
           */
          public boolean hasStatScore() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 stat_score = 2;</code>
           */
          public int getStatScore() {
            return statScore_;
          }
          /**
           * <code>optional uint32 stat_score = 2;</code>
           */
          public Builder setStatScore(int value) {
            bitField0_ |= 0x00000002;
            statScore_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 stat_score = 2;</code>
           */
          public Builder clearStatScore() {
            bitField0_ = (bitField0_ & ~0x00000002);
            statScore_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CMsgDOTAProfileCard.Slot.Stat)
        }

        static {
          defaultInstance = new Stat(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CMsgDOTAProfileCard.Slot.Stat)
      }

      public interface ItemOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional bytes serialized_item = 1;
        /**
         * <code>optional bytes serialized_item = 1;</code>
         */
        boolean hasSerializedItem();
        /**
         * <code>optional bytes serialized_item = 1;</code>
         */
        com.google.protobuf.ByteString getSerializedItem();
      }
      /**
       * Protobuf type {@code CMsgDOTAProfileCard.Slot.Item}
       */
      public static final class Item extends
          com.google.protobuf.GeneratedMessage
          implements ItemOrBuilder {
        // Use Item.newBuilder() to construct.
        private Item(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Item(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Item defaultInstance;
        public static Item getDefaultInstance() {
          return defaultInstance;
        }

        public Item getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Item(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  serializedItem_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Item_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Item_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.Builder.class);
        }

        public static com.google.protobuf.Parser<Item> PARSER =
            new com.google.protobuf.AbstractParser<Item>() {
          public Item parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Item(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Item> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional bytes serialized_item = 1;
        public static final int SERIALIZED_ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString serializedItem_;
        /**
         * <code>optional bytes serialized_item = 1;</code>
         */
        public boolean hasSerializedItem() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bytes serialized_item = 1;</code>
         */
        public com.google.protobuf.ByteString getSerializedItem() {
          return serializedItem_;
        }

        private void initFields() {
          serializedItem_ = com.google.protobuf.ByteString.EMPTY;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(1, serializedItem_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(1, serializedItem_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMsgDOTAProfileCard.Slot.Item}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.ItemOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Item_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Item_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.Builder.class);
          }

          // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            serializedItem_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Item_descriptor;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item getDefaultInstanceForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.getDefaultInstance();
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item build() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item buildPartial() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.serializedItem_ = serializedItem_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item) {
              return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item other) {
            if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.getDefaultInstance()) return this;
            if (other.hasSerializedItem()) {
              setSerializedItem(other.getSerializedItem());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional bytes serialized_item = 1;
          private com.google.protobuf.ByteString serializedItem_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes serialized_item = 1;</code>
           */
          public boolean hasSerializedItem() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional bytes serialized_item = 1;</code>
           */
          public com.google.protobuf.ByteString getSerializedItem() {
            return serializedItem_;
          }
          /**
           * <code>optional bytes serialized_item = 1;</code>
           */
          public Builder setSerializedItem(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            serializedItem_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes serialized_item = 1;</code>
           */
          public Builder clearSerializedItem() {
            bitField0_ = (bitField0_ & ~0x00000001);
            serializedItem_ = getDefaultInstance().getSerializedItem();
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CMsgDOTAProfileCard.Slot.Item)
        }

        static {
          defaultInstance = new Item(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CMsgDOTAProfileCard.Slot.Item)
      }

      public interface HeroOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional uint32 hero_id = 1;
        /**
         * <code>optional uint32 hero_id = 1;</code>
         */
        boolean hasHeroId();
        /**
         * <code>optional uint32 hero_id = 1;</code>
         */
        int getHeroId();

        // optional uint32 hero_wins = 2;
        /**
         * <code>optional uint32 hero_wins = 2;</code>
         */
        boolean hasHeroWins();
        /**
         * <code>optional uint32 hero_wins = 2;</code>
         */
        int getHeroWins();

        // optional uint32 hero_losses = 3;
        /**
         * <code>optional uint32 hero_losses = 3;</code>
         */
        boolean hasHeroLosses();
        /**
         * <code>optional uint32 hero_losses = 3;</code>
         */
        int getHeroLosses();
      }
      /**
       * Protobuf type {@code CMsgDOTAProfileCard.Slot.Hero}
       */
      public static final class Hero extends
          com.google.protobuf.GeneratedMessage
          implements HeroOrBuilder {
        // Use Hero.newBuilder() to construct.
        private Hero(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Hero(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Hero defaultInstance;
        public static Hero getDefaultInstance() {
          return defaultInstance;
        }

        public Hero getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Hero(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  heroId_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  heroWins_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  heroLosses_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Hero_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Hero_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.Builder.class);
        }

        public static com.google.protobuf.Parser<Hero> PARSER =
            new com.google.protobuf.AbstractParser<Hero>() {
          public Hero parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Hero(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Hero> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional uint32 hero_id = 1;
        public static final int HERO_ID_FIELD_NUMBER = 1;
        private int heroId_;
        /**
         * <code>optional uint32 hero_id = 1;</code>
         */
        public boolean hasHeroId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 hero_id = 1;</code>
         */
        public int getHeroId() {
          return heroId_;
        }

        // optional uint32 hero_wins = 2;
        public static final int HERO_WINS_FIELD_NUMBER = 2;
        private int heroWins_;
        /**
         * <code>optional uint32 hero_wins = 2;</code>
         */
        public boolean hasHeroWins() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 hero_wins = 2;</code>
         */
        public int getHeroWins() {
          return heroWins_;
        }

        // optional uint32 hero_losses = 3;
        public static final int HERO_LOSSES_FIELD_NUMBER = 3;
        private int heroLosses_;
        /**
         * <code>optional uint32 hero_losses = 3;</code>
         */
        public boolean hasHeroLosses() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 hero_losses = 3;</code>
         */
        public int getHeroLosses() {
          return heroLosses_;
        }

        private void initFields() {
          heroId_ = 0;
          heroWins_ = 0;
          heroLosses_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, heroId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, heroWins_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeUInt32(3, heroLosses_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, heroId_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, heroWins_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, heroLosses_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMsgDOTAProfileCard.Slot.Hero}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.HeroOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Hero_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Hero_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.Builder.class);
          }

          // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            heroId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            heroWins_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            heroLosses_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Hero_descriptor;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero getDefaultInstanceForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.getDefaultInstance();
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero build() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero buildPartial() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.heroId_ = heroId_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.heroWins_ = heroWins_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.heroLosses_ = heroLosses_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero) {
              return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero other) {
            if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.getDefaultInstance()) return this;
            if (other.hasHeroId()) {
              setHeroId(other.getHeroId());
            }
            if (other.hasHeroWins()) {
              setHeroWins(other.getHeroWins());
            }
            if (other.hasHeroLosses()) {
              setHeroLosses(other.getHeroLosses());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional uint32 hero_id = 1;
          private int heroId_ ;
          /**
           * <code>optional uint32 hero_id = 1;</code>
           */
          public boolean hasHeroId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 hero_id = 1;</code>
           */
          public int getHeroId() {
            return heroId_;
          }
          /**
           * <code>optional uint32 hero_id = 1;</code>
           */
          public Builder setHeroId(int value) {
            bitField0_ |= 0x00000001;
            heroId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 hero_id = 1;</code>
           */
          public Builder clearHeroId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            heroId_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 hero_wins = 2;
          private int heroWins_ ;
          /**
           * <code>optional uint32 hero_wins = 2;</code>
           */
          public boolean hasHeroWins() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 hero_wins = 2;</code>
           */
          public int getHeroWins() {
            return heroWins_;
          }
          /**
           * <code>optional uint32 hero_wins = 2;</code>
           */
          public Builder setHeroWins(int value) {
            bitField0_ |= 0x00000002;
            heroWins_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 hero_wins = 2;</code>
           */
          public Builder clearHeroWins() {
            bitField0_ = (bitField0_ & ~0x00000002);
            heroWins_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 hero_losses = 3;
          private int heroLosses_ ;
          /**
           * <code>optional uint32 hero_losses = 3;</code>
           */
          public boolean hasHeroLosses() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional uint32 hero_losses = 3;</code>
           */
          public int getHeroLosses() {
            return heroLosses_;
          }
          /**
           * <code>optional uint32 hero_losses = 3;</code>
           */
          public Builder setHeroLosses(int value) {
            bitField0_ |= 0x00000004;
            heroLosses_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 hero_losses = 3;</code>
           */
          public Builder clearHeroLosses() {
            bitField0_ = (bitField0_ & ~0x00000004);
            heroLosses_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CMsgDOTAProfileCard.Slot.Hero)
        }

        static {
          defaultInstance = new Hero(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CMsgDOTAProfileCard.Slot.Hero)
      }

      public interface EmoticonOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional uint32 emoticon_id = 1;
        /**
         * <code>optional uint32 emoticon_id = 1;</code>
         */
        boolean hasEmoticonId();
        /**
         * <code>optional uint32 emoticon_id = 1;</code>
         */
        int getEmoticonId();
      }
      /**
       * Protobuf type {@code CMsgDOTAProfileCard.Slot.Emoticon}
       */
      public static final class Emoticon extends
          com.google.protobuf.GeneratedMessage
          implements EmoticonOrBuilder {
        // Use Emoticon.newBuilder() to construct.
        private Emoticon(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Emoticon(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Emoticon defaultInstance;
        public static Emoticon getDefaultInstance() {
          return defaultInstance;
        }

        public Emoticon getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Emoticon(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  emoticonId_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Emoticon_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Emoticon_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.Builder.class);
        }

        public static com.google.protobuf.Parser<Emoticon> PARSER =
            new com.google.protobuf.AbstractParser<Emoticon>() {
          public Emoticon parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Emoticon(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Emoticon> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional uint32 emoticon_id = 1;
        public static final int EMOTICON_ID_FIELD_NUMBER = 1;
        private int emoticonId_;
        /**
         * <code>optional uint32 emoticon_id = 1;</code>
         */
        public boolean hasEmoticonId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 emoticon_id = 1;</code>
         */
        public int getEmoticonId() {
          return emoticonId_;
        }

        private void initFields() {
          emoticonId_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, emoticonId_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, emoticonId_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMsgDOTAProfileCard.Slot.Emoticon}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.EmoticonOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Emoticon_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Emoticon_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.Builder.class);
          }

          // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            emoticonId_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_Emoticon_descriptor;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon getDefaultInstanceForType() {
            return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.getDefaultInstance();
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon build() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon buildPartial() {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.emoticonId_ = emoticonId_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon) {
              return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon other) {
            if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.getDefaultInstance()) return this;
            if (other.hasEmoticonId()) {
              setEmoticonId(other.getEmoticonId());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional uint32 emoticon_id = 1;
          private int emoticonId_ ;
          /**
           * <code>optional uint32 emoticon_id = 1;</code>
           */
          public boolean hasEmoticonId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 emoticon_id = 1;</code>
           */
          public int getEmoticonId() {
            return emoticonId_;
          }
          /**
           * <code>optional uint32 emoticon_id = 1;</code>
           */
          public Builder setEmoticonId(int value) {
            bitField0_ |= 0x00000001;
            emoticonId_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 emoticon_id = 1;</code>
           */
          public Builder clearEmoticonId() {
            bitField0_ = (bitField0_ & ~0x00000001);
            emoticonId_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CMsgDOTAProfileCard.Slot.Emoticon)
        }

        static {
          defaultInstance = new Emoticon(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CMsgDOTAProfileCard.Slot.Emoticon)
      }

      private int bitField0_;
      // optional uint32 slot_id = 1;
      public static final int SLOT_ID_FIELD_NUMBER = 1;
      private int slotId_;
      /**
       * <code>optional uint32 slot_id = 1;</code>
       */
      public boolean hasSlotId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 slot_id = 1;</code>
       */
      public int getSlotId() {
        return slotId_;
      }

      // optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;
      public static final int TROPHY_FIELD_NUMBER = 2;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy trophy_;
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
       */
      public boolean hasTrophy() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy getTrophy() {
        return trophy_;
      }
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.TrophyOrBuilder getTrophyOrBuilder() {
        return trophy_;
      }

      // optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;
      public static final int STAT_FIELD_NUMBER = 3;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat stat_;
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
       */
      public boolean hasStat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat getStat() {
        return stat_;
      }
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.StatOrBuilder getStatOrBuilder() {
        return stat_;
      }

      // optional .CMsgDOTAProfileCard.Slot.Item item = 4;
      public static final int ITEM_FIELD_NUMBER = 4;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item item_;
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
       */
      public boolean hasItem() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item getItem() {
        return item_;
      }
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.ItemOrBuilder getItemOrBuilder() {
        return item_;
      }

      // optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;
      public static final int HERO_FIELD_NUMBER = 5;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero hero_;
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
       */
      public boolean hasHero() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero getHero() {
        return hero_;
      }
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.HeroOrBuilder getHeroOrBuilder() {
        return hero_;
      }

      // optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;
      public static final int EMOTICON_FIELD_NUMBER = 6;
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon emoticon_;
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
       */
      public boolean hasEmoticon() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon getEmoticon() {
        return emoticon_;
      }
      /**
       * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.EmoticonOrBuilder getEmoticonOrBuilder() {
        return emoticon_;
      }

      private void initFields() {
        slotId_ = 0;
        trophy_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.getDefaultInstance();
        stat_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.getDefaultInstance();
        item_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.getDefaultInstance();
        hero_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.getDefaultInstance();
        emoticon_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, slotId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, trophy_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, stat_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, item_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeMessage(5, hero_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeMessage(6, emoticon_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, slotId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, trophy_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, stat_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, item_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, hero_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, emoticon_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAProfileCard.Slot}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.SlotOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getTrophyFieldBuilder();
            getStatFieldBuilder();
            getItemFieldBuilder();
            getHeroFieldBuilder();
            getEmoticonFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          slotId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (trophyBuilder_ == null) {
            trophy_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.getDefaultInstance();
          } else {
            trophyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (statBuilder_ == null) {
            stat_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.getDefaultInstance();
          } else {
            statBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (itemBuilder_ == null) {
            item_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.getDefaultInstance();
          } else {
            itemBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          if (heroBuilder_ == null) {
            hero_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.getDefaultInstance();
          } else {
            heroBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          if (emoticonBuilder_ == null) {
            emoticon_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.getDefaultInstance();
          } else {
            emoticonBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_Slot_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.slotId_ = slotId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (trophyBuilder_ == null) {
            result.trophy_ = trophy_;
          } else {
            result.trophy_ = trophyBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (statBuilder_ == null) {
            result.stat_ = stat_;
          } else {
            result.stat_ = statBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (itemBuilder_ == null) {
            result.item_ = item_;
          } else {
            result.item_ = itemBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          if (heroBuilder_ == null) {
            result.hero_ = hero_;
          } else {
            result.hero_ = heroBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          if (emoticonBuilder_ == null) {
            result.emoticon_ = emoticon_;
          } else {
            result.emoticon_ = emoticonBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.getDefaultInstance()) return this;
          if (other.hasSlotId()) {
            setSlotId(other.getSlotId());
          }
          if (other.hasTrophy()) {
            mergeTrophy(other.getTrophy());
          }
          if (other.hasStat()) {
            mergeStat(other.getStat());
          }
          if (other.hasItem()) {
            mergeItem(other.getItem());
          }
          if (other.hasHero()) {
            mergeHero(other.getHero());
          }
          if (other.hasEmoticon()) {
            mergeEmoticon(other.getEmoticon());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 slot_id = 1;
        private int slotId_ ;
        /**
         * <code>optional uint32 slot_id = 1;</code>
         */
        public boolean hasSlotId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 slot_id = 1;</code>
         */
        public int getSlotId() {
          return slotId_;
        }
        /**
         * <code>optional uint32 slot_id = 1;</code>
         */
        public Builder setSlotId(int value) {
          bitField0_ |= 0x00000001;
          slotId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 slot_id = 1;</code>
         */
        public Builder clearSlotId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          slotId_ = 0;
          onChanged();
          return this;
        }

        // optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;
        private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy trophy_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.TrophyOrBuilder> trophyBuilder_;
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
         */
        public boolean hasTrophy() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy getTrophy() {
          if (trophyBuilder_ == null) {
            return trophy_;
          } else {
            return trophyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
         */
        public Builder setTrophy(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy value) {
          if (trophyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            trophy_ = value;
            onChanged();
          } else {
            trophyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
         */
        public Builder setTrophy(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.Builder builderForValue) {
          if (trophyBuilder_ == null) {
            trophy_ = builderForValue.build();
            onChanged();
          } else {
            trophyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
         */
        public Builder mergeTrophy(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy value) {
          if (trophyBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                trophy_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.getDefaultInstance()) {
              trophy_ =
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.newBuilder(trophy_).mergeFrom(value).buildPartial();
            } else {
              trophy_ = value;
            }
            onChanged();
          } else {
            trophyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
         */
        public Builder clearTrophy() {
          if (trophyBuilder_ == null) {
            trophy_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.getDefaultInstance();
            onChanged();
          } else {
            trophyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.Builder getTrophyBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getTrophyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.TrophyOrBuilder getTrophyOrBuilder() {
          if (trophyBuilder_ != null) {
            return trophyBuilder_.getMessageOrBuilder();
          } else {
            return trophy_;
          }
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Trophy trophy = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.TrophyOrBuilder> 
            getTrophyFieldBuilder() {
          if (trophyBuilder_ == null) {
            trophyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Trophy.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.TrophyOrBuilder>(
                    trophy_,
                    getParentForChildren(),
                    isClean());
            trophy_ = null;
          }
          return trophyBuilder_;
        }

        // optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;
        private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat stat_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.StatOrBuilder> statBuilder_;
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
         */
        public boolean hasStat() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat getStat() {
          if (statBuilder_ == null) {
            return stat_;
          } else {
            return statBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
         */
        public Builder setStat(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat value) {
          if (statBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            stat_ = value;
            onChanged();
          } else {
            statBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
         */
        public Builder setStat(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.Builder builderForValue) {
          if (statBuilder_ == null) {
            stat_ = builderForValue.build();
            onChanged();
          } else {
            statBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
         */
        public Builder mergeStat(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat value) {
          if (statBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                stat_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.getDefaultInstance()) {
              stat_ =
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.newBuilder(stat_).mergeFrom(value).buildPartial();
            } else {
              stat_ = value;
            }
            onChanged();
          } else {
            statBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
         */
        public Builder clearStat() {
          if (statBuilder_ == null) {
            stat_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.getDefaultInstance();
            onChanged();
          } else {
            statBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.Builder getStatBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getStatFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.StatOrBuilder getStatOrBuilder() {
          if (statBuilder_ != null) {
            return statBuilder_.getMessageOrBuilder();
          } else {
            return stat_;
          }
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Stat stat = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.StatOrBuilder> 
            getStatFieldBuilder() {
          if (statBuilder_ == null) {
            statBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Stat.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.StatOrBuilder>(
                    stat_,
                    getParentForChildren(),
                    isClean());
            stat_ = null;
          }
          return statBuilder_;
        }

        // optional .CMsgDOTAProfileCard.Slot.Item item = 4;
        private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item item_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.ItemOrBuilder> itemBuilder_;
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
         */
        public boolean hasItem() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item getItem() {
          if (itemBuilder_ == null) {
            return item_;
          } else {
            return itemBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
         */
        public Builder setItem(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item value) {
          if (itemBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            item_ = value;
            onChanged();
          } else {
            itemBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
         */
        public Builder setItem(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.Builder builderForValue) {
          if (itemBuilder_ == null) {
            item_ = builderForValue.build();
            onChanged();
          } else {
            itemBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
         */
        public Builder mergeItem(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item value) {
          if (itemBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                item_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.getDefaultInstance()) {
              item_ =
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.newBuilder(item_).mergeFrom(value).buildPartial();
            } else {
              item_ = value;
            }
            onChanged();
          } else {
            itemBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
         */
        public Builder clearItem() {
          if (itemBuilder_ == null) {
            item_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.getDefaultInstance();
            onChanged();
          } else {
            itemBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.Builder getItemBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getItemFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.ItemOrBuilder getItemOrBuilder() {
          if (itemBuilder_ != null) {
            return itemBuilder_.getMessageOrBuilder();
          } else {
            return item_;
          }
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Item item = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.ItemOrBuilder> 
            getItemFieldBuilder() {
          if (itemBuilder_ == null) {
            itemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Item.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.ItemOrBuilder>(
                    item_,
                    getParentForChildren(),
                    isClean());
            item_ = null;
          }
          return itemBuilder_;
        }

        // optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;
        private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero hero_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.HeroOrBuilder> heroBuilder_;
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
         */
        public boolean hasHero() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero getHero() {
          if (heroBuilder_ == null) {
            return hero_;
          } else {
            return heroBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
         */
        public Builder setHero(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero value) {
          if (heroBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            hero_ = value;
            onChanged();
          } else {
            heroBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
         */
        public Builder setHero(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.Builder builderForValue) {
          if (heroBuilder_ == null) {
            hero_ = builderForValue.build();
            onChanged();
          } else {
            heroBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
         */
        public Builder mergeHero(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero value) {
          if (heroBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010) &&
                hero_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.getDefaultInstance()) {
              hero_ =
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.newBuilder(hero_).mergeFrom(value).buildPartial();
            } else {
              hero_ = value;
            }
            onChanged();
          } else {
            heroBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
         */
        public Builder clearHero() {
          if (heroBuilder_ == null) {
            hero_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.getDefaultInstance();
            onChanged();
          } else {
            heroBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.Builder getHeroBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getHeroFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.HeroOrBuilder getHeroOrBuilder() {
          if (heroBuilder_ != null) {
            return heroBuilder_.getMessageOrBuilder();
          } else {
            return hero_;
          }
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Hero hero = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.HeroOrBuilder> 
            getHeroFieldBuilder() {
          if (heroBuilder_ == null) {
            heroBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Hero.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.HeroOrBuilder>(
                    hero_,
                    getParentForChildren(),
                    isClean());
            hero_ = null;
          }
          return heroBuilder_;
        }

        // optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;
        private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon emoticon_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.EmoticonOrBuilder> emoticonBuilder_;
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
         */
        public boolean hasEmoticon() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon getEmoticon() {
          if (emoticonBuilder_ == null) {
            return emoticon_;
          } else {
            return emoticonBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
         */
        public Builder setEmoticon(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon value) {
          if (emoticonBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            emoticon_ = value;
            onChanged();
          } else {
            emoticonBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
         */
        public Builder setEmoticon(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.Builder builderForValue) {
          if (emoticonBuilder_ == null) {
            emoticon_ = builderForValue.build();
            onChanged();
          } else {
            emoticonBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
         */
        public Builder mergeEmoticon(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon value) {
          if (emoticonBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020) &&
                emoticon_ != skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.getDefaultInstance()) {
              emoticon_ =
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.newBuilder(emoticon_).mergeFrom(value).buildPartial();
            } else {
              emoticon_ = value;
            }
            onChanged();
          } else {
            emoticonBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
         */
        public Builder clearEmoticon() {
          if (emoticonBuilder_ == null) {
            emoticon_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.getDefaultInstance();
            onChanged();
          } else {
            emoticonBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.Builder getEmoticonBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getEmoticonFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.EmoticonOrBuilder getEmoticonOrBuilder() {
          if (emoticonBuilder_ != null) {
            return emoticonBuilder_.getMessageOrBuilder();
          } else {
            return emoticon_;
          }
        }
        /**
         * <code>optional .CMsgDOTAProfileCard.Slot.Emoticon emoticon = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.EmoticonOrBuilder> 
            getEmoticonFieldBuilder() {
          if (emoticonBuilder_ == null) {
            emoticonBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Emoticon.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.EmoticonOrBuilder>(
                    emoticon_,
                    getParentForChildren(),
                    isClean());
            emoticon_ = null;
          }
          return emoticonBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAProfileCard.Slot)
      }

      static {
        defaultInstance = new Slot(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAProfileCard.Slot)
    }

    private int bitField0_;
    // optional uint32 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    // optional uint32 background_def_index = 2;
    public static final int BACKGROUND_DEF_INDEX_FIELD_NUMBER = 2;
    private int backgroundDefIndex_;
    /**
     * <code>optional uint32 background_def_index = 2;</code>
     */
    public boolean hasBackgroundDefIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 background_def_index = 2;</code>
     */
    public int getBackgroundDefIndex() {
      return backgroundDefIndex_;
    }

    // repeated .CMsgDOTAProfileCard.Slot slots = 3;
    public static final int SLOTS_FIELD_NUMBER = 3;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot> slots_;
    /**
     * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot> getSlotsList() {
      return slots_;
    }
    /**
     * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.SlotOrBuilder> 
        getSlotsOrBuilderList() {
      return slots_;
    }
    /**
     * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
     */
    public int getSlotsCount() {
      return slots_.size();
    }
    /**
     * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot getSlots(int index) {
      return slots_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.SlotOrBuilder getSlotsOrBuilder(
        int index) {
      return slots_.get(index);
    }

    private void initFields() {
      accountId_ = 0;
      backgroundDefIndex_ = 0;
      slots_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, backgroundDefIndex_);
      }
      for (int i = 0; i < slots_.size(); i++) {
        output.writeMessage(3, slots_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, backgroundDefIndex_);
      }
      for (int i = 0; i < slots_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, slots_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAProfileCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSlotsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        backgroundDefIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (slotsBuilder_ == null) {
          slots_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          slotsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTAProfileCard_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.backgroundDefIndex_ = backgroundDefIndex_;
        if (slotsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            slots_ = java.util.Collections.unmodifiableList(slots_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.slots_ = slots_;
        } else {
          result.slots_ = slotsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasBackgroundDefIndex()) {
          setBackgroundDefIndex(other.getBackgroundDefIndex());
        }
        if (slotsBuilder_ == null) {
          if (!other.slots_.isEmpty()) {
            if (slots_.isEmpty()) {
              slots_ = other.slots_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSlotsIsMutable();
              slots_.addAll(other.slots_);
            }
            onChanged();
          }
        } else {
          if (!other.slots_.isEmpty()) {
            if (slotsBuilder_.isEmpty()) {
              slotsBuilder_.dispose();
              slotsBuilder_ = null;
              slots_ = other.slots_;
              bitField0_ = (bitField0_ & ~0x00000004);
              slotsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSlotsFieldBuilder() : null;
            } else {
              slotsBuilder_.addAllMessages(other.slots_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 account_id = 1;
      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 background_def_index = 2;
      private int backgroundDefIndex_ ;
      /**
       * <code>optional uint32 background_def_index = 2;</code>
       */
      public boolean hasBackgroundDefIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 background_def_index = 2;</code>
       */
      public int getBackgroundDefIndex() {
        return backgroundDefIndex_;
      }
      /**
       * <code>optional uint32 background_def_index = 2;</code>
       */
      public Builder setBackgroundDefIndex(int value) {
        bitField0_ |= 0x00000002;
        backgroundDefIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 background_def_index = 2;</code>
       */
      public Builder clearBackgroundDefIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        backgroundDefIndex_ = 0;
        onChanged();
        return this;
      }

      // repeated .CMsgDOTAProfileCard.Slot slots = 3;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot> slots_ =
        java.util.Collections.emptyList();
      private void ensureSlotsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          slots_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot>(slots_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.SlotOrBuilder> slotsBuilder_;

      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot> getSlotsList() {
        if (slotsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(slots_);
        } else {
          return slotsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public int getSlotsCount() {
        if (slotsBuilder_ == null) {
          return slots_.size();
        } else {
          return slotsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot getSlots(int index) {
        if (slotsBuilder_ == null) {
          return slots_.get(index);
        } else {
          return slotsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public Builder setSlots(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot value) {
        if (slotsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlotsIsMutable();
          slots_.set(index, value);
          onChanged();
        } else {
          slotsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public Builder setSlots(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder builderForValue) {
        if (slotsBuilder_ == null) {
          ensureSlotsIsMutable();
          slots_.set(index, builderForValue.build());
          onChanged();
        } else {
          slotsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public Builder addSlots(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot value) {
        if (slotsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlotsIsMutable();
          slots_.add(value);
          onChanged();
        } else {
          slotsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public Builder addSlots(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot value) {
        if (slotsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlotsIsMutable();
          slots_.add(index, value);
          onChanged();
        } else {
          slotsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public Builder addSlots(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder builderForValue) {
        if (slotsBuilder_ == null) {
          ensureSlotsIsMutable();
          slots_.add(builderForValue.build());
          onChanged();
        } else {
          slotsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public Builder addSlots(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder builderForValue) {
        if (slotsBuilder_ == null) {
          ensureSlotsIsMutable();
          slots_.add(index, builderForValue.build());
          onChanged();
        } else {
          slotsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public Builder addAllSlots(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot> values) {
        if (slotsBuilder_ == null) {
          ensureSlotsIsMutable();
          super.addAll(values, slots_);
          onChanged();
        } else {
          slotsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public Builder clearSlots() {
        if (slotsBuilder_ == null) {
          slots_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          slotsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public Builder removeSlots(int index) {
        if (slotsBuilder_ == null) {
          ensureSlotsIsMutable();
          slots_.remove(index);
          onChanged();
        } else {
          slotsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder getSlotsBuilder(
          int index) {
        return getSlotsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.SlotOrBuilder getSlotsOrBuilder(
          int index) {
        if (slotsBuilder_ == null) {
          return slots_.get(index);  } else {
          return slotsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.SlotOrBuilder> 
           getSlotsOrBuilderList() {
        if (slotsBuilder_ != null) {
          return slotsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(slots_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder addSlotsBuilder() {
        return getSlotsFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder addSlotsBuilder(
          int index) {
        return getSlotsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAProfileCard.Slot slots = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder> 
           getSlotsBuilderList() {
        return getSlotsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.SlotOrBuilder> 
          getSlotsFieldBuilder() {
        if (slotsBuilder_ == null) {
          slotsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.Slot.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTAProfileCard.SlotOrBuilder>(
                  slots_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          slots_ = null;
        }
        return slotsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAProfileCard)
    }

    static {
      defaultInstance = new CMsgDOTAProfileCard(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAProfileCard)
  }

  public interface CMsgGCToClientNewBloomTimingUpdatedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bool is_active = 1;
    /**
     * <code>optional bool is_active = 1;</code>
     */
    boolean hasIsActive();
    /**
     * <code>optional bool is_active = 1;</code>
     */
    boolean getIsActive();

    // optional uint32 next_transition_time = 2;
    /**
     * <code>optional uint32 next_transition_time = 2;</code>
     */
    boolean hasNextTransitionTime();
    /**
     * <code>optional uint32 next_transition_time = 2;</code>
     */
    int getNextTransitionTime();

    // optional uint32 bonus_amount = 3;
    /**
     * <code>optional uint32 bonus_amount = 3;</code>
     */
    boolean hasBonusAmount();
    /**
     * <code>optional uint32 bonus_amount = 3;</code>
     */
    int getBonusAmount();

    // optional uint32 standby_duration = 4;
    /**
     * <code>optional uint32 standby_duration = 4;</code>
     */
    boolean hasStandbyDuration();
    /**
     * <code>optional uint32 standby_duration = 4;</code>
     */
    int getStandbyDuration();

    // optional uint32 transition_time = 5;
    /**
     * <code>optional uint32 transition_time = 5;</code>
     */
    boolean hasTransitionTime();
    /**
     * <code>optional uint32 transition_time = 5;</code>
     */
    int getTransitionTime();
  }
  /**
   * Protobuf type {@code CMsgGCToClientNewBloomTimingUpdated}
   */
  public static final class CMsgGCToClientNewBloomTimingUpdated extends
      com.google.protobuf.GeneratedMessage
      implements CMsgGCToClientNewBloomTimingUpdatedOrBuilder {
    // Use CMsgGCToClientNewBloomTimingUpdated.newBuilder() to construct.
    private CMsgGCToClientNewBloomTimingUpdated(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgGCToClientNewBloomTimingUpdated(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgGCToClientNewBloomTimingUpdated defaultInstance;
    public static CMsgGCToClientNewBloomTimingUpdated getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgGCToClientNewBloomTimingUpdated getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgGCToClientNewBloomTimingUpdated(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isActive_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nextTransitionTime_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bonusAmount_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              standbyDuration_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              transitionTime_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToClientNewBloomTimingUpdated_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToClientNewBloomTimingUpdated_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgGCToClientNewBloomTimingUpdated> PARSER =
        new com.google.protobuf.AbstractParser<CMsgGCToClientNewBloomTimingUpdated>() {
      public CMsgGCToClientNewBloomTimingUpdated parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgGCToClientNewBloomTimingUpdated(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCToClientNewBloomTimingUpdated> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bool is_active = 1;
    public static final int IS_ACTIVE_FIELD_NUMBER = 1;
    private boolean isActive_;
    /**
     * <code>optional bool is_active = 1;</code>
     */
    public boolean hasIsActive() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool is_active = 1;</code>
     */
    public boolean getIsActive() {
      return isActive_;
    }

    // optional uint32 next_transition_time = 2;
    public static final int NEXT_TRANSITION_TIME_FIELD_NUMBER = 2;
    private int nextTransitionTime_;
    /**
     * <code>optional uint32 next_transition_time = 2;</code>
     */
    public boolean hasNextTransitionTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 next_transition_time = 2;</code>
     */
    public int getNextTransitionTime() {
      return nextTransitionTime_;
    }

    // optional uint32 bonus_amount = 3;
    public static final int BONUS_AMOUNT_FIELD_NUMBER = 3;
    private int bonusAmount_;
    /**
     * <code>optional uint32 bonus_amount = 3;</code>
     */
    public boolean hasBonusAmount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 bonus_amount = 3;</code>
     */
    public int getBonusAmount() {
      return bonusAmount_;
    }

    // optional uint32 standby_duration = 4;
    public static final int STANDBY_DURATION_FIELD_NUMBER = 4;
    private int standbyDuration_;
    /**
     * <code>optional uint32 standby_duration = 4;</code>
     */
    public boolean hasStandbyDuration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 standby_duration = 4;</code>
     */
    public int getStandbyDuration() {
      return standbyDuration_;
    }

    // optional uint32 transition_time = 5;
    public static final int TRANSITION_TIME_FIELD_NUMBER = 5;
    private int transitionTime_;
    /**
     * <code>optional uint32 transition_time = 5;</code>
     */
    public boolean hasTransitionTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 transition_time = 5;</code>
     */
    public int getTransitionTime() {
      return transitionTime_;
    }

    private void initFields() {
      isActive_ = false;
      nextTransitionTime_ = 0;
      bonusAmount_ = 0;
      standbyDuration_ = 0;
      transitionTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isActive_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nextTransitionTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, bonusAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, standbyDuration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, transitionTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isActive_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nextTransitionTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, bonusAmount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, standbyDuration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, transitionTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCToClientNewBloomTimingUpdated}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdatedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToClientNewBloomTimingUpdated_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToClientNewBloomTimingUpdated_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isActive_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        nextTransitionTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        bonusAmount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        standbyDuration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        transitionTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToClientNewBloomTimingUpdated_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isActive_ = isActive_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nextTransitionTime_ = nextTransitionTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bonusAmount_ = bonusAmount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.standbyDuration_ = standbyDuration_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.transitionTime_ = transitionTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated.getDefaultInstance()) return this;
        if (other.hasIsActive()) {
          setIsActive(other.getIsActive());
        }
        if (other.hasNextTransitionTime()) {
          setNextTransitionTime(other.getNextTransitionTime());
        }
        if (other.hasBonusAmount()) {
          setBonusAmount(other.getBonusAmount());
        }
        if (other.hasStandbyDuration()) {
          setStandbyDuration(other.getStandbyDuration());
        }
        if (other.hasTransitionTime()) {
          setTransitionTime(other.getTransitionTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientNewBloomTimingUpdated) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bool is_active = 1;
      private boolean isActive_ ;
      /**
       * <code>optional bool is_active = 1;</code>
       */
      public boolean hasIsActive() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool is_active = 1;</code>
       */
      public boolean getIsActive() {
        return isActive_;
      }
      /**
       * <code>optional bool is_active = 1;</code>
       */
      public Builder setIsActive(boolean value) {
        bitField0_ |= 0x00000001;
        isActive_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_active = 1;</code>
       */
      public Builder clearIsActive() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isActive_ = false;
        onChanged();
        return this;
      }

      // optional uint32 next_transition_time = 2;
      private int nextTransitionTime_ ;
      /**
       * <code>optional uint32 next_transition_time = 2;</code>
       */
      public boolean hasNextTransitionTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 next_transition_time = 2;</code>
       */
      public int getNextTransitionTime() {
        return nextTransitionTime_;
      }
      /**
       * <code>optional uint32 next_transition_time = 2;</code>
       */
      public Builder setNextTransitionTime(int value) {
        bitField0_ |= 0x00000002;
        nextTransitionTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 next_transition_time = 2;</code>
       */
      public Builder clearNextTransitionTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nextTransitionTime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 bonus_amount = 3;
      private int bonusAmount_ ;
      /**
       * <code>optional uint32 bonus_amount = 3;</code>
       */
      public boolean hasBonusAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 bonus_amount = 3;</code>
       */
      public int getBonusAmount() {
        return bonusAmount_;
      }
      /**
       * <code>optional uint32 bonus_amount = 3;</code>
       */
      public Builder setBonusAmount(int value) {
        bitField0_ |= 0x00000004;
        bonusAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bonus_amount = 3;</code>
       */
      public Builder clearBonusAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bonusAmount_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 standby_duration = 4;
      private int standbyDuration_ ;
      /**
       * <code>optional uint32 standby_duration = 4;</code>
       */
      public boolean hasStandbyDuration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 standby_duration = 4;</code>
       */
      public int getStandbyDuration() {
        return standbyDuration_;
      }
      /**
       * <code>optional uint32 standby_duration = 4;</code>
       */
      public Builder setStandbyDuration(int value) {
        bitField0_ |= 0x00000008;
        standbyDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 standby_duration = 4;</code>
       */
      public Builder clearStandbyDuration() {
        bitField0_ = (bitField0_ & ~0x00000008);
        standbyDuration_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 transition_time = 5;
      private int transitionTime_ ;
      /**
       * <code>optional uint32 transition_time = 5;</code>
       */
      public boolean hasTransitionTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 transition_time = 5;</code>
       */
      public int getTransitionTime() {
        return transitionTime_;
      }
      /**
       * <code>optional uint32 transition_time = 5;</code>
       */
      public Builder setTransitionTime(int value) {
        bitField0_ |= 0x00000010;
        transitionTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 transition_time = 5;</code>
       */
      public Builder clearTransitionTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        transitionTime_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCToClientNewBloomTimingUpdated)
    }

    static {
      defaultInstance = new CMsgGCToClientNewBloomTimingUpdated(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgGCToClientNewBloomTimingUpdated)
  }

  public interface CSODOTAPlayerChallengeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 account_id = 1;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    // optional uint32 event_id = 2;
    /**
     * <code>optional uint32 event_id = 2;</code>
     */
    boolean hasEventId();
    /**
     * <code>optional uint32 event_id = 2;</code>
     */
    int getEventId();

    // optional uint32 slot_id = 3;
    /**
     * <code>optional uint32 slot_id = 3;</code>
     */
    boolean hasSlotId();
    /**
     * <code>optional uint32 slot_id = 3;</code>
     */
    int getSlotId();

    // optional uint32 challenge_type = 4;
    /**
     * <code>optional uint32 challenge_type = 4;</code>
     */
    boolean hasChallengeType();
    /**
     * <code>optional uint32 challenge_type = 4;</code>
     */
    int getChallengeType();

    // optional uint32 int_param_0 = 5;
    /**
     * <code>optional uint32 int_param_0 = 5;</code>
     */
    boolean hasIntParam0();
    /**
     * <code>optional uint32 int_param_0 = 5;</code>
     */
    int getIntParam0();

    // optional uint32 int_param_1 = 6;
    /**
     * <code>optional uint32 int_param_1 = 6;</code>
     */
    boolean hasIntParam1();
    /**
     * <code>optional uint32 int_param_1 = 6;</code>
     */
    int getIntParam1();

    // optional uint32 created_time = 7;
    /**
     * <code>optional uint32 created_time = 7;</code>
     */
    boolean hasCreatedTime();
    /**
     * <code>optional uint32 created_time = 7;</code>
     */
    int getCreatedTime();

    // optional uint32 completed = 8;
    /**
     * <code>optional uint32 completed = 8;</code>
     */
    boolean hasCompleted();
    /**
     * <code>optional uint32 completed = 8;</code>
     */
    int getCompleted();

    // optional uint32 sequence_id = 9;
    /**
     * <code>optional uint32 sequence_id = 9;</code>
     */
    boolean hasSequenceId();
    /**
     * <code>optional uint32 sequence_id = 9;</code>
     */
    int getSequenceId();

    // optional uint32 challenge_tier = 10;
    /**
     * <code>optional uint32 challenge_tier = 10;</code>
     */
    boolean hasChallengeTier();
    /**
     * <code>optional uint32 challenge_tier = 10;</code>
     */
    int getChallengeTier();

    // optional uint32 flags = 11;
    /**
     * <code>optional uint32 flags = 11;</code>
     */
    boolean hasFlags();
    /**
     * <code>optional uint32 flags = 11;</code>
     */
    int getFlags();
  }
  /**
   * Protobuf type {@code CSODOTAPlayerChallenge}
   */
  public static final class CSODOTAPlayerChallenge extends
      com.google.protobuf.GeneratedMessage
      implements CSODOTAPlayerChallengeOrBuilder {
    // Use CSODOTAPlayerChallenge.newBuilder() to construct.
    private CSODOTAPlayerChallenge(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CSODOTAPlayerChallenge(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CSODOTAPlayerChallenge defaultInstance;
    public static CSODOTAPlayerChallenge getDefaultInstance() {
      return defaultInstance;
    }

    public CSODOTAPlayerChallenge getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CSODOTAPlayerChallenge(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              eventId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              slotId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              challengeType_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              intParam0_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              intParam1_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              createdTime_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              completed_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              sequenceId_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              challengeTier_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              flags_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPlayerChallenge_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPlayerChallenge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge.Builder.class);
    }

    public static com.google.protobuf.Parser<CSODOTAPlayerChallenge> PARSER =
        new com.google.protobuf.AbstractParser<CSODOTAPlayerChallenge>() {
      public CSODOTAPlayerChallenge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CSODOTAPlayerChallenge(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CSODOTAPlayerChallenge> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CSODOTAPlayerChallenge.EFlags}
     */
    public enum EFlags
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>eFlag_InstantRerollUncompleted = 1;</code>
       */
      eFlag_InstantRerollUncompleted(0, 1),
      ;

      /**
       * <code>eFlag_InstantRerollUncompleted = 1;</code>
       */
      public static final int eFlag_InstantRerollUncompleted_VALUE = 1;


      public final int getNumber() { return value; }

      public static EFlags valueOf(int value) {
        switch (value) {
          case 1: return eFlag_InstantRerollUncompleted;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EFlags>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EFlags>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EFlags>() {
              public EFlags findValueByNumber(int number) {
                return EFlags.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge.getDescriptor().getEnumTypes().get(0);
      }

      private static final EFlags[] VALUES = values();

      public static EFlags valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EFlags(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CSODOTAPlayerChallenge.EFlags)
    }

    private int bitField0_;
    // optional uint32 account_id = 1;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    // optional uint32 event_id = 2;
    public static final int EVENT_ID_FIELD_NUMBER = 2;
    private int eventId_;
    /**
     * <code>optional uint32 event_id = 2;</code>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 event_id = 2;</code>
     */
    public int getEventId() {
      return eventId_;
    }

    // optional uint32 slot_id = 3;
    public static final int SLOT_ID_FIELD_NUMBER = 3;
    private int slotId_;
    /**
     * <code>optional uint32 slot_id = 3;</code>
     */
    public boolean hasSlotId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 slot_id = 3;</code>
     */
    public int getSlotId() {
      return slotId_;
    }

    // optional uint32 challenge_type = 4;
    public static final int CHALLENGE_TYPE_FIELD_NUMBER = 4;
    private int challengeType_;
    /**
     * <code>optional uint32 challenge_type = 4;</code>
     */
    public boolean hasChallengeType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 challenge_type = 4;</code>
     */
    public int getChallengeType() {
      return challengeType_;
    }

    // optional uint32 int_param_0 = 5;
    public static final int INT_PARAM_0_FIELD_NUMBER = 5;
    private int intParam0_;
    /**
     * <code>optional uint32 int_param_0 = 5;</code>
     */
    public boolean hasIntParam0() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 int_param_0 = 5;</code>
     */
    public int getIntParam0() {
      return intParam0_;
    }

    // optional uint32 int_param_1 = 6;
    public static final int INT_PARAM_1_FIELD_NUMBER = 6;
    private int intParam1_;
    /**
     * <code>optional uint32 int_param_1 = 6;</code>
     */
    public boolean hasIntParam1() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 int_param_1 = 6;</code>
     */
    public int getIntParam1() {
      return intParam1_;
    }

    // optional uint32 created_time = 7;
    public static final int CREATED_TIME_FIELD_NUMBER = 7;
    private int createdTime_;
    /**
     * <code>optional uint32 created_time = 7;</code>
     */
    public boolean hasCreatedTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 created_time = 7;</code>
     */
    public int getCreatedTime() {
      return createdTime_;
    }

    // optional uint32 completed = 8;
    public static final int COMPLETED_FIELD_NUMBER = 8;
    private int completed_;
    /**
     * <code>optional uint32 completed = 8;</code>
     */
    public boolean hasCompleted() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 completed = 8;</code>
     */
    public int getCompleted() {
      return completed_;
    }

    // optional uint32 sequence_id = 9;
    public static final int SEQUENCE_ID_FIELD_NUMBER = 9;
    private int sequenceId_;
    /**
     * <code>optional uint32 sequence_id = 9;</code>
     */
    public boolean hasSequenceId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 sequence_id = 9;</code>
     */
    public int getSequenceId() {
      return sequenceId_;
    }

    // optional uint32 challenge_tier = 10;
    public static final int CHALLENGE_TIER_FIELD_NUMBER = 10;
    private int challengeTier_;
    /**
     * <code>optional uint32 challenge_tier = 10;</code>
     */
    public boolean hasChallengeTier() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 challenge_tier = 10;</code>
     */
    public int getChallengeTier() {
      return challengeTier_;
    }

    // optional uint32 flags = 11;
    public static final int FLAGS_FIELD_NUMBER = 11;
    private int flags_;
    /**
     * <code>optional uint32 flags = 11;</code>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 flags = 11;</code>
     */
    public int getFlags() {
      return flags_;
    }

    private void initFields() {
      accountId_ = 0;
      eventId_ = 0;
      slotId_ = 0;
      challengeType_ = 0;
      intParam0_ = 0;
      intParam1_ = 0;
      createdTime_ = 0;
      completed_ = 0;
      sequenceId_ = 0;
      challengeTier_ = 0;
      flags_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, eventId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, slotId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, challengeType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, intParam0_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, intParam1_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, createdTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, completed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, sequenceId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, challengeTier_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, flags_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, eventId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, slotId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, challengeType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, intParam0_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, intParam1_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, createdTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, completed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, sequenceId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, challengeTier_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, flags_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CSODOTAPlayerChallenge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallengeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPlayerChallenge_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPlayerChallenge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        slotId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        challengeType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        intParam0_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        intParam1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        createdTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        completed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        sequenceId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        challengeTier_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        flags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CSODOTAPlayerChallenge_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventId_ = eventId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.slotId_ = slotId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.challengeType_ = challengeType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.intParam0_ = intParam0_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.intParam1_ = intParam1_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.createdTime_ = createdTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.completed_ = completed_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.sequenceId_ = sequenceId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.challengeTier_ = challengeTier_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.flags_ = flags_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasSlotId()) {
          setSlotId(other.getSlotId());
        }
        if (other.hasChallengeType()) {
          setChallengeType(other.getChallengeType());
        }
        if (other.hasIntParam0()) {
          setIntParam0(other.getIntParam0());
        }
        if (other.hasIntParam1()) {
          setIntParam1(other.getIntParam1());
        }
        if (other.hasCreatedTime()) {
          setCreatedTime(other.getCreatedTime());
        }
        if (other.hasCompleted()) {
          setCompleted(other.getCompleted());
        }
        if (other.hasSequenceId()) {
          setSequenceId(other.getSequenceId());
        }
        if (other.hasChallengeTier()) {
          setChallengeTier(other.getChallengeTier());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CSODOTAPlayerChallenge) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 account_id = 1;
      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 event_id = 2;
      private int eventId_ ;
      /**
       * <code>optional uint32 event_id = 2;</code>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 event_id = 2;</code>
       */
      public int getEventId() {
        return eventId_;
      }
      /**
       * <code>optional uint32 event_id = 2;</code>
       */
      public Builder setEventId(int value) {
        bitField0_ |= 0x00000002;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_id = 2;</code>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 slot_id = 3;
      private int slotId_ ;
      /**
       * <code>optional uint32 slot_id = 3;</code>
       */
      public boolean hasSlotId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 slot_id = 3;</code>
       */
      public int getSlotId() {
        return slotId_;
      }
      /**
       * <code>optional uint32 slot_id = 3;</code>
       */
      public Builder setSlotId(int value) {
        bitField0_ |= 0x00000004;
        slotId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 slot_id = 3;</code>
       */
      public Builder clearSlotId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        slotId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 challenge_type = 4;
      private int challengeType_ ;
      /**
       * <code>optional uint32 challenge_type = 4;</code>
       */
      public boolean hasChallengeType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 challenge_type = 4;</code>
       */
      public int getChallengeType() {
        return challengeType_;
      }
      /**
       * <code>optional uint32 challenge_type = 4;</code>
       */
      public Builder setChallengeType(int value) {
        bitField0_ |= 0x00000008;
        challengeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 challenge_type = 4;</code>
       */
      public Builder clearChallengeType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        challengeType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 int_param_0 = 5;
      private int intParam0_ ;
      /**
       * <code>optional uint32 int_param_0 = 5;</code>
       */
      public boolean hasIntParam0() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 int_param_0 = 5;</code>
       */
      public int getIntParam0() {
        return intParam0_;
      }
      /**
       * <code>optional uint32 int_param_0 = 5;</code>
       */
      public Builder setIntParam0(int value) {
        bitField0_ |= 0x00000010;
        intParam0_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 int_param_0 = 5;</code>
       */
      public Builder clearIntParam0() {
        bitField0_ = (bitField0_ & ~0x00000010);
        intParam0_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 int_param_1 = 6;
      private int intParam1_ ;
      /**
       * <code>optional uint32 int_param_1 = 6;</code>
       */
      public boolean hasIntParam1() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 int_param_1 = 6;</code>
       */
      public int getIntParam1() {
        return intParam1_;
      }
      /**
       * <code>optional uint32 int_param_1 = 6;</code>
       */
      public Builder setIntParam1(int value) {
        bitField0_ |= 0x00000020;
        intParam1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 int_param_1 = 6;</code>
       */
      public Builder clearIntParam1() {
        bitField0_ = (bitField0_ & ~0x00000020);
        intParam1_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 created_time = 7;
      private int createdTime_ ;
      /**
       * <code>optional uint32 created_time = 7;</code>
       */
      public boolean hasCreatedTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 created_time = 7;</code>
       */
      public int getCreatedTime() {
        return createdTime_;
      }
      /**
       * <code>optional uint32 created_time = 7;</code>
       */
      public Builder setCreatedTime(int value) {
        bitField0_ |= 0x00000040;
        createdTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 created_time = 7;</code>
       */
      public Builder clearCreatedTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        createdTime_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 completed = 8;
      private int completed_ ;
      /**
       * <code>optional uint32 completed = 8;</code>
       */
      public boolean hasCompleted() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 completed = 8;</code>
       */
      public int getCompleted() {
        return completed_;
      }
      /**
       * <code>optional uint32 completed = 8;</code>
       */
      public Builder setCompleted(int value) {
        bitField0_ |= 0x00000080;
        completed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 completed = 8;</code>
       */
      public Builder clearCompleted() {
        bitField0_ = (bitField0_ & ~0x00000080);
        completed_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 sequence_id = 9;
      private int sequenceId_ ;
      /**
       * <code>optional uint32 sequence_id = 9;</code>
       */
      public boolean hasSequenceId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 sequence_id = 9;</code>
       */
      public int getSequenceId() {
        return sequenceId_;
      }
      /**
       * <code>optional uint32 sequence_id = 9;</code>
       */
      public Builder setSequenceId(int value) {
        bitField0_ |= 0x00000100;
        sequenceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sequence_id = 9;</code>
       */
      public Builder clearSequenceId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sequenceId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 challenge_tier = 10;
      private int challengeTier_ ;
      /**
       * <code>optional uint32 challenge_tier = 10;</code>
       */
      public boolean hasChallengeTier() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 challenge_tier = 10;</code>
       */
      public int getChallengeTier() {
        return challengeTier_;
      }
      /**
       * <code>optional uint32 challenge_tier = 10;</code>
       */
      public Builder setChallengeTier(int value) {
        bitField0_ |= 0x00000200;
        challengeTier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 challenge_tier = 10;</code>
       */
      public Builder clearChallengeTier() {
        bitField0_ = (bitField0_ & ~0x00000200);
        challengeTier_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 flags = 11;
      private int flags_ ;
      /**
       * <code>optional uint32 flags = 11;</code>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 flags = 11;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <code>optional uint32 flags = 11;</code>
       */
      public Builder setFlags(int value) {
        bitField0_ |= 0x00000400;
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 flags = 11;</code>
       */
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00000400);
        flags_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CSODOTAPlayerChallenge)
    }

    static {
      defaultInstance = new CSODOTAPlayerChallenge(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CSODOTAPlayerChallenge)
  }

  public interface CMsgClientToGCRerollPlayerChallengeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 event_id = 1;
    /**
     * <code>optional uint32 event_id = 1;</code>
     */
    boolean hasEventId();
    /**
     * <code>optional uint32 event_id = 1;</code>
     */
    int getEventId();

    // optional uint32 sequence_id = 3;
    /**
     * <code>optional uint32 sequence_id = 3;</code>
     */
    boolean hasSequenceId();
    /**
     * <code>optional uint32 sequence_id = 3;</code>
     */
    int getSequenceId();
  }
  /**
   * Protobuf type {@code CMsgClientToGCRerollPlayerChallenge}
   */
  public static final class CMsgClientToGCRerollPlayerChallenge extends
      com.google.protobuf.GeneratedMessage
      implements CMsgClientToGCRerollPlayerChallengeOrBuilder {
    // Use CMsgClientToGCRerollPlayerChallenge.newBuilder() to construct.
    private CMsgClientToGCRerollPlayerChallenge(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgClientToGCRerollPlayerChallenge(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgClientToGCRerollPlayerChallenge defaultInstance;
    public static CMsgClientToGCRerollPlayerChallenge getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgClientToGCRerollPlayerChallenge getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgClientToGCRerollPlayerChallenge(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eventId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              sequenceId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgClientToGCRerollPlayerChallenge_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgClientToGCRerollPlayerChallenge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgClientToGCRerollPlayerChallenge> PARSER =
        new com.google.protobuf.AbstractParser<CMsgClientToGCRerollPlayerChallenge>() {
      public CMsgClientToGCRerollPlayerChallenge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgClientToGCRerollPlayerChallenge(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgClientToGCRerollPlayerChallenge> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 event_id = 1;
    public static final int EVENT_ID_FIELD_NUMBER = 1;
    private int eventId_;
    /**
     * <code>optional uint32 event_id = 1;</code>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 event_id = 1;</code>
     */
    public int getEventId() {
      return eventId_;
    }

    // optional uint32 sequence_id = 3;
    public static final int SEQUENCE_ID_FIELD_NUMBER = 3;
    private int sequenceId_;
    /**
     * <code>optional uint32 sequence_id = 3;</code>
     */
    public boolean hasSequenceId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 sequence_id = 3;</code>
     */
    public int getSequenceId() {
      return sequenceId_;
    }

    private void initFields() {
      eventId_ = 0;
      sequenceId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, sequenceId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sequenceId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgClientToGCRerollPlayerChallenge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallengeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgClientToGCRerollPlayerChallenge_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgClientToGCRerollPlayerChallenge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eventId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sequenceId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgClientToGCRerollPlayerChallenge_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventId_ = eventId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sequenceId_ = sequenceId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge.getDefaultInstance()) return this;
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasSequenceId()) {
          setSequenceId(other.getSequenceId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgClientToGCRerollPlayerChallenge) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 event_id = 1;
      private int eventId_ ;
      /**
       * <code>optional uint32 event_id = 1;</code>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 event_id = 1;</code>
       */
      public int getEventId() {
        return eventId_;
      }
      /**
       * <code>optional uint32 event_id = 1;</code>
       */
      public Builder setEventId(int value) {
        bitField0_ |= 0x00000001;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_id = 1;</code>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 sequence_id = 3;
      private int sequenceId_ ;
      /**
       * <code>optional uint32 sequence_id = 3;</code>
       */
      public boolean hasSequenceId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 sequence_id = 3;</code>
       */
      public int getSequenceId() {
        return sequenceId_;
      }
      /**
       * <code>optional uint32 sequence_id = 3;</code>
       */
      public Builder setSequenceId(int value) {
        bitField0_ |= 0x00000002;
        sequenceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sequence_id = 3;</code>
       */
      public Builder clearSequenceId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgClientToGCRerollPlayerChallenge)
    }

    static {
      defaultInstance = new CMsgClientToGCRerollPlayerChallenge(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgClientToGCRerollPlayerChallenge)
  }

  public interface CMsgGCRerollPlayerChallengeResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];
    /**
     * <code>optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];</code>
     */
    boolean hasResult();
    /**
     * <code>optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult getResult();
  }
  /**
   * Protobuf type {@code CMsgGCRerollPlayerChallengeResponse}
   */
  public static final class CMsgGCRerollPlayerChallengeResponse extends
      com.google.protobuf.GeneratedMessage
      implements CMsgGCRerollPlayerChallengeResponseOrBuilder {
    // Use CMsgGCRerollPlayerChallengeResponse.newBuilder() to construct.
    private CMsgGCRerollPlayerChallengeResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgGCRerollPlayerChallengeResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgGCRerollPlayerChallengeResponse defaultInstance;
    public static CMsgGCRerollPlayerChallengeResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgGCRerollPlayerChallengeResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgGCRerollPlayerChallengeResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult value = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                result_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCRerollPlayerChallengeResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCRerollPlayerChallengeResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgGCRerollPlayerChallengeResponse> PARSER =
        new com.google.protobuf.AbstractParser<CMsgGCRerollPlayerChallengeResponse>() {
      public CMsgGCRerollPlayerChallengeResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgGCRerollPlayerChallengeResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCRerollPlayerChallengeResponse> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgGCRerollPlayerChallengeResponse.EResult}
     */
    public enum EResult
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>eResult_Success = 0;</code>
       */
      eResult_Success(0, 0),
      /**
       * <code>eResult_Dropped = 1;</code>
       */
      eResult_Dropped(1, 1),
      /**
       * <code>eResult_NotFound = 2;</code>
       */
      eResult_NotFound(2, 2),
      /**
       * <code>eResult_CantReroll = 3;</code>
       */
      eResult_CantReroll(3, 3),
      /**
       * <code>eResult_ServerError = 4;</code>
       */
      eResult_ServerError(4, 4),
      ;

      /**
       * <code>eResult_Success = 0;</code>
       */
      public static final int eResult_Success_VALUE = 0;
      /**
       * <code>eResult_Dropped = 1;</code>
       */
      public static final int eResult_Dropped_VALUE = 1;
      /**
       * <code>eResult_NotFound = 2;</code>
       */
      public static final int eResult_NotFound_VALUE = 2;
      /**
       * <code>eResult_CantReroll = 3;</code>
       */
      public static final int eResult_CantReroll_VALUE = 3;
      /**
       * <code>eResult_ServerError = 4;</code>
       */
      public static final int eResult_ServerError_VALUE = 4;


      public final int getNumber() { return value; }

      public static EResult valueOf(int value) {
        switch (value) {
          case 0: return eResult_Success;
          case 1: return eResult_Dropped;
          case 2: return eResult_NotFound;
          case 3: return eResult_CantReroll;
          case 4: return eResult_ServerError;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<EResult>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EResult>() {
              public EResult findValueByNumber(int number) {
                return EResult.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final EResult[] VALUES = values();

      public static EResult valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private EResult(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgGCRerollPlayerChallengeResponse.EResult)
    }

    private int bitField0_;
    // optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];
    public static final int RESULT_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult result_;
    /**
     * <code>optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];</code>
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult getResult() {
      return result_;
    }

    private void initFields() {
      result_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult.eResult_Success;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, result_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, result_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCRerollPlayerChallengeResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCRerollPlayerChallengeResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCRerollPlayerChallengeResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        result_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult.eResult_Success;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCRerollPlayerChallengeResponse_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.result_ = result_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];
      private skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult result_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult.eResult_Success;
      /**
       * <code>optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];</code>
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult getResult() {
        return result_;
      }
      /**
       * <code>optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];</code>
       */
      public Builder setResult(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgGCRerollPlayerChallengeResponse.EResult result = 1 [default = eResult_Success];</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCRerollPlayerChallengeResponse.EResult.eResult_Success;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCRerollPlayerChallengeResponse)
    }

    static {
      defaultInstance = new CMsgGCRerollPlayerChallengeResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgGCRerollPlayerChallengeResponse)
  }

  public interface CMsgGCToClientTopCustomGamesListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated uint64 top_custom_games = 1;
    /**
     * <code>repeated uint64 top_custom_games = 1;</code>
     */
    java.util.List<java.lang.Long> getTopCustomGamesList();
    /**
     * <code>repeated uint64 top_custom_games = 1;</code>
     */
    int getTopCustomGamesCount();
    /**
     * <code>repeated uint64 top_custom_games = 1;</code>
     */
    long getTopCustomGames(int index);
  }
  /**
   * Protobuf type {@code CMsgGCToClientTopCustomGamesList}
   */
  public static final class CMsgGCToClientTopCustomGamesList extends
      com.google.protobuf.GeneratedMessage
      implements CMsgGCToClientTopCustomGamesListOrBuilder {
    // Use CMsgGCToClientTopCustomGamesList.newBuilder() to construct.
    private CMsgGCToClientTopCustomGamesList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgGCToClientTopCustomGamesList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgGCToClientTopCustomGamesList defaultInstance;
    public static CMsgGCToClientTopCustomGamesList getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgGCToClientTopCustomGamesList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgGCToClientTopCustomGamesList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                topCustomGames_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              topCustomGames_.add(input.readUInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                topCustomGames_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                topCustomGames_.add(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          topCustomGames_ = java.util.Collections.unmodifiableList(topCustomGames_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToClientTopCustomGamesList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToClientTopCustomGamesList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgGCToClientTopCustomGamesList> PARSER =
        new com.google.protobuf.AbstractParser<CMsgGCToClientTopCustomGamesList>() {
      public CMsgGCToClientTopCustomGamesList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgGCToClientTopCustomGamesList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCToClientTopCustomGamesList> getParserForType() {
      return PARSER;
    }

    // repeated uint64 top_custom_games = 1;
    public static final int TOP_CUSTOM_GAMES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> topCustomGames_;
    /**
     * <code>repeated uint64 top_custom_games = 1;</code>
     */
    public java.util.List<java.lang.Long>
        getTopCustomGamesList() {
      return topCustomGames_;
    }
    /**
     * <code>repeated uint64 top_custom_games = 1;</code>
     */
    public int getTopCustomGamesCount() {
      return topCustomGames_.size();
    }
    /**
     * <code>repeated uint64 top_custom_games = 1;</code>
     */
    public long getTopCustomGames(int index) {
      return topCustomGames_.get(index);
    }

    private void initFields() {
      topCustomGames_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < topCustomGames_.size(); i++) {
        output.writeUInt64(1, topCustomGames_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < topCustomGames_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(topCustomGames_.get(i));
        }
        size += dataSize;
        size += 1 * getTopCustomGamesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCToClientTopCustomGamesList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToClientTopCustomGamesList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToClientTopCustomGamesList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        topCustomGames_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgGCToClientTopCustomGamesList_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          topCustomGames_ = java.util.Collections.unmodifiableList(topCustomGames_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.topCustomGames_ = topCustomGames_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList.getDefaultInstance()) return this;
        if (!other.topCustomGames_.isEmpty()) {
          if (topCustomGames_.isEmpty()) {
            topCustomGames_ = other.topCustomGames_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTopCustomGamesIsMutable();
            topCustomGames_.addAll(other.topCustomGames_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgGCToClientTopCustomGamesList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated uint64 top_custom_games = 1;
      private java.util.List<java.lang.Long> topCustomGames_ = java.util.Collections.emptyList();
      private void ensureTopCustomGamesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          topCustomGames_ = new java.util.ArrayList<java.lang.Long>(topCustomGames_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint64 top_custom_games = 1;</code>
       */
      public java.util.List<java.lang.Long>
          getTopCustomGamesList() {
        return java.util.Collections.unmodifiableList(topCustomGames_);
      }
      /**
       * <code>repeated uint64 top_custom_games = 1;</code>
       */
      public int getTopCustomGamesCount() {
        return topCustomGames_.size();
      }
      /**
       * <code>repeated uint64 top_custom_games = 1;</code>
       */
      public long getTopCustomGames(int index) {
        return topCustomGames_.get(index);
      }
      /**
       * <code>repeated uint64 top_custom_games = 1;</code>
       */
      public Builder setTopCustomGames(
          int index, long value) {
        ensureTopCustomGamesIsMutable();
        topCustomGames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 top_custom_games = 1;</code>
       */
      public Builder addTopCustomGames(long value) {
        ensureTopCustomGamesIsMutable();
        topCustomGames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 top_custom_games = 1;</code>
       */
      public Builder addAllTopCustomGames(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTopCustomGamesIsMutable();
        super.addAll(values, topCustomGames_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 top_custom_games = 1;</code>
       */
      public Builder clearTopCustomGames() {
        topCustomGames_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCToClientTopCustomGamesList)
    }

    static {
      defaultInstance = new CMsgGCToClientTopCustomGamesList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgGCToClientTopCustomGamesList)
  }

  public interface CMsgDOTARealtimeGameStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 server_steam_id = 1;
    /**
     * <code>optional uint64 server_steam_id = 1;</code>
     */
    boolean hasServerSteamId();
    /**
     * <code>optional uint64 server_steam_id = 1;</code>
     */
    long getServerSteamId();

    // optional uint32 timestamp = 2;
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    int getTimestamp();

    // optional int32 game_time = 3;
    /**
     * <code>optional int32 game_time = 3;</code>
     */
    boolean hasGameTime();
    /**
     * <code>optional int32 game_time = 3;</code>
     */
    int getGameTime();

    // repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails> 
        getPlayersList();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails getPlayers(int index);
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetailsOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetailsOrBuilder getPlayersOrBuilder(
        int index);

    // repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails> 
        getDeathsList();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails getDeaths(int index);
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
     */
    int getDeathsCount();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetailsOrBuilder> 
        getDeathsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetailsOrBuilder getDeathsOrBuilder(
        int index);

    // repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails> 
        getBroadcastersList();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails getBroadcasters(int index);
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
     */
    int getBroadcastersCount();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetailsOrBuilder> 
        getBroadcastersOrBuilderList();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetailsOrBuilder getBroadcastersOrBuilder(
        int index);

    // repeated int32 gold_history = 7;
    /**
     * <code>repeated int32 gold_history = 7;</code>
     */
    java.util.List<java.lang.Integer> getGoldHistoryList();
    /**
     * <code>repeated int32 gold_history = 7;</code>
     */
    int getGoldHistoryCount();
    /**
     * <code>repeated int32 gold_history = 7;</code>
     */
    int getGoldHistory(int index);

    // repeated int32 xp_history = 8;
    /**
     * <code>repeated int32 xp_history = 8;</code>
     */
    java.util.List<java.lang.Integer> getXpHistoryList();
    /**
     * <code>repeated int32 xp_history = 8;</code>
     */
    int getXpHistoryCount();
    /**
     * <code>repeated int32 xp_history = 8;</code>
     */
    int getXpHistory(int index);

    // repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
     */
    java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails> 
        getPickbansList();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails getPickbans(int index);
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
     */
    int getPickbansCount();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetailsOrBuilder> 
        getPickbansOrBuilderList();
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
     */
    skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetailsOrBuilder getPickbansOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgDOTARealtimeGameStats}
   */
  public static final class CMsgDOTARealtimeGameStats extends
      com.google.protobuf.GeneratedMessage
      implements CMsgDOTARealtimeGameStatsOrBuilder {
    // Use CMsgDOTARealtimeGameStats.newBuilder() to construct.
    private CMsgDOTARealtimeGameStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTARealtimeGameStats(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTARealtimeGameStats defaultInstance;
    public static CMsgDOTARealtimeGameStats getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTARealtimeGameStats getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTARealtimeGameStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              serverSteamId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              gameTime_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                players_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails>();
                mutable_bitField0_ |= 0x00000008;
              }
              players_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                deaths_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails>();
                mutable_bitField0_ |= 0x00000010;
              }
              deaths_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                broadcasters_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails>();
                mutable_bitField0_ |= 0x00000020;
              }
              broadcasters_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                goldHistory_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              goldHistory_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                goldHistory_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                goldHistory_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                xpHistory_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              xpHistory_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                xpHistory_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                xpHistory_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                pickbans_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails>();
                mutable_bitField0_ |= 0x00000100;
              }
              pickbans_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          deaths_ = java.util.Collections.unmodifiableList(deaths_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          broadcasters_ = java.util.Collections.unmodifiableList(broadcasters_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          goldHistory_ = java.util.Collections.unmodifiableList(goldHistory_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          xpHistory_ = java.util.Collections.unmodifiableList(xpHistory_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          pickbans_ = java.util.Collections.unmodifiableList(pickbans_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTARealtimeGameStats> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTARealtimeGameStats>() {
      public CMsgDOTARealtimeGameStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTARealtimeGameStats(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTARealtimeGameStats> getParserForType() {
      return PARSER;
    }

    public interface ItemDetailsOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 item_id = 1;
      /**
       * <code>optional uint32 item_id = 1;</code>
       */
      boolean hasItemId();
      /**
       * <code>optional uint32 item_id = 1;</code>
       */
      int getItemId();

      // optional uint32 purchase_time = 2;
      /**
       * <code>optional uint32 purchase_time = 2;</code>
       */
      boolean hasPurchaseTime();
      /**
       * <code>optional uint32 purchase_time = 2;</code>
       */
      int getPurchaseTime();
    }
    /**
     * Protobuf type {@code CMsgDOTARealtimeGameStats.ItemDetails}
     */
    public static final class ItemDetails extends
        com.google.protobuf.GeneratedMessage
        implements ItemDetailsOrBuilder {
      // Use ItemDetails.newBuilder() to construct.
      private ItemDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ItemDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ItemDetails defaultInstance;
      public static ItemDetails getDefaultInstance() {
        return defaultInstance;
      }

      public ItemDetails getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ItemDetails(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                itemId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                purchaseTime_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_ItemDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_ItemDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder.class);
      }

      public static com.google.protobuf.Parser<ItemDetails> PARSER =
          new com.google.protobuf.AbstractParser<ItemDetails>() {
        public ItemDetails parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ItemDetails(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ItemDetails> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 item_id = 1;
      public static final int ITEM_ID_FIELD_NUMBER = 1;
      private int itemId_;
      /**
       * <code>optional uint32 item_id = 1;</code>
       */
      public boolean hasItemId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 item_id = 1;</code>
       */
      public int getItemId() {
        return itemId_;
      }

      // optional uint32 purchase_time = 2;
      public static final int PURCHASE_TIME_FIELD_NUMBER = 2;
      private int purchaseTime_;
      /**
       * <code>optional uint32 purchase_time = 2;</code>
       */
      public boolean hasPurchaseTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 purchase_time = 2;</code>
       */
      public int getPurchaseTime() {
        return purchaseTime_;
      }

      private void initFields() {
        itemId_ = 0;
        purchaseTime_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, itemId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, purchaseTime_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, itemId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, purchaseTime_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTARealtimeGameStats.ItemDetails}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetailsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_ItemDetails_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_ItemDetails_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          itemId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          purchaseTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_ItemDetails_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.itemId_ = itemId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.purchaseTime_ = purchaseTime_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.getDefaultInstance()) return this;
          if (other.hasItemId()) {
            setItemId(other.getItemId());
          }
          if (other.hasPurchaseTime()) {
            setPurchaseTime(other.getPurchaseTime());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 item_id = 1;
        private int itemId_ ;
        /**
         * <code>optional uint32 item_id = 1;</code>
         */
        public boolean hasItemId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 item_id = 1;</code>
         */
        public int getItemId() {
          return itemId_;
        }
        /**
         * <code>optional uint32 item_id = 1;</code>
         */
        public Builder setItemId(int value) {
          bitField0_ |= 0x00000001;
          itemId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 item_id = 1;</code>
         */
        public Builder clearItemId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          itemId_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 purchase_time = 2;
        private int purchaseTime_ ;
        /**
         * <code>optional uint32 purchase_time = 2;</code>
         */
        public boolean hasPurchaseTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 purchase_time = 2;</code>
         */
        public int getPurchaseTime() {
          return purchaseTime_;
        }
        /**
         * <code>optional uint32 purchase_time = 2;</code>
         */
        public Builder setPurchaseTime(int value) {
          bitField0_ |= 0x00000002;
          purchaseTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 purchase_time = 2;</code>
         */
        public Builder clearPurchaseTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          purchaseTime_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTARealtimeGameStats.ItemDetails)
      }

      static {
        defaultInstance = new ItemDetails(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTARealtimeGameStats.ItemDetails)
    }

    public interface PlayerDetailsOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 player_id = 1;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      boolean hasPlayerId();
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      int getPlayerId();

      // optional uint32 hero_id = 2;
      /**
       * <code>optional uint32 hero_id = 2;</code>
       */
      boolean hasHeroId();
      /**
       * <code>optional uint32 hero_id = 2;</code>
       */
      int getHeroId();

      // optional uint32 health = 3;
      /**
       * <code>optional uint32 health = 3;</code>
       */
      boolean hasHealth();
      /**
       * <code>optional uint32 health = 3;</code>
       */
      int getHealth();

      // optional uint32 max_health = 4;
      /**
       * <code>optional uint32 max_health = 4;</code>
       */
      boolean hasMaxHealth();
      /**
       * <code>optional uint32 max_health = 4;</code>
       */
      int getMaxHealth();

      // optional uint32 mana = 5;
      /**
       * <code>optional uint32 mana = 5;</code>
       */
      boolean hasMana();
      /**
       * <code>optional uint32 mana = 5;</code>
       */
      int getMana();

      // optional uint32 max_mana = 6;
      /**
       * <code>optional uint32 max_mana = 6;</code>
       */
      boolean hasMaxMana();
      /**
       * <code>optional uint32 max_mana = 6;</code>
       */
      int getMaxMana();

      // optional uint32 level = 7;
      /**
       * <code>optional uint32 level = 7;</code>
       */
      boolean hasLevel();
      /**
       * <code>optional uint32 level = 7;</code>
       */
      int getLevel();

      // optional uint32 gold = 8;
      /**
       * <code>optional uint32 gold = 8;</code>
       */
      boolean hasGold();
      /**
       * <code>optional uint32 gold = 8;</code>
       */
      int getGold();

      // optional uint32 kills = 9;
      /**
       * <code>optional uint32 kills = 9;</code>
       */
      boolean hasKills();
      /**
       * <code>optional uint32 kills = 9;</code>
       */
      int getKills();

      // optional uint32 deaths = 10;
      /**
       * <code>optional uint32 deaths = 10;</code>
       */
      boolean hasDeaths();
      /**
       * <code>optional uint32 deaths = 10;</code>
       */
      int getDeaths();

      // optional uint32 assists = 11;
      /**
       * <code>optional uint32 assists = 11;</code>
       */
      boolean hasAssists();
      /**
       * <code>optional uint32 assists = 11;</code>
       */
      int getAssists();

      // optional uint32 respawn_time = 12;
      /**
       * <code>optional uint32 respawn_time = 12;</code>
       */
      boolean hasRespawnTime();
      /**
       * <code>optional uint32 respawn_time = 12;</code>
       */
      int getRespawnTime();

      // optional uint32 ultimate_cooldown = 13;
      /**
       * <code>optional uint32 ultimate_cooldown = 13;</code>
       */
      boolean hasUltimateCooldown();
      /**
       * <code>optional uint32 ultimate_cooldown = 13;</code>
       */
      int getUltimateCooldown();

      // optional uint32 location_x = 14;
      /**
       * <code>optional uint32 location_x = 14;</code>
       */
      boolean hasLocationX();
      /**
       * <code>optional uint32 location_x = 14;</code>
       */
      int getLocationX();

      // optional uint32 location_y = 15;
      /**
       * <code>optional uint32 location_y = 15;</code>
       */
      boolean hasLocationY();
      /**
       * <code>optional uint32 location_y = 15;</code>
       */
      int getLocationY();

      // repeated uint32 items = 16;
      /**
       * <code>repeated uint32 items = 16;</code>
       */
      java.util.List<java.lang.Integer> getItemsList();
      /**
       * <code>repeated uint32 items = 16;</code>
       */
      int getItemsCount();
      /**
       * <code>repeated uint32 items = 16;</code>
       */
      int getItems(int index);

      // repeated uint32 skill_history = 17;
      /**
       * <code>repeated uint32 skill_history = 17;</code>
       */
      java.util.List<java.lang.Integer> getSkillHistoryList();
      /**
       * <code>repeated uint32 skill_history = 17;</code>
       */
      int getSkillHistoryCount();
      /**
       * <code>repeated uint32 skill_history = 17;</code>
       */
      int getSkillHistory(int index);

      // repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
       */
      java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails> 
          getItemHistoryList();
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails getItemHistory(int index);
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
       */
      int getItemHistoryCount();
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetailsOrBuilder> 
          getItemHistoryOrBuilderList();
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
       */
      skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetailsOrBuilder getItemHistoryOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CMsgDOTARealtimeGameStats.PlayerDetails}
     */
    public static final class PlayerDetails extends
        com.google.protobuf.GeneratedMessage
        implements PlayerDetailsOrBuilder {
      // Use PlayerDetails.newBuilder() to construct.
      private PlayerDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PlayerDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PlayerDetails defaultInstance;
      public static PlayerDetails getDefaultInstance() {
        return defaultInstance;
      }

      public PlayerDetails getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PlayerDetails(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                playerId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                heroId_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                health_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                maxHealth_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                mana_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                maxMana_ = input.readUInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                level_ = input.readUInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                gold_ = input.readUInt32();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                kills_ = input.readUInt32();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000200;
                deaths_ = input.readUInt32();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000400;
                assists_ = input.readUInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000800;
                respawnTime_ = input.readUInt32();
                break;
              }
              case 104: {
                bitField0_ |= 0x00001000;
                ultimateCooldown_ = input.readUInt32();
                break;
              }
              case 112: {
                bitField0_ |= 0x00002000;
                locationX_ = input.readUInt32();
                break;
              }
              case 120: {
                bitField0_ |= 0x00004000;
                locationY_ = input.readUInt32();
                break;
              }
              case 128: {
                if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                  items_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00008000;
                }
                items_.add(input.readUInt32());
                break;
              }
              case 130: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                  items_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00008000;
                }
                while (input.getBytesUntilLimit() > 0) {
                  items_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 136: {
                if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                  skillHistory_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00010000;
                }
                skillHistory_.add(input.readUInt32());
                break;
              }
              case 138: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                  skillHistory_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00010000;
                }
                while (input.getBytesUntilLimit() > 0) {
                  skillHistory_.add(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 146: {
                if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                  itemHistory_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails>();
                  mutable_bitField0_ |= 0x00020000;
                }
                itemHistory_.add(input.readMessage(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
            items_ = java.util.Collections.unmodifiableList(items_);
          }
          if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
            skillHistory_ = java.util.Collections.unmodifiableList(skillHistory_);
          }
          if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
            itemHistory_ = java.util.Collections.unmodifiableList(itemHistory_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_PlayerDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_PlayerDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder.class);
      }

      public static com.google.protobuf.Parser<PlayerDetails> PARSER =
          new com.google.protobuf.AbstractParser<PlayerDetails>() {
        public PlayerDetails parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PlayerDetails(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PlayerDetails> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 player_id = 1;
      public static final int PLAYER_ID_FIELD_NUMBER = 1;
      private int playerId_;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }

      // optional uint32 hero_id = 2;
      public static final int HERO_ID_FIELD_NUMBER = 2;
      private int heroId_;
      /**
       * <code>optional uint32 hero_id = 2;</code>
       */
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 hero_id = 2;</code>
       */
      public int getHeroId() {
        return heroId_;
      }

      // optional uint32 health = 3;
      public static final int HEALTH_FIELD_NUMBER = 3;
      private int health_;
      /**
       * <code>optional uint32 health = 3;</code>
       */
      public boolean hasHealth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 health = 3;</code>
       */
      public int getHealth() {
        return health_;
      }

      // optional uint32 max_health = 4;
      public static final int MAX_HEALTH_FIELD_NUMBER = 4;
      private int maxHealth_;
      /**
       * <code>optional uint32 max_health = 4;</code>
       */
      public boolean hasMaxHealth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 max_health = 4;</code>
       */
      public int getMaxHealth() {
        return maxHealth_;
      }

      // optional uint32 mana = 5;
      public static final int MANA_FIELD_NUMBER = 5;
      private int mana_;
      /**
       * <code>optional uint32 mana = 5;</code>
       */
      public boolean hasMana() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 mana = 5;</code>
       */
      public int getMana() {
        return mana_;
      }

      // optional uint32 max_mana = 6;
      public static final int MAX_MANA_FIELD_NUMBER = 6;
      private int maxMana_;
      /**
       * <code>optional uint32 max_mana = 6;</code>
       */
      public boolean hasMaxMana() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 max_mana = 6;</code>
       */
      public int getMaxMana() {
        return maxMana_;
      }

      // optional uint32 level = 7;
      public static final int LEVEL_FIELD_NUMBER = 7;
      private int level_;
      /**
       * <code>optional uint32 level = 7;</code>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 level = 7;</code>
       */
      public int getLevel() {
        return level_;
      }

      // optional uint32 gold = 8;
      public static final int GOLD_FIELD_NUMBER = 8;
      private int gold_;
      /**
       * <code>optional uint32 gold = 8;</code>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 gold = 8;</code>
       */
      public int getGold() {
        return gold_;
      }

      // optional uint32 kills = 9;
      public static final int KILLS_FIELD_NUMBER = 9;
      private int kills_;
      /**
       * <code>optional uint32 kills = 9;</code>
       */
      public boolean hasKills() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 kills = 9;</code>
       */
      public int getKills() {
        return kills_;
      }

      // optional uint32 deaths = 10;
      public static final int DEATHS_FIELD_NUMBER = 10;
      private int deaths_;
      /**
       * <code>optional uint32 deaths = 10;</code>
       */
      public boolean hasDeaths() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 deaths = 10;</code>
       */
      public int getDeaths() {
        return deaths_;
      }

      // optional uint32 assists = 11;
      public static final int ASSISTS_FIELD_NUMBER = 11;
      private int assists_;
      /**
       * <code>optional uint32 assists = 11;</code>
       */
      public boolean hasAssists() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 assists = 11;</code>
       */
      public int getAssists() {
        return assists_;
      }

      // optional uint32 respawn_time = 12;
      public static final int RESPAWN_TIME_FIELD_NUMBER = 12;
      private int respawnTime_;
      /**
       * <code>optional uint32 respawn_time = 12;</code>
       */
      public boolean hasRespawnTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 respawn_time = 12;</code>
       */
      public int getRespawnTime() {
        return respawnTime_;
      }

      // optional uint32 ultimate_cooldown = 13;
      public static final int ULTIMATE_COOLDOWN_FIELD_NUMBER = 13;
      private int ultimateCooldown_;
      /**
       * <code>optional uint32 ultimate_cooldown = 13;</code>
       */
      public boolean hasUltimateCooldown() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 ultimate_cooldown = 13;</code>
       */
      public int getUltimateCooldown() {
        return ultimateCooldown_;
      }

      // optional uint32 location_x = 14;
      public static final int LOCATION_X_FIELD_NUMBER = 14;
      private int locationX_;
      /**
       * <code>optional uint32 location_x = 14;</code>
       */
      public boolean hasLocationX() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 location_x = 14;</code>
       */
      public int getLocationX() {
        return locationX_;
      }

      // optional uint32 location_y = 15;
      public static final int LOCATION_Y_FIELD_NUMBER = 15;
      private int locationY_;
      /**
       * <code>optional uint32 location_y = 15;</code>
       */
      public boolean hasLocationY() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 location_y = 15;</code>
       */
      public int getLocationY() {
        return locationY_;
      }

      // repeated uint32 items = 16;
      public static final int ITEMS_FIELD_NUMBER = 16;
      private java.util.List<java.lang.Integer> items_;
      /**
       * <code>repeated uint32 items = 16;</code>
       */
      public java.util.List<java.lang.Integer>
          getItemsList() {
        return items_;
      }
      /**
       * <code>repeated uint32 items = 16;</code>
       */
      public int getItemsCount() {
        return items_.size();
      }
      /**
       * <code>repeated uint32 items = 16;</code>
       */
      public int getItems(int index) {
        return items_.get(index);
      }

      // repeated uint32 skill_history = 17;
      public static final int SKILL_HISTORY_FIELD_NUMBER = 17;
      private java.util.List<java.lang.Integer> skillHistory_;
      /**
       * <code>repeated uint32 skill_history = 17;</code>
       */
      public java.util.List<java.lang.Integer>
          getSkillHistoryList() {
        return skillHistory_;
      }
      /**
       * <code>repeated uint32 skill_history = 17;</code>
       */
      public int getSkillHistoryCount() {
        return skillHistory_.size();
      }
      /**
       * <code>repeated uint32 skill_history = 17;</code>
       */
      public int getSkillHistory(int index) {
        return skillHistory_.get(index);
      }

      // repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;
      public static final int ITEM_HISTORY_FIELD_NUMBER = 18;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails> itemHistory_;
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails> getItemHistoryList() {
        return itemHistory_;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetailsOrBuilder> 
          getItemHistoryOrBuilderList() {
        return itemHistory_;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
       */
      public int getItemHistoryCount() {
        return itemHistory_.size();
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails getItemHistory(int index) {
        return itemHistory_.get(index);
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetailsOrBuilder getItemHistoryOrBuilder(
          int index) {
        return itemHistory_.get(index);
      }

      private void initFields() {
        playerId_ = 0;
        heroId_ = 0;
        health_ = 0;
        maxHealth_ = 0;
        mana_ = 0;
        maxMana_ = 0;
        level_ = 0;
        gold_ = 0;
        kills_ = 0;
        deaths_ = 0;
        assists_ = 0;
        respawnTime_ = 0;
        ultimateCooldown_ = 0;
        locationX_ = 0;
        locationY_ = 0;
        items_ = java.util.Collections.emptyList();
        skillHistory_ = java.util.Collections.emptyList();
        itemHistory_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, heroId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, health_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, maxHealth_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, mana_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, maxMana_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(7, level_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(8, gold_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeUInt32(9, kills_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeUInt32(10, deaths_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeUInt32(11, assists_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeUInt32(12, respawnTime_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeUInt32(13, ultimateCooldown_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeUInt32(14, locationX_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          output.writeUInt32(15, locationY_);
        }
        for (int i = 0; i < items_.size(); i++) {
          output.writeUInt32(16, items_.get(i));
        }
        for (int i = 0; i < skillHistory_.size(); i++) {
          output.writeUInt32(17, skillHistory_.get(i));
        }
        for (int i = 0; i < itemHistory_.size(); i++) {
          output.writeMessage(18, itemHistory_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, heroId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, health_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, maxHealth_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, mana_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, maxMana_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, level_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, gold_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, kills_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, deaths_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(11, assists_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(12, respawnTime_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(13, ultimateCooldown_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(14, locationX_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(15, locationY_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < items_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(items_.get(i));
          }
          size += dataSize;
          size += 2 * getItemsList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < skillHistory_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(skillHistory_.get(i));
          }
          size += dataSize;
          size += 2 * getSkillHistoryList().size();
        }
        for (int i = 0; i < itemHistory_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, itemHistory_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTARealtimeGameStats.PlayerDetails}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetailsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_PlayerDetails_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_PlayerDetails_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getItemHistoryFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          playerId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          heroId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          health_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          maxHealth_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          mana_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          maxMana_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          level_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          gold_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          kills_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          deaths_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          assists_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          respawnTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          ultimateCooldown_ = 0;
          bitField0_ = (bitField0_ & ~0x00001000);
          locationX_ = 0;
          bitField0_ = (bitField0_ & ~0x00002000);
          locationY_ = 0;
          bitField0_ = (bitField0_ & ~0x00004000);
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          skillHistory_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          if (itemHistoryBuilder_ == null) {
            itemHistory_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            itemHistoryBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_PlayerDetails_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.playerId_ = playerId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.heroId_ = heroId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.health_ = health_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.maxHealth_ = maxHealth_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.mana_ = mana_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.maxMana_ = maxMana_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.level_ = level_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.gold_ = gold_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.kills_ = kills_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.deaths_ = deaths_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.assists_ = assists_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.respawnTime_ = respawnTime_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.ultimateCooldown_ = ultimateCooldown_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.locationX_ = locationX_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00004000;
          }
          result.locationY_ = locationY_;
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.items_ = items_;
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            skillHistory_ = java.util.Collections.unmodifiableList(skillHistory_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.skillHistory_ = skillHistory_;
          if (itemHistoryBuilder_ == null) {
            if (((bitField0_ & 0x00020000) == 0x00020000)) {
              itemHistory_ = java.util.Collections.unmodifiableList(itemHistory_);
              bitField0_ = (bitField0_ & ~0x00020000);
            }
            result.itemHistory_ = itemHistory_;
          } else {
            result.itemHistory_ = itemHistoryBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.getDefaultInstance()) return this;
          if (other.hasPlayerId()) {
            setPlayerId(other.getPlayerId());
          }
          if (other.hasHeroId()) {
            setHeroId(other.getHeroId());
          }
          if (other.hasHealth()) {
            setHealth(other.getHealth());
          }
          if (other.hasMaxHealth()) {
            setMaxHealth(other.getMaxHealth());
          }
          if (other.hasMana()) {
            setMana(other.getMana());
          }
          if (other.hasMaxMana()) {
            setMaxMana(other.getMaxMana());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          if (other.hasGold()) {
            setGold(other.getGold());
          }
          if (other.hasKills()) {
            setKills(other.getKills());
          }
          if (other.hasDeaths()) {
            setDeaths(other.getDeaths());
          }
          if (other.hasAssists()) {
            setAssists(other.getAssists());
          }
          if (other.hasRespawnTime()) {
            setRespawnTime(other.getRespawnTime());
          }
          if (other.hasUltimateCooldown()) {
            setUltimateCooldown(other.getUltimateCooldown());
          }
          if (other.hasLocationX()) {
            setLocationX(other.getLocationX());
          }
          if (other.hasLocationY()) {
            setLocationY(other.getLocationY());
          }
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
          if (!other.skillHistory_.isEmpty()) {
            if (skillHistory_.isEmpty()) {
              skillHistory_ = other.skillHistory_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureSkillHistoryIsMutable();
              skillHistory_.addAll(other.skillHistory_);
            }
            onChanged();
          }
          if (itemHistoryBuilder_ == null) {
            if (!other.itemHistory_.isEmpty()) {
              if (itemHistory_.isEmpty()) {
                itemHistory_ = other.itemHistory_;
                bitField0_ = (bitField0_ & ~0x00020000);
              } else {
                ensureItemHistoryIsMutable();
                itemHistory_.addAll(other.itemHistory_);
              }
              onChanged();
            }
          } else {
            if (!other.itemHistory_.isEmpty()) {
              if (itemHistoryBuilder_.isEmpty()) {
                itemHistoryBuilder_.dispose();
                itemHistoryBuilder_ = null;
                itemHistory_ = other.itemHistory_;
                bitField0_ = (bitField0_ & ~0x00020000);
                itemHistoryBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getItemHistoryFieldBuilder() : null;
              } else {
                itemHistoryBuilder_.addAllMessages(other.itemHistory_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 player_id = 1;
        private int playerId_ ;
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public boolean hasPlayerId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public int getPlayerId() {
          return playerId_;
        }
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public Builder setPlayerId(int value) {
          bitField0_ |= 0x00000001;
          playerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public Builder clearPlayerId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          playerId_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 hero_id = 2;
        private int heroId_ ;
        /**
         * <code>optional uint32 hero_id = 2;</code>
         */
        public boolean hasHeroId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 hero_id = 2;</code>
         */
        public int getHeroId() {
          return heroId_;
        }
        /**
         * <code>optional uint32 hero_id = 2;</code>
         */
        public Builder setHeroId(int value) {
          bitField0_ |= 0x00000002;
          heroId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 hero_id = 2;</code>
         */
        public Builder clearHeroId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          heroId_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 health = 3;
        private int health_ ;
        /**
         * <code>optional uint32 health = 3;</code>
         */
        public boolean hasHealth() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 health = 3;</code>
         */
        public int getHealth() {
          return health_;
        }
        /**
         * <code>optional uint32 health = 3;</code>
         */
        public Builder setHealth(int value) {
          bitField0_ |= 0x00000004;
          health_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 health = 3;</code>
         */
        public Builder clearHealth() {
          bitField0_ = (bitField0_ & ~0x00000004);
          health_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 max_health = 4;
        private int maxHealth_ ;
        /**
         * <code>optional uint32 max_health = 4;</code>
         */
        public boolean hasMaxHealth() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 max_health = 4;</code>
         */
        public int getMaxHealth() {
          return maxHealth_;
        }
        /**
         * <code>optional uint32 max_health = 4;</code>
         */
        public Builder setMaxHealth(int value) {
          bitField0_ |= 0x00000008;
          maxHealth_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 max_health = 4;</code>
         */
        public Builder clearMaxHealth() {
          bitField0_ = (bitField0_ & ~0x00000008);
          maxHealth_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 mana = 5;
        private int mana_ ;
        /**
         * <code>optional uint32 mana = 5;</code>
         */
        public boolean hasMana() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 mana = 5;</code>
         */
        public int getMana() {
          return mana_;
        }
        /**
         * <code>optional uint32 mana = 5;</code>
         */
        public Builder setMana(int value) {
          bitField0_ |= 0x00000010;
          mana_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 mana = 5;</code>
         */
        public Builder clearMana() {
          bitField0_ = (bitField0_ & ~0x00000010);
          mana_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 max_mana = 6;
        private int maxMana_ ;
        /**
         * <code>optional uint32 max_mana = 6;</code>
         */
        public boolean hasMaxMana() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 max_mana = 6;</code>
         */
        public int getMaxMana() {
          return maxMana_;
        }
        /**
         * <code>optional uint32 max_mana = 6;</code>
         */
        public Builder setMaxMana(int value) {
          bitField0_ |= 0x00000020;
          maxMana_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 max_mana = 6;</code>
         */
        public Builder clearMaxMana() {
          bitField0_ = (bitField0_ & ~0x00000020);
          maxMana_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 level = 7;
        private int level_ ;
        /**
         * <code>optional uint32 level = 7;</code>
         */
        public boolean hasLevel() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 level = 7;</code>
         */
        public int getLevel() {
          return level_;
        }
        /**
         * <code>optional uint32 level = 7;</code>
         */
        public Builder setLevel(int value) {
          bitField0_ |= 0x00000040;
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 level = 7;</code>
         */
        public Builder clearLevel() {
          bitField0_ = (bitField0_ & ~0x00000040);
          level_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 gold = 8;
        private int gold_ ;
        /**
         * <code>optional uint32 gold = 8;</code>
         */
        public boolean hasGold() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint32 gold = 8;</code>
         */
        public int getGold() {
          return gold_;
        }
        /**
         * <code>optional uint32 gold = 8;</code>
         */
        public Builder setGold(int value) {
          bitField0_ |= 0x00000080;
          gold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 gold = 8;</code>
         */
        public Builder clearGold() {
          bitField0_ = (bitField0_ & ~0x00000080);
          gold_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 kills = 9;
        private int kills_ ;
        /**
         * <code>optional uint32 kills = 9;</code>
         */
        public boolean hasKills() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint32 kills = 9;</code>
         */
        public int getKills() {
          return kills_;
        }
        /**
         * <code>optional uint32 kills = 9;</code>
         */
        public Builder setKills(int value) {
          bitField0_ |= 0x00000100;
          kills_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 kills = 9;</code>
         */
        public Builder clearKills() {
          bitField0_ = (bitField0_ & ~0x00000100);
          kills_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 deaths = 10;
        private int deaths_ ;
        /**
         * <code>optional uint32 deaths = 10;</code>
         */
        public boolean hasDeaths() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint32 deaths = 10;</code>
         */
        public int getDeaths() {
          return deaths_;
        }
        /**
         * <code>optional uint32 deaths = 10;</code>
         */
        public Builder setDeaths(int value) {
          bitField0_ |= 0x00000200;
          deaths_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 deaths = 10;</code>
         */
        public Builder clearDeaths() {
          bitField0_ = (bitField0_ & ~0x00000200);
          deaths_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 assists = 11;
        private int assists_ ;
        /**
         * <code>optional uint32 assists = 11;</code>
         */
        public boolean hasAssists() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional uint32 assists = 11;</code>
         */
        public int getAssists() {
          return assists_;
        }
        /**
         * <code>optional uint32 assists = 11;</code>
         */
        public Builder setAssists(int value) {
          bitField0_ |= 0x00000400;
          assists_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 assists = 11;</code>
         */
        public Builder clearAssists() {
          bitField0_ = (bitField0_ & ~0x00000400);
          assists_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 respawn_time = 12;
        private int respawnTime_ ;
        /**
         * <code>optional uint32 respawn_time = 12;</code>
         */
        public boolean hasRespawnTime() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional uint32 respawn_time = 12;</code>
         */
        public int getRespawnTime() {
          return respawnTime_;
        }
        /**
         * <code>optional uint32 respawn_time = 12;</code>
         */
        public Builder setRespawnTime(int value) {
          bitField0_ |= 0x00000800;
          respawnTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 respawn_time = 12;</code>
         */
        public Builder clearRespawnTime() {
          bitField0_ = (bitField0_ & ~0x00000800);
          respawnTime_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 ultimate_cooldown = 13;
        private int ultimateCooldown_ ;
        /**
         * <code>optional uint32 ultimate_cooldown = 13;</code>
         */
        public boolean hasUltimateCooldown() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional uint32 ultimate_cooldown = 13;</code>
         */
        public int getUltimateCooldown() {
          return ultimateCooldown_;
        }
        /**
         * <code>optional uint32 ultimate_cooldown = 13;</code>
         */
        public Builder setUltimateCooldown(int value) {
          bitField0_ |= 0x00001000;
          ultimateCooldown_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 ultimate_cooldown = 13;</code>
         */
        public Builder clearUltimateCooldown() {
          bitField0_ = (bitField0_ & ~0x00001000);
          ultimateCooldown_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 location_x = 14;
        private int locationX_ ;
        /**
         * <code>optional uint32 location_x = 14;</code>
         */
        public boolean hasLocationX() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional uint32 location_x = 14;</code>
         */
        public int getLocationX() {
          return locationX_;
        }
        /**
         * <code>optional uint32 location_x = 14;</code>
         */
        public Builder setLocationX(int value) {
          bitField0_ |= 0x00002000;
          locationX_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 location_x = 14;</code>
         */
        public Builder clearLocationX() {
          bitField0_ = (bitField0_ & ~0x00002000);
          locationX_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 location_y = 15;
        private int locationY_ ;
        /**
         * <code>optional uint32 location_y = 15;</code>
         */
        public boolean hasLocationY() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional uint32 location_y = 15;</code>
         */
        public int getLocationY() {
          return locationY_;
        }
        /**
         * <code>optional uint32 location_y = 15;</code>
         */
        public Builder setLocationY(int value) {
          bitField0_ |= 0x00004000;
          locationY_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 location_y = 15;</code>
         */
        public Builder clearLocationY() {
          bitField0_ = (bitField0_ & ~0x00004000);
          locationY_ = 0;
          onChanged();
          return this;
        }

        // repeated uint32 items = 16;
        private java.util.List<java.lang.Integer> items_ = java.util.Collections.emptyList();
        private void ensureItemsIsMutable() {
          if (!((bitField0_ & 0x00008000) == 0x00008000)) {
            items_ = new java.util.ArrayList<java.lang.Integer>(items_);
            bitField0_ |= 0x00008000;
           }
        }
        /**
         * <code>repeated uint32 items = 16;</code>
         */
        public java.util.List<java.lang.Integer>
            getItemsList() {
          return java.util.Collections.unmodifiableList(items_);
        }
        /**
         * <code>repeated uint32 items = 16;</code>
         */
        public int getItemsCount() {
          return items_.size();
        }
        /**
         * <code>repeated uint32 items = 16;</code>
         */
        public int getItems(int index) {
          return items_.get(index);
        }
        /**
         * <code>repeated uint32 items = 16;</code>
         */
        public Builder setItems(
            int index, int value) {
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 items = 16;</code>
         */
        public Builder addItems(int value) {
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 items = 16;</code>
         */
        public Builder addAllItems(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureItemsIsMutable();
          super.addAll(values, items_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 items = 16;</code>
         */
        public Builder clearItems() {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
          return this;
        }

        // repeated uint32 skill_history = 17;
        private java.util.List<java.lang.Integer> skillHistory_ = java.util.Collections.emptyList();
        private void ensureSkillHistoryIsMutable() {
          if (!((bitField0_ & 0x00010000) == 0x00010000)) {
            skillHistory_ = new java.util.ArrayList<java.lang.Integer>(skillHistory_);
            bitField0_ |= 0x00010000;
           }
        }
        /**
         * <code>repeated uint32 skill_history = 17;</code>
         */
        public java.util.List<java.lang.Integer>
            getSkillHistoryList() {
          return java.util.Collections.unmodifiableList(skillHistory_);
        }
        /**
         * <code>repeated uint32 skill_history = 17;</code>
         */
        public int getSkillHistoryCount() {
          return skillHistory_.size();
        }
        /**
         * <code>repeated uint32 skill_history = 17;</code>
         */
        public int getSkillHistory(int index) {
          return skillHistory_.get(index);
        }
        /**
         * <code>repeated uint32 skill_history = 17;</code>
         */
        public Builder setSkillHistory(
            int index, int value) {
          ensureSkillHistoryIsMutable();
          skillHistory_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 skill_history = 17;</code>
         */
        public Builder addSkillHistory(int value) {
          ensureSkillHistoryIsMutable();
          skillHistory_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 skill_history = 17;</code>
         */
        public Builder addAllSkillHistory(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureSkillHistoryIsMutable();
          super.addAll(values, skillHistory_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 skill_history = 17;</code>
         */
        public Builder clearSkillHistory() {
          skillHistory_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
          return this;
        }

        // repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;
        private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails> itemHistory_ =
          java.util.Collections.emptyList();
        private void ensureItemHistoryIsMutable() {
          if (!((bitField0_ & 0x00020000) == 0x00020000)) {
            itemHistory_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails>(itemHistory_);
            bitField0_ |= 0x00020000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetailsOrBuilder> itemHistoryBuilder_;

        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails> getItemHistoryList() {
          if (itemHistoryBuilder_ == null) {
            return java.util.Collections.unmodifiableList(itemHistory_);
          } else {
            return itemHistoryBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public int getItemHistoryCount() {
          if (itemHistoryBuilder_ == null) {
            return itemHistory_.size();
          } else {
            return itemHistoryBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails getItemHistory(int index) {
          if (itemHistoryBuilder_ == null) {
            return itemHistory_.get(index);
          } else {
            return itemHistoryBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public Builder setItemHistory(
            int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails value) {
          if (itemHistoryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureItemHistoryIsMutable();
            itemHistory_.set(index, value);
            onChanged();
          } else {
            itemHistoryBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public Builder setItemHistory(
            int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder builderForValue) {
          if (itemHistoryBuilder_ == null) {
            ensureItemHistoryIsMutable();
            itemHistory_.set(index, builderForValue.build());
            onChanged();
          } else {
            itemHistoryBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public Builder addItemHistory(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails value) {
          if (itemHistoryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureItemHistoryIsMutable();
            itemHistory_.add(value);
            onChanged();
          } else {
            itemHistoryBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public Builder addItemHistory(
            int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails value) {
          if (itemHistoryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureItemHistoryIsMutable();
            itemHistory_.add(index, value);
            onChanged();
          } else {
            itemHistoryBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public Builder addItemHistory(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder builderForValue) {
          if (itemHistoryBuilder_ == null) {
            ensureItemHistoryIsMutable();
            itemHistory_.add(builderForValue.build());
            onChanged();
          } else {
            itemHistoryBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public Builder addItemHistory(
            int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder builderForValue) {
          if (itemHistoryBuilder_ == null) {
            ensureItemHistoryIsMutable();
            itemHistory_.add(index, builderForValue.build());
            onChanged();
          } else {
            itemHistoryBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public Builder addAllItemHistory(
            java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails> values) {
          if (itemHistoryBuilder_ == null) {
            ensureItemHistoryIsMutable();
            super.addAll(values, itemHistory_);
            onChanged();
          } else {
            itemHistoryBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public Builder clearItemHistory() {
          if (itemHistoryBuilder_ == null) {
            itemHistory_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00020000);
            onChanged();
          } else {
            itemHistoryBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public Builder removeItemHistory(int index) {
          if (itemHistoryBuilder_ == null) {
            ensureItemHistoryIsMutable();
            itemHistory_.remove(index);
            onChanged();
          } else {
            itemHistoryBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder getItemHistoryBuilder(
            int index) {
          return getItemHistoryFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetailsOrBuilder getItemHistoryOrBuilder(
            int index) {
          if (itemHistoryBuilder_ == null) {
            return itemHistory_.get(index);  } else {
            return itemHistoryBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetailsOrBuilder> 
             getItemHistoryOrBuilderList() {
          if (itemHistoryBuilder_ != null) {
            return itemHistoryBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(itemHistory_);
          }
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder addItemHistoryBuilder() {
          return getItemHistoryFieldBuilder().addBuilder(
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder addItemHistoryBuilder(
            int index) {
          return getItemHistoryFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTARealtimeGameStats.ItemDetails item_history = 18;</code>
         */
        public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder> 
             getItemHistoryBuilderList() {
          return getItemHistoryFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetailsOrBuilder> 
            getItemHistoryFieldBuilder() {
          if (itemHistoryBuilder_ == null) {
            itemHistoryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.ItemDetailsOrBuilder>(
                    itemHistory_,
                    ((bitField0_ & 0x00020000) == 0x00020000),
                    getParentForChildren(),
                    isClean());
            itemHistory_ = null;
          }
          return itemHistoryBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTARealtimeGameStats.PlayerDetails)
      }

      static {
        defaultInstance = new PlayerDetails(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTARealtimeGameStats.PlayerDetails)
    }

    public interface DeathDetailsOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 player_id = 1;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      boolean hasPlayerId();
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      int getPlayerId();

      // optional uint32 death_time = 2;
      /**
       * <code>optional uint32 death_time = 2;</code>
       */
      boolean hasDeathTime();
      /**
       * <code>optional uint32 death_time = 2;</code>
       */
      int getDeathTime();

      // optional uint32 killer_player_id = 3;
      /**
       * <code>optional uint32 killer_player_id = 3;</code>
       */
      boolean hasKillerPlayerId();
      /**
       * <code>optional uint32 killer_player_id = 3;</code>
       */
      int getKillerPlayerId();
    }
    /**
     * Protobuf type {@code CMsgDOTARealtimeGameStats.DeathDetails}
     */
    public static final class DeathDetails extends
        com.google.protobuf.GeneratedMessage
        implements DeathDetailsOrBuilder {
      // Use DeathDetails.newBuilder() to construct.
      private DeathDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DeathDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DeathDetails defaultInstance;
      public static DeathDetails getDefaultInstance() {
        return defaultInstance;
      }

      public DeathDetails getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DeathDetails(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                playerId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                deathTime_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                killerPlayerId_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_DeathDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_DeathDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder.class);
      }

      public static com.google.protobuf.Parser<DeathDetails> PARSER =
          new com.google.protobuf.AbstractParser<DeathDetails>() {
        public DeathDetails parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DeathDetails(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DeathDetails> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 player_id = 1;
      public static final int PLAYER_ID_FIELD_NUMBER = 1;
      private int playerId_;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }

      // optional uint32 death_time = 2;
      public static final int DEATH_TIME_FIELD_NUMBER = 2;
      private int deathTime_;
      /**
       * <code>optional uint32 death_time = 2;</code>
       */
      public boolean hasDeathTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 death_time = 2;</code>
       */
      public int getDeathTime() {
        return deathTime_;
      }

      // optional uint32 killer_player_id = 3;
      public static final int KILLER_PLAYER_ID_FIELD_NUMBER = 3;
      private int killerPlayerId_;
      /**
       * <code>optional uint32 killer_player_id = 3;</code>
       */
      public boolean hasKillerPlayerId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 killer_player_id = 3;</code>
       */
      public int getKillerPlayerId() {
        return killerPlayerId_;
      }

      private void initFields() {
        playerId_ = 0;
        deathTime_ = 0;
        killerPlayerId_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, deathTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, killerPlayerId_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, deathTime_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, killerPlayerId_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTARealtimeGameStats.DeathDetails}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetailsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_DeathDetails_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_DeathDetails_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          playerId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          deathTime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          killerPlayerId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_DeathDetails_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.playerId_ = playerId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.deathTime_ = deathTime_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.killerPlayerId_ = killerPlayerId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.getDefaultInstance()) return this;
          if (other.hasPlayerId()) {
            setPlayerId(other.getPlayerId());
          }
          if (other.hasDeathTime()) {
            setDeathTime(other.getDeathTime());
          }
          if (other.hasKillerPlayerId()) {
            setKillerPlayerId(other.getKillerPlayerId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 player_id = 1;
        private int playerId_ ;
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public boolean hasPlayerId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public int getPlayerId() {
          return playerId_;
        }
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public Builder setPlayerId(int value) {
          bitField0_ |= 0x00000001;
          playerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public Builder clearPlayerId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          playerId_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 death_time = 2;
        private int deathTime_ ;
        /**
         * <code>optional uint32 death_time = 2;</code>
         */
        public boolean hasDeathTime() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 death_time = 2;</code>
         */
        public int getDeathTime() {
          return deathTime_;
        }
        /**
         * <code>optional uint32 death_time = 2;</code>
         */
        public Builder setDeathTime(int value) {
          bitField0_ |= 0x00000002;
          deathTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 death_time = 2;</code>
         */
        public Builder clearDeathTime() {
          bitField0_ = (bitField0_ & ~0x00000002);
          deathTime_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 killer_player_id = 3;
        private int killerPlayerId_ ;
        /**
         * <code>optional uint32 killer_player_id = 3;</code>
         */
        public boolean hasKillerPlayerId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 killer_player_id = 3;</code>
         */
        public int getKillerPlayerId() {
          return killerPlayerId_;
        }
        /**
         * <code>optional uint32 killer_player_id = 3;</code>
         */
        public Builder setKillerPlayerId(int value) {
          bitField0_ |= 0x00000004;
          killerPlayerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 killer_player_id = 3;</code>
         */
        public Builder clearKillerPlayerId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          killerPlayerId_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTARealtimeGameStats.DeathDetails)
      }

      static {
        defaultInstance = new DeathDetails(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTARealtimeGameStats.DeathDetails)
    }

    public interface BroadcasterDetailsOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 player_id = 1;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      boolean hasPlayerId();
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      int getPlayerId();

      // optional uint32 selected_hero = 2;
      /**
       * <code>optional uint32 selected_hero = 2;</code>
       */
      boolean hasSelectedHero();
      /**
       * <code>optional uint32 selected_hero = 2;</code>
       */
      int getSelectedHero();

      // optional uint32 selected_graph = 3;
      /**
       * <code>optional uint32 selected_graph = 3;</code>
       */
      boolean hasSelectedGraph();
      /**
       * <code>optional uint32 selected_graph = 3;</code>
       */
      int getSelectedGraph();
    }
    /**
     * Protobuf type {@code CMsgDOTARealtimeGameStats.BroadcasterDetails}
     */
    public static final class BroadcasterDetails extends
        com.google.protobuf.GeneratedMessage
        implements BroadcasterDetailsOrBuilder {
      // Use BroadcasterDetails.newBuilder() to construct.
      private BroadcasterDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BroadcasterDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BroadcasterDetails defaultInstance;
      public static BroadcasterDetails getDefaultInstance() {
        return defaultInstance;
      }

      public BroadcasterDetails getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BroadcasterDetails(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                playerId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                selectedHero_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                selectedGraph_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_BroadcasterDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_BroadcasterDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder.class);
      }

      public static com.google.protobuf.Parser<BroadcasterDetails> PARSER =
          new com.google.protobuf.AbstractParser<BroadcasterDetails>() {
        public BroadcasterDetails parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BroadcasterDetails(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BroadcasterDetails> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 player_id = 1;
      public static final int PLAYER_ID_FIELD_NUMBER = 1;
      private int playerId_;
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 player_id = 1;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }

      // optional uint32 selected_hero = 2;
      public static final int SELECTED_HERO_FIELD_NUMBER = 2;
      private int selectedHero_;
      /**
       * <code>optional uint32 selected_hero = 2;</code>
       */
      public boolean hasSelectedHero() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 selected_hero = 2;</code>
       */
      public int getSelectedHero() {
        return selectedHero_;
      }

      // optional uint32 selected_graph = 3;
      public static final int SELECTED_GRAPH_FIELD_NUMBER = 3;
      private int selectedGraph_;
      /**
       * <code>optional uint32 selected_graph = 3;</code>
       */
      public boolean hasSelectedGraph() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 selected_graph = 3;</code>
       */
      public int getSelectedGraph() {
        return selectedGraph_;
      }

      private void initFields() {
        playerId_ = 0;
        selectedHero_ = 0;
        selectedGraph_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, selectedHero_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, selectedGraph_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, playerId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, selectedHero_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, selectedGraph_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTARealtimeGameStats.BroadcasterDetails}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetailsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_BroadcasterDetails_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_BroadcasterDetails_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          playerId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          selectedHero_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          selectedGraph_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_BroadcasterDetails_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.playerId_ = playerId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.selectedHero_ = selectedHero_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.selectedGraph_ = selectedGraph_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.getDefaultInstance()) return this;
          if (other.hasPlayerId()) {
            setPlayerId(other.getPlayerId());
          }
          if (other.hasSelectedHero()) {
            setSelectedHero(other.getSelectedHero());
          }
          if (other.hasSelectedGraph()) {
            setSelectedGraph(other.getSelectedGraph());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 player_id = 1;
        private int playerId_ ;
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public boolean hasPlayerId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public int getPlayerId() {
          return playerId_;
        }
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public Builder setPlayerId(int value) {
          bitField0_ |= 0x00000001;
          playerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_id = 1;</code>
         */
        public Builder clearPlayerId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          playerId_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 selected_hero = 2;
        private int selectedHero_ ;
        /**
         * <code>optional uint32 selected_hero = 2;</code>
         */
        public boolean hasSelectedHero() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 selected_hero = 2;</code>
         */
        public int getSelectedHero() {
          return selectedHero_;
        }
        /**
         * <code>optional uint32 selected_hero = 2;</code>
         */
        public Builder setSelectedHero(int value) {
          bitField0_ |= 0x00000002;
          selectedHero_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 selected_hero = 2;</code>
         */
        public Builder clearSelectedHero() {
          bitField0_ = (bitField0_ & ~0x00000002);
          selectedHero_ = 0;
          onChanged();
          return this;
        }

        // optional uint32 selected_graph = 3;
        private int selectedGraph_ ;
        /**
         * <code>optional uint32 selected_graph = 3;</code>
         */
        public boolean hasSelectedGraph() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 selected_graph = 3;</code>
         */
        public int getSelectedGraph() {
          return selectedGraph_;
        }
        /**
         * <code>optional uint32 selected_graph = 3;</code>
         */
        public Builder setSelectedGraph(int value) {
          bitField0_ |= 0x00000004;
          selectedGraph_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 selected_graph = 3;</code>
         */
        public Builder clearSelectedGraph() {
          bitField0_ = (bitField0_ & ~0x00000004);
          selectedGraph_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTARealtimeGameStats.BroadcasterDetails)
      }

      static {
        defaultInstance = new BroadcasterDetails(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTARealtimeGameStats.BroadcasterDetails)
    }

    public interface PickBanDetailsOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional uint32 hero_id = 1;
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      boolean hasHeroId();
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      int getHeroId();

      // optional bool pick = 2;
      /**
       * <code>optional bool pick = 2;</code>
       */
      boolean hasPick();
      /**
       * <code>optional bool pick = 2;</code>
       */
      boolean getPick();
    }
    /**
     * Protobuf type {@code CMsgDOTARealtimeGameStats.PickBanDetails}
     */
    public static final class PickBanDetails extends
        com.google.protobuf.GeneratedMessage
        implements PickBanDetailsOrBuilder {
      // Use PickBanDetails.newBuilder() to construct.
      private PickBanDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PickBanDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PickBanDetails defaultInstance;
      public static PickBanDetails getDefaultInstance() {
        return defaultInstance;
      }

      public PickBanDetails getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PickBanDetails(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                heroId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                pick_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_PickBanDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_PickBanDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder.class);
      }

      public static com.google.protobuf.Parser<PickBanDetails> PARSER =
          new com.google.protobuf.AbstractParser<PickBanDetails>() {
        public PickBanDetails parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PickBanDetails(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PickBanDetails> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional uint32 hero_id = 1;
      public static final int HERO_ID_FIELD_NUMBER = 1;
      private int heroId_;
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 hero_id = 1;</code>
       */
      public int getHeroId() {
        return heroId_;
      }

      // optional bool pick = 2;
      public static final int PICK_FIELD_NUMBER = 2;
      private boolean pick_;
      /**
       * <code>optional bool pick = 2;</code>
       */
      public boolean hasPick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool pick = 2;</code>
       */
      public boolean getPick() {
        return pick_;
      }

      private void initFields() {
        heroId_ = 0;
        pick_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, heroId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, pick_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, heroId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, pick_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTARealtimeGameStats.PickBanDetails}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetailsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_PickBanDetails_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_PickBanDetails_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder.class);
        }

        // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          heroId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          pick_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_PickBanDetails_descriptor;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails getDefaultInstanceForType() {
          return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.getDefaultInstance();
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails build() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails buildPartial() {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.heroId_ = heroId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.pick_ = pick_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails) {
            return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails other) {
          if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.getDefaultInstance()) return this;
          if (other.hasHeroId()) {
            setHeroId(other.getHeroId());
          }
          if (other.hasPick()) {
            setPick(other.getPick());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional uint32 hero_id = 1;
        private int heroId_ ;
        /**
         * <code>optional uint32 hero_id = 1;</code>
         */
        public boolean hasHeroId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 hero_id = 1;</code>
         */
        public int getHeroId() {
          return heroId_;
        }
        /**
         * <code>optional uint32 hero_id = 1;</code>
         */
        public Builder setHeroId(int value) {
          bitField0_ |= 0x00000001;
          heroId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 hero_id = 1;</code>
         */
        public Builder clearHeroId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          heroId_ = 0;
          onChanged();
          return this;
        }

        // optional bool pick = 2;
        private boolean pick_ ;
        /**
         * <code>optional bool pick = 2;</code>
         */
        public boolean hasPick() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bool pick = 2;</code>
         */
        public boolean getPick() {
          return pick_;
        }
        /**
         * <code>optional bool pick = 2;</code>
         */
        public Builder setPick(boolean value) {
          bitField0_ |= 0x00000002;
          pick_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool pick = 2;</code>
         */
        public Builder clearPick() {
          bitField0_ = (bitField0_ & ~0x00000002);
          pick_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTARealtimeGameStats.PickBanDetails)
      }

      static {
        defaultInstance = new PickBanDetails(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTARealtimeGameStats.PickBanDetails)
    }

    private int bitField0_;
    // optional uint64 server_steam_id = 1;
    public static final int SERVER_STEAM_ID_FIELD_NUMBER = 1;
    private long serverSteamId_;
    /**
     * <code>optional uint64 server_steam_id = 1;</code>
     */
    public boolean hasServerSteamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 server_steam_id = 1;</code>
     */
    public long getServerSteamId() {
      return serverSteamId_;
    }

    // optional uint32 timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private int timestamp_;
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 timestamp = 2;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    // optional int32 game_time = 3;
    public static final int GAME_TIME_FIELD_NUMBER = 3;
    private int gameTime_;
    /**
     * <code>optional int32 game_time = 3;</code>
     */
    public boolean hasGameTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 game_time = 3;</code>
     */
    public int getGameTime() {
      return gameTime_;
    }

    // repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;
    public static final int PLAYERS_FIELD_NUMBER = 4;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails> players_;
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetailsOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetailsOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;
    public static final int DEATHS_FIELD_NUMBER = 5;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails> deaths_;
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails> getDeathsList() {
      return deaths_;
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetailsOrBuilder> 
        getDeathsOrBuilderList() {
      return deaths_;
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
     */
    public int getDeathsCount() {
      return deaths_.size();
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails getDeaths(int index) {
      return deaths_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetailsOrBuilder getDeathsOrBuilder(
        int index) {
      return deaths_.get(index);
    }

    // repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;
    public static final int BROADCASTERS_FIELD_NUMBER = 6;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails> broadcasters_;
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails> getBroadcastersList() {
      return broadcasters_;
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetailsOrBuilder> 
        getBroadcastersOrBuilderList() {
      return broadcasters_;
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
     */
    public int getBroadcastersCount() {
      return broadcasters_.size();
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails getBroadcasters(int index) {
      return broadcasters_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetailsOrBuilder getBroadcastersOrBuilder(
        int index) {
      return broadcasters_.get(index);
    }

    // repeated int32 gold_history = 7;
    public static final int GOLD_HISTORY_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> goldHistory_;
    /**
     * <code>repeated int32 gold_history = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getGoldHistoryList() {
      return goldHistory_;
    }
    /**
     * <code>repeated int32 gold_history = 7;</code>
     */
    public int getGoldHistoryCount() {
      return goldHistory_.size();
    }
    /**
     * <code>repeated int32 gold_history = 7;</code>
     */
    public int getGoldHistory(int index) {
      return goldHistory_.get(index);
    }

    // repeated int32 xp_history = 8;
    public static final int XP_HISTORY_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> xpHistory_;
    /**
     * <code>repeated int32 xp_history = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getXpHistoryList() {
      return xpHistory_;
    }
    /**
     * <code>repeated int32 xp_history = 8;</code>
     */
    public int getXpHistoryCount() {
      return xpHistory_.size();
    }
    /**
     * <code>repeated int32 xp_history = 8;</code>
     */
    public int getXpHistory(int index) {
      return xpHistory_.get(index);
    }

    // repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;
    public static final int PICKBANS_FIELD_NUMBER = 9;
    private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails> pickbans_;
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
     */
    public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails> getPickbansList() {
      return pickbans_;
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetailsOrBuilder> 
        getPickbansOrBuilderList() {
      return pickbans_;
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
     */
    public int getPickbansCount() {
      return pickbans_.size();
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails getPickbans(int index) {
      return pickbans_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
     */
    public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetailsOrBuilder getPickbansOrBuilder(
        int index) {
      return pickbans_.get(index);
    }

    private void initFields() {
      serverSteamId_ = 0L;
      timestamp_ = 0;
      gameTime_ = 0;
      players_ = java.util.Collections.emptyList();
      deaths_ = java.util.Collections.emptyList();
      broadcasters_ = java.util.Collections.emptyList();
      goldHistory_ = java.util.Collections.emptyList();
      xpHistory_ = java.util.Collections.emptyList();
      pickbans_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, serverSteamId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, gameTime_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(4, players_.get(i));
      }
      for (int i = 0; i < deaths_.size(); i++) {
        output.writeMessage(5, deaths_.get(i));
      }
      for (int i = 0; i < broadcasters_.size(); i++) {
        output.writeMessage(6, broadcasters_.get(i));
      }
      for (int i = 0; i < goldHistory_.size(); i++) {
        output.writeInt32(7, goldHistory_.get(i));
      }
      for (int i = 0; i < xpHistory_.size(); i++) {
        output.writeInt32(8, xpHistory_.get(i));
      }
      for (int i = 0; i < pickbans_.size(); i++) {
        output.writeMessage(9, pickbans_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, serverSteamId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameTime_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, players_.get(i));
      }
      for (int i = 0; i < deaths_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, deaths_.get(i));
      }
      for (int i = 0; i < broadcasters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, broadcasters_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < goldHistory_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(goldHistory_.get(i));
        }
        size += dataSize;
        size += 1 * getGoldHistoryList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < xpHistory_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(xpHistory_.get(i));
        }
        size += dataSize;
        size += 1 * getXpHistoryList().size();
      }
      for (int i = 0; i < pickbans_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, pickbans_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTARealtimeGameStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.class, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.Builder.class);
      }

      // Construct using skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
          getDeathsFieldBuilder();
          getBroadcastersFieldBuilder();
          getPickbansFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serverSteamId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playersBuilder_.clear();
        }
        if (deathsBuilder_ == null) {
          deaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          deathsBuilder_.clear();
        }
        if (broadcastersBuilder_ == null) {
          broadcasters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          broadcastersBuilder_.clear();
        }
        goldHistory_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        xpHistory_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        if (pickbansBuilder_ == null) {
          pickbans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          pickbansBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.internal_static_CMsgDOTARealtimeGameStats_descriptor;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats getDefaultInstanceForType() {
        return skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.getDefaultInstance();
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats build() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats buildPartial() {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats result = new skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serverSteamId_ = serverSteamId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gameTime_ = gameTime_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (deathsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            deaths_ = java.util.Collections.unmodifiableList(deaths_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.deaths_ = deaths_;
        } else {
          result.deaths_ = deathsBuilder_.build();
        }
        if (broadcastersBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            broadcasters_ = java.util.Collections.unmodifiableList(broadcasters_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.broadcasters_ = broadcasters_;
        } else {
          result.broadcasters_ = broadcastersBuilder_.build();
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          goldHistory_ = java.util.Collections.unmodifiableList(goldHistory_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.goldHistory_ = goldHistory_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          xpHistory_ = java.util.Collections.unmodifiableList(xpHistory_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.xpHistory_ = xpHistory_;
        if (pickbansBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            pickbans_ = java.util.Collections.unmodifiableList(pickbans_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.pickbans_ = pickbans_;
        } else {
          result.pickbans_ = pickbansBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats) {
          return mergeFrom((skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats other) {
        if (other == skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.getDefaultInstance()) return this;
        if (other.hasServerSteamId()) {
          setServerSteamId(other.getServerSteamId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasGameTime()) {
          setGameTime(other.getGameTime());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (deathsBuilder_ == null) {
          if (!other.deaths_.isEmpty()) {
            if (deaths_.isEmpty()) {
              deaths_ = other.deaths_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDeathsIsMutable();
              deaths_.addAll(other.deaths_);
            }
            onChanged();
          }
        } else {
          if (!other.deaths_.isEmpty()) {
            if (deathsBuilder_.isEmpty()) {
              deathsBuilder_.dispose();
              deathsBuilder_ = null;
              deaths_ = other.deaths_;
              bitField0_ = (bitField0_ & ~0x00000010);
              deathsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDeathsFieldBuilder() : null;
            } else {
              deathsBuilder_.addAllMessages(other.deaths_);
            }
          }
        }
        if (broadcastersBuilder_ == null) {
          if (!other.broadcasters_.isEmpty()) {
            if (broadcasters_.isEmpty()) {
              broadcasters_ = other.broadcasters_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureBroadcastersIsMutable();
              broadcasters_.addAll(other.broadcasters_);
            }
            onChanged();
          }
        } else {
          if (!other.broadcasters_.isEmpty()) {
            if (broadcastersBuilder_.isEmpty()) {
              broadcastersBuilder_.dispose();
              broadcastersBuilder_ = null;
              broadcasters_ = other.broadcasters_;
              bitField0_ = (bitField0_ & ~0x00000020);
              broadcastersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBroadcastersFieldBuilder() : null;
            } else {
              broadcastersBuilder_.addAllMessages(other.broadcasters_);
            }
          }
        }
        if (!other.goldHistory_.isEmpty()) {
          if (goldHistory_.isEmpty()) {
            goldHistory_ = other.goldHistory_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureGoldHistoryIsMutable();
            goldHistory_.addAll(other.goldHistory_);
          }
          onChanged();
        }
        if (!other.xpHistory_.isEmpty()) {
          if (xpHistory_.isEmpty()) {
            xpHistory_ = other.xpHistory_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureXpHistoryIsMutable();
            xpHistory_.addAll(other.xpHistory_);
          }
          onChanged();
        }
        if (pickbansBuilder_ == null) {
          if (!other.pickbans_.isEmpty()) {
            if (pickbans_.isEmpty()) {
              pickbans_ = other.pickbans_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePickbansIsMutable();
              pickbans_.addAll(other.pickbans_);
            }
            onChanged();
          }
        } else {
          if (!other.pickbans_.isEmpty()) {
            if (pickbansBuilder_.isEmpty()) {
              pickbansBuilder_.dispose();
              pickbansBuilder_ = null;
              pickbans_ = other.pickbans_;
              bitField0_ = (bitField0_ & ~0x00000100);
              pickbansBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPickbansFieldBuilder() : null;
            } else {
              pickbansBuilder_.addAllMessages(other.pickbans_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 server_steam_id = 1;
      private long serverSteamId_ ;
      /**
       * <code>optional uint64 server_steam_id = 1;</code>
       */
      public boolean hasServerSteamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 server_steam_id = 1;</code>
       */
      public long getServerSteamId() {
        return serverSteamId_;
      }
      /**
       * <code>optional uint64 server_steam_id = 1;</code>
       */
      public Builder setServerSteamId(long value) {
        bitField0_ |= 0x00000001;
        serverSteamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 server_steam_id = 1;</code>
       */
      public Builder clearServerSteamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serverSteamId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 timestamp = 2;
      private int timestamp_ ;
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      // optional int32 game_time = 3;
      private int gameTime_ ;
      /**
       * <code>optional int32 game_time = 3;</code>
       */
      public boolean hasGameTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 game_time = 3;</code>
       */
      public int getGameTime() {
        return gameTime_;
      }
      /**
       * <code>optional int32 game_time = 3;</code>
       */
      public Builder setGameTime(int value) {
        bitField0_ |= 0x00000004;
        gameTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 game_time = 3;</code>
       */
      public Builder clearGameTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameTime_ = 0;
        onChanged();
        return this;
      }

      // repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails>(players_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetailsOrBuilder> playersBuilder_;

      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public Builder setPlayers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public Builder setPlayers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public Builder addPlayers(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public Builder addPlayers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public Builder addPlayers(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public Builder addPlayers(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetailsOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetailsOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PlayerDetails players = 4;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetailsOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PlayerDetailsOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails> deaths_ =
        java.util.Collections.emptyList();
      private void ensureDeathsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          deaths_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails>(deaths_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetailsOrBuilder> deathsBuilder_;

      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails> getDeathsList() {
        if (deathsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(deaths_);
        } else {
          return deathsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public int getDeathsCount() {
        if (deathsBuilder_ == null) {
          return deaths_.size();
        } else {
          return deathsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails getDeaths(int index) {
        if (deathsBuilder_ == null) {
          return deaths_.get(index);
        } else {
          return deathsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public Builder setDeaths(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails value) {
        if (deathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeathsIsMutable();
          deaths_.set(index, value);
          onChanged();
        } else {
          deathsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public Builder setDeaths(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder builderForValue) {
        if (deathsBuilder_ == null) {
          ensureDeathsIsMutable();
          deaths_.set(index, builderForValue.build());
          onChanged();
        } else {
          deathsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public Builder addDeaths(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails value) {
        if (deathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeathsIsMutable();
          deaths_.add(value);
          onChanged();
        } else {
          deathsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public Builder addDeaths(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails value) {
        if (deathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDeathsIsMutable();
          deaths_.add(index, value);
          onChanged();
        } else {
          deathsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public Builder addDeaths(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder builderForValue) {
        if (deathsBuilder_ == null) {
          ensureDeathsIsMutable();
          deaths_.add(builderForValue.build());
          onChanged();
        } else {
          deathsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public Builder addDeaths(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder builderForValue) {
        if (deathsBuilder_ == null) {
          ensureDeathsIsMutable();
          deaths_.add(index, builderForValue.build());
          onChanged();
        } else {
          deathsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public Builder addAllDeaths(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails> values) {
        if (deathsBuilder_ == null) {
          ensureDeathsIsMutable();
          super.addAll(values, deaths_);
          onChanged();
        } else {
          deathsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public Builder clearDeaths() {
        if (deathsBuilder_ == null) {
          deaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          deathsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public Builder removeDeaths(int index) {
        if (deathsBuilder_ == null) {
          ensureDeathsIsMutable();
          deaths_.remove(index);
          onChanged();
        } else {
          deathsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder getDeathsBuilder(
          int index) {
        return getDeathsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetailsOrBuilder getDeathsOrBuilder(
          int index) {
        if (deathsBuilder_ == null) {
          return deaths_.get(index);  } else {
          return deathsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetailsOrBuilder> 
           getDeathsOrBuilderList() {
        if (deathsBuilder_ != null) {
          return deathsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(deaths_);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder addDeathsBuilder() {
        return getDeathsFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder addDeathsBuilder(
          int index) {
        return getDeathsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.DeathDetails deaths = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder> 
           getDeathsBuilderList() {
        return getDeathsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetailsOrBuilder> 
          getDeathsFieldBuilder() {
        if (deathsBuilder_ == null) {
          deathsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.DeathDetailsOrBuilder>(
                  deaths_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          deaths_ = null;
        }
        return deathsBuilder_;
      }

      // repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails> broadcasters_ =
        java.util.Collections.emptyList();
      private void ensureBroadcastersIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          broadcasters_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails>(broadcasters_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetailsOrBuilder> broadcastersBuilder_;

      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails> getBroadcastersList() {
        if (broadcastersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(broadcasters_);
        } else {
          return broadcastersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public int getBroadcastersCount() {
        if (broadcastersBuilder_ == null) {
          return broadcasters_.size();
        } else {
          return broadcastersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails getBroadcasters(int index) {
        if (broadcastersBuilder_ == null) {
          return broadcasters_.get(index);
        } else {
          return broadcastersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public Builder setBroadcasters(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails value) {
        if (broadcastersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBroadcastersIsMutable();
          broadcasters_.set(index, value);
          onChanged();
        } else {
          broadcastersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public Builder setBroadcasters(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder builderForValue) {
        if (broadcastersBuilder_ == null) {
          ensureBroadcastersIsMutable();
          broadcasters_.set(index, builderForValue.build());
          onChanged();
        } else {
          broadcastersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public Builder addBroadcasters(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails value) {
        if (broadcastersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBroadcastersIsMutable();
          broadcasters_.add(value);
          onChanged();
        } else {
          broadcastersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public Builder addBroadcasters(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails value) {
        if (broadcastersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBroadcastersIsMutable();
          broadcasters_.add(index, value);
          onChanged();
        } else {
          broadcastersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public Builder addBroadcasters(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder builderForValue) {
        if (broadcastersBuilder_ == null) {
          ensureBroadcastersIsMutable();
          broadcasters_.add(builderForValue.build());
          onChanged();
        } else {
          broadcastersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public Builder addBroadcasters(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder builderForValue) {
        if (broadcastersBuilder_ == null) {
          ensureBroadcastersIsMutable();
          broadcasters_.add(index, builderForValue.build());
          onChanged();
        } else {
          broadcastersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public Builder addAllBroadcasters(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails> values) {
        if (broadcastersBuilder_ == null) {
          ensureBroadcastersIsMutable();
          super.addAll(values, broadcasters_);
          onChanged();
        } else {
          broadcastersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public Builder clearBroadcasters() {
        if (broadcastersBuilder_ == null) {
          broadcasters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          broadcastersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public Builder removeBroadcasters(int index) {
        if (broadcastersBuilder_ == null) {
          ensureBroadcastersIsMutable();
          broadcasters_.remove(index);
          onChanged();
        } else {
          broadcastersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder getBroadcastersBuilder(
          int index) {
        return getBroadcastersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetailsOrBuilder getBroadcastersOrBuilder(
          int index) {
        if (broadcastersBuilder_ == null) {
          return broadcasters_.get(index);  } else {
          return broadcastersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetailsOrBuilder> 
           getBroadcastersOrBuilderList() {
        if (broadcastersBuilder_ != null) {
          return broadcastersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(broadcasters_);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder addBroadcastersBuilder() {
        return getBroadcastersFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder addBroadcastersBuilder(
          int index) {
        return getBroadcastersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.BroadcasterDetails broadcasters = 6;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder> 
           getBroadcastersBuilderList() {
        return getBroadcastersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetailsOrBuilder> 
          getBroadcastersFieldBuilder() {
        if (broadcastersBuilder_ == null) {
          broadcastersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.BroadcasterDetailsOrBuilder>(
                  broadcasters_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          broadcasters_ = null;
        }
        return broadcastersBuilder_;
      }

      // repeated int32 gold_history = 7;
      private java.util.List<java.lang.Integer> goldHistory_ = java.util.Collections.emptyList();
      private void ensureGoldHistoryIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          goldHistory_ = new java.util.ArrayList<java.lang.Integer>(goldHistory_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 gold_history = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getGoldHistoryList() {
        return java.util.Collections.unmodifiableList(goldHistory_);
      }
      /**
       * <code>repeated int32 gold_history = 7;</code>
       */
      public int getGoldHistoryCount() {
        return goldHistory_.size();
      }
      /**
       * <code>repeated int32 gold_history = 7;</code>
       */
      public int getGoldHistory(int index) {
        return goldHistory_.get(index);
      }
      /**
       * <code>repeated int32 gold_history = 7;</code>
       */
      public Builder setGoldHistory(
          int index, int value) {
        ensureGoldHistoryIsMutable();
        goldHistory_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gold_history = 7;</code>
       */
      public Builder addGoldHistory(int value) {
        ensureGoldHistoryIsMutable();
        goldHistory_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gold_history = 7;</code>
       */
      public Builder addAllGoldHistory(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGoldHistoryIsMutable();
        super.addAll(values, goldHistory_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gold_history = 7;</code>
       */
      public Builder clearGoldHistory() {
        goldHistory_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 xp_history = 8;
      private java.util.List<java.lang.Integer> xpHistory_ = java.util.Collections.emptyList();
      private void ensureXpHistoryIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          xpHistory_ = new java.util.ArrayList<java.lang.Integer>(xpHistory_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 xp_history = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getXpHistoryList() {
        return java.util.Collections.unmodifiableList(xpHistory_);
      }
      /**
       * <code>repeated int32 xp_history = 8;</code>
       */
      public int getXpHistoryCount() {
        return xpHistory_.size();
      }
      /**
       * <code>repeated int32 xp_history = 8;</code>
       */
      public int getXpHistory(int index) {
        return xpHistory_.get(index);
      }
      /**
       * <code>repeated int32 xp_history = 8;</code>
       */
      public Builder setXpHistory(
          int index, int value) {
        ensureXpHistoryIsMutable();
        xpHistory_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xp_history = 8;</code>
       */
      public Builder addXpHistory(int value) {
        ensureXpHistoryIsMutable();
        xpHistory_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xp_history = 8;</code>
       */
      public Builder addAllXpHistory(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXpHistoryIsMutable();
        super.addAll(values, xpHistory_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xp_history = 8;</code>
       */
      public Builder clearXpHistory() {
        xpHistory_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;
      private java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails> pickbans_ =
        java.util.Collections.emptyList();
      private void ensurePickbansIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          pickbans_ = new java.util.ArrayList<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails>(pickbans_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetailsOrBuilder> pickbansBuilder_;

      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails> getPickbansList() {
        if (pickbansBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pickbans_);
        } else {
          return pickbansBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public int getPickbansCount() {
        if (pickbansBuilder_ == null) {
          return pickbans_.size();
        } else {
          return pickbansBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails getPickbans(int index) {
        if (pickbansBuilder_ == null) {
          return pickbans_.get(index);
        } else {
          return pickbansBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public Builder setPickbans(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails value) {
        if (pickbansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePickbansIsMutable();
          pickbans_.set(index, value);
          onChanged();
        } else {
          pickbansBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public Builder setPickbans(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder builderForValue) {
        if (pickbansBuilder_ == null) {
          ensurePickbansIsMutable();
          pickbans_.set(index, builderForValue.build());
          onChanged();
        } else {
          pickbansBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public Builder addPickbans(skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails value) {
        if (pickbansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePickbansIsMutable();
          pickbans_.add(value);
          onChanged();
        } else {
          pickbansBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public Builder addPickbans(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails value) {
        if (pickbansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePickbansIsMutable();
          pickbans_.add(index, value);
          onChanged();
        } else {
          pickbansBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public Builder addPickbans(
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder builderForValue) {
        if (pickbansBuilder_ == null) {
          ensurePickbansIsMutable();
          pickbans_.add(builderForValue.build());
          onChanged();
        } else {
          pickbansBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public Builder addPickbans(
          int index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder builderForValue) {
        if (pickbansBuilder_ == null) {
          ensurePickbansIsMutable();
          pickbans_.add(index, builderForValue.build());
          onChanged();
        } else {
          pickbansBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public Builder addAllPickbans(
          java.lang.Iterable<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails> values) {
        if (pickbansBuilder_ == null) {
          ensurePickbansIsMutable();
          super.addAll(values, pickbans_);
          onChanged();
        } else {
          pickbansBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public Builder clearPickbans() {
        if (pickbansBuilder_ == null) {
          pickbans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          pickbansBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public Builder removePickbans(int index) {
        if (pickbansBuilder_ == null) {
          ensurePickbansIsMutable();
          pickbans_.remove(index);
          onChanged();
        } else {
          pickbansBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder getPickbansBuilder(
          int index) {
        return getPickbansFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetailsOrBuilder getPickbansOrBuilder(
          int index) {
        if (pickbansBuilder_ == null) {
          return pickbans_.get(index);  } else {
          return pickbansBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetailsOrBuilder> 
           getPickbansOrBuilderList() {
        if (pickbansBuilder_ != null) {
          return pickbansBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pickbans_);
        }
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder addPickbansBuilder() {
        return getPickbansFieldBuilder().addBuilder(
            skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder addPickbansBuilder(
          int index) {
        return getPickbansFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTARealtimeGameStats.PickBanDetails pickbans = 9;</code>
       */
      public java.util.List<skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder> 
           getPickbansBuilderList() {
        return getPickbansFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetailsOrBuilder> 
          getPickbansFieldBuilder() {
        if (pickbansBuilder_ == null) {
          pickbansBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetails.Builder, skadistats.clarity.wire.proto.DotaGcmessagesCommon.CMsgDOTARealtimeGameStats.PickBanDetailsOrBuilder>(
                  pickbans_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          pickbans_ = null;
        }
        return pickbansBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTARealtimeGameStats)
    }

    static {
      defaultInstance = new CMsgDOTARealtimeGameStats(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTARealtimeGameStats)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAGameAccountClient_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAGameAccountClient_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAPartyMember_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAPartyMember_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAParty_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAParty_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAPartyInvite_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAPartyInvite_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAPartyInvite_PartyMember_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAPartyInvite_PartyMember_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTALobbyInvite_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTALobbyInvite_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTALobbyInvite_LobbyMember_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTALobbyInvite_LobbyMember_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTASaveGame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTASaveGame_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTASaveGame_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTASaveGame_Player_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTASaveGame_SaveInstance_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTASaveGame_SaveInstance_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTASaveGame_SaveInstance_PlayerPositions_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgLeaverState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgLeaverState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTALobbyMember_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTALobbyMember_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CDOTALobbyMember_CDOTALobbyMemberXPBonus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDOTALobbyMember_CDOTALobbyMemberXPBonus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CLobbyTeamDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CLobbyTeamDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CLobbyTimedRewardDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CLobbyTimedRewardDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CLobbyBroadcastChannelInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CLobbyBroadcastChannelInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTALobby_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTALobby_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTALobby_CExtraMsg_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTALobby_CExtraMsg_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgLobbyEventPoints_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgLobbyEventPoints_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgLobbyEventPoints_AccountPoints_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgLobbyEventPoints_AccountPoints_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAGenericResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAGenericResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTABroadcastNotification_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTABroadcastNotification_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAPCBangTimedReward_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAPCBangTimedReward_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CAttribute_String_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CAttribute_String_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CAttribute_ItemDynamicRecipeComponent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CAttribute_ItemDynamicRecipeComponent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemHeroStatue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemHeroStatue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemTeamShowcase_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemTeamShowcase_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemSocket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemSocket_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemSocket_Empty_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemSocket_Empty_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemSocket_Effect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemSocket_Effect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemSocket_Color_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemSocket_Color_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemSocket_Strange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemSocket_Strange_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemSocket_Spectator_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemSocket_Spectator_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemSocket_AssetModifier_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemSocket_AssetModifier_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemSocket_Autograph_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemSocket_Autograph_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CProtoItemSocket_StaticVisuals_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CProtoItemSocket_StaticVisuals_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMatchPlayerAbilityUpgrade_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMatchPlayerAbilityUpgrade_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMatchAdditionalUnitInventory_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMatchAdditionalUnitInventory_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMatchHeroSelectEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMatchHeroSelectEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAProcessFantasyScheduledEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAProcessFantasyScheduledEvent_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAHasItemQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAHasItemQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAHasItemResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAHasItemResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAHasItemDefsQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAHasItemDefsQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAHasItemDefsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAHasItemDefsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAConsumeFantasyTicket_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAConsumeFantasyTicket_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAConsumeFantasyTicketFailure_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAConsumeFantasyTicketFailure_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCToGCFantasySetMatchLeague_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCToGCFantasySetMatchLeague_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAMapLocationState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAMapLocationState_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgNexonPartnerUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgNexonPartnerUpdate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgMakeOffering_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgMakeOffering_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgRequestOfferings_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgRequestOfferings_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgRequestOfferingsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgRequestOfferingsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgRequestOfferingsResponse_NewYearsOffering_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgRequestOfferingsResponse_NewYearsOffering_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgLeagueAdminList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgLeagueAdminList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgPerfectWorldUserLookupRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgPerfectWorldUserLookupRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgPerfectWorldUserLookupResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgPerfectWorldUserLookupResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CCompendiumTimestampedData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CCompendiumTimestampedData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CCompendiumGameTimeline_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CCompendiumGameTimeline_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CCompendiumGameList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CCompendiumGameList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CAdditionalEquipSlot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CAdditionalEquipSlot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARedeemItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARedeemItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARedeemItemResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARedeemItemResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTACombatLogEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTACombatLogEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAProfileCard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAProfileCard_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAProfileCard_Slot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAProfileCard_Slot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAProfileCard_Slot_Trophy_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAProfileCard_Slot_Trophy_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAProfileCard_Slot_Stat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAProfileCard_Slot_Stat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAProfileCard_Slot_Item_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAProfileCard_Slot_Item_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAProfileCard_Slot_Hero_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAProfileCard_Slot_Hero_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAProfileCard_Slot_Emoticon_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAProfileCard_Slot_Emoticon_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCToClientNewBloomTimingUpdated_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCToClientNewBloomTimingUpdated_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CSODOTAPlayerChallenge_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CSODOTAPlayerChallenge_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgClientToGCRerollPlayerChallenge_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgClientToGCRerollPlayerChallenge_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCRerollPlayerChallengeResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCRerollPlayerChallengeResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCToClientTopCustomGamesList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCToClientTopCustomGamesList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARealtimeGameStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARealtimeGameStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARealtimeGameStats_ItemDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARealtimeGameStats_ItemDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARealtimeGameStats_PlayerDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARealtimeGameStats_PlayerDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARealtimeGameStats_DeathDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARealtimeGameStats_DeathDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARealtimeGameStats_BroadcasterDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARealtimeGameStats_BroadcasterDetails_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTARealtimeGameStats_PickBanDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTARealtimeGameStats_PickBanDetails_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034dota_gcmessages_common.proto\032\023steammes" +
      "sages.proto\032\026gcsdk_gcmessages.proto\"\314\n\n\030" +
      "CSODOTAGameAccountClient\022\030\n\naccount_id\030\001" +
      " \001(\rB\004\200\246\035\001\022\014\n\004wins\030\003 \001(\r\022\016\n\006losses\030\004 \001(\r" +
      "\022\n\n\002xp\030\014 \001(\r\022\r\n\005level\030\r \001(\r\022\025\n\rinitial_s" +
      "kill\030\016 \001(\r\022\024\n\014leaver_count\030\017 \001(\r\022\036\n\026seco" +
      "ndary_leaver_count\030: \001(\r\022\037\n\027low_priority" +
      "_until_date\030\022 \001(\r\022$\n\034prevent_text_chat_u" +
      "ntil_date\030\024 \001(\r\022 \n\030prevent_voice_until_d" +
      "ate\030\025 \001(\r\022 \n\030last_abandoned_game_date\030\026 ",
      "\001(\r\022*\n\"last_secondary_abandoned_game_dat" +
      "e\030; \001(\r\022\034\n\024leaver_penalty_count\030\027 \001(\r\022\035\n" +
      "\025completed_game_streak\030\030 \001(\r\022\020\n\010teaching" +
      "\030\034 \001(\r\022\022\n\nleadership\030\035 \001(\r\022\020\n\010friendly\030\036" +
      " \001(\r\022\021\n\tforgiving\030\037 \001(\r\022#\n\033account_disab" +
      "led_until_date\030& \001(\r\022\036\n\026account_disabled" +
      "_count\030\' \001(\r\022\030\n\020showcase_hero_id\030( \001(\r\022!" +
      "\n\031match_disabled_until_date\030) \001(\r\022\034\n\024mat" +
      "ch_disabled_count\030* \001(\r\022?\n\024partner_accou" +
      "nt_type\030, \001(\0162\023.PartnerAccountType:\014PART",
      "NER_NONE\022\035\n\025partner_account_state\030- \001(\r\022" +
      "%\n\035shutdownlawterminatetimestamp\030/ \001(\r\022$" +
      "\n\034low_priority_games_remaining\0300 \001(\r\022\030\n\020" +
      "competitive_rank\0301 \001(\r\022#\n\033calibration_ga" +
      "mes_remaining\0303 \001(\r\022\035\n\025solo_competitive_" +
      "rank\0304 \001(\r\022(\n solo_calibration_games_rem" +
      "aining\0306 \001(\r\022\034\n\024competitive_1v1_rank\030? \001" +
      "(\r\0223\n+competitive_1v1_calibration_games_" +
      "remaining\030@ \001(\r\022\031\n\021recruitment_level\0307 \001" +
      "(\r\022\035\n\025has_new_notifications\0308 \001(\010\022\027\n\017is_",
      "league_admin\0309 \001(\010\022\033\n\023casual_games_playe" +
      "d\030< \001(\r\022%\n\035solo_competitive_games_played" +
      "\030= \001(\r\022&\n\036party_competitive_games_played" +
      "\030> \001(\r\022\037\n\027casual_1v1_games_played\030A \001(\r\022" +
      "%\n\035competitive_team_games_played\030B \001(\r\022\"" +
      "\n\032curr_all_hero_challenge_id\030C \001(\r\"_\n\022CS" +
      "ODOTAPartyMember\0227\n\014partner_type\030\001 \001(\0162\023" +
      ".PartnerAccountType:\014PARTNER_NONE\022\020\n\010is_" +
      "coach\030\002 \001(\010\"\334\007\n\014CSODOTAParty\022\026\n\010party_id" +
      "\030\001 \001(\004B\004\200\246\035\001\022\021\n\tleader_id\030\002 \001(\006\022\022\n\nmembe",
      "r_ids\030\003 \003(\006\022\022\n\ngame_modes\030\004 \001(\r\022&\n\005state" +
      "\030\006 \001(\0162\023.CSODOTAParty.State:\002UI\022*\n\"effec" +
      "tive_started_matchmaking_time\030\007 \001(\r\022$\n\034r" +
      "aw_started_matchmaking_time\030  \001(\r\022\032\n\022att" +
      "empt_start_time\030! \001(\r\022\023\n\013attempt_num\030\" \001" +
      "(\r\022\023\n\013matchgroups\030\013 \001(\r\022\037\n\027low_priority_" +
      "account_id\030\023 \001(\r\0221\n\nmatch_type\030\025 \001(\0162\n.M" +
      "atchType:\021MATCH_TYPE_CASUAL\022B\n\016bot_diffi" +
      "culty\030\026 \001(\0162\022.DOTABotDifficulty:\026BOT_DIF" +
      "FICULTY_PASSIVE\022\017\n\007team_id\030\027 \001(\r\022!\n\031matc",
      "h_disabled_until_date\030\030 \001(\r\022!\n\031match_dis" +
      "abled_account_id\030\031 \001(\r\022%\n\035matchmaking_ma" +
      "x_range_minutes\030\032 \001(\r\022\026\n\016matchlanguages\030" +
      "\033 \001(\r\022\026\n\016map_preference\030& \001(\r\022$\n\007members" +
      "\030\035 \003(\0132\023.CSODOTAPartyMember\022\025\n\ropen_guil" +
      "d_id\030\036 \001(\r\022\025\n\rcommon_guilds\030\037 \003(\r\022$\n\034low" +
      "_priority_games_remaining\030# \001(\r\022\021\n\tmin_l" +
      "evel\030$ \001(\r\022\021\n\tmax_level\030% \001(\r\022+\n\024active_" +
      "ingame_events\030\' \003(\0162\r.EIngameEvent\022\036\n\026op" +
      "en_for_join_requests\030( \001(\010\022)\n\014sent_invit",
      "es\030) \003(\0132\023.CSODOTAPartyInvite\022)\n\014recv_in" +
      "vites\030* \003(\0132\023.CSODOTAPartyInvite\"0\n\005Stat" +
      "e\022\006\n\002UI\020\000\022\021\n\rFINDING_MATCH\020\001\022\014\n\010IN_MATCH" +
      "\020\002\"\233\002\n\022CSODOTAPartyInvite\022\026\n\010group_id\030\001 " +
      "\001(\004B\004\200\246\035\001\022\021\n\tsender_id\030\002 \001(\006\022\023\n\013sender_n" +
      "ame\030\003 \001(\t\0220\n\007members\030\004 \003(\0132\037.CSODOTAPart" +
      "yInvite.PartyMember\022\017\n\007team_id\030\005 \001(\r\022\033\n\023" +
      "low_priority_status\030\006 \001(\010\022\020\n\010as_coach\030\007 " +
      "\001(\010\022\022\n\ninvite_gid\030\010 \001(\006\032?\n\013PartyMember\022\014" +
      "\n\004name\030\001 \001(\t\022\020\n\010steam_id\030\002 \001(\006\022\020\n\010is_coa",
      "ch\030\004 \001(\010\"\341\001\n\022CSODOTALobbyInvite\022\026\n\010group" +
      "_id\030\001 \001(\004B\004\200\246\035\001\022\021\n\tsender_id\030\002 \001(\006\022\023\n\013se" +
      "nder_name\030\003 \001(\t\0220\n\007members\030\004 \003(\0132\037.CSODO" +
      "TALobbyInvite.LobbyMember\022\026\n\016custom_game" +
      "_id\030\005 \001(\004\022\022\n\ninvite_gid\030\006 \001(\006\032-\n\013LobbyMe" +
      "mber\022\014\n\004name\030\001 \001(\t\022\020\n\010steam_id\030\002 \001(\006\"\316\003\n" +
      "\rCDOTASaveGame\022\020\n\010match_id\030\005 \001(\004\022\021\n\tsave" +
      "_time\030\002 \001(\r\022&\n\007players\030\003 \003(\0132\025.CDOTASave" +
      "Game.Player\0223\n\016save_instances\030\004 \003(\0132\033.CD" +
      "OTASaveGame.SaveInstance\032Y\n\006Player\0223\n\004te",
      "am\030\001 \001(\0162\r.DOTA_GC_TEAM:\026DOTA_GC_TEAM_GO" +
      "OD_GUYS\022\014\n\004name\030\002 \001(\t\022\014\n\004hero\030\003 \001(\t\032\337\001\n\014" +
      "SaveInstance\022\021\n\tgame_time\030\002 \001(\r\022\023\n\013team1" +
      "_score\030\003 \001(\r\022\023\n\013team2_score\030\004 \001(\r\022E\n\020pla" +
      "yer_positions\030\005 \003(\0132+.CDOTASaveGame.Save" +
      "Instance.PlayerPositions\022\017\n\007save_id\030\006 \001(" +
      "\r\022\021\n\tsave_time\030\007 \001(\r\032\'\n\017PlayerPositions\022" +
      "\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\"\325\001\n\017CMsgLeaverStat" +
      "e\022\023\n\013lobby_state\030\001 \001(\r\022>\n\ngame_state\030\002 \001" +
      "(\0162\017.DOTA_GameState:\031DOTA_GAMERULES_STAT",
      "E_INIT\022\027\n\017leaver_detected\030\003 \001(\010\022\034\n\024first" +
      "_blood_happened\030\004 \001(\010\022\035\n\025discard_match_r" +
      "esults\030\005 \001(\010\022\027\n\017mass_disconnect\030\006 \001(\010\"\222\006" +
      "\n\020CDOTALobbyMember\022\020\n\002id\030\001 \001(\006B\004\200\246\035\001\022\017\n\007" +
      "hero_id\030\002 \001(\r\0223\n\004team\030\003 \001(\0162\r.DOTA_GC_TE" +
      "AM:\026DOTA_GC_TEAM_GOOD_GUYS\022\014\n\004name\030\006 \001(\t" +
      "\022\014\n\004slot\030\007 \001(\r\022\020\n\010party_id\030\014 \001(\004\022\022\n\nmeta" +
      "_level\030\r \001(\r\022\017\n\007meta_xp\030\016 \001(\r\022\027\n\017meta_xp" +
      "_awarded\030\017 \001(\r\022<\n\rleaver_status\030\020 \001(\0162\023." +
      "DOTALeaverStatus_t:\020DOTA_LEAVER_NONE\022\026\n\016",
      "leaver_actions\030\034 \001(\r\022\017\n\007channel\030\021 \001(\r\022\027\n" +
      "\017prize_def_index\030\022 \001(\r\022\030\n\020disabled_hero_" +
      "id\030\024 \003(\r\022?\n\024partner_account_type\030\025 \001(\0162\023" +
      ".PartnerAccountType:\014PARTNER_NONE\022\027\n\017ena" +
      "bled_hero_id\030\026 \003(\r\0229\n\ncoach_team\030\027 \001(\0162\r" +
      ".DOTA_GC_TEAM:\026DOTA_GC_TEAM_GOOD_GUYS\022\030\n" +
      "\020nexon_pc_bang_no\030\030 \001(\r\022\032\n\022nexon_pc_bang" +
      "_name\030\031 \001(\t\022=\n\nxp_bonuses\030\033 \003(\0132).CDOTAL" +
      "obbyMember.CDOTALobbyMemberXPBonus\022\023\n\013ra" +
      "nk_change\030\035 \001(\021\022\021\n\tcameraman\030\036 \001(\010\022\037\n\027cu",
      "stom_game_product_ids\030\037 \003(\r\032M\n\027CDOTALobb" +
      "yMemberXPBonus\022\014\n\004type\030\001 \001(\r\022\020\n\010xp_bonus" +
      "\030\002 \001(\002\022\022\n\nsource_key\030\003 \001(\004\"\311\002\n\021CLobbyTea" +
      "mDetails\022\021\n\tteam_name\030\001 \001(\t\022\020\n\010team_tag\030" +
      "\003 \001(\t\022\017\n\007team_id\030\004 \001(\r\022\021\n\tteam_logo\030\005 \001(" +
      "\004\022\026\n\016team_base_logo\030\006 \001(\004\022\030\n\020team_banner" +
      "_logo\030\007 \001(\004\022\025\n\rteam_complete\030\010 \001(\010\022\022\n\ngu" +
      "ild_name\030\t \001(\t\022\021\n\tguild_tag\030\n \001(\t\022\020\n\010gui" +
      "ld_id\030\013 \001(\r\022\022\n\nguild_logo\030\014 \001(\004\022\027\n\017guild" +
      "_base_logo\030\r \001(\004\022\031\n\021guild_banner_logo\030\016 ",
      "\001(\004\022\014\n\004rank\030\017 \001(\r\022\023\n\013rank_change\030\020 \001(\021\"\206" +
      "\001\n\030CLobbyTimedRewardDetails\022\026\n\016item_def_" +
      "index\030\002 \001(\r\022\027\n\017is_supply_crate\030\003 \001(\010\022\025\n\r" +
      "is_timed_drop\030\004 \001(\010\022\022\n\naccount_id\030\005 \001(\r\022" +
      "\016\n\006origin\030\006 \001(\r\"r\n\032CLobbyBroadcastChanne" +
      "lInfo\022\022\n\nchannel_id\030\001 \001(\r\022\024\n\014country_cod" +
      "e\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\025\n\rlanguage" +
      "_code\030\004 \001(\t\"\250\022\n\014CSODOTALobby\022\026\n\010lobby_id" +
      "\030\001 \001(\004B\004\200\246\035\001\022\"\n\007members\030\002 \003(\0132\021.CDOTALob" +
      "byMember\022\'\n\014left_members\030\007 \003(\0132\021.CDOTALo",
      "bbyMember\022\021\n\tleader_id\030\013 \001(\006\022\024\n\tserver_i" +
      "d\030\006 \001(\006:\0010\022\021\n\tgame_mode\030\003 \001(\r\022\027\n\017pending" +
      "_invites\030\n \003(\006\022&\n\005state\030\004 \001(\0162\023.CSODOTAL" +
      "obby.State:\002UI\022\017\n\007connect\030\005 \001(\t\0224\n\nlobby" +
      "_type\030\014 \001(\0162\027.CSODOTALobby.LobbyType:\007IN" +
      "VALID\022\024\n\014allow_cheats\030\r \001(\010\022\026\n\016fill_with" +
      "_bots\030\016 \001(\010\022\022\n\nintro_mode\030\017 \001(\010\022\021\n\tgame_" +
      "name\030\020 \001(\t\022(\n\014team_details\030\021 \003(\0132\022.CLobb" +
      "yTeamDetails\022\027\n\017tutorial_lesson\030\022 \001(\r\022\025\n" +
      "\rtournament_id\030\023 \001(\r\022\032\n\022tournament_game_",
      "id\030\024 \001(\r\022\030\n\rserver_region\030\025 \001(\r:\0010\022>\n\nga" +
      "me_state\030\026 \001(\0162\017.DOTA_GameState:\031DOTA_GA" +
      "MERULES_STATE_INIT\022\026\n\016num_spectators\030\027 \001" +
      "(\r\022\022\n\nmatchgroup\030\031 \001(\r\022.\n\007cm_pick\030\034 \001(\0162" +
      "\r.DOTA_CM_PICK:\016DOTA_CM_RANDOM\022\020\n\010match_" +
      "id\030\036 \001(\004\022\036\n\020allow_spectating\030\037 \001(\010:\004true" +
      "\022?\n\016bot_difficulty\030$ \001(\0162\022.DOTABotDiffic" +
      "ulty:\023BOT_DIFFICULTY_HARD\022<\n\014game_versio" +
      "n\030% \001(\0162\020.DOTAGameVersion:\024GAME_VERSION_" +
      "CURRENT\0227\n\024timed_reward_details\030& \003(\0132\031.",
      "CLobbyTimedRewardDetails\022\020\n\010pass_key\030\' \001" +
      "(\t\022/\n\023bot_slot_difficulty\030) \003(\0162\022.DOTABo" +
      "tDifficulty\022\020\n\010leagueid\030* \001(\r\022 \n\025penalty" +
      "_level_radiant\030+ \001(\r:\0010\022\035\n\022penalty_level" +
      "_dire\030, \001(\r:\0010\022\024\n\014load_game_id\030- \001(\r\022\023\n\013" +
      "series_type\030. \001(\r\022\033\n\023radiant_series_wins" +
      "\030/ \001(\r\022\030\n\020dire_series_wins\0300 \001(\r\022\026\n\016loot" +
      "_generated\0301 \001(\r\022\024\n\014loot_awarded\0302 \001(\r\022\026" +
      "\n\007allchat\0303 \001(\010:\005false\0228\n\rdota_tv_delay\030" +
      "5 \001(\0162\021.LobbyDotaTVDelay:\016LobbyDotaTV_10",
      "\022\030\n\020custom_game_mode\0306 \001(\t\022\027\n\017custom_map" +
      "_name\0307 \001(\t\022\031\n\021custom_difficulty\0308 \001(\r\022\013" +
      "\n\003lan\0309 \001(\010\022;\n\026broadcast_channel_info\030: " +
      "\003(\0132\033.CLobbyBroadcastChannelInfo\022\036\n\026firs" +
      "t_leaver_accountid\030; \001(\r\022\021\n\tseries_id\030< " +
      "\001(\r\022\024\n\014low_priority\030= \001(\010\022/\n\016extra_messa" +
      "ges\030> \003(\0132\027.CSODOTALobby.CExtraMsg\022!\n\tsa" +
      "ve_game\030? \001(\0132\016.CDOTASaveGame\022\034\n\024first_b" +
      "lood_happened\030A \001(\010\022>\n\rmatch_outcome\030F \001" +
      "(\0162\016.EMatchOutcome:\027k_EMatchOutcome_Unkn",
      "own\022\027\n\017mass_disconnect\030C \001(\010\022\026\n\016custom_g" +
      "ame_id\030D \001(\004\022+\n\024active_ingame_events\030E \003" +
      "(\0162\r.EIngameEvent\022\032\n\022custom_min_players\030" +
      "G \001(\r\022\032\n\022custom_max_players\030H \001(\r\0227\n\014par" +
      "tner_type\030I \001(\0162\023.PartnerAccountType:\014PA" +
      "RTNER_NONE\022&\n\036lan_host_ping_to_server_re" +
      "gion\030J \001(\r\032)\n\tCExtraMsg\022\n\n\002id\030\001 \001(\r\022\020\n\010c" +
      "ontents\030\002 \001(\014\"d\n\005State\022\006\n\002UI\020\000\022\013\n\007READYU" +
      "P\020\004\022\017\n\013SERVERSETUP\020\001\022\007\n\003RUN\020\002\022\014\n\010POSTGAM" +
      "E\020\003\022\014\n\010NOTREADY\020\005\022\020\n\014SERVERASSIGN\020\006\"\360\001\n\t",
      "LobbyType\022\024\n\007INVALID\020\377\377\377\377\377\377\377\377\377\001\022\020\n\014CASUA" +
      "L_MATCH\020\000\022\014\n\010PRACTICE\020\001\022\016\n\nTOURNAMENT\020\002\022" +
      "\022\n\016COOP_BOT_MATCH\020\004\022\025\n\021LEGACY_TEAM_MATCH" +
      "\020\005\022\033\n\027LEGACY_SOLO_QUEUE_MATCH\020\006\022\025\n\021COMPE" +
      "TITIVE_MATCH\020\007\022\024\n\020CASUAL_1V1_MATCH\020\010\022\023\n\017" +
      "WEEKEND_TOURNEY\020\t\022\023\n\017LOCAL_BOT_MATCH\020\n\"\310" +
      "\001\n\024CMsgLobbyEventPoints\022\020\n\010event_id\030\001 \001(" +
      "\r\022;\n\016account_points\030\002 \003(\0132#.CMsgLobbyEve" +
      "ntPoints.AccountPoints\032a\n\rAccountPoints\022" +
      "\022\n\naccount_id\030\001 \001(\r\022\025\n\rnormal_points\030\002 \001",
      "(\r\022\026\n\016premium_points\030\003 \001(\r\022\r\n\005owned\030\004 \001(" +
      "\010\"+\n\025CMsgDOTAGenericResult\022\022\n\007eresult\030\001 " +
      "\001(\r:\0012\"0\n\035CMsgDOTABroadcastNotification\022" +
      "\017\n\007message\030\001 \001(\t\"Q\n\031CMsgDOTAPCBangTimedR" +
      "eward\022\017\n\007persona\030\001 \001(\t\022\017\n\007itemdef\030\002 \001(\r\022" +
      "\022\n\npcbangname\030\003 \001(\t\"\"\n\021CAttribute_String" +
      "\022\r\n\005value\030\001 \001(\t\"\355\001\n%CAttribute_ItemDynam" +
      "icRecipeComponent\022\020\n\010item_def\030\001 \001(\r\022\024\n\014i" +
      "tem_quality\030\002 \001(\r\022\022\n\nitem_flags\030\003 \001(\r\022\031\n" +
      "\021attributes_string\030\004 \001(\t\022\022\n\nitem_count\030\005",
      " \001(\r\022\027\n\017items_fulfilled\030\006 \001(\r\022\023\n\013item_ra" +
      "rity\030\007 \001(\r\022\020\n\010lootlist\030\010 \001(\t\022\031\n\021fulfille" +
      "d_item_id\030\t \001(\004\"\271\001\n\024CProtoItemHeroStatue" +
      "\022\017\n\007hero_id\030\001 \001(\r\022\033\n\023status_effect_index" +
      "\030\002 \001(\r\022\025\n\rsequence_name\030\003 \001(\t\022\r\n\005cycle\030\004" +
      " \001(\002\022\020\n\010wearable\030\005 \003(\r\022\023\n\013inscription\030\006 " +
      "\001(\t\022\r\n\005style\030\007 \003(\r\022\027\n\017tournament_drop\030\010 " +
      "\001(\010\"\242\001\n\026CProtoItemTeamShowcase\022\017\n\007hero_i" +
      "d\030\001 \001(\r\022\033\n\023status_effect_index\030\002 \001(\r\022\025\n\r" +
      "sequence_name\030\003 \001(\t\022\r\n\005cycle\030\004 \001(\002\022\020\n\010we",
      "arable\030\005 \003(\r\022\023\n\013inscription\030\006 \001(\t\022\r\n\005sty" +
      "le\030\007 \003(\r\"\262\001\n\020CProtoItemSocket\022\017\n\007item_id" +
      "\030\001 \001(\004\022\026\n\016attr_def_index\030\002 \001(\r\022\025\n\rrequir" +
      "ed_type\030\003 \001(\r\022\025\n\rrequired_hero\030\004 \001(\t\022\025\n\r" +
      "gem_def_index\030\005 \001(\r\022\024\n\014not_tradable\030\006 \001(" +
      "\010\022\032\n\022required_item_slot\030\007 \001(\t\";\n\026CProtoI" +
      "temSocket_Empty\022!\n\006socket\030\001 \001(\0132\021.CProto" +
      "ItemSocket\"L\n\027CProtoItemSocket_Effect\022!\n" +
      "\006socket\030\001 \001(\0132\021.CProtoItemSocket\022\016\n\006effe" +
      "ct\030\002 \001(\r\"e\n\026CProtoItemSocket_Color\022!\n\006so",
      "cket\030\001 \001(\0132\021.CProtoItemSocket\022\013\n\003red\030\002 \001" +
      "(\r\022\r\n\005green\030\003 \001(\r\022\014\n\004blue\030\004 \001(\r\"j\n\030CProt" +
      "oItemSocket_Strange\022!\n\006socket\030\001 \001(\0132\021.CP" +
      "rotoItemSocket\022\024\n\014strange_type\030\002 \001(\r\022\025\n\r" +
      "strange_value\030\003 \001(\r\"\221\001\n\032CProtoItemSocket" +
      "_Spectator\022!\n\006socket\030\001 \001(\0132\021.CProtoItemS" +
      "ocket\022\024\n\014games_viewed\030\002 \001(\r\022\026\n\016corporati" +
      "on_id\030\003 \001(\r\022\021\n\tleague_id\030\004 \001(\r\022\017\n\007team_i" +
      "d\030\005 \001(\r\"[\n\036CProtoItemSocket_AssetModifie" +
      "r\022!\n\006socket\030\001 \001(\0132\021.CProtoItemSocket\022\026\n\016",
      "asset_modifier\030\002 \001(\r\"\247\001\n;CProtoItemSocke" +
      "t_AssetModifier_DESERIALIZE_FROM_STRING_" +
      "ONLY\022!\n\006socket\030\001 \001(\0132\021.CProtoItemSocket\022" +
      "\026\n\016asset_modifier\030\002 \001(\r\022\025\n\ranim_modifier" +
      "\030\003 \001(\r\022\026\n\016ability_effect\030\004 \001(\r\"h\n\032CProto" +
      "ItemSocket_Autograph\022!\n\006socket\030\001 \001(\0132\021.C" +
      "ProtoItemSocket\022\021\n\tautograph\030\002 \001(\t\022\024\n\014au" +
      "tograph_id\030\003 \001(\r\"C\n\036CProtoItemSocket_Sta" +
      "ticVisuals\022!\n\006socket\030\001 \001(\0132\021.CProtoItemS" +
      "ocket\";\n\032CMatchPlayerAbilityUpgrade\022\017\n\007a",
      "bility\030\001 \001(\r\022\014\n\004time\030\002 \001(\r\"A\n\035CMatchAddi" +
      "tionalUnitInventory\022\021\n\tunit_name\030\001 \001(\t\022\r" +
      "\n\005items\030\002 \003(\r\"G\n\025CMatchHeroSelectEvent\022\017" +
      "\n\007is_pick\030\001 \001(\010\022\014\n\004team\030\002 \001(\r\022\017\n\007hero_id" +
      "\030\003 \001(\r\"\213\001\n$CMsgDOTAProcessFantasySchedul" +
      "edEvent\022\r\n\005event\030\001 \001(\r\022\021\n\ttimestamp\030\002 \001(" +
      "\r\022\031\n\021fantasy_league_id\030\003 \001(\r\022\016\n\006season\030\004" +
      " \001(\r\022\026\n\016reference_data\030\005 \001(\r\";\n\024CMsgDOTA" +
      "HasItemQuery\022\022\n\naccount_id\030\001 \001(\r\022\017\n\007item" +
      "_id\030\002 \001(\004\"+\n\027CMsgDOTAHasItemResponse\022\020\n\010",
      "has_item\030\001 \001(\010\"C\n\030CMsgDOTAHasItemDefsQue" +
      "ry\022\022\n\naccount_id\030\001 \001(\r\022\023\n\013itemdef_ids\030\002 " +
      "\003(\r\"0\n\033CMsgDOTAHasItemDefsResponse\022\021\n\tha" +
      "s_items\030\001 \001(\010\"^\n\034CMsgDOTAConsumeFantasyT" +
      "icket\022\022\n\naccount_id\030\001 \001(\r\022\017\n\007item_id\030\002 \001" +
      "(\004\022\031\n\021fantasy_league_id\030\003 \001(\r\"e\n#CMsgDOT" +
      "AConsumeFantasyTicketFailure\022\022\n\naccount_" +
      "id\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\004\022\031\n\021fantasy_lea" +
      "gue_id\030\003 \001(\r\"F\n\037CMsgGCToGCFantasySetMatc" +
      "hLeague\022\020\n\010match_id\030\001 \001(\004\022\021\n\tleague_id\030\002",
      " \001(\r\"a\n\027CSODOTAMapLocationState\022\030\n\naccou" +
      "nt_id\030\001 \001(\rB\004\200\246\035\001\022\031\n\013location_id\030\002 \001(\005B\004" +
      "\200\246\035\001\022\021\n\tcompleted\030\003 \001(\010\"W\n\026CMsgNexonPart" +
      "nerUpdate\022\023\n\013messagetype\030\001 \001(\r\022\025\n\rtimere" +
      "maining\030\002 \001(\r\022\021\n\tterminate\030\003 \001(\010\"#\n\020CMsg" +
      "MakeOffering\022\017\n\007item_id\030\001 \001(\004\"\026\n\024CMsgReq" +
      "uestOfferings\"\254\001\n\034CMsgRequestOfferingsRe" +
      "sponse\022A\n\tofferings\030\001 \003(\0132..CMsgRequestO" +
      "fferingsResponse.NewYearsOffering\022\021\n\tcom" +
      "pleted\030\002 \001(\010\0326\n\020NewYearsOffering\022\021\n\tdef_",
      "index\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\004\"*\n\023CMsgLeag" +
      "ueAdminList\022\023\n\013account_ids\030\001 \003(\r\"6\n!CMsg" +
      "PerfectWorldUserLookupRequest\022\021\n\tuser_na" +
      "me\030\001 \001(\t\"\310\002\n\"CMsgPerfectWorldUserLookupR" +
      "esponse\022[\n\013result_code\030\001 \001(\0162/.CMsgPerfe" +
      "ctWorldUserLookupResponse.EResultCode:\025S" +
      "UCCESS_ACCOUNT_FOUND\022\022\n\naccount_id\030\002 \001(\r" +
      "\"\260\001\n\013EResultCode\022\031\n\025SUCCESS_ACCOUNT_FOUN" +
      "D\020\000\022\021\n\rERROR_UNKNOWN\020\001\022 \n\034ERROR_USER_NAM" +
      "E_WRONG_FORMAT\020\002\022(\n$ERROR_NO_PERFECT_WOR",
      "LD_ACCOUNT_FOUND\020\003\022\'\n#ERROR_NO_LINKED_ST" +
      "EAM_ACCOUNT_FOUND\020\004\"\200\001\n\032CCompendiumTimes" +
      "tampedData\022\021\n\tgame_time\030\001 \001(\r\022\013\n\003gpm\030\002 \001" +
      "(\r\022\013\n\003xpm\030\003 \001(\r\022\r\n\005kills\030\004 \001(\r\022\016\n\006deaths" +
      "\030\005 \001(\r\022\026\n\016item_purchases\030\006 \003(\r\"R\n\027CCompe" +
      "ndiumGameTimeline\022)\n\004data\030\001 \003(\0132\033.CCompe" +
      "ndiumTimestampedData\022\014\n\004tags\030\002 \003(\t\">\n\023CC" +
      "ompendiumGameList\022\'\n\005games\030\001 \003(\0132\030.CComp" +
      "endiumGameTimeline\"L\n\024CAdditionalEquipSl" +
      "ot\022\020\n\010class_id\030\001 \001(\r\022\017\n\007slot_id\030\002 \001(\r\022\021\n",
      "\tdef_index\030\003 \001(\r\"?\n\022CMsgDOTARedeemItem\022\023" +
      "\n\013currency_id\030\001 \001(\004\022\024\n\014purchase_def\030\002 \001(" +
      "\r\"\034\n\032CMsgDOTARedeemItemResponse\"\216\007\n\026CMsg" +
      "DOTACombatLogEntry\022:\n\004type\030\001 \001(\0162\025.DOTA_" +
      "COMBATLOG_TYPES:\025DOTA_COMBATLOG_DAMAGE\022\023" +
      "\n\013target_name\030\002 \001(\r\022\032\n\022target_source_nam" +
      "e\030\003 \001(\r\022\025\n\rattacker_name\030\004 \001(\r\022\032\n\022damage" +
      "_source_name\030\005 \001(\r\022\026\n\016inflictor_name\030\006 \001" +
      "(\r\022\034\n\024is_attacker_illusion\030\007 \001(\010\022\030\n\020is_a" +
      "ttacker_hero\030\010 \001(\010\022\032\n\022is_target_illusion",
      "\030\t \001(\010\022\026\n\016is_target_hero\030\n \001(\010\022\032\n\022is_vis" +
      "ible_radiant\030\013 \001(\010\022\027\n\017is_visible_dire\030\014 " +
      "\001(\010\022\r\n\005value\030\r \001(\r\022\016\n\006health\030\016 \001(\005\022\021\n\tti" +
      "mestamp\030\017 \001(\002\022\025\n\rstun_duration\030\020 \001(\002\022\025\n\r" +
      "slow_duration\030\021 \001(\002\022\034\n\024is_ability_toggle" +
      "_on\030\022 \001(\010\022\035\n\025is_ability_toggle_off\030\023 \001(\010" +
      "\022\025\n\rability_level\030\024 \001(\r\022\022\n\nlocation_x\030\025 " +
      "\001(\002\022\022\n\nlocation_y\030\026 \001(\002\022\023\n\013gold_reason\030\027" +
      " \001(\r\022\025\n\rtimestamp_raw\030\030 \001(\002\022\031\n\021modifier_" +
      "duration\030\031 \001(\002\022\021\n\txp_reason\030\032 \001(\r\022\021\n\tlas",
      "t_hits\030\033 \001(\r\022\025\n\rattacker_team\030\034 \001(\r\022\023\n\013t" +
      "arget_team\030\035 \001(\r\022\030\n\020obs_wards_placed\030\036 \001" +
      "(\r\022\026\n\016assist_player0\030\037 \001(\r\022\026\n\016assist_pla" +
      "yer1\030  \001(\r\022\026\n\016assist_player2\030! \001(\r\022\026\n\016as" +
      "sist_player3\030\" \001(\r\022\023\n\013stack_count\030# \001(\r\022" +
      "\027\n\017hidden_modifier\030$ \001(\010\"\246\006\n\023CMsgDOTAPro" +
      "fileCard\022\022\n\naccount_id\030\001 \001(\r\022\034\n\024backgrou" +
      "nd_def_index\030\002 \001(\r\022(\n\005slots\030\003 \003(\0132\031.CMsg" +
      "DOTAProfileCard.Slot\032\234\004\n\004Slot\022\017\n\007slot_id" +
      "\030\001 \001(\r\0220\n\006trophy\030\002 \001(\0132 .CMsgDOTAProfile",
      "Card.Slot.Trophy\022,\n\004stat\030\003 \001(\0132\036.CMsgDOT" +
      "AProfileCard.Slot.Stat\022,\n\004item\030\004 \001(\0132\036.C" +
      "MsgDOTAProfileCard.Slot.Item\022,\n\004hero\030\005 \001" +
      "(\0132\036.CMsgDOTAProfileCard.Slot.Hero\0224\n\010em" +
      "oticon\030\006 \001(\0132\".CMsgDOTAProfileCard.Slot." +
      "Emoticon\0321\n\006Trophy\022\021\n\ttrophy_id\030\001 \001(\r\022\024\n" +
      "\014trophy_score\030\002 \001(\r\032[\n\004Stat\022?\n\007stat_id\030\001" +
      " \001(\0162\034.CMsgDOTAProfileCard.EStatID:\020k_eS" +
      "tat_SoloRank\022\022\n\nstat_score\030\002 \001(\r\032\037\n\004Item" +
      "\022\027\n\017serialized_item\030\001 \001(\014\032?\n\004Hero\022\017\n\007her",
      "o_id\030\001 \001(\r\022\021\n\thero_wins\030\002 \001(\r\022\023\n\013hero_lo" +
      "sses\030\003 \001(\r\032\037\n\010Emoticon\022\023\n\013emoticon_id\030\001 " +
      "\001(\r\"\223\001\n\007EStatID\022\024\n\020k_eStat_SoloRank\020\001\022\025\n" +
      "\021k_eStat_PartyRank\020\002\022\020\n\014k_eStat_Wins\020\003\022\024" +
      "\n\020k_eStat_Commends\020\004\022\027\n\023k_eStat_GamesPla" +
      "yed\020\005\022\032\n\026k_eStat_FirstMatchDate\020\006\"\237\001\n#CM" +
      "sgGCToClientNewBloomTimingUpdated\022\021\n\tis_" +
      "active\030\001 \001(\010\022\034\n\024next_transition_time\030\002 \001" +
      "(\r\022\024\n\014bonus_amount\030\003 \001(\r\022\030\n\020standby_dura" +
      "tion\030\004 \001(\r\022\027\n\017transition_time\030\005 \001(\r\"\266\002\n\026",
      "CSODOTAPlayerChallenge\022\030\n\naccount_id\030\001 \001" +
      "(\rB\004\200\246\035\001\022\026\n\010event_id\030\002 \001(\rB\004\200\246\035\001\022\025\n\007slot" +
      "_id\030\003 \001(\rB\004\200\246\035\001\022\026\n\016challenge_type\030\004 \001(\r\022" +
      "\023\n\013int_param_0\030\005 \001(\r\022\023\n\013int_param_1\030\006 \001(" +
      "\r\022\024\n\014created_time\030\007 \001(\r\022\021\n\tcompleted\030\010 \001" +
      "(\r\022\023\n\013sequence_id\030\t \001(\r\022\026\n\016challenge_tie" +
      "r\030\n \001(\r\022\r\n\005flags\030\013 \001(\r\",\n\006EFlags\022\"\n\036eFla" +
      "g_InstantRerollUncompleted\020\001\"L\n#CMsgClie" +
      "ntToGCRerollPlayerChallenge\022\020\n\010event_id\030" +
      "\001 \001(\r\022\023\n\013sequence_id\030\003 \001(\r\"\360\001\n#CMsgGCRer",
      "ollPlayerChallengeResponse\022M\n\006result\030\001 \001" +
      "(\0162,.CMsgGCRerollPlayerChallengeResponse" +
      ".EResult:\017eResult_Success\"z\n\007EResult\022\023\n\017" +
      "eResult_Success\020\000\022\023\n\017eResult_Dropped\020\001\022\024" +
      "\n\020eResult_NotFound\020\002\022\026\n\022eResult_CantRero" +
      "ll\020\003\022\027\n\023eResult_ServerError\020\004\"<\n CMsgGCT" +
      "oClientTopCustomGamesList\022\030\n\020top_custom_" +
      "games\030\001 \003(\004\"\217\010\n\031CMsgDOTARealtimeGameStat" +
      "s\022\027\n\017server_steam_id\030\001 \001(\004\022\021\n\ttimestamp\030" +
      "\002 \001(\r\022\021\n\tgame_time\030\003 \001(\005\0229\n\007players\030\004 \003(",
      "\0132(.CMsgDOTARealtimeGameStats.PlayerDeta" +
      "ils\0227\n\006deaths\030\005 \003(\0132\'.CMsgDOTARealtimeGa" +
      "meStats.DeathDetails\022C\n\014broadcasters\030\006 \003" +
      "(\0132-.CMsgDOTARealtimeGameStats.Broadcast" +
      "erDetails\022\024\n\014gold_history\030\007 \003(\005\022\022\n\nxp_hi" +
      "story\030\010 \003(\005\022;\n\010pickbans\030\t \003(\0132).CMsgDOTA" +
      "RealtimeGameStats.PickBanDetails\0325\n\013Item" +
      "Details\022\017\n\007item_id\030\001 \001(\r\022\025\n\rpurchase_tim" +
      "e\030\002 \001(\r\032\201\003\n\rPlayerDetails\022\021\n\tplayer_id\030\001" +
      " \001(\r\022\017\n\007hero_id\030\002 \001(\r\022\016\n\006health\030\003 \001(\r\022\022\n",
      "\nmax_health\030\004 \001(\r\022\014\n\004mana\030\005 \001(\r\022\020\n\010max_m" +
      "ana\030\006 \001(\r\022\r\n\005level\030\007 \001(\r\022\014\n\004gold\030\010 \001(\r\022\r" +
      "\n\005kills\030\t \001(\r\022\016\n\006deaths\030\n \001(\r\022\017\n\007assists" +
      "\030\013 \001(\r\022\024\n\014respawn_time\030\014 \001(\r\022\031\n\021ultimate" +
      "_cooldown\030\r \001(\r\022\022\n\nlocation_x\030\016 \001(\r\022\022\n\nl" +
      "ocation_y\030\017 \001(\r\022\r\n\005items\030\020 \003(\r\022\025\n\rskill_" +
      "history\030\021 \003(\r\022<\n\014item_history\030\022 \003(\0132&.CM" +
      "sgDOTARealtimeGameStats.ItemDetails\032O\n\014D" +
      "eathDetails\022\021\n\tplayer_id\030\001 \001(\r\022\022\n\ndeath_" +
      "time\030\002 \001(\r\022\030\n\020killer_player_id\030\003 \001(\r\032V\n\022",
      "BroadcasterDetails\022\021\n\tplayer_id\030\001 \001(\r\022\025\n" +
      "\rselected_hero\030\002 \001(\r\022\026\n\016selected_graph\030\003" +
      " \001(\r\032/\n\016PickBanDetails\022\017\n\007hero_id\030\001 \001(\r\022" +
      "\014\n\004pick\030\002 \001(\010*\227\253\001\n\nEDOTAGCMsg\022\025\n\020k_EMsgG" +
      "CDOTABase\020\3306\022\034\n\027k_EMsgGCGeneralResponse\020" +
      "\3316\022\035\n\030k_EMsgGCGameMatchSignOut\020\3346\022%\n k_E" +
      "MsgGCGameMatchSignOutResponse\020\3356\022\034\n\027k_EM" +
      "sgGCJoinChatChannel\020\3416\022$\n\037k_EMsgGCJoinCh" +
      "atChannelResponse\020\3426\022\037\n\032k_EMsgGCOtherJoi" +
      "nedChannel\020\3456\022\035\n\030k_EMsgGCOtherLeftChanne",
      "l\020\3466\022\035\n\030k_EMsgGCMatchHistoryList\020\3516\022\"\n\035k" +
      "_EMsgServerToGCRequestStatus\020\3626\022\035\n\030k_EMs" +
      "gGCGetRecentMatches\020\3636\022\"\n\035k_EMsgGCRecent" +
      "MatchesResponse\020\3646\022\036\n\031k_EMsgGCFindSource" +
      "TVGames\020\3676\022\"\n\035k_EMsgGCSourceTVGamesRespo" +
      "nse\020\3706\022\036\n\031k_EMsgGCStartFindingMatch\020\3716\022\035" +
      "\n\030k_EMsgGCConnectedPlayers\020\3726\022\037\n\032k_EMsgG" +
      "CAbandonCurrentGame\020\3736\022\035\n\030k_EMsgGCStopFi" +
      "ndingMatch\020\3746\022 \n\033k_EMsgGCPracticeLobbyCr" +
      "eate\020\3766\022\037\n\032k_EMsgGCPracticeLobbyLeave\020\2007",
      "\022 \n\033k_EMsgGCPracticeLobbyLaunch\020\2017\022\036\n\031k_" +
      "EMsgGCPracticeLobbyList\020\2027\022&\n!k_EMsgGCPr" +
      "acticeLobbyListResponse\020\2037\022\036\n\031k_EMsgGCPr" +
      "acticeLobbyJoin\020\2047\022$\n\037k_EMsgGCPracticeLo" +
      "bbySetDetails\020\2067\022%\n k_EMsgGCPracticeLobb" +
      "ySetTeamSlot\020\2077\022)\n$k_EMsgGCInitialQuesti" +
      "onnaireResponse\020\2117\022\036\n\031k_EMsgGCTournament" +
      "Request\020\2137\022\037\n\032k_EMsgGCTournamentResponse" +
      "\020\2147\022\"\n\035k_EMsgGCPracticeLobbyResponse\020\2177\022" +
      "\"\n\035k_EMsgGCBroadcastNotification\020\2207\022!\n\034k",
      "_EMsgGCLiveScoreboardUpdate\020\2217\022#\n\036k_EMsg" +
      "GCRequestChatChannelList\020\2247\022+\n&k_EMsgGCR" +
      "equestChatChannelListResponse\020\2257\022\033\n\026k_EM" +
      "sgGCRequestMatches\020\2307\022#\n\036k_EMsgGCRequest" +
      "MatchesResponse\020\2317\022#\n\036k_EMsgGCRequestPla" +
      "yerResources\020\2347\022+\n&k_EMsgGCRequestPlayer" +
      "ResourcesResponse\020\2357\022\024\n\017k_EMsgGCReadyUp\020" +
      "\2367\022\'\n\"k_EMsgGCKickedFromMatchmakingQueue" +
      "\020\2377\022\033\n\026k_EMsgGCLeaverDetected\020\2407\022\037\n\032k_EM" +
      "sgGCSpectateFriendGame\020\2417\022\'\n\"k_EMsgGCSpe",
      "ctateFriendGameResponse\020\2427\022\032\n\025k_EMsgGCPl" +
      "ayerReports\020\2437\022$\n\037k_EMsgGCReportsRemaini" +
      "ngRequest\020\2447\022%\n k_EMsgGCReportsRemaining" +
      "Response\020\2457\022\037\n\032k_EMsgGCSubmitPlayerRepor" +
      "t\020\2467\022\'\n\"k_EMsgGCSubmitPlayerReportRespon" +
      "se\020\2477\022\030\n\023k_EMsgGCGameChatLog\020\2507\022\036\n\031k_EMs" +
      "gGCPracticeLobbyKick\020\2517\022 \n\033k_EMsgGCRepor" +
      "tCountsRequest\020\2527\022!\n\034k_EMsgGCReportCount" +
      "sResponse\020\2537\022\035\n\030k_EMsgGCRequestSaveGames" +
      "\020\2547\022#\n\036k_EMsgGCRequestSaveGamesServer\020\2557",
      "\022%\n k_EMsgGCRequestSaveGamesResponse\020\2567\022" +
      "#\n\036k_EMsgGCLeaverDetectedResponse\020\2577\022\"\n\035" +
      "k_EMsgGCPlayerFailedToConnect\020\2607\022\035\n\030k_EM" +
      "sgGCGCToRelayConnect\020\2617\022%\n k_EMsgGCGCToR" +
      "elayConnectresponse\020\2627\022\026\n\021k_EMsgGCWatchG" +
      "ame\020\2637\022\036\n\031k_EMsgGCWatchGameResponse\020\2647\022\035" +
      "\n\030k_EMsgGCBanStatusRequest\020\2657\022\036\n\031k_EMsgG" +
      "CBanStatusResponse\020\2667\022 \n\033k_EMsgGCMatchDe" +
      "tailsRequest\020\2677\022!\n\034k_EMsgGCMatchDetailsR" +
      "esponse\020\2707\022\034\n\027k_EMsgGCCancelWatchGame\020\2717",
      "\022\033\n\026k_EMsgGCProfileRequest\020\2727\022\034\n\027k_EMsgG" +
      "CProfileResponse\020\2737\022\022\n\rk_EMsgGCPopup\020\2767\022" +
      ",\n\'k_EMsgGCDOTAClearNotifySuccessfulRepo" +
      "rt\020\3007\022\032\n\025k_EMsgGCGenericResult\020\3047\022+\n&k_E" +
      "MsgGCFriendPracticeLobbyListRequest\020\3077\022," +
      "\n\'k_EMsgGCFriendPracticeLobbyListRespons" +
      "e\020\3107\022&\n!k_EMsgGCPracticeLobbyJoinRespons" +
      "e\020\3117\022%\n k_EMsgClientEconNotification_Job" +
      "\020\3127\022\027\n\022k_EMsgGCCreateTeam\020\3137\022\037\n\032k_EMsgGC" +
      "CreateTeamResponse\020\3147\022\030\n\023k_EMsgGCDisband",
      "Team\020\3157\022 \n\033k_EMsgGCDisbandTeamResponse\020\316" +
      "7\022\034\n\027k_EMsgGCRequestTeamData\020\3177\022$\n\037k_EMs" +
      "gGCRequestTeamDataResponse\020\3207\022\025\n\020k_EMsgG" +
      "CTeamData\020\3217\022#\n\036k_EMsgGCTeamInvite_Invit" +
      "erToGC\020\3227\0224\n/k_EMsgGCTeamInvite_GCImmedi" +
      "ateResponseToInviter\020\3237\022*\n%k_EMsgGCTeamI" +
      "nvite_GCRequestToInvitee\020\3247\022+\n&k_EMsgGCT" +
      "eamInvite_InviteeResponseToGC\020\3257\022+\n&k_EM" +
      "sgGCTeamInvite_GCResponseToInviter\020\3267\022+\n" +
      "&k_EMsgGCTeamInvite_GCResponseToInvitee\020",
      "\3277\022\033\n\026k_EMsgGCKickTeamMember\020\3307\022#\n\036k_EMs" +
      "gGCKickTeamMemberResponse\020\3317\022\026\n\021k_EMsgGC" +
      "LeaveTeam\020\3327\022\036\n\031k_EMsgGCLeaveTeamRespons" +
      "e\020\3337\022#\n\036k_EMsgGCSuggestTeamMatchmaking\020\334" +
      "7\022%\n k_EMsgGCPlayerHeroesFavoritesAdd\020\3357" +
      "\022(\n#k_EMsgGCPlayerHeroesFavoritesRemove\020" +
      "\3367\022\031\n\024k_EMsgGCEditTeamLogo\020\3437\022!\n\034k_EMsgG" +
      "CEditTeamLogoResponse\020\3447\022\034\n\027k_EMsgGCSetS" +
      "howcaseHero\020\3457\022%\n k_EMsgGCApplyTeamToPra" +
      "cticeLobby\020\3467\022+\n&k_EMsgGCRequestInternat",
      "inalTicketEmail\020\3477\022\036\n\031k_EMsgGCTransferTe" +
      "amAdmin\020\3507\022 \n\033k_EMsgGCClearTournamentGam" +
      "e\020\3517\022\034\n\027k_EMsgRequestLeagueInfo\020\3537\022\035\n\030k_" +
      "EMsgResponseLeagueInfo\020\3547\022.\n)k_EMsgGCPra" +
      "cticeLobbyJoinBroadcastChannel\020\3557\022!\n\034k_E" +
      "MsgGC_TournamentItemEvent\020\3567\022)\n$k_EMsgGC" +
      "_TournamentItemEventResponse\020\3577\022\030\n\023k_EMs" +
      "gCastMatchVote\020\3607\022 \n\033k_EMsgCastMatchVote" +
      "Response\020\3617\022\034\n\027k_EMsgRetrieveMatchVote\020\362" +
      "7\022$\n\037k_EMsgRetrieveMatchVoteResponse\020\3637\022",
      "\026\n\021k_EMsgTeamFanfare\020\3647\022\036\n\031k_EMsgRespons" +
      "eTeamFanfare\020\3657\022&\n!k_EMsgGC_GameServerUp" +
      "loadSaveGame\020\3667\022&\n!k_EMsgGC_GameServerSa" +
      "veGameResult\020\3677\022#\n\036k_EMsgGC_GameServerGe" +
      "tLoadGame\020\3707\022)\n$k_EMsgGC_GameServerGetLo" +
      "adGameResult\020\3717\022\037\n\032k_EMsgGCTeamProfileRe" +
      "quest\020\3747\022 \n\033k_EMsgGCTeamProfileResponse\020" +
      "\3757\022\034\n\027k_EMsgGCEditTeamDetails\020\3767\022$\n\037k_EM" +
      "sgGCEditTeamDetailsResponse\020\3777\022\037\n\032k_EMsg" +
      "GCProTeamListRequest\020\2008\022 \n\033k_EMsgGCProTe",
      "amListResponse\020\2018\022\032\n\025k_EMsgGCReadyUpStat" +
      "us\020\2028\022\027\n\022k_EMsgGCHallOfFame\020\2038\022\036\n\031k_EMsg" +
      "GCHallOfFameRequest\020\2048\022\037\n\032k_EMsgGCHallOf" +
      "FameResponse\020\2058\022&\n!k_EMsgGCGenerateDiret" +
      "idePrizeList\020\2068\022!\n\034k_EMsgGCRewardDiretid" +
      "ePrizes\020\2108\022+\n&k_EMsgGCDiretidePrizesRewa" +
      "rdedResponse\020\2118\022&\n!k_EMsgGCHalloweenHigh" +
      "ScoreRequest\020\2128\022\'\n\"k_EMsgGCHalloweenHigh" +
      "ScoreResponse\020\2138\022.\n)k_EMsgGCGenerateDire" +
      "tidePrizeListResponse\020\2148\022#\n\036k_EMsgGCStor",
      "ePromoPagesRequest\020\2168\022$\n\037k_EMsgGCStorePr" +
      "omoPagesResponse\020\2178\022\035\n\030k_EMsgGCSpawnLoot" +
      "Greevil\020\2208\022\037\n\032k_EMsgGCDismissLootGreevil" +
      "\020\2218\022\037\n\032k_EMsgGCToGCMatchCompleted\020\2228\022\'\n\"" +
      "k_EMsgGCDismissLootGreevilResponse\020\2238\022!\n" +
      "\034k_EMsgGCBalancedShuffleLobby\020\2248\022&\n!k_EM" +
      "sgGCToGCCheckLeaguePermission\020\2258\022.\n)k_EM" +
      "sgGCToGCCheckLeaguePermissionResponse\020\2268" +
      "\022\"\n\035k_EMsgGCLeagueScheduleRequest\020\2278\022#\n\036" +
      "k_EMsgGCLeagueScheduleResponse\020\2308\022\037\n\032k_E",
      "MsgGCLeagueScheduleEdit\020\2318\022\'\n\"k_EMsgGCLe" +
      "agueScheduleEditResponse\020\2328\022\"\n\035k_EMsgGCL" +
      "eaguesInMonthRequest\020\2338\022#\n\036k_EMsgGCLeagu" +
      "esInMonthResponse\020\2348\022$\n\037k_EMsgGCMatchmak" +
      "ingStatsRequest\020\2358\022%\n k_EMsgGCMatchmakin" +
      "gStatsResponse\020\2368\022\032\n\025k_EMsgGCBotGameCrea" +
      "te\020\2378\022\"\n\035k_EMsgGCSetMatchHistoryAccess\020\240" +
      "8\022*\n%k_EMsgGCSetMatchHistoryAccessRespon" +
      "se\020\2418\022\034\n\027k_EMsgUpgradeLeagueItem\020\2438\022$\n\037k" +
      "_EMsgUpgradeLeagueItemResponse\020\2448\022%\n k_E",
      "MsgGCTeamMemberProfileRequest\020\2458\022\"\n\035k_EM" +
      "sgGCWatchDownloadedReplay\020\2468\022 \n\033k_EMsgGC" +
      "SetMapLocationState\020\2478\022(\n#k_EMsgGCSetMap" +
      "LocationStateResponse\020\2508\022\036\n\031k_EMsgGCRese" +
      "tMapLocations\020\2518\022&\n!k_EMsgGCResetMapLoca" +
      "tionsResponse\020\2528\022\032\n\025k_EMsgGCTeamOnProfil" +
      "e\020\2538\022\035\n\030k_EMsgGCSetFeaturedItems\020\2548\022\032\n\025k" +
      "_EMsgGCFeaturedItems\020\2578\022$\n\037k_EMsgRefresh" +
      "PartnerAccountLink\020\2608\022$\n\037k_EMsgClientsRe" +
      "joinChatChannels\020\2618\022 \n\033k_EMsgGCToGCGetUs",
      "erChatInfo\020\2628\022(\n#k_EMsgGCToGCGetUserChat" +
      "InfoResponse\020\2638\022%\n k_EMsgGCToGCLeaveAllC" +
      "hatChannels\020\2648\022%\n k_EMsgGCToGCUpdateAcco" +
      "untChatBan\020\2658\022\037\n\032k_EMsgGCGuildCreateRequ" +
      "est\020\2668\022 \n\033k_EMsgGCGuildCreateResponse\020\2678" +
      "\022\'\n\"k_EMsgGCGuildSetAccountRoleRequest\020\270" +
      "8\022(\n#k_EMsgGCGuildSetAccountRoleResponse" +
      "\020\2718\022\035\n\030k_EMsgGCRequestGuildData\020\2728\022\026\n\021k_" +
      "EMsgGCGuildData\020\2738\022&\n!k_EMsgGCGuildInvit" +
      "eAccountRequest\020\2748\022\'\n\"k_EMsgGCGuildInvit",
      "eAccountResponse\020\2758\022%\n k_EMsgGCGuildCanc" +
      "elInviteRequest\020\2768\022&\n!k_EMsgGCGuildCance" +
      "lInviteResponse\020\2778\022&\n!k_EMsgGCGuildUpdat" +
      "eDetailsRequest\020\3008\022\'\n\"k_EMsgGCGuildUpdat" +
      "eDetailsResponse\020\3018\022\036\n\031k_EMsgGCToGCCanIn" +
      "viteUser\020\3028\022&\n!k_EMsgGCToGCCanInviteUser" +
      "Response\020\3038\022\034\n\027k_EMsgGCToGCGetUserRank\020\304" +
      "8\022$\n\037k_EMsgGCToGCGetUserRankResponse\020\3058\022" +
      " \n\033k_EMsgGCToGCUpdateTeamStats\020\3108\022\034\n\027k_E" +
      "MsgGCToGCGetTeamRank\020\3118\022$\n\037k_EMsgGCToGCG",
      "etTeamRankResponse\020\3128\022 \n\033k_EMsgGCTeamIDB" +
      "yNameRequest\020\3158\022!\n\034k_EMsgGCTeamIDByNameR" +
      "esponse\020\3168\022\025\n\020k_EMsgGCEditTeam\020\3178\022 \n\033k_E" +
      "MsgGCPassportDataRequest\020\3208\022!\n\034k_EMsgGCP" +
      "assportDataResponse\020\3218\022\033\n\026k_EMsgGCNotInG" +
      "uildData\020\3238\022\034\n\027k_EMsgGCGuildInviteData\020\326" +
      "8\022\037\n\032k_EMsgGCToGCGetLeagueAdmin\020\3278\022\'\n\"k_" +
      "EMsgGCToGCGetLeagueAdminResponse\020\3308\022#\n\036k" +
      "_EMsgGCRequestLeaguePrizePool\020\3328\022+\n&k_EM" +
      "sgGCRequestLeaguePrizePoolResponse\020\3338\022,\n",
      "\'k_EMsgGCToGCUpdateOpenGuildPartyRequest" +
      "\020\3358\022-\n(k_EMsgGCToGCUpdateOpenGuildPartyR" +
      "esponse\020\3368\022-\n(k_EMsgGCToGCDestroyOpenGui" +
      "ldPartyRequest\020\3378\022.\n)k_EMsgGCToGCDestroy" +
      "OpenGuildPartyResponse\020\3408\022\037\n\032k_EMsgGCGui" +
      "ldUpdateMessage\020\3418\022%\n k_EMsgGCPartySetOp" +
      "enGuildRequest\020\3428\022&\n!k_EMsgGCPartySetOpe" +
      "nGuildResponse\020\3438\022\"\n\035k_EMsgGCGuildOpenPa" +
      "rtyRefresh\020\3448\022&\n!k_EMsgGCJoinOpenGuildPa" +
      "rtyRequest\020\3458\022\'\n\"k_EMsgGCJoinOpenGuildPa",
      "rtyResponse\020\3468\022\035\n\030k_EMsgGCLeaveChatChann" +
      "el\020\3508\022\030\n\023k_EMsgGCChatMessage\020\3518\022\035\n\030k_EMs" +
      "gGCGetHeroStandings\020\3528\022%\n k_EMsgGCGetHer" +
      "oStandingsResponse\020\3538\022!\n\034k_EMsgGCGuildEd" +
      "itLogoRequest\020\3578\022\"\n\035k_EMsgGCGuildEditLog" +
      "oResponse\020\3608\022.\n)k_EMsgGCGuildmatePractic" +
      "eLobbyListRequest\020\3618\022/\n*k_EMsgGCGuildmat" +
      "ePracticeLobbyListResponse\020\3628\022*\n%k_EMsgG" +
      "CItemEditorReservationsRequest\020\3638\022+\n&k_E" +
      "MsgGCItemEditorReservationsResponse\020\3648\022%",
      "\n k_EMsgGCItemEditorReserveItemDef\020\3658\022-\n" +
      "(k_EMsgGCItemEditorReserveItemDefRespons" +
      "e\020\3668\022)\n$k_EMsgGCItemEditorReleaseReserva" +
      "tion\020\3678\0221\n,k_EMsgGCItemEditorReleaseRese" +
      "rvationResponse\020\3708\022!\n\034k_EMsgGCRewardTuto" +
      "rialPrizes\020\3718\022*\n%k_EMsgGCLastHitChalleng" +
      "eHighScorePost\020\3728\022-\n(k_EMsgGCLastHitChal" +
      "lengeHighScoreRequest\020\3738\022.\n)k_EMsgGCLast" +
      "HitChallengeHighScoreResponse\020\3748\022\'\n\"k_EM" +
      "sgGCCreateFantasyLeagueRequest\020\3758\022(\n#k_E",
      "MsgGCCreateFantasyLeagueResponse\020\3768\022%\n k" +
      "_EMsgGCFantasyLeagueInfoRequest\020\2019\022&\n!k_" +
      "EMsgGCFantasyLeagueInfoResponse\020\2029\022\036\n\031k_" +
      "EMsgGCFantasyLeagueInfo\020\2039\022%\n k_EMsgGCCr" +
      "eateFantasyTeamRequest\020\2049\022&\n!k_EMsgGCCre" +
      "ateFantasyTeamResponse\020\2059\022#\n\036k_EMsgGCEdi" +
      "tFantasyTeamRequest\020\2069\022$\n\037k_EMsgGCEditFa" +
      "ntasyTeamResponse\020\2079\0224\n/k_EMsgGCFantasyT" +
      "eamInfoRequestByFantasyLeagueID\020\2109\0223\n.k_" +
      "EMsgGCFantasyTeamInfoRequestByOwnerAccou",
      "ntID\020\2119\022$\n\037k_EMsgGCFantasyTeamInfoRespon" +
      "se\020\2129\022\034\n\027k_EMsgGCFantasyTeamInfo\020\2139\022#\n\036k" +
      "_EMsgGCFantasyLivePlayerStats\020\2149\022$\n\037k_EM" +
      "sgGCFantasyFinalPlayerStats\020\2159\022\031\n\024k_EMsg" +
      "GCFantasyMatch\020\2169\022\037\n\032k_EMsgGCToGCReloadV" +
      "ersions\020\2179\022$\n\037k_EMsgGCFantasyTeamScoreRe" +
      "quest\020\2209\022%\n k_EMsgGCFantasyTeamScoreResp" +
      "onse\020\2219\022(\n#k_EMsgGCFantasyTeamStandingsR" +
      "equest\020\2229\022)\n$k_EMsgGCFantasyTeamStanding" +
      "sResponse\020\2239\022&\n!k_EMsgGCFantasyPlayerSco",
      "reRequest\020\2249\022\'\n\"k_EMsgGCFantasyPlayerSco" +
      "reResponse\020\2259\022*\n%k_EMsgGCFantasyPlayerSt" +
      "andingsRequest\020\2269\022+\n&k_EMsgGCFantasyPlay" +
      "erStandingsResponse\020\2279\022\033\n\026k_EMsgGCFlipLo" +
      "bbyTeams\020\2309\022\035\n\030k_EMsgGCCustomGameCreate\020" +
      "\2319\022%\n k_EMsgGCFantasyPlayerInfoRequest\020\232" +
      "9\022&\n!k_EMsgGCFantasyPlayerInfoResponse\020\233" +
      "9\022-\n(k_EMsgGCToGCProcessPlayerReportForT" +
      "arget\020\2349\022%\n k_EMsgGCToGCProcessReportSuc" +
      "cess\020\2359\022%\n k_EMsgGCNotifyAccountFlagsCha",
      "nge\020\2369\022\036\n\031k_EMsgGCSetProfilePrivacy\020\2379\022&" +
      "\n!k_EMsgGCSetProfilePrivacyResponse\020\2409\022 " +
      "\n\033k_EMsgGCSteamProfileRequest\020\2419\022(\n#k_EM" +
      "sgGCSteamProfileRequestResponse\020\2429\022+\n&k_" +
      "EMsgGCFantasyLeagueCreateInfoRequest\020\2439\022" +
      ",\n\'k_EMsgGCFantasyLeagueCreateInfoRespon" +
      "se\020\2449\022+\n&k_EMsgGCFantasyLeagueInviteInfo" +
      "Request\020\2459\022,\n\'k_EMsgGCFantasyLeagueInvit" +
      "eInfoResponse\020\2469\022\036\n\031k_EMsgGCClientIgnore" +
      "dUser\020\2479\022\'\n\"k_EMsgGCFantasyLeagueCreateR",
      "equest\020\2509\022(\n#k_EMsgGCFantasyLeagueCreate" +
      "Response\020\2519\022%\n k_EMsgGCFantasyTeamCreate" +
      "Request\020\2529\022&\n!k_EMsgGCFantasyTeamCreateR" +
      "esponse\020\2539\022/\n*k_EMsgGCFantasyLeagueFrien" +
      "dJoinListRequest\020\2549\0220\n+k_EMsgGCFantasyLe" +
      "agueFriendJoinListResponse\020\2559\022\034\n\027k_EMsgG" +
      "CClientSuspended\020\2569\022 \n\033k_EMsgGCPartyMemb" +
      "erSetCoach\020\2579\022,\n\'k_EMsgGCFantasyLeagueEd" +
      "itInvitesRequest\020\2609\022-\n(k_EMsgGCFantasyLe" +
      "agueEditInvitesResponse\020\2619\022\"\n\035k_EMsgGCPr",
      "acticeLobbySetCoach\020\2629\022)\n$k_EMsgGCFantas" +
      "yLeagueEditInfoRequest\020\2639\022*\n%k_EMsgGCFan" +
      "tasyLeagueEditInfoResponse\020\2649\022,\n\'k_EMsgG" +
      "CFantasyLeagueDraftStatusRequest\020\2659\022%\n k" +
      "_EMsgGCFantasyLeagueDraftStatus\020\2669\022,\n\'k_" +
      "EMsgGCFantasyLeagueDraftPlayerRequest\020\2679" +
      "\022-\n(k_EMsgGCFantasyLeagueDraftPlayerResp" +
      "onse\020\2709\022)\n$k_EMsgGCFantasyLeagueMatchups" +
      "Request\020\2719\022*\n%k_EMsgGCFantasyLeagueMatch" +
      "upsResponse\020\2729\022)\n$k_EMsgGCFantasyTeamRos",
      "terSwapRequest\020\2739\022*\n%k_EMsgGCFantasyTeam" +
      "RosterSwapResponse\020\2749\022%\n k_EMsgGCFantasy" +
      "TeamRosterRequest\020\2759\022&\n!k_EMsgGCFantasyT" +
      "eamRosterResponse\020\2769\022\037\n\032k_EMsgGCNexonPar" +
      "tnerUpdate\020\2779\022*\n%k_EMsgGCToGCProcessPCBa" +
      "ngRewardPoints\020\3009\022,\n\'k_EMsgGCFantasyTeam" +
      "RosterAddDropRequest\020\3019\022-\n(k_EMsgGCFanta" +
      "syTeamRosterAddDropResponse\020\3029\022&\n!k_EMsg" +
      "PresentedClientTerminateDlg\020\3039\022/\n*k_EMsg" +
      "GCFantasyPlayerHisoricalStatsRequest\020\3049\022",
      "0\n+k_EMsgGCFantasyPlayerHisoricalStatsRe" +
      "sponse\020\3059\022%\n k_EMsgGCPCBangTimedRewardMe" +
      "ssage\020\3069\022,\n\'k_EMsgGCLobbyUpdateBroadcast" +
      "ChannelInfo\020\3079\022%\n k_EMsgGCFantasyTeamTra" +
      "desRequest\020\3109\022&\n!k_EMsgGCFantasyTeamTrad" +
      "esResponse\020\3119\022*\n%k_EMsgGCFantasyTeamTrad" +
      "eCancelRequest\020\3129\022+\n&k_EMsgGCFantasyTeam" +
      "TradeCancelResponse\020\3139\022$\n\037k_EMsgGCToGCGr" +
      "antTournamentItem\020\3149\022)\n$k_EMsgGCProcessF" +
      "antasyScheduledEvent\020\3159\022&\n!k_EMsgGCToGCG",
      "rantPCBangRewardItem\020\3169\022)\n$k_EMsgGCToGCU" +
      "pgradeTwitchViewerItems\020\3179\022\'\n\"k_EMsgGCTo" +
      "GCGetLiveMatchAffiliates\020\3209\022/\n*k_EMsgGCT" +
      "oGCGetLiveMatchAffiliatesResponse\020\3219\022*\n%" +
      "k_EMsgGCToGCUpdatePlayerPennantCounts\020\3229" +
      "\022\'\n\"k_EMsgGCToGCGetPlayerPennantCounts\020\323" +
      "9\022/\n*k_EMsgGCToGCGetPlayerPennantCountsR" +
      "esponse\020\3249\022.\n)k_EMsgGCGameMatchSignOutPe" +
      "rmissionRequest\020\3259\022/\n*k_EMsgGCGameMatchS" +
      "ignOutPermissionResponse\020\3269\022&\n!k_EMsgDOT",
      "AChatChannelMemberUpdate\020\3279\022\037\n\032k_EMsgDOT" +
      "AAwardEventPoints\020\3309\022\037\n\032k_EMsgDOTARedeem" +
      "EventPrize\020\3319\022\'\n\"k_EMsgDOTARedeemEventPr" +
      "izeResponse\020\3329\022\035\n\030k_EMsgDOTAGetEventPoin" +
      "ts\020\3339\022%\n k_EMsgDOTAGetEventPointsRespons" +
      "e\020\3349\022(\n#k_EMsgGCToGCSignoutAwardEventPoi" +
      "nts\020\3369\022!\n\034k_EMsgDOTASendFriendRecruits\020\341" +
      "9\022$\n\037k_EMsgDOTAFriendRecruitsRequest\020\3429\022" +
      "%\n k_EMsgDOTAFriendRecruitsResponse\020\3439\022/" +
      "\n*k_EMsgDOTAFriendRecruitInviteAcceptDec",
      "line\020\3449\022\'\n\"k_EMsgGCPartyLeaderWatchGameP" +
      "rompt\020\3459\022#\n\036k_EMsgDOTAFrostivusTimeElaps" +
      "ed\020\3469\022#\n\036k_EMsgGCToGCGrantEarnedLicense\020" +
      "\3479\022#\n\036k_EMsgDOTALiveLeagueGameUpdate\020\3529\022" +
      "\036\n\031k_EMsgDOTAChatGetUserList\020\3539\022&\n!k_EMs" +
      "gDOTAChatGetUserListResponse\020\3549\022#\n\036k_EMs" +
      "gGCCompendiumSetSelection\020\3559\022\"\n\035k_EMsgGC" +
      "CompendiumDataRequest\020\3569\022#\n\036k_EMsgGCComp" +
      "endiumDataResponse\020\3579\022$\n\037k_EMsgDOTAGetPl" +
      "ayerMatchHistory\020\3609\022,\n\'k_EMsgDOTAGetPlay",
      "erMatchHistoryResponse\020\3619\022$\n\037k_EMsgGCToG" +
      "CMatchmakingAddParty\020\3629\022\'\n\"k_EMsgGCToGCM" +
      "atchmakingRemoveParty\020\3639\022,\n\'k_EMsgGCToGC" +
      "MatchmakingRemoveAllParties\020\3649\022&\n!k_EMsg" +
      "GCToGCMatchmakingMatchFound\020\3659\022+\n&k_EMsg" +
      "GCToGCUpdateMatchManagementStats\020\3669\022\'\n\"k" +
      "_EMsgGCToGCUpdateMatchmakingStats\020\3679\022 \n\033" +
      "k_EMsgGCToServerPingRequest\020\3709\022!\n\034k_EMsg" +
      "GCToServerPingResponse\020\3719\022#\n\036k_EMsgGCToS" +
      "erverConsoleCommand\020\3729\022)\n$k_EMsgGCToGCUp",
      "dateLiveLeagueGameInfo\020\3749\022\031\n\024k_EMsgGCMak" +
      "eOffering\020\3779\022\035\n\030k_EMsgGCRequestOfferings" +
      "\020\200:\022%\n k_EMsgGCRequestOfferingsResponse\020" +
      "\201:\022#\n\036k_EMsgGCToGCProcessMatchLeaver\020\202:\022" +
      "!\n\034k_EMsgGCNotificationsRequest\020\203:\022\"\n\035k_" +
      "EMsgGCNotificationsResponse\020\204:\022#\n\036k_EMsg" +
      "GCToGCModifyNotification\020\205:\022$\n\037k_EMsgGCT" +
      "oGCSetNewNotifications\020\206:\022!\n\034k_EMsgGCToG" +
      "CSetIsLeagueAdmin\020\207:\022\035\n\030k_EMsgGCLeagueAd" +
      "minState\020\210:\022%\n k_EMsgGCToGCSendLeagueAdm",
      "inState\020\211:\022\034\n\027k_EMsgGCLeagueAdminList\020\212:" +
      "\022)\n$k_EMsgGCNotificationsMarkReadRequest" +
      "\020\213:\022\036\n\031k_EMsgGCFantasyMessageAdd\020\214:\022#\n\036k" +
      "_EMsgGCFantasyMessagesRequest\020\215:\022$\n\037k_EM" +
      "sgGCFantasyMessagesResponse\020\216:\022+\n&k_EMsg" +
      "GCFantasyScheduledMatchesRequest\020\217:\022,\n\'k" +
      "_EMsgGCFantasyScheduledMatchesResponse\020\220" +
      ":\022\"\n\035k_EMsgGCToGCGrantLeagueAccess\020\221:\022\034\n" +
      "\027k_EMsgGCEventGameCreate\020\223:\022*\n%k_EMsgGCP" +
      "erfectWorldUserLookupRequest\020\224:\022+\n&k_EMs",
      "gGCPerfectWorldUserLookupResponse\020\225:\022(\n#" +
      "k_EMsgGCToGCIncrementRecruitmentSDO\020\226:\022*" +
      "\n%k_EMsgGCToGCIncrementRecruitmentLevel\020" +
      "\227:\022\037\n\032k_EMsgGCFantasyRemoveOwner\020\230:\022\'\n\"k" +
      "_EMsgGCFantasyRemoveOwnerResponse\020\231:\022(\n#" +
      "k_EMsgGCRequestBatchPlayerResources\020\232:\0220" +
      "\n+k_EMsgGCRequestBatchPlayerResourcesRes" +
      "ponse\020\233:\022\"\n\035k_EMsgGCToGCSendUpdateLeague" +
      "s\020\234:\022+\n&k_EMsgGCCompendiumSetSelectionRe" +
      "sponse\020\235:\022\036\n\031k_EMsgGCPlayerInfoRequest\020\236",
      ":\022\027\n\022k_EMsgGCPlayerInfo\020\237:\022\035\n\030k_EMsgGCPl" +
      "ayerInfoSubmit\020\240:\022%\n k_EMsgGCPlayerInfoS" +
      "ubmitResponse\020\241:\022 \n\033k_EMsgGCToGCGetAccou" +
      "ntLevel\020\242:\022(\n#k_EMsgGCToGCGetAccountLeve" +
      "lResponse\020\243:\022\"\n\035k_EMsgGCToGCGetAccountPa" +
      "rtner\020\244:\022*\n%k_EMsgGCToGCGetAccountPartne" +
      "rResponse\020\245:\022\"\n\035k_EMsgGCToGCGetAccountPr" +
      "ofile\020\246:\022*\n%k_EMsgGCToGCGetAccountProfil" +
      "eResponse\020\247:\022(\n#k_EMsgDOTAGetWeekendTour" +
      "neySchedule\020\250:\022%\n k_EMsgDOTAWeekendTourn",
      "eySchedule\020\251:\022+\n&k_EMsgGCJoinableCustomG" +
      "ameModesRequest\020\252:\022,\n\'k_EMsgGCJoinableCu" +
      "stomGameModesResponse\020\253:\022)\n$k_EMsgGCJoin" +
      "ableCustomLobbiesRequest\020\254:\022*\n%k_EMsgGCJ" +
      "oinableCustomLobbiesResponse\020\255:\022!\n\034k_EMs" +
      "gGCQuickJoinCustomLobby\020\256:\022)\n$k_EMsgGCQu" +
      "ickJoinCustomLobbyResponse\020\257:\022&\n!k_EMsgG" +
      "CToGCGrantEventPointAction\020\260:\022\037\n\032k_EMsgS" +
      "erverGetEventPoints\020\261:\022\'\n\"k_EMsgServerGe" +
      "tEventPointsResponse\020\262:\022&\n!k_EMsgServerG",
      "rantSurveyPermission\020\263:\022.\n)k_EMsgServerG" +
      "rantSurveyPermissionResponse\020\264:\022$\n\037k_EMs" +
      "gClientProvideSurveyResult\020\265:\022\'\n\"k_EMsgG" +
      "CToGCSetCompendiumSelection\020\266:\022#\n\036k_EMsg" +
      "GCToGCUpdateTI4HeroQuest\020\270:\022\"\n\035k_EMsgGCC" +
      "ompendiumDataChanged\020\271:\022\'\n\"k_EMsgDOTAFan" +
      "tasyLeagueFindRequest\020\272:\022(\n#k_EMsgDOTAFa" +
      "ntasyLeagueFindResponse\020\273:\022\031\n\024k_EMsgGCHa" +
      "sItemQuery\020\274:\022\034\n\027k_EMsgGCHasItemResponse" +
      "\020\275:\022!\n\034k_EMsgGCConsumeFantasyTicket\020\276:\022(",
      "\n#k_EMsgGCConsumeFantasyTicketFailure\020\277:" +
      "\022)\n$k_EMsgGCToGCGrantEventPointActionMsg" +
      "\020\300:\022&\n!k_EMsgClientToGCTrackDialogResult" +
      "\020\301:\022&\n!k_EMsgGCFantasyLeaveLeagueRequest" +
      "\020\302:\022\'\n\"k_EMsgGCFantasyLeaveLeagueRespons" +
      "e\020\303:\022(\n#k_EMsgGCToGCGetCompendiumSelecti" +
      "ons\020\304:\0220\n+k_EMsgGCToGCGetCompendiumSelec" +
      "tionsResponse\020\305:\022)\n$k_EMsgServerToGCMatc" +
      "hConnectionStats\020\306:\022\'\n\"k_EMsgGCToClientT" +
      "ournamentItemDrop\020\307:\022$\n\037k_EMsgSQLDelayed",
      "GrantLeagueDrop\020\310:\022\'\n\"k_EMsgServerGCUpda" +
      "teSpectatorCount\020\311:\022-\n(k_EMsgDOTAStartDa" +
      "ilyHeroChallengeRequest\020\312:\022-\n(k_EMsgGCFa" +
      "ntasyPlayerScoreDetailsRequest\020\313:\022.\n)k_E" +
      "MsgGCFantasyPlayerScoreDetailsResponse\020\314" +
      ":\022\037\n\032k_EMsgGCToGCEmoticonUnlock\020\315:\022\033\n\026k_" +
      "EMsgSignOutDraftInfo\020\316:\022(\n#k_EMsgClientT" +
      "oGCEmoticonDataRequest\020\317:\022!\n\034k_EMsgGCToC" +
      "lientEmoticonData\020\320:\022?\n:k_EMsgGCPractice" +
      "LobbyToggleBroadcastChannelCameramanStat",
      "us\020\321:\022,\n\'k_EMsgGCToGCCreateWeekendTourne" +
      "yRequest\020\322:\022-\n(k_EMsgGCToGCCreateWeekend" +
      "TourneyResponse\020\323:\022!\n\034k_EMsgGCHeroPickSt" +
      "atsRequest\020\324:\022\"\n\035k_EMsgGCHeroPickStatsRe" +
      "sponse\020\325:\022*\n%k_EMsgGCToGCCreateGenericTe" +
      "amsRequest\020\326:\022+\n&k_EMsgGCToGCCreateGener" +
      "icTeamsResponse\020\327:\022%\n k_EMsgSQLLaunchOne" +
      "WeekendTourney\020\330:\022(\n#k_EMsgClientToGCSet" +
      "AdditionalEquips\020\331:\022(\n#k_EMsgClientToGCG" +
      "etAdditionalEquips\020\332:\0220\n+k_EMsgClientToG",
      "CGetAdditionalEquipsResponse\020\333:\022(\n#k_EMs" +
      "gServerToGCGetAdditionalEquips\020\334:\0220\n+k_E" +
      "MsgServerToGCGetAdditionalEquipsResponse" +
      "\020\335:\022\031\n\024k_EMsgDOTARedeemItem\020\336:\022!\n\034k_EMsg" +
      "DOTARedeemItemResponse\020\337:\022(\n#k_EMsgSQLGC" +
      "ToGCGrantAllHeroProgress\020\340:\022\'\n\"k_EMsgCli" +
      "entToGCGetAllHeroProgress\020\341:\022/\n*k_EMsgCl" +
      "ientToGCGetAllHeroProgressResponse\020\342:\022#\n" +
      "\036k_EMsgGCToGCGetServerForClient\020\343:\022+\n&k_" +
      "EMsgGCToGCGetServerForClientResponse\020\344:\022",
      "*\n%k_EMsgSQLProcessTournamentGameOutcome" +
      "\020\345:\022\"\n\035k_EMsgSQLGrantTrophyToAccount\020\346:\022" +
      "\"\n\035k_EMsgClientToGCGetTrophyList\020\347:\022*\n%k" +
      "_EMsgClientToGCGetTrophyListResponse\020\350:\022" +
      "\"\n\035k_EMsgGCToClientTrophyAwarded\020\351:\022 \n\033k" +
      "_EMsgGCGameBotMatchSignOut\020\352:\0221\n,k_EMsgG" +
      "CGameBotMatchSignOutPermissionRequest\020\353:" +
      "\022\031\n\024k_EMsgSignOutBotInfo\020\354:\022#\n\036k_EMsgGCT" +
      "oGCUpdateProfileCards\020\355:\022#\n\036k_EMsgClient" +
      "ToGCGetProfileCard\020\356:\022+\n&k_EMsgClientToG",
      "CGetProfileCardResponse\020\357:\022#\n\036k_EMsgServ" +
      "erToGCGetProfileCard\020\360:\022+\n&k_EMsgServerT" +
      "oGCGetProfileCardResponse\020\361:\022(\n#k_EMsgCl" +
      "ientToGCSetProfileCardSlots\020\362:\022\'\n\"k_EMsg" +
      "GCToClientProfileCardUpdated\020\363:\022\'\n\"k_EMs" +
      "gServerToGCVictoryPredictions\020\364:\022-\n(k_EM" +
      "sgClientToGCMarkNotificationListRead\020\366:\022" +
      ")\n$k_EMsgGCToClientNewNotificationAdded\020" +
      "\367:\022\'\n\"k_EMsgServerToGCSuspiciousActivity" +
      "\020\370:\022&\n!k_EMsgSignOutCommunicationSummary",
      "\020\371:\022+\n&k_EMsgServerToGCRequestStatus_Res" +
      "ponse\020\372:\022%\n k_EMsgClientToGCCreateHeroSt" +
      "atue\020\373:\022+\n&k_EMsgGCToClientHeroStatueCre" +
      "ateResult\020\374:\022&\n!k_EMsgGCGCToLANServerRel" +
      "ayConnect\020\375:\022&\n!k_EMsgSignOutAssassinMin" +
      "iGameInfo\020\376:\022\'\n\"k_EMsgServerToGCGetIngam" +
      "eEventData\020\377:\022/\n*k_EMsgGCToGCUpdateIngam" +
      "eEventDataBroadcast\020\200;\022-\n(k_EMsgGCToServ" +
      "erIngameEventData_OraclePA\020\201;\022(\n#k_EMsgS" +
      "erverToGCReportKillSummaries\020\202;\022$\n\037k_EMs",
      "gGCToGCReportKillSummaries\020\203;\022\'\n\"k_EMsgG" +
      "CToGCUpdateAssassinMinigame\020\204;\022&\n!k_EMsg" +
      "GCToGCFantasySetMatchLeague\020\205;\022*\n%k_EMsg" +
      "ClientToGCRecordCompendiumStats\020\206;\022(\n#k_" +
      "EMsgGCItemEditorRequestLeagueInfo\020\207;\022)\n$" +
      "k_EMsgGCItemEditorLeagueInfoResponse\020\210;\022" +
      "(\n#k_EMsgGCToGCUpdatePlayerPredictions\020\211" +
      ";\022%\n k_EMsgGCToServerPredictionResult\020\212;" +
      "\0220\n+k_EMsgServerToGCSignoutAwardAddition" +
      "alDrops\020\213;\022,\n\'k_EMsgGCToGCSignoutAwardAd",
      "ditionalDrops\020\214;\022\'\n\"k_EMsgGCToClientEven" +
      "tStatusChanged\020\215;\022\035\n\030k_EMsgGCHasItemDefs" +
      "Query\020\216;\022 \n\033k_EMsgGCHasItemDefsResponse\020" +
      "\217;\022,\n\'k_EMsgGCToGCReplayMonitorValidateR" +
      "eplay\020\221;\022-\n(k_EMsgClientToGCExchangeItem" +
      "sForOffering\020\222;\0225\n0k_EMsgClientToGCExcha" +
      "ngeItemsForOfferingResponse\020\223;\022\033\n\026k_EMsg" +
      "LobbyEventPoints\020\224;\022%\n k_EMsgGCToGCGetCu" +
      "stomGameTickets\020\225;\022-\n(k_EMsgGCToGCGetCus" +
      "tomGameTicketsResponse\020\226;\022*\n%k_EMsgGCToC",
      "lientNewBloomTimingUpdated\020\227;\022!\n\034k_EMsgG" +
      "CToGCCustomGamePlayed\020\230;\022\'\n\"k_EMsgGCToGC" +
      "GrantEventPointsToUser\020\231;\022)\n$k_EMsgGCToG" +
      "CSetEventMMPanicFlushTime\020\232;\022 \n\033k_EMsgGa" +
      "meserverCrashReport\020\233;\022(\n#k_EMsgGameserv" +
      "erCrashReportResponse\020\234;\022(\n#k_EMsgGCToCl" +
      "ientSteamDatagramTicket\020\235;\022$\n\037k_EMsgGCTo" +
      "GCGrantEventOwnership\020\236;\022(\n#k_EMsgGCToGC" +
      "SendAccountsEventPoints\020\237;\022*\n%k_EMsgClie" +
      "ntToGCRerollPlayerChallenge\020\240;\022*\n%k_EMsg",
      "ServerToGCRerollPlayerChallenge\020\241;\022*\n%k_" +
      "EMsgGCRerollPlayerChallengeResponse\020\242;\022\'" +
      "\n\"k_EMsgSignOutUpdatePlayerChallenge\020\243;\022" +
      "#\n\036k_EMsgClientToGCSetPartyLeader\020\244;\022\'\n\"" +
      "k_EMsgClientToGCCancelPartyInvites\020\245;\022$\n" +
      "\037k_EMsgGCToGCMasterReloadAccount\020\246;\022&\n!k" +
      "_EMsgSQLGCToGCGrantBackpackSlots\020\247;\022-\n(k" +
      "_EMsgSQLGrantLeagueMatchToTicketHolders\020" +
      "\250;\0220\n+k_EMsgClientToGCSetAdditionalEquip" +
      "sResponse\020\251;\022\035\n\030k_EMsgGCDev_GrantWarKill",
      "\020\301>\022\'\n\"k_EMsgClientToGCCreateTeamShowcas" +
      "e\020\302>\022-\n(k_EMsgGCToClientTeamShowcaseCrea" +
      "teResult\020\303>\022%\n k_EMsgServerToGCLockCharm" +
      "Trading\020\304>\022%\n k_EMsgDOTACNY2015EventPoin" +
      "tUsage\020\305>\022\'\n\"k_EMsgClientToGCPlayerStats" +
      "Request\020\306>\022(\n#k_EMsgGCToClientPlayerStat" +
      "sResponse\020\307>\022#\n\036k_EMsgGCClearPracticeLob" +
      "byTeam\020\310>\022)\n$k_EMsgClientToGCFindTopSour" +
      "ceTVGames\020\311>\0221\n,k_EMsgGCToClientFindTopS" +
      "ourceTVGamesResponse\020\312>\022\026\n\021k_EMsgGCLobby",
      "List\020\313>\022\036\n\031k_EMsgGCLobbyListResponse\020\314>\022" +
      "$\n\037k_EMsgGCPlayerStatsMatchSignOut\020\315>\0221\n" +
      ",k_EMsgClientToGCCustomGamePlayerCountRe" +
      "quest\020\316>\0222\n-k_EMsgGCToClientCustomGamePl" +
      "ayerCountResponse\020\317>\0221\n,k_EMsgClientToGC" +
      "SocialFeedPostCommentRequest\020\320>\0222\n-k_EMs" +
      "gGCToClientSocialFeedPostCommentResponse" +
      "\020\321>\0224\n/k_EMsgClientToGCCustomGamesFriend" +
      "sPlayedRequest\020\322>\0225\n0k_EMsgGCToClientCus" +
      "tomGamesFriendsPlayedResponse\020\323>\0223\n.k_EM",
      "sgClientToGCFriendsPlayedCustomGameReque" +
      "st\020\324>\0224\n/k_EMsgGCToClientFriendsPlayedCu" +
      "stomGameResponse\020\325>\022*\n%k_EMsgClientToGCF" +
      "eaturedHeroesRequest\020\326>\022+\n&k_EMsgGCToCli" +
      "entFeaturedHeroesResponse\020\327>\022\'\n\"k_EMsgGC" +
      "ToClientTopCustomGamesList\020\330>\0222\n-k_EMsgC" +
      "lientToGCSocialMatchPostCommentRequest\020\331" +
      ">\0223\n.k_EMsgGCToClientSocialMatchPostComm" +
      "entResponse\020\332>\022.\n)k_EMsgClientToGCSocial" +
      "MatchDetailsRequest\020\333>\022/\n*k_EMsgGCToClie",
      "ntSocialMatchDetailsResponse\020\334>\022!\n\034k_EMs" +
      "gClientToGCSetPartyOpen\020\335>\022%\n k_EMsgClie" +
      "ntToGCMergePartyInvite\020\336>\022*\n%k_EMsgGCToC" +
      "lientMergeGroupInviteReply\020\337>\022\'\n\"k_EMsgC" +
      "lientToGCMergePartyResponse\020\340>\022,\n\'k_EMsg" +
      "GCToClientMergePartyResponseReply\020\341>\022(\n#" +
      "k_EMsgClientToGCGetProfileCardStats\020\342>\0220" +
      "\n+k_EMsgClientToGCGetProfileCardStatsRes" +
      "ponse\020\343>\022,\n\'k_EMsgClientToGCTopLeagueMat" +
      "chesRequest\020\344>\022,\n\'k_EMsgClientToGCTopFri",
      "endMatchesRequest\020\345>\022\'\n\"k_EMsgGCToClient" +
      "TopMatchesResponse\020\346>\022)\n$k_EMsgClientToG" +
      "CTopPubMatchesRequest\020\347>\022,\n\'k_EMsgGCToCl" +
      "ientProfileCardStatsUpdated\020\350>\022\"\n\035k_EMsg" +
      "ServerToGCRealtimeStats\020\351>\022+\n&k_EMsgGCTo" +
      "ServerRealtimeStatsStartStop\020\352>\022*\n%k_EMs" +
      "gGCToClientDOTARealtimeGameStats\020\353>\022-\n(k" +
      "_EMsgClientToGCRealtimeGameStateViewing\020" +
      "\354>\022%\n k_EMsgGCToGCGetServersForClients\020\355" +
      ">\022-\n(k_EMsgGCToGCGetServersForClientsRes",
      "ponse\020\356>\022&\n!k_EMsgGCPracticeLobbyKickFro" +
      "mTeam\020\357>*\300\004\n\rDOTA_GameMode\022\026\n\022DOTA_GAMEM" +
      "ODE_NONE\020\000\022\024\n\020DOTA_GAMEMODE_AP\020\001\022\024\n\020DOTA" +
      "_GAMEMODE_CM\020\002\022\024\n\020DOTA_GAMEMODE_RD\020\003\022\024\n\020" +
      "DOTA_GAMEMODE_SD\020\004\022\024\n\020DOTA_GAMEMODE_AR\020\005" +
      "\022\027\n\023DOTA_GAMEMODE_INTRO\020\006\022\024\n\020DOTA_GAMEMO" +
      "DE_HW\020\007\022\034\n\030DOTA_GAMEMODE_REVERSE_CM\020\010\022\026\n" +
      "\022DOTA_GAMEMODE_XMAS\020\t\022\032\n\026DOTA_GAMEMODE_T" +
      "UTORIAL\020\n\022\024\n\020DOTA_GAMEMODE_MO\020\013\022\024\n\020DOTA_" +
      "GAMEMODE_LP\020\014\022\027\n\023DOTA_GAMEMODE_POOL1\020\r\022\024",
      "\n\020DOTA_GAMEMODE_FH\020\016\022\030\n\024DOTA_GAMEMODE_CU" +
      "STOM\020\017\022\024\n\020DOTA_GAMEMODE_CD\020\020\022\024\n\020DOTA_GAM" +
      "EMODE_BD\020\021\022\037\n\033DOTA_GAMEMODE_ABILITY_DRAF" +
      "T\020\022\022\027\n\023DOTA_GAMEMODE_EVENT\020\023\022\026\n\022DOTA_GAM" +
      "EMODE_ARDM\020\024\022\030\n\024DOTA_GAMEMODE_1V1MID\020\025\022\033" +
      "\n\027DOTA_GAMEMODE_ALL_DRAFT\020\026*\221\003\n\016DOTA_Gam" +
      "eState\022\035\n\031DOTA_GAMERULES_STATE_INIT\020\000\0221\n" +
      "-DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_T" +
      "O_LOAD\020\001\022\'\n#DOTA_GAMERULES_STATE_HERO_SE" +
      "LECTION\020\002\022&\n\"DOTA_GAMERULES_STATE_STRATE",
      "GY_TIME\020\003\022!\n\035DOTA_GAMERULES_STATE_PRE_GA" +
      "ME\020\004\022)\n%DOTA_GAMERULES_STATE_GAME_IN_PRO" +
      "GRESS\020\005\022\"\n\036DOTA_GAMERULES_STATE_POST_GAM" +
      "E\020\006\022#\n\037DOTA_GAMERULES_STATE_DISCONNECT\020\007" +
      "\022&\n\"DOTA_GAMERULES_STATE_TEAM_SHOWCASE\020\010" +
      "\022\035\n\031DOTA_GAMERULES_STATE_LAST\020\t*\266\001\n\014DOTA" +
      "_GC_TEAM\022\032\n\026DOTA_GC_TEAM_GOOD_GUYS\020\000\022\031\n\025" +
      "DOTA_GC_TEAM_BAD_GUYS\020\001\022\034\n\030DOTA_GC_TEAM_" +
      "BROADCASTER\020\002\022\032\n\026DOTA_GC_TEAM_SPECTATOR\020" +
      "\003\022\034\n\030DOTA_GC_TEAM_PLAYER_POOL\020\004\022\027\n\023DOTA_",
      "GC_TEAM_NOTEAM\020\005*O\n\014DOTA_CM_PICK\022\022\n\016DOTA" +
      "_CM_RANDOM\020\000\022\025\n\021DOTA_CM_GOOD_GUYS\020\001\022\024\n\020D" +
      "OTA_CM_BAD_GUYS\020\002*\236\002\n\025DOTAConnectionStat" +
      "e_t\022!\n\035DOTA_CONNECTION_STATE_UNKNOWN\020\000\022+" +
      "\n\'DOTA_CONNECTION_STATE_NOT_YET_CONNECTE" +
      "D\020\001\022#\n\037DOTA_CONNECTION_STATE_CONNECTED\020\002" +
      "\022&\n\"DOTA_CONNECTION_STATE_DISCONNECTED\020\003" +
      "\022#\n\037DOTA_CONNECTION_STATE_ABANDONED\020\004\022!\n" +
      "\035DOTA_CONNECTION_STATE_LOADING\020\005\022 \n\034DOTA" +
      "_CONNECTION_STATE_FAILED\020\006*\250\002\n\022DOTALeave",
      "rStatus_t\022\024\n\020DOTA_LEAVER_NONE\020\000\022\034\n\030DOTA_" +
      "LEAVER_DISCONNECTED\020\001\022%\n!DOTA_LEAVER_DIS" +
      "CONNECTED_TOO_LONG\020\002\022\031\n\025DOTA_LEAVER_ABAN" +
      "DONED\020\003\022\023\n\017DOTA_LEAVER_AFK\020\004\022\037\n\033DOTA_LEA" +
      "VER_NEVER_CONNECTED\020\005\022(\n$DOTA_LEAVER_NEV" +
      "ER_CONNECTED_TOO_LONG\020\006\022\"\n\036DOTA_LEAVER_F" +
      "AILED_TO_READY_UP\020\007\022\030\n\024DOTA_LEAVER_DECLI" +
      "NED\020\010*\213\001\n\026DOTALowPriorityBanType\022!\n\035DOTA" +
      "_LOW_PRIORITY_BAN_ABANDON\020\000\022!\n\035DOTA_LOW_" +
      "PRIORITY_BAN_REPORTS\020\001\022+\n\'DOTA_LOW_PRIOR",
      "ITY_BAN_SECONDARY_ABANDON\020\002*}\n\023DOTALobby" +
      "ReadyState\022\"\n\036DOTALobbyReadyState_UNDECL" +
      "ARED\020\000\022 \n\034DOTALobbyReadyState_ACCEPTED\020\001" +
      "\022 \n\034DOTALobbyReadyState_DECLINED\020\002*D\n\017DO" +
      "TAGameVersion\022\030\n\024GAME_VERSION_CURRENT\020\000\022" +
      "\027\n\023GAME_VERSION_STABLE\020\001*\200\003\n\023DOTAJoinLob" +
      "byResult\022\034\n\030DOTA_JOIN_RESULT_SUCCESS\020\000\022$" +
      "\n DOTA_JOIN_RESULT_ALREADY_IN_GAME\020\001\022\"\n\036" +
      "DOTA_JOIN_RESULT_INVALID_LOBBY\020\002\022\'\n#DOTA" +
      "_JOIN_RESULT_INCORRECT_PASSWORD\020\003\022\"\n\036DOT",
      "A_JOIN_RESULT_ACCESS_DENIED\020\004\022\"\n\036DOTA_JO" +
      "IN_RESULT_GENERIC_ERROR\020\005\022&\n\"DOTA_JOIN_R" +
      "ESULT_INCORRECT_VERSION\020\006\022\"\n\036DOTA_JOIN_R" +
      "ESULT_IN_TEAM_PARTY\020\007\022#\n\037DOTA_JOIN_RESUL" +
      "T_NO_LOBBY_FOUND\020\010\022\037\n\033DOTA_JOIN_RESULT_L" +
      "OBBY_FULL\020\t*b\n\rDOTAMatchVote\022\031\n\025DOTAMatc" +
      "hVote_INVALID\020\000\022\032\n\026DOTAMatchVote_POSITIV" +
      "E\020\001\022\032\n\026DOTAMatchVote_NEGATIVE\020\002*\203\002\n\027DOTA" +
      "_LobbyMemberXPBonus\022#\n\037DOTA_LobbyMemberX" +
      "PBonus_DEFAULT\020\000\022*\n&DOTA_LobbyMemberXPBo",
      "nus_BATTLE_BOOSTER\020\001\022\'\n#DOTA_LobbyMember" +
      "XPBonus_SHARE_BONUS\020\002\022!\n\035DOTA_LobbyMembe" +
      "rXPBonus_PARTY\020\003\022\'\n#DOTA_LobbyMemberXPBo" +
      "nus_RECRUITMENT\020\004\022\"\n\036DOTA_LobbyMemberXPB" +
      "onus_PCBANG\020\005*\203\002\n\022EDOTAPlayerMMRType\022 \n\034" +
      "k_EDOTAPlayerMMRType_Invalid\020\000\022&\n\"k_EDOT" +
      "APlayerMMRType_GeneralHidden\020\001\022#\n\037k_EDOT" +
      "APlayerMMRType_SoloHidden\020\002\022+\n\'k_EDOTAPl" +
      "ayerMMRType_GeneralCompetitive\020\003\022(\n$k_ED" +
      "OTAPlayerMMRType_SoloCompetitive\020\004\022\'\n#k_",
      "EDOTAPlayerMMRType_1v1Competitive\020\005*\347\001\n\t" +
      "MatchType\022\025\n\021MATCH_TYPE_CASUAL\020\000\022\030\n\024MATC" +
      "H_TYPE_COOP_BOTS\020\001\022\032\n\026MATCH_TYPE_TEAM_RA" +
      "NKED\020\002\022 \n\034MATCH_TYPE_LEGACY_SOLO_QUEUE\020\003" +
      "\022\032\n\026MATCH_TYPE_COMPETITIVE\020\004\022\036\n\032MATCH_TY" +
      "PE_WEEKEND_TOURNEY\020\005\022\031\n\025MATCH_TYPE_CASUA" +
      "L_1V1\020\006\022\024\n\020MATCH_TYPE_EVENT\020\007*\204\002\n\021DOTABo" +
      "tDifficulty\022\032\n\026BOT_DIFFICULTY_PASSIVE\020\000\022" +
      "\027\n\023BOT_DIFFICULTY_EASY\020\001\022\031\n\025BOT_DIFFICUL" +
      "TY_MEDIUM\020\002\022\027\n\023BOT_DIFFICULTY_HARD\020\003\022\031\n\025",
      "BOT_DIFFICULTY_UNFAIR\020\004\022\032\n\026BOT_DIFFICULT" +
      "Y_INVALID\020\005\022\031\n\025BOT_DIFFICULTY_EXTRA1\020\006\022\031" +
      "\n\025BOT_DIFFICULTY_EXTRA2\020\007\022\031\n\025BOT_DIFFICU" +
      "LTY_EXTRA3\020\010*\363\001\n\016MatchLanguages\022\032\n\026MATCH" +
      "_LANGUAGE_INVALID\020\000\022\032\n\026MATCH_LANGUAGE_EN" +
      "GLISH\020\001\022\032\n\026MATCH_LANGUAGE_RUSSIAN\020\002\022\032\n\026M" +
      "ATCH_LANGUAGE_CHINESE\020\003\022\031\n\025MATCH_LANGUAG" +
      "E_KOREAN\020\004\022\032\n\026MATCH_LANGUAGE_SPANISH\020\005\022\035" +
      "\n\031MATCH_LANGUAGE_PORTUGUESE\020\006\022\033\n\027MATCH_L" +
      "ANGUAGE_ENGLISH2\020\007*b\n\023ETournamentTemplat",
      "e\022\036\n\032k_ETournamentTemplate_None\020\000\022+\n\'k_E" +
      "TournamentTemplate_SingleElimination\020\001*V" +
      "\n\017ETournamentType\022\035\n\031k_ETournamentType_U" +
      "nknown\020\000\022$\n k_ETournamentType_WeeklyDivi" +
      "sion\020\001*\204\001\n\014EIngameEvent\022\033\n\027k_EIngameEven" +
      "t_OraclePA\020\000\022\032\n\026k_EIngameEvent_CNY2015\020\001" +
      "\022#\n\037k_EIngameEvent_CNY2015_PreBeast\020\002\022\026\n" +
      "\022k_EIngameEvent_TI5\020\003*P\n\020LobbyDotaTVDela" +
      "y\022\022\n\016LobbyDotaTV_10\020\000\022\023\n\017LobbyDotaTV_120" +
      "\020\001\022\023\n\017LobbyDotaTV_300\020\002*\237\002\n\rEMatchOutcom",
      "e\022\033\n\027k_EMatchOutcome_Unknown\020\000\022\036\n\032k_EMat" +
      "chOutcome_RadVictory\020\002\022\037\n\033k_EMatchOutcom" +
      "e_DireVictory\020\003\0223\n/k_EMatchOutcome_NotSc" +
      "ored_PoorNetworkConditions\020@\022$\n k_EMatch" +
      "Outcome_NotScored_Leaver\020A\022)\n%k_EMatchOu" +
      "tcome_NotScored_ServerCrash\020B\022*\n&k_EMatc" +
      "hOutcome_NotScored_NeverStarted\020C*\236\004\n\022ED" +
      "OTAGCSessionNeed\022 \n\034k_EDOTAGCSessionNeed" +
      "_Unknown\020\000\022,\n(k_EDOTAGCSessionNeed_UserN" +
      "oSessionNeeded\020d\022)\n%k_EDOTAGCSessionNeed",
      "_UserInOnlineGame\020e\022(\n$k_EDOTAGCSessionN" +
      "eed_UserInLocalGame\020f\022-\n)k_EDOTAGCSessio" +
      "nNeed_UserInUIWasConnected\020g\022/\n+k_EDOTAG" +
      "CSessionNeed_UserInUINeverConnected\020h\022&\n" +
      "\"k_EDOTAGCSessionNeed_UserTutorials\020i\022*\n" +
      "%k_EDOTAGCSessionNeed_GameServerOnline\020\310" +
      "\001\022)\n$k_EDOTAGCSessionNeed_GameServerLoca" +
      "l\020\311\001\022(\n#k_EDOTAGCSessionNeed_GameServerI" +
      "dle\020\312\001\022)\n$k_EDOTAGCSessionNeed_GameServe" +
      "rRelay\020\313\001\022/\n*k_EDOTAGCSessionNeed_GameSe",
      "rverLocalUpload\020\314\001*\\\n\rFantasy_Roles\022\032\n\026F" +
      "ANTASY_ROLE_UNDEFINED\020\000\022\025\n\021FANTASY_ROLE_" +
      "CORE\020\001\022\030\n\024FANTASY_ROLE_SUPPORT\020\002*\212\001\n\022Fan" +
      "tasy_Team_Slots\022\025\n\021FANTASY_SLOT_NONE\020\000\022\025" +
      "\n\021FANTASY_SLOT_CORE\020\001\022\030\n\024FANTASY_SLOT_SU" +
      "PPORT\020\002\022\024\n\020FANTASY_SLOT_ANY\020\003\022\026\n\022FANTASY" +
      "_SLOT_BENCH\020\004*\273\002\n\026Fantasy_Selection_Mode" +
      "\022\035\n\031FANTASY_SELECTION_INVALID\020\000\022\034\n\030FANTA" +
      "SY_SELECTION_LOCKED\020\001\022\035\n\031FANTASY_SELECTI" +
      "ON_SHUFFLE\020\002\022\037\n\033FANTASY_SELECTION_FREE_P",
      "ICK\020\003\022\033\n\027FANTASY_SELECTION_ENDED\020\004\022 \n\034FA" +
      "NTASY_SELECTION_PRE_SEASON\020\005\022\037\n\033FANTASY_" +
      "SELECTION_PRE_DRAFT\020\006\022\036\n\032FANTASY_SELECTI" +
      "ON_DRAFTING\020\007\022$\n FANTASY_SELECTION_REGUL" +
      "AR_SEASON\020\010*\366\001\n\025DOTA_TournamentEvents\022\022\n" +
      "\016TE_FIRST_BLOOD\020\000\022\017\n\013TE_GAME_END\020\001\022\021\n\rTE" +
      "_MULTI_KILL\020\002\022\020\n\014TE_HERO_DENY\020\003\022\021\n\rTE_AE" +
      "GIS_DENY\020\004\022\023\n\017TE_AEGIS_STOLEN\020\005\022\016\n\nTE_GO" +
      "DLIKE\020\006\022\023\n\017TE_COURIER_KILL\020\007\022\017\n\013TE_ECHOS" +
      "LAM\020\010\022\r\n\tTE_RAPIER\020\t\022\023\n\017TE_EARLY_ROSHAN\020",
      "\n\022\021\n\rTE_BLACK_HOLE\020\013*\360\004\n\024DOTA_COMBATLOG_" +
      "TYPES\022\031\n\025DOTA_COMBATLOG_DAMAGE\020\000\022\027\n\023DOTA" +
      "_COMBATLOG_HEAL\020\001\022\037\n\033DOTA_COMBATLOG_MODI" +
      "FIER_ADD\020\002\022\"\n\036DOTA_COMBATLOG_MODIFIER_RE" +
      "MOVE\020\003\022\030\n\024DOTA_COMBATLOG_DEATH\020\004\022\032\n\026DOTA" +
      "_COMBATLOG_ABILITY\020\005\022\027\n\023DOTA_COMBATLOG_I" +
      "TEM\020\006\022\033\n\027DOTA_COMBATLOG_LOCATION\020\007\022\027\n\023DO" +
      "TA_COMBATLOG_GOLD\020\010\022\035\n\031DOTA_COMBATLOG_GA" +
      "ME_STATE\020\t\022\025\n\021DOTA_COMBATLOG_XP\020\n\022\033\n\027DOT" +
      "A_COMBATLOG_PURCHASE\020\013\022\032\n\026DOTA_COMBATLOG",
      "_BUYBACK\020\014\022\"\n\036DOTA_COMBATLOG_ABILITY_TRI" +
      "GGER\020\r\022\036\n\032DOTA_COMBATLOG_PLAYERSTATS\020\016\022\034" +
      "\n\030DOTA_COMBATLOG_MULTIKILL\020\017\022\035\n\031DOTA_COM" +
      "BATLOG_KILLSTREAK\020\020\022%\n!DOTA_COMBATLOG_TE" +
      "AM_BUILDING_KILL\020\021\022\036\n\032DOTA_COMBATLOG_FIR" +
      "ST_BLOOD\020\022\022#\n\037DOTA_COMBATLOG_MODIFIER_RE" +
      "FRESH\020\023B$\n\035skadistats.clarity.wire.proto" +
      "H\001\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_CSODOTAGameAccountClient_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_CSODOTAGameAccountClient_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTAGameAccountClient_descriptor,
              new java.lang.String[] { "AccountId", "Wins", "Losses", "Xp", "Level", "InitialSkill", "LeaverCount", "SecondaryLeaverCount", "LowPriorityUntilDate", "PreventTextChatUntilDate", "PreventVoiceUntilDate", "LastAbandonedGameDate", "LastSecondaryAbandonedGameDate", "LeaverPenaltyCount", "CompletedGameStreak", "Teaching", "Leadership", "Friendly", "Forgiving", "AccountDisabledUntilDate", "AccountDisabledCount", "ShowcaseHeroId", "MatchDisabledUntilDate", "MatchDisabledCount", "PartnerAccountType", "PartnerAccountState", "Shutdownlawterminatetimestamp", "LowPriorityGamesRemaining", "CompetitiveRank", "CalibrationGamesRemaining", "SoloCompetitiveRank", "SoloCalibrationGamesRemaining", "Competitive1V1Rank", "Competitive1V1CalibrationGamesRemaining", "RecruitmentLevel", "HasNewNotifications", "IsLeagueAdmin", "CasualGamesPlayed", "SoloCompetitiveGamesPlayed", "PartyCompetitiveGamesPlayed", "Casual1V1GamesPlayed", "CompetitiveTeamGamesPlayed", "CurrAllHeroChallengeId", });
          internal_static_CSODOTAPartyMember_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_CSODOTAPartyMember_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTAPartyMember_descriptor,
              new java.lang.String[] { "PartnerType", "IsCoach", });
          internal_static_CSODOTAParty_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_CSODOTAParty_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTAParty_descriptor,
              new java.lang.String[] { "PartyId", "LeaderId", "MemberIds", "GameModes", "State", "EffectiveStartedMatchmakingTime", "RawStartedMatchmakingTime", "AttemptStartTime", "AttemptNum", "Matchgroups", "LowPriorityAccountId", "MatchType", "BotDifficulty", "TeamId", "MatchDisabledUntilDate", "MatchDisabledAccountId", "MatchmakingMaxRangeMinutes", "Matchlanguages", "MapPreference", "Members", "OpenGuildId", "CommonGuilds", "LowPriorityGamesRemaining", "MinLevel", "MaxLevel", "ActiveIngameEvents", "OpenForJoinRequests", "SentInvites", "RecvInvites", });
          internal_static_CSODOTAPartyInvite_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_CSODOTAPartyInvite_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTAPartyInvite_descriptor,
              new java.lang.String[] { "GroupId", "SenderId", "SenderName", "Members", "TeamId", "LowPriorityStatus", "AsCoach", "InviteGid", });
          internal_static_CSODOTAPartyInvite_PartyMember_descriptor =
            internal_static_CSODOTAPartyInvite_descriptor.getNestedTypes().get(0);
          internal_static_CSODOTAPartyInvite_PartyMember_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTAPartyInvite_PartyMember_descriptor,
              new java.lang.String[] { "Name", "SteamId", "IsCoach", });
          internal_static_CSODOTALobbyInvite_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_CSODOTALobbyInvite_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTALobbyInvite_descriptor,
              new java.lang.String[] { "GroupId", "SenderId", "SenderName", "Members", "CustomGameId", "InviteGid", });
          internal_static_CSODOTALobbyInvite_LobbyMember_descriptor =
            internal_static_CSODOTALobbyInvite_descriptor.getNestedTypes().get(0);
          internal_static_CSODOTALobbyInvite_LobbyMember_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTALobbyInvite_LobbyMember_descriptor,
              new java.lang.String[] { "Name", "SteamId", });
          internal_static_CDOTASaveGame_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_CDOTASaveGame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTASaveGame_descriptor,
              new java.lang.String[] { "MatchId", "SaveTime", "Players", "SaveInstances", });
          internal_static_CDOTASaveGame_Player_descriptor =
            internal_static_CDOTASaveGame_descriptor.getNestedTypes().get(0);
          internal_static_CDOTASaveGame_Player_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTASaveGame_Player_descriptor,
              new java.lang.String[] { "Team", "Name", "Hero", });
          internal_static_CDOTASaveGame_SaveInstance_descriptor =
            internal_static_CDOTASaveGame_descriptor.getNestedTypes().get(1);
          internal_static_CDOTASaveGame_SaveInstance_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTASaveGame_SaveInstance_descriptor,
              new java.lang.String[] { "GameTime", "Team1Score", "Team2Score", "PlayerPositions", "SaveId", "SaveTime", });
          internal_static_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor =
            internal_static_CDOTASaveGame_SaveInstance_descriptor.getNestedTypes().get(0);
          internal_static_CDOTASaveGame_SaveInstance_PlayerPositions_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor,
              new java.lang.String[] { "X", "Y", });
          internal_static_CMsgLeaverState_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_CMsgLeaverState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgLeaverState_descriptor,
              new java.lang.String[] { "LobbyState", "GameState", "LeaverDetected", "FirstBloodHappened", "DiscardMatchResults", "MassDisconnect", });
          internal_static_CDOTALobbyMember_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_CDOTALobbyMember_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTALobbyMember_descriptor,
              new java.lang.String[] { "Id", "HeroId", "Team", "Name", "Slot", "PartyId", "MetaLevel", "MetaXp", "MetaXpAwarded", "LeaverStatus", "LeaverActions", "Channel", "PrizeDefIndex", "DisabledHeroId", "PartnerAccountType", "EnabledHeroId", "CoachTeam", "NexonPcBangNo", "NexonPcBangName", "XpBonuses", "RankChange", "Cameraman", "CustomGameProductIds", });
          internal_static_CDOTALobbyMember_CDOTALobbyMemberXPBonus_descriptor =
            internal_static_CDOTALobbyMember_descriptor.getNestedTypes().get(0);
          internal_static_CDOTALobbyMember_CDOTALobbyMemberXPBonus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CDOTALobbyMember_CDOTALobbyMemberXPBonus_descriptor,
              new java.lang.String[] { "Type", "XpBonus", "SourceKey", });
          internal_static_CLobbyTeamDetails_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_CLobbyTeamDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CLobbyTeamDetails_descriptor,
              new java.lang.String[] { "TeamName", "TeamTag", "TeamId", "TeamLogo", "TeamBaseLogo", "TeamBannerLogo", "TeamComplete", "GuildName", "GuildTag", "GuildId", "GuildLogo", "GuildBaseLogo", "GuildBannerLogo", "Rank", "RankChange", });
          internal_static_CLobbyTimedRewardDetails_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_CLobbyTimedRewardDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CLobbyTimedRewardDetails_descriptor,
              new java.lang.String[] { "ItemDefIndex", "IsSupplyCrate", "IsTimedDrop", "AccountId", "Origin", });
          internal_static_CLobbyBroadcastChannelInfo_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_CLobbyBroadcastChannelInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CLobbyBroadcastChannelInfo_descriptor,
              new java.lang.String[] { "ChannelId", "CountryCode", "Description", "LanguageCode", });
          internal_static_CSODOTALobby_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_CSODOTALobby_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTALobby_descriptor,
              new java.lang.String[] { "LobbyId", "Members", "LeftMembers", "LeaderId", "ServerId", "GameMode", "PendingInvites", "State", "Connect", "LobbyType", "AllowCheats", "FillWithBots", "IntroMode", "GameName", "TeamDetails", "TutorialLesson", "TournamentId", "TournamentGameId", "ServerRegion", "GameState", "NumSpectators", "Matchgroup", "CmPick", "MatchId", "AllowSpectating", "BotDifficulty", "GameVersion", "TimedRewardDetails", "PassKey", "BotSlotDifficulty", "Leagueid", "PenaltyLevelRadiant", "PenaltyLevelDire", "LoadGameId", "SeriesType", "RadiantSeriesWins", "DireSeriesWins", "LootGenerated", "LootAwarded", "Allchat", "DotaTvDelay", "CustomGameMode", "CustomMapName", "CustomDifficulty", "Lan", "BroadcastChannelInfo", "FirstLeaverAccountid", "SeriesId", "LowPriority", "ExtraMessages", "SaveGame", "FirstBloodHappened", "MatchOutcome", "MassDisconnect", "CustomGameId", "ActiveIngameEvents", "CustomMinPlayers", "CustomMaxPlayers", "PartnerType", "LanHostPingToServerRegion", });
          internal_static_CSODOTALobby_CExtraMsg_descriptor =
            internal_static_CSODOTALobby_descriptor.getNestedTypes().get(0);
          internal_static_CSODOTALobby_CExtraMsg_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTALobby_CExtraMsg_descriptor,
              new java.lang.String[] { "Id", "Contents", });
          internal_static_CMsgLobbyEventPoints_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_CMsgLobbyEventPoints_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgLobbyEventPoints_descriptor,
              new java.lang.String[] { "EventId", "AccountPoints", });
          internal_static_CMsgLobbyEventPoints_AccountPoints_descriptor =
            internal_static_CMsgLobbyEventPoints_descriptor.getNestedTypes().get(0);
          internal_static_CMsgLobbyEventPoints_AccountPoints_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgLobbyEventPoints_AccountPoints_descriptor,
              new java.lang.String[] { "AccountId", "NormalPoints", "PremiumPoints", "Owned", });
          internal_static_CMsgDOTAGenericResult_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_CMsgDOTAGenericResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAGenericResult_descriptor,
              new java.lang.String[] { "Eresult", });
          internal_static_CMsgDOTABroadcastNotification_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_CMsgDOTABroadcastNotification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTABroadcastNotification_descriptor,
              new java.lang.String[] { "Message", });
          internal_static_CMsgDOTAPCBangTimedReward_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_CMsgDOTAPCBangTimedReward_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAPCBangTimedReward_descriptor,
              new java.lang.String[] { "Persona", "Itemdef", "Pcbangname", });
          internal_static_CAttribute_String_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_CAttribute_String_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CAttribute_String_descriptor,
              new java.lang.String[] { "Value", });
          internal_static_CAttribute_ItemDynamicRecipeComponent_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_CAttribute_ItemDynamicRecipeComponent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CAttribute_ItemDynamicRecipeComponent_descriptor,
              new java.lang.String[] { "ItemDef", "ItemQuality", "ItemFlags", "AttributesString", "ItemCount", "ItemsFulfilled", "ItemRarity", "Lootlist", "FulfilledItemId", });
          internal_static_CProtoItemHeroStatue_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_CProtoItemHeroStatue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemHeroStatue_descriptor,
              new java.lang.String[] { "HeroId", "StatusEffectIndex", "SequenceName", "Cycle", "Wearable", "Inscription", "Style", "TournamentDrop", });
          internal_static_CProtoItemTeamShowcase_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_CProtoItemTeamShowcase_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemTeamShowcase_descriptor,
              new java.lang.String[] { "HeroId", "StatusEffectIndex", "SequenceName", "Cycle", "Wearable", "Inscription", "Style", });
          internal_static_CProtoItemSocket_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_CProtoItemSocket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemSocket_descriptor,
              new java.lang.String[] { "ItemId", "AttrDefIndex", "RequiredType", "RequiredHero", "GemDefIndex", "NotTradable", "RequiredItemSlot", });
          internal_static_CProtoItemSocket_Empty_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_CProtoItemSocket_Empty_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemSocket_Empty_descriptor,
              new java.lang.String[] { "Socket", });
          internal_static_CProtoItemSocket_Effect_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_CProtoItemSocket_Effect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemSocket_Effect_descriptor,
              new java.lang.String[] { "Socket", "Effect", });
          internal_static_CProtoItemSocket_Color_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_CProtoItemSocket_Color_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemSocket_Color_descriptor,
              new java.lang.String[] { "Socket", "Red", "Green", "Blue", });
          internal_static_CProtoItemSocket_Strange_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_CProtoItemSocket_Strange_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemSocket_Strange_descriptor,
              new java.lang.String[] { "Socket", "StrangeType", "StrangeValue", });
          internal_static_CProtoItemSocket_Spectator_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_CProtoItemSocket_Spectator_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemSocket_Spectator_descriptor,
              new java.lang.String[] { "Socket", "GamesViewed", "CorporationId", "LeagueId", "TeamId", });
          internal_static_CProtoItemSocket_AssetModifier_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_CProtoItemSocket_AssetModifier_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemSocket_AssetModifier_descriptor,
              new java.lang.String[] { "Socket", "AssetModifier", });
          internal_static_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_descriptor,
              new java.lang.String[] { "Socket", "AssetModifier", "AnimModifier", "AbilityEffect", });
          internal_static_CProtoItemSocket_Autograph_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_CProtoItemSocket_Autograph_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemSocket_Autograph_descriptor,
              new java.lang.String[] { "Socket", "Autograph", "AutographId", });
          internal_static_CProtoItemSocket_StaticVisuals_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_CProtoItemSocket_StaticVisuals_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CProtoItemSocket_StaticVisuals_descriptor,
              new java.lang.String[] { "Socket", });
          internal_static_CMatchPlayerAbilityUpgrade_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_CMatchPlayerAbilityUpgrade_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMatchPlayerAbilityUpgrade_descriptor,
              new java.lang.String[] { "Ability", "Time", });
          internal_static_CMatchAdditionalUnitInventory_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_CMatchAdditionalUnitInventory_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMatchAdditionalUnitInventory_descriptor,
              new java.lang.String[] { "UnitName", "Items", });
          internal_static_CMatchHeroSelectEvent_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_CMatchHeroSelectEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMatchHeroSelectEvent_descriptor,
              new java.lang.String[] { "IsPick", "Team", "HeroId", });
          internal_static_CMsgDOTAProcessFantasyScheduledEvent_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_CMsgDOTAProcessFantasyScheduledEvent_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAProcessFantasyScheduledEvent_descriptor,
              new java.lang.String[] { "Event", "Timestamp", "FantasyLeagueId", "Season", "ReferenceData", });
          internal_static_CMsgDOTAHasItemQuery_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_CMsgDOTAHasItemQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAHasItemQuery_descriptor,
              new java.lang.String[] { "AccountId", "ItemId", });
          internal_static_CMsgDOTAHasItemResponse_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_CMsgDOTAHasItemResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAHasItemResponse_descriptor,
              new java.lang.String[] { "HasItem", });
          internal_static_CMsgDOTAHasItemDefsQuery_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_CMsgDOTAHasItemDefsQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAHasItemDefsQuery_descriptor,
              new java.lang.String[] { "AccountId", "ItemdefIds", });
          internal_static_CMsgDOTAHasItemDefsResponse_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_CMsgDOTAHasItemDefsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAHasItemDefsResponse_descriptor,
              new java.lang.String[] { "HasItems", });
          internal_static_CMsgDOTAConsumeFantasyTicket_descriptor =
            getDescriptor().getMessageTypes().get(38);
          internal_static_CMsgDOTAConsumeFantasyTicket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAConsumeFantasyTicket_descriptor,
              new java.lang.String[] { "AccountId", "ItemId", "FantasyLeagueId", });
          internal_static_CMsgDOTAConsumeFantasyTicketFailure_descriptor =
            getDescriptor().getMessageTypes().get(39);
          internal_static_CMsgDOTAConsumeFantasyTicketFailure_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAConsumeFantasyTicketFailure_descriptor,
              new java.lang.String[] { "AccountId", "ItemId", "FantasyLeagueId", });
          internal_static_CMsgGCToGCFantasySetMatchLeague_descriptor =
            getDescriptor().getMessageTypes().get(40);
          internal_static_CMsgGCToGCFantasySetMatchLeague_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGCToGCFantasySetMatchLeague_descriptor,
              new java.lang.String[] { "MatchId", "LeagueId", });
          internal_static_CSODOTAMapLocationState_descriptor =
            getDescriptor().getMessageTypes().get(41);
          internal_static_CSODOTAMapLocationState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTAMapLocationState_descriptor,
              new java.lang.String[] { "AccountId", "LocationId", "Completed", });
          internal_static_CMsgNexonPartnerUpdate_descriptor =
            getDescriptor().getMessageTypes().get(42);
          internal_static_CMsgNexonPartnerUpdate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgNexonPartnerUpdate_descriptor,
              new java.lang.String[] { "Messagetype", "Timeremaining", "Terminate", });
          internal_static_CMsgMakeOffering_descriptor =
            getDescriptor().getMessageTypes().get(43);
          internal_static_CMsgMakeOffering_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgMakeOffering_descriptor,
              new java.lang.String[] { "ItemId", });
          internal_static_CMsgRequestOfferings_descriptor =
            getDescriptor().getMessageTypes().get(44);
          internal_static_CMsgRequestOfferings_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgRequestOfferings_descriptor,
              new java.lang.String[] { });
          internal_static_CMsgRequestOfferingsResponse_descriptor =
            getDescriptor().getMessageTypes().get(45);
          internal_static_CMsgRequestOfferingsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgRequestOfferingsResponse_descriptor,
              new java.lang.String[] { "Offerings", "Completed", });
          internal_static_CMsgRequestOfferingsResponse_NewYearsOffering_descriptor =
            internal_static_CMsgRequestOfferingsResponse_descriptor.getNestedTypes().get(0);
          internal_static_CMsgRequestOfferingsResponse_NewYearsOffering_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgRequestOfferingsResponse_NewYearsOffering_descriptor,
              new java.lang.String[] { "DefIndex", "ItemId", });
          internal_static_CMsgLeagueAdminList_descriptor =
            getDescriptor().getMessageTypes().get(46);
          internal_static_CMsgLeagueAdminList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgLeagueAdminList_descriptor,
              new java.lang.String[] { "AccountIds", });
          internal_static_CMsgPerfectWorldUserLookupRequest_descriptor =
            getDescriptor().getMessageTypes().get(47);
          internal_static_CMsgPerfectWorldUserLookupRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgPerfectWorldUserLookupRequest_descriptor,
              new java.lang.String[] { "UserName", });
          internal_static_CMsgPerfectWorldUserLookupResponse_descriptor =
            getDescriptor().getMessageTypes().get(48);
          internal_static_CMsgPerfectWorldUserLookupResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgPerfectWorldUserLookupResponse_descriptor,
              new java.lang.String[] { "ResultCode", "AccountId", });
          internal_static_CCompendiumTimestampedData_descriptor =
            getDescriptor().getMessageTypes().get(49);
          internal_static_CCompendiumTimestampedData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CCompendiumTimestampedData_descriptor,
              new java.lang.String[] { "GameTime", "Gpm", "Xpm", "Kills", "Deaths", "ItemPurchases", });
          internal_static_CCompendiumGameTimeline_descriptor =
            getDescriptor().getMessageTypes().get(50);
          internal_static_CCompendiumGameTimeline_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CCompendiumGameTimeline_descriptor,
              new java.lang.String[] { "Data", "Tags", });
          internal_static_CCompendiumGameList_descriptor =
            getDescriptor().getMessageTypes().get(51);
          internal_static_CCompendiumGameList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CCompendiumGameList_descriptor,
              new java.lang.String[] { "Games", });
          internal_static_CAdditionalEquipSlot_descriptor =
            getDescriptor().getMessageTypes().get(52);
          internal_static_CAdditionalEquipSlot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CAdditionalEquipSlot_descriptor,
              new java.lang.String[] { "ClassId", "SlotId", "DefIndex", });
          internal_static_CMsgDOTARedeemItem_descriptor =
            getDescriptor().getMessageTypes().get(53);
          internal_static_CMsgDOTARedeemItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTARedeemItem_descriptor,
              new java.lang.String[] { "CurrencyId", "PurchaseDef", });
          internal_static_CMsgDOTARedeemItemResponse_descriptor =
            getDescriptor().getMessageTypes().get(54);
          internal_static_CMsgDOTARedeemItemResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTARedeemItemResponse_descriptor,
              new java.lang.String[] { });
          internal_static_CMsgDOTACombatLogEntry_descriptor =
            getDescriptor().getMessageTypes().get(55);
          internal_static_CMsgDOTACombatLogEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTACombatLogEntry_descriptor,
              new java.lang.String[] { "Type", "TargetName", "TargetSourceName", "AttackerName", "DamageSourceName", "InflictorName", "IsAttackerIllusion", "IsAttackerHero", "IsTargetIllusion", "IsTargetHero", "IsVisibleRadiant", "IsVisibleDire", "Value", "Health", "Timestamp", "StunDuration", "SlowDuration", "IsAbilityToggleOn", "IsAbilityToggleOff", "AbilityLevel", "LocationX", "LocationY", "GoldReason", "TimestampRaw", "ModifierDuration", "XpReason", "LastHits", "AttackerTeam", "TargetTeam", "ObsWardsPlaced", "AssistPlayer0", "AssistPlayer1", "AssistPlayer2", "AssistPlayer3", "StackCount", "HiddenModifier", });
          internal_static_CMsgDOTAProfileCard_descriptor =
            getDescriptor().getMessageTypes().get(56);
          internal_static_CMsgDOTAProfileCard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAProfileCard_descriptor,
              new java.lang.String[] { "AccountId", "BackgroundDefIndex", "Slots", });
          internal_static_CMsgDOTAProfileCard_Slot_descriptor =
            internal_static_CMsgDOTAProfileCard_descriptor.getNestedTypes().get(0);
          internal_static_CMsgDOTAProfileCard_Slot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAProfileCard_Slot_descriptor,
              new java.lang.String[] { "SlotId", "Trophy", "Stat", "Item", "Hero", "Emoticon", });
          internal_static_CMsgDOTAProfileCard_Slot_Trophy_descriptor =
            internal_static_CMsgDOTAProfileCard_Slot_descriptor.getNestedTypes().get(0);
          internal_static_CMsgDOTAProfileCard_Slot_Trophy_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAProfileCard_Slot_Trophy_descriptor,
              new java.lang.String[] { "TrophyId", "TrophyScore", });
          internal_static_CMsgDOTAProfileCard_Slot_Stat_descriptor =
            internal_static_CMsgDOTAProfileCard_Slot_descriptor.getNestedTypes().get(1);
          internal_static_CMsgDOTAProfileCard_Slot_Stat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAProfileCard_Slot_Stat_descriptor,
              new java.lang.String[] { "StatId", "StatScore", });
          internal_static_CMsgDOTAProfileCard_Slot_Item_descriptor =
            internal_static_CMsgDOTAProfileCard_Slot_descriptor.getNestedTypes().get(2);
          internal_static_CMsgDOTAProfileCard_Slot_Item_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAProfileCard_Slot_Item_descriptor,
              new java.lang.String[] { "SerializedItem", });
          internal_static_CMsgDOTAProfileCard_Slot_Hero_descriptor =
            internal_static_CMsgDOTAProfileCard_Slot_descriptor.getNestedTypes().get(3);
          internal_static_CMsgDOTAProfileCard_Slot_Hero_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAProfileCard_Slot_Hero_descriptor,
              new java.lang.String[] { "HeroId", "HeroWins", "HeroLosses", });
          internal_static_CMsgDOTAProfileCard_Slot_Emoticon_descriptor =
            internal_static_CMsgDOTAProfileCard_Slot_descriptor.getNestedTypes().get(4);
          internal_static_CMsgDOTAProfileCard_Slot_Emoticon_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTAProfileCard_Slot_Emoticon_descriptor,
              new java.lang.String[] { "EmoticonId", });
          internal_static_CMsgGCToClientNewBloomTimingUpdated_descriptor =
            getDescriptor().getMessageTypes().get(57);
          internal_static_CMsgGCToClientNewBloomTimingUpdated_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGCToClientNewBloomTimingUpdated_descriptor,
              new java.lang.String[] { "IsActive", "NextTransitionTime", "BonusAmount", "StandbyDuration", "TransitionTime", });
          internal_static_CSODOTAPlayerChallenge_descriptor =
            getDescriptor().getMessageTypes().get(58);
          internal_static_CSODOTAPlayerChallenge_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CSODOTAPlayerChallenge_descriptor,
              new java.lang.String[] { "AccountId", "EventId", "SlotId", "ChallengeType", "IntParam0", "IntParam1", "CreatedTime", "Completed", "SequenceId", "ChallengeTier", "Flags", });
          internal_static_CMsgClientToGCRerollPlayerChallenge_descriptor =
            getDescriptor().getMessageTypes().get(59);
          internal_static_CMsgClientToGCRerollPlayerChallenge_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgClientToGCRerollPlayerChallenge_descriptor,
              new java.lang.String[] { "EventId", "SequenceId", });
          internal_static_CMsgGCRerollPlayerChallengeResponse_descriptor =
            getDescriptor().getMessageTypes().get(60);
          internal_static_CMsgGCRerollPlayerChallengeResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGCRerollPlayerChallengeResponse_descriptor,
              new java.lang.String[] { "Result", });
          internal_static_CMsgGCToClientTopCustomGamesList_descriptor =
            getDescriptor().getMessageTypes().get(61);
          internal_static_CMsgGCToClientTopCustomGamesList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgGCToClientTopCustomGamesList_descriptor,
              new java.lang.String[] { "TopCustomGames", });
          internal_static_CMsgDOTARealtimeGameStats_descriptor =
            getDescriptor().getMessageTypes().get(62);
          internal_static_CMsgDOTARealtimeGameStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTARealtimeGameStats_descriptor,
              new java.lang.String[] { "ServerSteamId", "Timestamp", "GameTime", "Players", "Deaths", "Broadcasters", "GoldHistory", "XpHistory", "Pickbans", });
          internal_static_CMsgDOTARealtimeGameStats_ItemDetails_descriptor =
            internal_static_CMsgDOTARealtimeGameStats_descriptor.getNestedTypes().get(0);
          internal_static_CMsgDOTARealtimeGameStats_ItemDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTARealtimeGameStats_ItemDetails_descriptor,
              new java.lang.String[] { "ItemId", "PurchaseTime", });
          internal_static_CMsgDOTARealtimeGameStats_PlayerDetails_descriptor =
            internal_static_CMsgDOTARealtimeGameStats_descriptor.getNestedTypes().get(1);
          internal_static_CMsgDOTARealtimeGameStats_PlayerDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTARealtimeGameStats_PlayerDetails_descriptor,
              new java.lang.String[] { "PlayerId", "HeroId", "Health", "MaxHealth", "Mana", "MaxMana", "Level", "Gold", "Kills", "Deaths", "Assists", "RespawnTime", "UltimateCooldown", "LocationX", "LocationY", "Items", "SkillHistory", "ItemHistory", });
          internal_static_CMsgDOTARealtimeGameStats_DeathDetails_descriptor =
            internal_static_CMsgDOTARealtimeGameStats_descriptor.getNestedTypes().get(2);
          internal_static_CMsgDOTARealtimeGameStats_DeathDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTARealtimeGameStats_DeathDetails_descriptor,
              new java.lang.String[] { "PlayerId", "DeathTime", "KillerPlayerId", });
          internal_static_CMsgDOTARealtimeGameStats_BroadcasterDetails_descriptor =
            internal_static_CMsgDOTARealtimeGameStats_descriptor.getNestedTypes().get(3);
          internal_static_CMsgDOTARealtimeGameStats_BroadcasterDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTARealtimeGameStats_BroadcasterDetails_descriptor,
              new java.lang.String[] { "PlayerId", "SelectedHero", "SelectedGraph", });
          internal_static_CMsgDOTARealtimeGameStats_PickBanDetails_descriptor =
            internal_static_CMsgDOTARealtimeGameStats_descriptor.getNestedTypes().get(4);
          internal_static_CMsgDOTARealtimeGameStats_PickBanDetails_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMsgDOTARealtimeGameStats_PickBanDetails_descriptor,
              new java.lang.String[] { "HeroId", "Pick", });
          com.google.protobuf.ExtensionRegistry registry =
            com.google.protobuf.ExtensionRegistry.newInstance();
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          registry.add(skadistats.clarity.wire.proto.Steammessages.keyField);
          return registry;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          skadistats.clarity.wire.proto.Steammessages.getDescriptor(),
          skadistats.clarity.wire.proto.GcsdkGcmessages.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
